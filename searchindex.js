Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[770,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[366,0,0,"-"],creation_functions:[367,0,0,"-"],data_type_functions:[368,0,0,"-"],data_types:[372,0,0,"-"],elementwise_functions:[373,0,0,"-"],function_and_method_signatures:[375,0,0,"-"],linear_algebra_extension:[376,0,0,"-"],linear_algebra_functions:[377,0,0,"-"],manipulation_functions:[378,0,0,"-"],searching_functions:[379,0,0,"-"],set_functions:[380,0,0,"-"],sorting_functions:[381,0,0,"-"],statistical_functions:[382,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[368,1,1,""],finfo:[370,2,1,""],iinfo:[371,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[368,3,1,""],bits:[368,3,1,""],eps:[368,3,1,""],max:[368,3,1,""],min:[368,3,1,""],smallest_normal:[368,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[374,2,1,""]},"ivy.functional.ivy":{array_api:[771,0,0,"-"],core:[790,0,0,"-"],nn:[1137,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[772,0,0,"-"],creation_functions:[773,0,0,"-"],data_type_functions:[774,0,0,"-"],data_types:[777,0,0,"-"],elementwise_functions:[778,0,0,"-"],function_and_method_signatures:[780,0,0,"-"],linear_algebra_extension:[781,0,0,"-"],linear_algebra_functions:[782,0,0,"-"],manipulation_functions:[783,0,0,"-"],searching_functions:[784,0,0,"-"],set_functions:[785,0,0,"-"],sorting_functions:[786,0,0,"-"],statistical_functions:[787,0,0,"-"],utility_functions:[788,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[775,2,1,""],iinfo:[776,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[779,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[789,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[791,0,0,"-"],compilation:[830,0,0,"-"],device:[832,0,0,"-"],dtype:[882,0,0,"-"],general:[906,0,0,"-"],gradients:[1008,0,0,"-"],image:[1024,0,0,"-"],linalg:[1031,0,0,"-"],logic:[1039,0,0,"-"],math:[1043,0,0,"-"],meta:[1061,0,0,"-"],multi_node:[1065,0,0,"-"],nest:[1109,0,0,"-"],random:[1121,0,0,"-"],reductions:[1128,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[792,2,1,""],builtin_add:[793,2,1,""],builtin_and:[794,2,1,""],builtin_bool:[795,2,1,""],builtin_contains:[796,2,1,""],builtin_deepcopy:[797,2,1,""],builtin_dir:[798,2,1,""],builtin_eq:[799,2,1,""],builtin_float:[800,2,1,""],builtin_floordiv:[801,2,1,""],builtin_ge:[802,2,1,""],builtin_getattr:[803,2,1,""],builtin_getattribute:[804,2,1,""],builtin_getitem:[805,2,1,""],builtin_gt:[806,2,1,""],builtin_int:[807,2,1,""],builtin_invert:[808,2,1,""],builtin_le:[809,2,1,""],builtin_lt:[810,2,1,""],builtin_mul:[811,2,1,""],builtin_ne:[812,2,1,""],builtin_neg:[813,2,1,""],builtin_or:[814,2,1,""],builtin_pos:[815,2,1,""],builtin_pow:[816,2,1,""],builtin_radd:[817,2,1,""],builtin_rand:[818,2,1,""],builtin_rfloordiv:[819,2,1,""],builtin_rmul:[820,2,1,""],builtin_ror:[821,2,1,""],builtin_rpow:[822,2,1,""],builtin_rsub:[823,2,1,""],builtin_rtruediv:[824,2,1,""],builtin_rxor:[825,2,1,""],builtin_setitem:[826,2,1,""],builtin_sub:[827,2,1,""],builtin_truediv:[828,2,1,""],builtin_xor:[829,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[831,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[832,1,1,""],DevClonedItem:[834,1,1,""],DevClonedIter:[835,1,1,""],DevClonedNest:[836,1,1,""],DevDistItem:[837,1,1,""],DevDistIter:[838,1,1,""],DevDistNest:[839,1,1,""],DevManager:[832,1,1,""],DevMapper:[841,1,1,""],DevMapperMultiProc:[842,1,1,""],MultiDev:[832,1,1,""],MultiDevItem:[844,1,1,""],MultiDevIter:[845,1,1,""],MultiDevNest:[846,1,1,""],Profiler:[847,1,1,""],clear_mem_on_dev:[848,2,1,""],default_device:[849,2,1,""],dev:[850,2,1,""],dev_clone:[851,2,1,""],dev_clone_array:[852,2,1,""],dev_clone_iter:[853,2,1,""],dev_clone_nest:[854,2,1,""],dev_dist:[855,2,1,""],dev_dist_array:[856,2,1,""],dev_dist_iter:[857,2,1,""],dev_dist_nest:[858,2,1,""],dev_from_str:[859,2,1,""],dev_to_str:[860,2,1,""],dev_unify:[861,2,1,""],dev_unify_array:[862,2,1,""],dev_unify_iter:[863,2,1,""],dev_unify_nest:[864,2,1,""],dev_util:[865,2,1,""],get_all_arrays_on_dev:[866,2,1,""],gpu_is_available:[867,2,1,""],num_arrays_on_dev:[868,2,1,""],num_cpu_cores:[869,2,1,""],num_gpus:[870,2,1,""],percent_used_mem_on_dev:[871,2,1,""],print_all_arrays_on_dev:[872,2,1,""],set_default_device:[873,2,1,""],set_split_factor:[874,2,1,""],split_factor:[875,2,1,""],split_func_call:[876,2,1,""],to_dev:[877,2,1,""],total_mem_on_dev:[878,2,1,""],tpu_is_available:[879,2,1,""],unset_default_device:[880,2,1,""],used_mem_on_dev:[881,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[832,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[832,3,1,""],da_tune_step:[832,3,1,""],dim_size:[832,3,1,""],ds_tune_step:[832,3,1,""],map:[832,3,1,""],repeated_config_check:[832,3,1,""],tune_step:[832,3,1,""],tuned:[832,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[841,3,1,""],map:[841,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[842,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[832,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[844,3,1,""],items:[844,3,1,""],keys:[844,3,1,""],shape:[844,3,1,""],values:[844,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[845,3,1,""],at_dev:[845,3,1,""],at_devs:[845,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[846,3,1,""],at_dev:[846,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[847,3,1,""],start:[847,3,1,""],stop:[847,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[882,1,1,""],DefaultFloatDtype:[882,1,1,""],DefaultIntDtype:[882,1,1,""],astype:[882,2,1,""],cast:[886,2,1,""],closest_valid_dtype:[887,2,1,""],convert_dtype:[888,2,1,""],default_dtype:[889,2,1,""],default_float_dtype:[890,2,1,""],default_int_dtype:[891,2,1,""],dtype:[892,2,1,""],dtype_bits:[893,2,1,""],dtype_from_str:[894,2,1,""],dtype_to_str:[895,2,1,""],invalid_dtype:[896,2,1,""],is_float_dtype:[897,2,1,""],is_int_dtype:[898,2,1,""],set_default_dtype:[899,2,1,""],set_default_float_dtype:[900,2,1,""],set_default_int_dtype:[901,2,1,""],unset_default_dtype:[902,2,1,""],unset_default_float_dtype:[903,2,1,""],unset_default_int_dtype:[904,2,1,""],valid_dtype:[905,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[882,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[882,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[882,3,1,""]},"ivy.functional.ivy.core.general":{"default":[932,2,1,""],abs:[907,2,1,""],all_equal:[908,2,1,""],arange:[909,2,1,""],arg_names:[910,2,1,""],argmax:[911,2,1,""],argmin:[912,2,1,""],argsort:[913,2,1,""],array:[914,2,1,""],array_equal:[915,2,1,""],arrays_equal:[916,2,1,""],asarray:[906,2,1,""],assert_supports_inplace:[917,2,1,""],broadcast_to:[918,2,1,""],cache_fn:[919,2,1,""],ceil:[920,2,1,""],clip:[921,2,1,""],clip_matrix_norm:[922,2,1,""],clip_vector_norm:[923,2,1,""],concatenate:[924,2,1,""],constant_pad:[925,2,1,""],container_types:[926,2,1,""],copy_array:[927,2,1,""],cross:[928,2,1,""],cumprod:[929,2,1,""],cumsum:[930,2,1,""],current_framework_str:[931,2,1,""],einops_rearrange:[933,2,1,""],einops_reduce:[934,2,1,""],einops_repeat:[935,2,1,""],equal:[936,2,1,""],exists:[937,2,1,""],expand_dims:[938,2,1,""],flip:[939,2,1,""],floor:[940,2,1,""],floormod:[941,2,1,""],fourier_encode:[942,2,1,""],full:[943,2,1,""],gather:[944,2,1,""],gather_nd:[945,2,1,""],get_all_arrays_in_memory:[946,2,1,""],get_min_base:[947,2,1,""],get_min_denominator:[948,2,1,""],get_num_dims:[949,2,1,""],get_referrers_recursive:[950,2,1,""],has_nans:[951,2,1,""],identity:[952,2,1,""],indices_where:[953,2,1,""],inplace_arrays_supported:[954,2,1,""],inplace_decrement:[955,2,1,""],inplace_increment:[956,2,1,""],inplace_update:[957,2,1,""],inplace_variables_supported:[958,2,1,""],is_array:[959,2,1,""],isinf:[960,2,1,""],isnan:[961,2,1,""],linear_resample:[962,2,1,""],linspace:[963,2,1,""],logspace:[964,2,1,""],match_kwargs:[965,2,1,""],matmul:[966,2,1,""],maximum:[967,2,1,""],meshgrid:[968,2,1,""],minimum:[969,2,1,""],multiprocessing:[970,2,1,""],num_arrays_in_memory:[971,2,1,""],one_hot:[972,2,1,""],ones:[973,2,1,""],ones_like:[974,2,1,""],print_all_arrays_in_memory:[975,2,1,""],queue_timeout:[976,2,1,""],repeat:[977,2,1,""],reshape:[978,2,1,""],round:[979,2,1,""],scatter_flat:[980,2,1,""],scatter_nd:[981,2,1,""],set_min_base:[982,2,1,""],set_min_denominator:[983,2,1,""],set_queue_timeout:[984,2,1,""],set_tmp_dir:[985,2,1,""],shape:[986,2,1,""],shape_to_tuple:[987,2,1,""],split:[988,2,1,""],squeeze:[989,2,1,""],stable_divide:[990,2,1,""],stable_pow:[991,2,1,""],stack:[992,2,1,""],supports_inplace:[993,2,1,""],swapaxes:[994,2,1,""],tile:[995,2,1,""],tmp_dir:[996,2,1,""],to_list:[997,2,1,""],to_numpy:[998,2,1,""],to_scalar:[999,2,1,""],transpose:[1000,2,1,""],try_else_none:[1001,2,1,""],unstack:[1002,2,1,""],value_is_nan:[1003,2,1,""],where:[1004,2,1,""],zero_pad:[1005,2,1,""],zeros:[1006,2,1,""],zeros_like:[1007,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1008,1,1,""],adam_step:[1010,2,1,""],adam_update:[1011,2,1,""],execute_with_gradients:[1012,2,1,""],gradient_descent_update:[1013,2,1,""],is_variable:[1014,2,1,""],lamb_update:[1015,2,1,""],lars_update:[1016,2,1,""],optimizer_update:[1017,2,1,""],set_with_grads:[1018,2,1,""],stop_gradient:[1019,2,1,""],unset_with_grads:[1020,2,1,""],variable:[1021,2,1,""],variable_data:[1022,2,1,""],with_grads:[1023,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1008,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1025,2,1,""],float_img_to_uint8_img:[1026,2,1,""],gradient_image:[1027,2,1,""],random_crop:[1028,2,1,""],stack_images:[1029,2,1,""],uint8_img_to_float_img:[1030,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1032,2,1,""],inv:[1033,2,1,""],matrix_norm:[1034,2,1,""],pinv:[1035,2,1,""],svd:[1036,2,1,""],vector_norm:[1037,2,1,""],vector_to_skew_symmetric_matrix:[1038,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1040,2,1,""],logical_not:[1041,2,1,""],logical_or:[1042,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1044,2,1,""],acosh:[1045,2,1,""],asin:[1046,2,1,""],asinh:[1047,2,1,""],atan2:[1049,2,1,""],atan:[1048,2,1,""],atanh:[1050,2,1,""],cos:[1051,2,1,""],cosh:[1052,2,1,""],divide:[1053,2,1,""],erf:[1054,2,1,""],exp:[1055,2,1,""],log:[1056,2,1,""],sin:[1057,2,1,""],sinh:[1058,2,1,""],tan:[1059,2,1,""],tanh:[1060,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1062,2,1,""],maml_step:[1063,2,1,""],reptile_step:[1064,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1065,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1110,2,1,""],copy_nest:[1111,2,1,""],index_nest:[1112,2,1,""],map:[1113,2,1,""],map_nest_at_index:[1114,2,1,""],map_nest_at_indices:[1115,2,1,""],multi_index_nest:[1116,2,1,""],nested_indices_where:[1117,2,1,""],nested_map:[1118,2,1,""],set_nest_at_index:[1119,2,1,""],set_nest_at_indices:[1120,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1122,2,1,""],randint:[1123,2,1,""],random_normal:[1124,2,1,""],random_uniform:[1125,2,1,""],seed:[1126,2,1,""],shuffle:[1127,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1129,2,1,""],reduce_max:[1130,2,1,""],reduce_mean:[1131,2,1,""],reduce_min:[1132,2,1,""],reduce_prod:[1133,2,1,""],reduce_std:[1134,2,1,""],reduce_sum:[1135,2,1,""],reduce_var:[1136,2,1,""]},"ivy.functional.ivy.nn":{activations:[1138,0,0,"-"],layers:[1146,0,0,"-"],losses:[1159,0,0,"-"],norms:[1163,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1139,2,1,""],leaky_relu:[1140,2,1,""],relu:[1141,2,1,""],sigmoid:[1142,2,1,""],softmax:[1143,2,1,""],softplus:[1144,2,1,""],tanh:[1145,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1147,2,1,""],conv1d_transpose:[1148,2,1,""],conv2d:[1149,2,1,""],conv2d_transpose:[1150,2,1,""],conv3d:[1151,2,1,""],conv3d_transpose:[1152,2,1,""],depthwise_conv2d:[1153,2,1,""],dropout:[1154,2,1,""],linear:[1155,2,1,""],lstm_update:[1156,2,1,""],multi_head_attention:[1157,2,1,""],scaled_dot_product_attention:[1158,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1160,2,1,""],cross_entropy:[1161,2,1,""],sparse_cross_entropy:[1162,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1164,2,1,""]},"ivy.graph_compiler":{compiler:[1165,0,0,"-"],globals:[1168,0,0,"-"],graph:[1171,0,0,"-"],helpers:[1173,0,0,"-"],op_logging:[1174,0,0,"-"],param:[1175,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1166,2,1,""],show_graph:[1167,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1169,2,1,""],log_global_inference_rel_times:[1170,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1171,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1171,3,1,""],add_fn_to_dict:[1171,3,1,""],add_param:[1171,3,1,""],compiled:[1171,3,1,""],connect:[1171,3,1,""],debug_info:[1171,3,1,""],get_param:[1171,3,1,""],get_param_recursive:[1171,3,1,""],include_generators:[1171,3,1,""],increment_param_count:[1171,3,1,""],log_all_ops:[1171,3,1,""],params_all_empty:[1171,3,1,""],save_debug_info:[1171,3,1,""],set_param:[1171,3,1,""],show:[1171,3,1,""],show_debug_info:[1171,3,1,""],update_inference_times:[1171,3,1,""],with_array_caching:[1171,3,1,""]},"ivy.graph_compiler.param":{Param:[1175,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1175,3,1,""],count:[1175,3,1,""],depth:[1175,3,1,""],get:[1175,3,1,""],is_var:[1175,3,1,""],ptype:[1175,3,1,""],set:[1175,3,1,""],set_count:[1175,3,1,""],shape:[1175,3,1,""]},"ivy.stateful":{activations:[1180,0,0,"-"],converters:[1183,0,0,"-"],initializers:[1185,0,0,"-"],layers:[1194,0,0,"-"],module:[1206,0,0,"-"],norms:[1208,0,0,"-"],optimizers:[1210,0,0,"-"],sequential:[1216,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1181,1,1,""],GELU:[1182,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1181,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1182,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1184,2,1,""]},"ivy.stateful.initializers":{Constant:[1185,1,1,""],FirstLayerSiren:[1187,1,1,""],GlorotUniform:[1188,1,1,""],KaimingNormal:[1185,1,1,""],Ones:[1190,1,1,""],Siren:[1191,1,1,""],Uniform:[1185,1,1,""],Zeros:[1193,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1185,3,1,""],create_variables:[1185,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1187,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1188,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1185,3,1,""],create_variables:[1185,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1190,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1191,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1185,3,1,""],create_variables:[1185,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1193,3,1,""]},"ivy.stateful.layers":{Conv1D:[1195,1,1,""],Conv1DTranspose:[1196,1,1,""],Conv2D:[1197,1,1,""],Conv2DTranspose:[1198,1,1,""],Conv3D:[1199,1,1,""],Conv3DTranspose:[1200,1,1,""],DepthwiseConv2D:[1201,1,1,""],Dropout:[1202,1,1,""],LSTM:[1203,1,1,""],Linear:[1204,1,1,""],MultiHeadAttention:[1205,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1195,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1196,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1198,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1199,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1200,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1201,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1202,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1203,3,1,""],get_initial_state:[1203,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1204,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1205,3,1,""]},"ivy.stateful.module":{Module:[1207,1,1,""]},"ivy.stateful.module.Module":{__init__:[1207,3,1,""],build:[1207,3,1,""],build_mode:[1207,3,1,""],built:[1207,3,1,""],check_submod_rets:[1207,3,1,""],compile_graph:[1207,3,1,""],compile_on_next_step:[1207,3,1,""],get_mod_key:[1207,3,1,""],mod_depth:[1207,3,1,""],mod_height:[1207,3,1,""],mod_with_top_mod_key_chain:[1207,3,1,""],save_weights:[1207,3,1,""],show_graph:[1207,3,1,""],show_mod_in_top_mod:[1207,3,1,""],show_structure:[1207,3,1,""],show_v_in_top_v:[1207,3,1,""],sub_mods:[1207,3,1,""],track_submod_call_order:[1207,3,1,""],track_submod_rets:[1207,3,1,""],v_with_top_v_key_chains:[1207,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1209,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1209,3,1,""]},"ivy.stateful.optimizers":{Adam:[1211,1,1,""],LAMB:[1212,1,1,""],LARS:[1213,1,1,""],Optimizer:[1214,1,1,""],SGD:[1215,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1211,3,1,""],set_state:[1211,3,1,""],state:[1211,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1212,3,1,""],set_state:[1212,3,1,""],state:[1212,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1213,3,1,""],set_state:[1213,3,1,""],state:[1213,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1214,3,1,""],compile_graph:[1214,3,1,""],compile_on_next_step:[1214,3,1,""],set_state:[1214,3,1,""],show_graph:[1214,3,1,""],step:[1214,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1215,3,1,""],set_state:[1215,3,1,""],state:[1215,3,1,""]},"ivy.stateful.sequential":{Sequential:[1217,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1217,3,1,""]},"ivy.verbosity":{cprint:[1222,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1221,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1210,1211,1212],"02886":1177,"100":[1065,1177,1219],"2021":1177,"2102":1177,"360":[1043,1051,1057,1059],"754":[774,775],"999":[1008,1010,1011,1015,1210,1211,1212],"abstract":[832,847,1177,1210,1214],"boolean":[40,41,832,867,879,882,896,905,906,908,915,916,951,953,954,958,959,960,961,993,1003,1008,1014,1039,1040,1041,1042,1061,1062,1063,1065],"break":43,"case":[15,18,19,40,41,42,43,832,871,878,881,906,909,978,980,981,1031,1034,1037,1065,1109,1112,1116,1177,1194,1205,1206,1207,1210,1214,1223],"catch":[906,932],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,368,774,776,832,834,835,836,837,838,839,841,842,844,845,846,847,859,860,882,906,910,965,973,1008,1022,1065,1109,1111,1118,1159,1161,1162,1171,1175,1177,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1223],"default":[15,18,19,40,41,42,43,788,789,830,831,832,841,842,849,850,854,855,856,857,858,861,862,863,864,871,874,875,876,881,882,889,890,891,892,906,908,909,911,912,913,922,923,924,925,928,929,930,939,942,943,944,949,951,952,962,964,965,968,970,973,976,977,980,981,984,986,988,990,991,1000,1002,1003,1006,1008,1011,1013,1014,1015,1016,1017,1019,1023,1031,1034,1037,1061,1062,1063,1064,1065,1109,1110,1111,1113,1117,1118,1121,1122,1124,1125,1128,1130,1131,1132,1133,1134,1135,1136,1138,1139,1143,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],"final":[40,41,906,942,963,964,1065,1194,1205,1220],"float":[40,41,42,43,774,775,791,816,832,841,842,865,871,874,878,881,882,890,897,906,909,922,923,925,942,943,947,948,964,982,983,984,990,991,1008,1010,1011,1013,1015,1016,1017,1024,1026,1030,1043,1053,1061,1062,1063,1064,1065,1121,1124,1125,1138,1140,1146,1154,1157,1158,1159,1160,1161,1162,1163,1164,1194,1202,1205,1208,1209,1210,1211,1212,1213,1214,1215],"function":[15,40,41,43,370,371,374,775,776,779,789,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,841,842,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1177,1180,1181,1182,1210,1213,1214,1215,1219,1220,1223],"import":[43,1177,1220,1223],"int":[40,41,42,43,774,775,776,788,789,791,816,830,831,832,854,855,856,857,858,861,862,863,864,869,870,876,882,891,893,898,906,911,912,913,918,924,925,929,930,933,934,935,938,939,942,943,944,949,952,962,963,964,972,973,977,978,980,981,986,987,988,989,992,994,995,1000,1002,1005,1006,1008,1010,1011,1015,1024,1028,1029,1031,1034,1037,1061,1062,1063,1064,1065,1109,1118,1121,1122,1123,1125,1126,1128,1130,1131,1132,1133,1134,1135,1136,1138,1143,1146,1147,1148,1149,1150,1151,1152,1153,1157,1159,1161,1162,1163,1164,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1208,1209],"long":[1146,1156],"new":[40,41,43,882,886,906,907,918,933,934,935,938,942,943,944,945,973,978,980,981,982,983,990,991,992,1006,1008,1011,1013,1015,1016,1017,1024,1026,1028,1030,1043,1045,1047,1050,1052,1058,1060,1065,1109,1119,1120,1121,1122,1163,1164,1177,1183,1184,1194,1204,1208,1209,1210,1211,1212,1213,1214,1215,1220,1223],"public":[906,926],"return":[15,16,17,18,19,40,41,42,43,774,775,776,778,779,788,789,791,816,830,831,832,841,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,867,868,870,871,875,876,877,878,879,881,882,886,887,888,889,890,891,892,893,894,895,896,897,898,905,906,907,908,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,949,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,977,978,979,980,981,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1019,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1109,1110,1111,1113,1117,1118,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1177,1183,1184,1194,1203,1204,1210,1214,1219,1220,1223],"short":[1146,1156,1177,1223],"static":[40,41,830,831],"super":1065,"true":[40,41,42,778,779,788,789,830,831,832,906,908,917,919,937,942,951,953,1003,1004,1008,1011,1013,1014,1015,1016,1017,1019,1031,1034,1037,1061,1062,1063,1064,1065,1109,1110,1117,1121,1122,1128,1130,1131,1132,1133,1134,1135,1136,1138,1139,1146,1154,1159,1160,1161,1162,1165,1166,1167,1171,1194,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],"try":[40,41,906,1001,1065],"var":[40,41,1061,1062,1063,1223],"while":[40,41,42,1065],AND:[788,789,1039,1040],But:1223,For:[43,906,909,921,992,1008,1014,1022,1043,1044,1177,1183,1184,1220,1223],Its:[1043,1048],NOT:[1039,1041],One:[40,41,906,934,978,1121,1123,1223],Ones:[1177,1185],Such:[906,926],That:1220,The:[15,16,17,18,19,40,41,42,43,778,779,788,789,791,816,830,831,832,841,842,848,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,871,874,875,876,877,878,881,882,886,887,888,893,894,895,896,905,906,909,913,914,915,918,919,922,923,924,925,927,928,931,932,936,939,942,944,945,952,955,956,957,959,962,964,966,968,970,973,974,977,978,980,981,982,983,984,987,988,989,990,991,992,995,1003,1006,1007,1008,1010,1011,1013,1015,1016,1017,1019,1022,1024,1026,1028,1030,1031,1034,1036,1043,1044,1046,1048,1051,1053,1054,1055,1056,1057,1059,1061,1062,1063,1064,1065,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1177,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1220,1223],There:[43,1177,1220],These:[43,1177],Used:[1109,1110,1117,1206,1207],Using:[1177,1178,1223],With:[40,41,1031,1034,1037,1128,1130,1131,1132,1133,1134,1135,1136,1177,1219,1223],__array__:[906,914],__call__:[1194,1205,1206,1207],__del__:1065,__dict__:[1065,1220],__enter__:1065,__exit__:1065,__getitem__:1065,__getstate__:1065,__init__:[40,41,42,43,59,60,80,195,368,369,476,590,832,833,840,841,842,843,844,845,846,847,882,883,884,885,1008,1009,1065,1069,1076,1171,1172,1175,1176,1177,1180,1181,1182,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1223],__iter__:1065,__len__:1065,__next__:1065,__pow__:43,__repr__:1065,_assign_vari:1219,_axi:1065,_base:[1109,1110,1117],_compute_node_da_ratio:1065,_compute_node_strs_da:1065,_concat_unify_arrai:1065,_counter:1065,_cur_framework:[43,1065],_da_direct:1065,_da_directions_flip:1065,_da_step_tim:1065,_da_tim:1065,_da_tune_count:1065,_data:1065,_delta_da_dim_s:1065,_delta_sf:1065,_dict:1065,_dim_siz:1065,_first_da_tune_step:1065,_first_ns_tune_step:1065,_fn:1065,_forward:[1177,1219],_get_kalman_param:1223,_get_prior:1223,_get_some_model:1223,_handle_flat_arrays_in_out:43,_index:[1109,1110,1117],_input_queu:1065,_length:1065,_max_depth:1065,_max_node_dim_step_ratio:1065,_max_node_dim_step_s:1065,_max_split_factor_step_s:1065,_mean_unify_arrai:1065,_min_bas:[906,991,1163,1164,1208,1209],_min_denomin:[906,990],_min_node_dim_s:1065,_min_sf_tune_step:1065,_min_unit_node_tune_step:1065,_model:1223,_native_wrapp:43,_node_mapp:1065,_node_percent_mem:1065,_node_str:1065,_node_str_da_ratio:1065,_node_strs_da:1065,_node_strs_kei:1065,_node_strs_n:1065,_node_util:1065,_ns_step_tim:1065,_ns_time:1065,_ns_tune_count:1065,_num_nod:1065,_num_work:1065,_observed_config:1065,_output_queu:1065,_paramet:1219,_percent_mem_inc_per_sf:1065,_percent_mem_inc_per_unit_da_dim:1065,_percent_util_inc_per_unit_da_dim:1065,_ret_fn:1065,_safety_factor:1065,_save_dir:1065,_shift_da_split:1065,_shift_n:1065,_slice:1065,_step:[1210,1214],_sum_unify_arrai:1065,_timeout:1065,_tune:1065,_tune_da:1065,_tune_n:1065,_tune_step:1065,_unit_da_tune_count:1065,_unroll_step:1223,_with_node_mappig:1065,_worker:1065,_worker_class:1065,_worker_fn:1065,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,832,841,847,1065,1206,1207,1210,1214],abil:1177,abl:[40,41],about:[774,775,776],abov:[43,1121,1123],above_height:[40,41],abs:[266,509,624,906,1065],absolut:[40,41,906,907],abstractmethod:1065,accept:[15,43,1177],access:[40,41,1220],accord:[40,41,774,775,906,925,944,980,981,1000,1005],accordingli:[788,789],accur:[59,368,832,844,845,846,847,882,1008,1171,1175,1185,1187,1188,1190,1191,1193],aco:[718,1043],acosh:[718,1043],across:[40,41,832,841,842,851,852,854,855,856,857,858,864,874,875,906,911,912,915,916,1065,1109,1113],activ:[1139,1140,1141,1142,1143,1144,1145,1177,1181,1182],actual:1220,adam:[1008,1010,1011,1015,1177,1210,1212,1219],adam_step:1008,adam_upd:1008,adapt:[1008,1016,1210,1213],add:[40,41,43,1065,1159,1160,1161,1162,1163,1164,1177,1208,1209,1220],add_fn_to_dict:1171,add_param:1171,added:[43,906,990,991,1216,1217],adding:[906,918],addit:[40,41,43,906,933,934,935,1163,1164,1194,1204],adher:43,adjac:[906,909],adopt:[906,926],affect:[906,909],affin:[1208,1209],after:[906,962,1008,1011,1012,1013,1015,1016,1017,1024,1025,1163,1164,1210,1211,1212,1213,1214,1215,1223],after_1:[906,925,1005],after_n:[906,925,1005],again:43,against:[40,41,1031,1034,1037,1128,1130,1131,1132,1133,1134,1135,1136],agnost:[43,1177,1219,1220],aim:1223,algebra:1031,algorithm:[1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201,1223],align:[40,41,43,906,918],aliv:[832,866,868,872,906,946,971,975],all:[15,16,17,18,19,40,41,43,94,209,383,490,604,788,830,831,832,841,866,872,906,907,908,915,916,926,939,946,952,975,989,1061,1062,1063,1064,1065,1109,1110,1111,1117,1118,1121,1122,1125,1128,1130,1131,1132,1133,1134,1135,1136,1146,1156,1177,1220,1223],all_depth:[40,41],all_equ:906,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1109,all_tru:[40,41],alloc:[832,1065],allow:[906,963,964,965,1206,1207],allow_dupl:[906,965],alon:[832,871,881,1065,1177],along:[40,41,43,788,789,832,855,856,857,858,861,862,863,864,876,906,913,924,929,930,939,944,962,963,964,977,988,992,995,1002,1031,1034,1037,1061,1062,1063,1064,1065,1121,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136],alongsid:[1219,1220],alpha:[1138,1140],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,832,1065],also:[40,41,43,906,909,1008,1011,1061,1062,1063,1064,1109,1110,1111,1117,1118,1146,1155,1194,1204,1219],altern:1219,alwai:[40,41,43,1008,1014,1019],among:[40,41],amount:[832,878,1065,1177],angl:[1043,1044,1049],ani:[15,16,17,18,19,40,41,43,830,831,832,834,837,841,842,844,853,854,857,858,863,906,908,909,914,932,933,934,935,936,937,951,959,965,990,991,1008,1012,1065,1109,1110,1113,1117,1118,1119,1120,1121,1125,1177,1183,1184,1206,1207,1219,1220,1223],anoth:[40,41,882,888,1177],another_backend:43,anyth:[43,1223],anywai:43,apart:43,api:[1177,1178],appear:[906,938],append:[40,41,1065],appli:[15,18,19,40,41,906,933,934,935,1008,1015,1016,1031,1036,1039,1040,1041,1042,1061,1062,1063,1109,1113,1116,1118,1138,1139,1140,1141,1142,1143,1144,1145,1146,1155,1157,1158,1163,1164,1177,1180,1181,1182,1208,1209],applic:[1109,1113,1118,1146,1157,1158,1177,1223],approxim:[43,791,816,1138,1139],arang:[113,266,397,509,624,906,963,964],arbitrari:[40,41,832,861,862,864,1065],arc:[1043,1049],arcco:[1043,1044],arctan:[1043,1048],area:1177,arg:[15,16,17,40,41,43,59,63,832,841,854,858,864,876,906,933,934,935,981,1065,1165,1166,1167,1171,1183,1184,1206,1207],arg_nam:906,arg_stateful_idx:[1165,1166,1167,1171,1206,1207],argmax:[113,397,509,624,906],argmin:[113,397,509,624,906],args_clon:1065,args_dist:1065,args_to_ivi:[15,1177],args_to_n:[15,1177],args_uni:1065,argsort:[624,906],argument:[15,16,17,18,19,40,41,42,43,59,63,830,831,832,841,842,854,858,864,906,909,910,919,932,965,981,1043,1044,1065,1109,1113,1183,1184,1206,1207],aris:[1177,1223],arithmet:[43,1128,1131,1134,1136],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,113,266,397,509,624,774,775,776,778,779,788,789,816,832,850,851,852,855,856,857,858,861,862,863,864,866,868,872,876,877,882,886,892,897,898,906,907,908,909,911,912,913,915,916,917,918,920,921,922,923,924,925,927,928,929,930,933,934,935,936,938,939,940,941,942,943,944,945,946,949,951,952,953,954,955,956,957,959,960,961,962,963,964,966,967,968,969,971,972,973,974,975,977,978,979,980,981,986,988,989,992,993,994,995,997,998,999,1000,1002,1003,1004,1005,1006,1007,1008,1010,1011,1014,1015,1019,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1065,1109,1111,1118,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1177,1178,1194,1202,1203,1205,1210,1214,1219,1220],arrang:[906,933],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,368,370,371,373,374,774,775,776,778,779,788,789],array_builtin:[43,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829],array_equ:[266,624,906],array_lik:[906,914],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,906],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1177],arraywithgener:[22,1177],arraywithgradi:[24,1177],arraywithimag:[26,1177],arraywithlinalg:[28,1177],arraywithlog:[30,1177],arraywithmath:[32,1177],arraywithmeta:[34,1177],arraywithrandom:[36,1177],arraywithreduct:[38,1177],arriv:[40,41,42],articl:1177,arxiv:1177,as_arrai:[40,41,906,949,986],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[832,850,882,889,890,891,892],as_vari:[40,41],as_zero:[40,41],asarrai:906,asin:[718,1043],asinh:[718,1043],aspect:[1024,1029],assert:[40,41,906,917,1065],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:906,associ:[43,1031,1038],assum:[1220,1223],astyp:882,asynchron:[40,41,42],at_dev:[40,42,832,845,846],at_kei:[40,41],at_key_chain:[40,41],at_nod:1065,atan2:[718,1043],atan:[718,1043],atanh:[718,1043],attent:[1146,1157,1158,1194,1205],attribut:[0,6,40,41,774,775,776,906,974,1007],audienc:[1177,1220],author:1177,avail:[40,41,832,867,869,870,879,906,934,1065],averag:[1008,1010,1011,1015,1061,1062,1063,1128,1131],average_across_step:[1061,1062,1063],avoid:[832,1065,1220],axes:[40,41,43,788,789,832,876,906,911,912,925,938,939,994,1000,1005,1031,1034,1037,1065,1128,1130,1131,1132,1133,1134,1135,1136],axes_length:[40,41,906,933,934,935],axi:[40,41,788,789,832,834,837,844,855,856,857,858,861,862,863,864,876,906,911,912,913,924,925,928,929,930,938,939,944,962,963,964,977,988,989,992,994,995,1002,1005,1031,1037,1065,1121,1127,1128,1130,1131,1132,1133,1134,1135,1136,1138,1143,1159,1161,1162],axis0:[40,41,906,994],axis1:[40,41,906,994],back:[1206,1207,1210,1214],backend:[15,17,19,40,41,368,370,371,373,374,832,867,870,879,882,888,896,905,906,954,958,1008,1011,1013,1015,1016,1017,1022,1065,1177,1178,1183,1184,1210,1211,1212,1213,1214,1215,1219,1220,1223],background:[1177,1220],backprop:1223,backward:[788,789,1219],band:[906,942],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,368,791,816,832,834,835,836,837,838,839,841,842,844,845,846,847,882,906,947,964,982,991,1008,1065,1128,1129,1171,1175,1177,1180,1181,1182,1185,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1223],batch:[40,41,832,874,875,906,939,942,952,1024,1028,1031,1036,1061,1062,1063,1064,1065,1146,1155,1163,1164,1208,1209],batch_shap:[906,939,952,972,1024,1025,1026,1027,1028,1029,1030,1031,1038,1121,1122,1146,1156,1157,1158,1194,1203],batch_siz:[1065,1121,1122,1146,1147,1148,1149,1150,1151,1152,1153],bayesian:1223,becaus:[43,906,909],becom:[906,921,1043,1049,1223],been:[906,933,934,935,1121,1122],befor:[40,41,43,832,876,1061,1062,1063,1065,1109,1118,1128,1130,1131,1132,1133,1134,1135,1136,1146,1157,1158,1223],before_1:[906,925,1005],before_n:[906,925,1005],begin:[1109,1110,1117,1220],behaviour:[43,1223],behind:[1008,1011,1013,1015,1016,1017,1177],being:[40,41,43,906,909,976,984,1065],belong:[40,41],below:[43,1177,1220,1223],below_depth:[40,41],benefit:1177,bernoul:[1146,1154,1194,1202],best:[906,965,1177],beta1:[1008,1010,1011,1015,1210,1211,1212],beta2:[1008,1010,1011,1015,1210,1211,1212],beta:[1163,1164],between:[40,41,42,774,775,906,909,1109,1113,1121,1123,1159,1161,1162,1210,1212],bia:[1146,1155,1156,1194,1195,1196,1197,1198,1199,1200,1201,1204],bias_initi:[1194,1195,1196,1197,1198,1199,1200,1201,1204],bilinear:[1024,1025],bilinear_resampl:[152,325,439,556,703,1024],bilinearli:[1024,1025],binari:[1159,1160],binary_cross_entropi:1159,bit:[368,774,775,776,882,893,1024,1026,1030,1177],bitwise_oper:[0,7,8],block:[1177,1220],bool:[15,18,19,40,41,42,43,778,779,788,789,830,831,832,850,863,867,871,876,879,881,882,892,906,908,915,916,929,932,936,937,942,949,951,959,965,986,988,1002,1003,1004,1008,1011,1012,1013,1014,1015,1016,1017,1019,1031,1034,1037,1061,1062,1063,1064,1065,1109,1110,1111,1113,1117,1118,1121,1122,1128,1130,1131,1132,1133,1134,1135,1136,1138,1139,1146,1154,1183,1184,1194,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],both:[43,906,928],bottom:1177,boundari:[40,41,1121,1125],branch:[830,831],brittl:43,broadcast:[40,41,43,788,789,791,816,906,918,936,967,968,969,977,1031,1034,1037,1043,1049,1053,1128,1130,1131,1132,1133,1134,1135,1136],broadcast_to:[266,624,906],build:[1065,1177,1194,1205,1206,1207],build_mod:[1194,1205,1206,1207],builder:1177,built:[832,906,909,1065,1194,1205,1206,1207],builtin:43,builtin_ab:[221,791],builtin_add:[221,791],builtin_and:[221,791],builtin_bool:[221,791],builtin_contain:[221,791],builtin_deepcopi:[221,791],builtin_dir:[221,791],builtin_eq:[221,791],builtin_float:[221,791],builtin_floordiv:[221,791],builtin_g:[221,791],builtin_getattr:[221,791],builtin_getattribut:[221,791],builtin_getitem:[221,791],builtin_gt:[221,791],builtin_int:[221,791],builtin_invert:[221,791],builtin_l:[221,791],builtin_lt:[221,791],builtin_mul:[221,791],builtin_n:[221,791],builtin_neg:[221,791],builtin_or:[221,791],builtin_po:[221,791],builtin_pow:[43,221,791],builtin_radd:[221,791],builtin_rand:[221,791],builtin_rfloordiv:[221,791],builtin_rmul:[221,791],builtin_ror:[221,791],builtin_rpow:[221,791],builtin_rsub:[221,791],builtin_rtruediv:[221,791],builtin_rxor:[221,791],builtin_setitem:[221,791],builtin_some_op:43,builtin_sub:[221,791],builtin_truediv:[221,791],builtin_xor:[221,791],bypass:1220,cach:[832,848,906,919],cache_fn:906,calcul:[40,41,42,43,791,816,1043,1053],call:[43,832,876,906,976,984,1001,1008,1012,1065,1109,1110,1113,1117,1194,1205,1206,1207,1210,1214,1220,1223],callabl:[40,41,830,831,832,841,842,876,906,919,932,934,965,1001,1061,1062,1063,1064,1065,1109,1113,1114,1115,1117,1118,1146,1157],can:[43,832,874,875,876,906,978,1024,1026,1065,1177,1219,1220,1223],cancel_join_thread:1065,captur:1177,cast:[40,41,113,266,397,509,624,882,906,924,1024,1026,1030],catch_except:[906,932],categori:43,ceil:[266,624,906,909],cell:[1146,1156,1194,1203],certain:[40,41,906,909,963,964],chain:[40,41,1061,1062,1063,1216,1217],chang:[832,906,978,1065,1109,1111,1118,1177,1219],channel:[906,942,1024,1026,1027,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204],check:[15,16,17,18,19,40,41,832,871,881,882,887,896,905,906,917,937,951,959,993,1003,1008,1014,1065,1109,1110,1117,1177,1220],check_nest:[1109,1117],check_shap:[40,41],check_submod_ret:[1206,1207],check_typ:[40,41],choic:[1177,1220],choleski:[707,1031],choos:[906,1004,1043,1049,1177],choose_random_framework:59,chosen:[40,41,906,909,1004],chunk:[832,874,875,876,1065],chunk_siz:[832,876,1065],circl:[1043,1044,1046],clark:1177,clear:[832,848,1065],clear_framework_stack:59,clear_mem_on_dev:[616,832],click:1177,clip:[40,41,266,624,906,922,923,967,969,1177],clip_matrix_norm:906,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,906],clipped_delta:1065,clone:[40,41,832,851,852,853,854,1065],clone_arrai:1065,clone_it:1065,clone_nest:1065,clonedit:1065,cloneditem:1065,clonednest:1065,close:[43,1024,1029,1043,1046,1065,1223],closest:[882,887],closest_valid_dtyp:882,code:[40,41,42,43,1177,1178,1219,1220],codebas:[832,874,875,1065,1177,1220,1223],collect:[15,40,41,791,830,832,882,906,1008,1024,1031,1039,1043,1065,1109,1121,1128,1138,1146,1159,1163,1180,1194,1208,1210],color:[40,41,42,1221,1222],column:[906,952],combin:[40,41,42,1024,1029,1177,1223],combined_batch_s:1065,come:1220,command:1177,commit:1223,common:[40,41,1043,1049],common_key_chain:[40,41],commun:[1177,1220],compar:[40,41,906,908,915,916],comparison_oper:[0,9,10],compat:[43,788,789,791,816,906,936,978,1043,1053,1177,1223],compil:[266,397,624,1166,1167,1171,1177,1206,1207,1210,1211,1212,1213,1214,1215],compile_graph:[1165,1177,1206,1207,1210,1214],compile_on_next_step:[1206,1207,1210,1211,1212,1213,1214,1215],complet:[40,41,1065],complex:[1220,1223],compon:[906,928],composit:43,comput:[40,41,832,876,906,922,923,929,930,936,966,1008,1010,1011,1012,1013,1015,1016,1017,1019,1021,1024,1027,1031,1032,1033,1034,1035,1037,1039,1040,1041,1042,1043,1044,1046,1048,1049,1051,1054,1055,1056,1057,1059,1109,1113,1128,1129,1130,1131,1132,1133,1134,1135,1136,1146,1147,1148,1149,1150,1151,1152,1153,1155,1157,1159,1160,1161,1162],concat:[40,41,832,861,862,863,864,876,906,942,1065],concaten:[40,41,113,266,397,509,624,906,942,1065,1177],concatten:[40,41,832,861,862,863,864,876,1065],condit:[830,831,906,1004,1109,1117],conditon:[1109,1117],config:[40,41,1065],config_list:1065,configur:[40,41],conjunct:1220,connect:[1171,1194,1204,1205],consid:[40,41,1031,1037,1219,1223],consist:[40,41,832,864,1065,1128,1129,1206,1207,1220],constant:[832,841,842,906,925,1065,1109,1113,1159,1160,1161,1162,1163,1164,1185,1186,1190,1193,1206,1207,1208,1209,1220],constant_kwarg:1065,constant_pad:[266,509,624,906],constitu:[40,41],construct:[906,995,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219],constructor:[40,41,42,906,910,1216,1217],consum:[832,1065],cont_feat_dim:[1146,1157],contaienr:[40,41],contain:[15,18,19,42,43,778,779,788,789,791,816,832,851,855,876,882,886,906,907,911,912,913,921,922,923,926,936,951,967,969,979,990,991,1008,1010,1011,1013,1015,1016,1017,1043,1053,1061,1062,1063,1064,1065,1121,1122,1128,1130,1131,1132,1134,1136,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[624,906],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[906,970,1146,1157,1194,1205],context_dim:[1194,1205],contextmanag:[59,60],continu:[43,1065,1220],contract:[40,41,1128,1129],contribut:[1177,1178],contributor:1177,control:1177,conv1d:[182,356,463,762,1146,1177,1194],conv1d_transpos:[182,356,463,762,1146],conv1dtranspos:[1177,1194],conv2d:[182,356,463,581,762,1146,1177,1194],conv2d_transpos:[182,356,463,762,1146],conv2dtranspos:[1177,1194],conv3d:[182,356,463,581,762,1146,1177,1194],conv3d_transpos:[182,356,463,762,1146],conv3dtranspos:[1177,1194],convent:[40,41,1128,1129],conver:[832,848,859,871,878,881,1065],convers:[16,17,18,19,40,41,1065,1177],convert:[15,16,17,18,19,40,41,43,832,859,860,882,888,894,895,906,987,998,999,1024,1026,1030,1031,1038,1065,1109,1111,1118,1177,1184],convert_dtyp:882,convolut:[1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201],cool:43,cooler:43,coordin:[906,968,1043,1044,1046,1049],copi:[40,41,906,927,1065,1109,1111],copy_arrai:[624,906],copy_nest:1109,core:[791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,841,842,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1177],correct:[43,1177,1220],correctli:[40,41,1031,1034,1037,1043,1049,1128,1130,1131,1132,1133,1134,1135,1136],correspond:[40,41,43,791,816,906,924,1121,1122],cos:[718,906,942,1043,1044,1059,1220],cosh:[718,1043],cosin:[1043,1044,1045,1051,1052],cost:[1008,1010,1011,1013,1015,1016,1017,1061,1062,1063,1064],cost_fn:[1061,1064],could:1223,count:[40,41,788,789,1065,1128,1133,1135,1175],cprint:1221,cpu:[40,41,43,832,869,871,877,878,881,906,909,914,944,945,952,963,964,972,973,974,980,981,1006,1007,1065,1121,1122,1123,1124,1125,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217,1219,1220],creat:[40,41,832,841,842,906,909,914,943,944,945,952,963,964,972,973,974,980,981,997,1006,1007,1008,1021,1065,1121,1122,1123,1124,1125,1177,1183,1184,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1223],create_if_abs:[40,41],create_vari:1185,creation:[40,41,42,43],crop:[1024,1028],crop_siz:[1024,1028],cross:[266,624,906,1159,1160,1161,1162],cross_entropi:1159,cuda:[40,41,832,841,860,877,906,909,914,944,945,952,963,964,972,973,974,980,981,1006,1007,1065,1121,1122,1123,1124,1125,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217],cumprod:[113,266,397,624,906],cumsum:[624,906],cumul:[906,929,930],current:[40,41,42,43,832,841,865,866,868,872,882,888,896,905,906,931,946,954,958,971,975,1065,1109,1110,1117,1177,1223],current_framework:59,current_framework_str:[624,906,1065],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1171,d_in:[1146,1147,1148,1149,1150,1151,1152],d_out:[1146,1147,1148,1149,1150,1151,1152],da_can_termin:1065,da_dim_s:[832,1065],da_direct:1065,da_tune_step:[832,1065],dai:1223,daniel:1177,data:[40,41,42,43,775,776,778,779,788,789,791,816,832,834,835,836,837,838,839,844,845,846,860,882,886,887,888,892,893,894,895,896,897,898,905,906,909,914,936,943,952,959,973,974,978,989,993,1006,1007,1008,1014,1022,1043,1053,1065,1146,1155,1177],data_format:[1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201],data_type_funct:[368,370,371,774,775,776],dataset:[40,41],datatyp:[40,41,882,887,897,898],dcdw:[1008,1010,1011,1013,1015,1016],debug_info:1171,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1008,1015,1016,1210,1212,1213],decay_lambda:[1008,1015,1016,1210,1212,1213],decid:[40,41,1223],decompos:[1031,1032],decomposit:[1031,1032,1036],decor:43,decrement:[906,955],dedic:[1008,1022,1183,1184],deep:[40,41,1177],deep_copi:[40,41],deeper:[832,854,858,864,1065,1109,1118,1177],deepli:[1109,1111],def:[43,60,80,195,369,476,590,833,840,843,883,884,885,1009,1065,1069,1076,1172,1176,1177,1186,1189,1192,1219,1220,1223],default_dev:43,default_devic:832,default_dtyp:[43,882],default_float_dtyp:882,default_int_dtyp:882,default_key_color:[40,41,42],default_nod:1065,default_v:[906,932],defaultdevic:[832,833],defaultdtyp:[882,883],defaultfloatdtyp:[882,884],defaultintdtyp:[882,885],defer:43,defin:[43,906,928,972,974,1007,1121,1123],degre:[1043,1051,1057,1059],del:1065,delta:[1008,1010,1065,1171],delta_dim_s:1065,delta_percent_mem:1065,delta_sf:1065,delta_util:1065,demo:1177,denomin:[906,941,948,983,990,991,1163,1164,1208,1209],dens:[1194,1204],depend:[43,791,816,906,1004,1031,1036,1177],depth:[40,41,832,854,858,864,906,950,972,1065,1109,1118,1171,1175,1206,1207],depth_cutoff:[40,41],depthwis:[1146,1153,1194,1201],depthwise_conv2d:[182,356,463,581,762,1146],depthwiseconv2d:[1177,1194],deriv:[1008,1010,1011,1013,1015,1016,1017,1109,1111,1118,1177,1206,1210,1214,1216],descend:[1031,1036],descent:[1008,1013,1210,1215],describ:[40,41,1128,1129],design:[1177,1178],desir:[40,41,832,877,882,886,906,909,914,952,953,973,974,1006,1007,1024,1029,1065,1128,1130,1131,1132,1134,1136],desired_aspect_ratio:[1024,1029],desired_percent_increas:1065,detail:1223,detect:[40,41,1109,1110,1117],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,778,779,788,789,791,816,832,867,869,870,879,882,886,887,893,896,897,898,905,906,908,909,914,915,916,951,954,958,959,993,1003,1008,1014,1043,1053,1061,1062,1063,1064,1065,1146,1157],dev:[40,41,42,43,106,260,502,616,832,835,836,838,839,841,842,845,846,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,868,871,872,873,874,875,876,877,878,881,906,909,914,944,945,952,963,964,972,973,974,980,981,1006,1007,1008,1023,1121,1122,1123,1124,1125,1183,1184,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217],dev_clon:[40,41,832],dev_clone_arrai:832,dev_clone_it:832,dev_clone_nest:832,dev_dist:[40,41,832],dev_dist_arrai:832,dev_dist_it:832,dev_dist_nest:832,dev_from_str:[43,106,260,502,616,832],dev_mapp:832,dev_str:[40,41],dev_to_str:[106,260,502,616,832],dev_unifi:832,dev_unify_arrai:832,dev_unify_it:832,dev_unify_nest:832,dev_util:832,devclonedit:832,devcloneditem:832,devclonednest:832,devdistit:832,devdistitem:832,devdistnest:832,develop:[1177,1220,1223],deviat:[40,41,1121,1124,1128,1134,1163,1164,1208,1209],devic:[21,40,41,43,834,835,836,837,838,839,841,842,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,906,909,914,943,944,945,952,963,964,972,973,974,980,981,1006,1007,1008,1023,1121,1122,1123,1124,1125,1177,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217],devmanag:[832,840],devmapp:[832,842],devmappermultiproc:832,diag:[1031,1036],diagon:[906,952],dict:[15,16,17,18,19,40,41,42,832,834,837,841,842,844,854,855,856,857,858,906,933,934,935,965,1061,1062,1063,1065,1109,1111,1112,1113,1116,1118,1183,1184],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,774,775,832,851,852,855,856,1065,1146,1155,1177,1220,1223],differenti:[1177,1220],dilat:[1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201],dim:[40,41,43,906,972,1024,1025,1029,1031,1036,1065,1194,1205],dim_siz:[40,41,832,1065],dimens:[40,41,42,788,789,832,863,906,918,924,928,933,934,935,938,942,949,962,972,977,978,988,989,992,1000,1002,1024,1028,1031,1034,1036,1037,1061,1062,1063,1064,1065,1121,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1143,1146,1147,1148,1149,1150,1151,1152,1153,1156,1159,1161,1162,1194,1195,1196,1197,1198,1199,1200,1201,1204,1205],dimension:[40,41,788,789,906,988,989,1031,1036],direct:1065,directli:[43,1109,1118,1220,1223],directori:[906,985,996],discret:[1159,1161],disk:[40,41,1024,1026],distanc:[906,909],distribut:[40,41,832,851,855,856,857,858,1065,1121,1122,1123,1124,1125,1146,1154,1194,1202,1206,1207],distribute_nest:1065,distributedarrai:[40,41],distrubt:[1159,1161],dive:[1177,1220],divid:[40,41,906,988,990,1043],dividend:[1043,1053],divis:[906,941,948,983,990,991,1008,1010,1011,1015,1043,1053,1210,1211,1212],divisor:[1008,1010,1011,1015,1043,1053,1210,1211,1212],doc:1177,docstr:43,doe:[40,41,43,906,909,988,1219],doesn:1177,doing:43,domain:[1043,1044],don:1177,door:1223,dot:[1031,1033,1146,1157,1158,1194,1205],down:1219,downscal:[906,922,923],drag:[1177,1223],draw:[1121,1122,1124,1125],drawn:[1121,1122,1123,1124,1125],drop:[1177,1223],dropout:[1146,1177,1194,1205],dropout_r:[1194,1205],ds_tune_step:832,dtype:[40,41,43,113,266,368,370,371,397,509,624,774,775,776,886,887,888,889,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,909,914,943,952,972,973,974,1006,1007],dtype_bit:[113,266,397,509,624,882],dtype_from_str:[43,113,266,397,509,624,882],dtype_in:[882,888,893,894,895,896,897,898,905],dtype_to_str:[113,266,397,509,624,882],duplic:[40,41],dure:[40,41,43,830,831,906,1001,1008,1010,1011,1015,1061,1062,1063,1064,1206,1207,1210,1211,1212,1214],dynam:[830,831],each:[40,41,42,43,778,779,791,816,832,841,842,851,852,853,854,855,856,857,863,875,876,906,907,908,913,925,936,977,988,992,995,1005,1008,1011,1013,1015,1016,1017,1024,1027,1031,1036,1043,1046,1053,1055,1056,1065,1109,1113,1121,1122,1128,1129,1146,1147,1148,1149,1150,1151,1152,1153,1154,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1220],eager:1220,easi:1223,easili:1177,econom:1223,ecosystem:1177,edg:[906,921,925,1005],effect:[1008,1017],effective_grad:[1008,1017],effici:1223,einop:[40,41,906,933,934,935],einops_rearrang:[40,41,906],einops_reduc:[40,41,906],einops_repeat:[40,41,906],einstein:[40,41,1128,1129],einsum:[40,41,168,344,451,571,742,1128],either:[40,41,906,932,965,968,970,1061,1062,1063,1064,1065,1194,1205,1206,1207,1220],eleg:1065,element:[40,41,43,778,779,788,789,791,816,832,853,857,863,882,886,906,907,909,911,912,913,915,916,920,921,922,923,929,930,936,939,940,941,952,953,967,969,977,979,988,999,1004,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1065,1128,1129,1131,1133,1135,1138,1139,1140,1141,1142,1143,1144,1145,1146,1154,1194,1202],elementwis:[40,41],elementwise_affin:[1208,1209],elementwise_funct:[373,374,778,779],elemtn:[1121,1122],elif:1065,els:[906,917,932,937,1065],elsewher:[906,1004],emphas:1177,empti:[40,41,1065],enabl:[40,41,42,1177],encapsul:[774,776],encod:[906,942,1024,1026],end:[906,909,1177,1220],ensur:43,entir:[40,41,788,789,832,876,1065,1177,1194,1203],entri:[40,41,906,939,963,964,988,989],entropi:[1159,1160,1161,1162],enumer:1065,environ:1177,eps:[368,774,775],epsilon:[1008,1010,1011,1015,1159,1160,1161,1162,1163,1164,1208,1209,1210,1211,1212],equal:[40,41,509,624,778,779,906,908,915,916,925,988,1005,1043,1051,1057,1059,1121,1125],equality_matrix:[906,908],equat:[40,41,1128,1129],equival:[906,909,1043,1059],erf:[447,718,1043],error:[40,41,832,906,989,1043,1054,1065,1138,1139,1206,1207,1210,1214],essenti:43,etc:[40,41,43,832,877,906,909,914,944,945,952,963,964,972,973,974,980,981,1006,1007,1065,1121,1122,1123,1124,1125,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217,1223],evalu:[40,41,788,789,906,968,1109,1110,1117],even:1223,evenli:[40,41,906,909,963,964,988],everi:[906,908,1223],exact:[40,41],exampl:[43,830,831,906,921,992,1177,1219,1220,1223],example_input:[830,831],exc_tb:1065,exc_typ:1065,exc_val:1065,exce:[906,969],except:[40,41,44,47,788,789,906,909,917,924,932,1001,1065],excess_s:1065,excit:[1177,1220],exclud:[59,61,906,909,1121,1125],exclus:[40,41,906,929,959,1008,1014,1121,1123],execut:[43,906,1001,1220],execute_with_gradi:[149,320,434,551,697,1008,1177,1219],exist:[40,41,906,932,1065,1177,1210,1214,1223],exp:[718,1043],expand:[40,41,906,938,942],expand_dim:[40,41,266,624,906,1065],expect:[906,910],explain:1220,explicitli:[1194,1203,1205,1206,1207,1220],expon:[43,791,816,906,991],exponenti:[43,791,816,1043,1054,1055],expos:[906,914,926],express:[906,968],exsit:[40,41],extend:43,extra:[40,41,42,1008,1012],eye:[1031,1033],fabian:1177,fabio:1177,factor:[832,841,874,875,876,1008,1010,1011,1015,1016,1031,1036,1065,1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201,1210,1211,1212,1213],falck:1177,fall:[1206,1207,1210,1214],fallback_to_non_compil:[1206,1207,1210,1214],fals:[15,18,19,40,41,42,59,66,67,68,69,70,778,779,788,789,832,850,863,871,876,881,882,889,890,891,892,906,908,929,932,937,942,949,959,965,986,988,1002,1004,1008,1011,1012,1013,1014,1015,1016,1017,1031,1034,1037,1061,1062,1063,1064,1065,1109,1110,1111,1113,1117,1118,1128,1130,1131,1132,1133,1134,1135,1136,1165,1166,1167,1171,1175,1183,1184,1206,1207,1210,1211,1212,1213,1214,1215],fan_in:1185,fan_mod:1185,fan_out:1185,far:[1109,1110,1117,1219],faster:[830,831],favourit:[1177,1219],feasibl:1223,feat_dim:[1146,1157,1158],fed:[832,876,1065],feed:[832,876,1065],field:1223,file:[40,41,43,906,985,996,1206,1207],filepath:[40,41],fill:[40,41,906,943,973,1006,1121,1123],fill_valu:[906,943],filter:[1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201,1223],filter_s:[1194,1195,1196],filter_shap:[1194,1197,1198,1199,1200,1201],find:[40,41,1223],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[79,80,194,195,368,369,475,476,589,590,774],finish:[1177,1223],finit:[778,779],first:[40,41,830,831,832,863,906,915,924,928,936,963,964,992,994,1008,1012,1031,1036,1061,1062,1063,1064,1065,1109,1110,1117,1121,1127,1128,1133,1135,1194,1205,1206,1207,1210,1214,1220,1223],firstlayersiren:[1177,1185],firstli:[1220,1223],fist:[832,876,1065],fit:[40,41,906,977,1024,1029],fkt:1223,flag:[40,41,1008,1014],flat:[40,41,43,906,977,980],flat_list:[40,41],flatten:[40,41,906,942,977,1031,1037,1128,1130,1131,1132,1134,1136],flatten_key_chain:[40,41,1206,1207],flexibl:[1177,1220],flip:[40,41,113,266,397,509,624,906],float32:[43,882,886,894,895,906,909,914,952,973,974,1006,1007],float_dtyp:[882,890,900],float_img_to_uint8_img:1024,floor:[266,624,906,941,1065],floormod:[266,624,906],fluid:1223,fname:[1165,1167,1171,1206,1207],folder:[43,1177],follow:[40,41,43,774,776,832,876,906,955,956,957,990,991,1008,1011,1013,1015,1016,1017,1065,1109,1113,1118,1146,1157,1158,1177,1194,1204,1210,1214],followng:[774,775],fomaml_step:1061,forget:[1008,1010,1011,1015,1210,1211,1212],fork:[906,970],forkserv:[906,970,1065],form:[15,16,17,18,19,40,41,906,914,1008,1011,1013,1015,1016,1017,1109,1111,1118,1146],format:[40,41,43,832,850,882,886,888,892,906,909,914,952,973,974,1006,1007,1065,1128,1129,1177,1219,1220],format_fn:[40,41],format_key_chain:[40,41],forward:[1206,1207,1210,1214,1219],found:[40,41,42],fourier:[906,942],fourier_encod:906,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,80,81,82,85,95,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,153,154,155,157,158,162,163,164,165,166,167,169,170,171,172,173,174,175,178,180,181,183,184,185,186,187,188,189,195,196,197,200,210,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,326,327,328,330,331,332,333,335,336,337,340,341,342,343,345,346,347,348,349,350,351,352,355,357,358,359,360,361,362,363,369,370,371,374,384,396,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,435,436,437,438,440,441,442,444,445,448,450,452,453,454,455,456,457,458,461,462,464,465,466,467,468,469,470,476,477,478,481,491,503,504,505,506,507,508,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,552,553,554,555,557,558,559,561,562,563,567,568,569,570,572,573,574,575,576,577,578,582,583,584,590,591,592,595,605,617,618,619,620,621,622,623,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,698,699,700,701,702,704,705,706,708,709,710,711,712,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,736,737,738,739,740,741,743,744,745,746,747,748,749,752,753,754,755,756,757,758,760,761,763,764,765,766,767,768,769,775,776,779,789,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1025,1026,1027,1028,1029,1030,1032,1033,1034,1035,1036,1037,1038,1040,1041,1042,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1160,1161,1162,1164,1166,1167,1169,1170,1172,1176,1177,1181,1182,1183,1184,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1222,1223],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1065,framewrk:[906,970],freeli:43,frequenc:[906,942],from:[40,41,42,43,788,789,832,841,842,876,882,888,906,932,939,944,945,952,978,989,997,1004,1008,1011,1015,1024,1028,1061,1062,1063,1064,1065,1109,1111,1118,1121,1122,1123,1124,1125,1128,1133,1135,1146,1154,1157,1177,1183,1184,1194,1202,1205,1210,1214,1219,1220],from_cal:[1206,1207],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[113,266,397,509,624,774,775,906,1177],full_matric:[1031,1036],fulli:[43,1177,1194,1204,1205,1219],func:[40,41,830,831,832,876,906,919,1008,1012,1065],further:1223,furthermor:1223,futur:1223,gain:1185,gamma:[1163,1164],gather:[40,41,113,266,397,509,624,906,945],gather_nd:[40,41,113,266,397,509,624,906],gauss:[1043,1054],gaussian:[1138,1139],geglu:[1177,1180],gelu:[354,460,751,1138,1177,1180],gener:[23,40,41,43,830,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1014,1121,1123,1125,1126,1177,1210,1214],geometr:[906,942],get:[40,41,774,775,776,832,841,842,850,865,866,871,875,878,881,882,892,893,906,910,946,947,948,976,1065,1175,1177,1194,1203,1223],get_all_arrays_in_memori:906,get_all_arrays_on_dev:832,get_framework:59,get_initial_st:[1194,1203],get_min_bas:906,get_min_denomin:906,get_mod_kei:[1206,1207],get_num_dim:[624,906],get_param:1171,get_param_recurs:1171,get_referrers_recurs:906,getfullargspec:1065,gist:1177,give:[906,913,978,1220],given:[40,41,43,832,865,871,874,875,876,878,881,882,886,906,909,913,914,921,929,930,939,945,963,964,973,974,977,980,981,988,995,1000,1002,1006,1007,1008,1010,1011,1013,1015,1016,1017,1031,1033,1038,1043,1044,1065,1109,1114,1115,1121,1124,1125,1127,1128,1131,1133,1134,1135,1136,1146,1147,1148,1149,1150,1151,1152,1153,1183,1184,1223],global:[40,41,42,832,841,842,849,874,875,876,882,889,890,891,906,931,947,948,976,982,983,984,990,991,1008,1023,1065,1163,1164,1169,1170,1177,1208,1209],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1177,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204],got:1177,gpu0:43,gpu2:43,gpu:[832,867,870,1065],gpu_is_avail:[832,1065],grad:[1177,1210,1214,1219],gradient:[25,40,41,832,876,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1027,1061,1062,1063,1064,1177,1210,1211,1212,1213,1214,1215,1219,1223],gradient_descent_upd:[1008,1061,1062,1063,1064],gradient_imag:[152,325,439,556,703,1024],gradienttrack:[1008,1009],graph:[1008,1011,1013,1015,1016,1017,1165,1166,1167,1172,1177,1206,1207],graph_compil:[1165,1166,1167,1168,1169,1170,1171,1175],greater:[40,41,906,909,940,989,1121,1125],green:[40,41,42,1221,1222],grid:[906,968],group:[1024,1029],guid:[1177,1178,1223],gym:1177,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1223,half:[906,909,1065,1121,1125],hand:1177,handl:[40,41,42,43,830,831,832,848,850,859,860,871,878,881,1008,1011,1013,1015,1016,1017,1065,1210,1211,1212,1213,1214,1215],has:[40,41,43,906,992,1043,1048],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,906],hasattr:1065,have:[40,41,43,774,775,778,779,788,789,791,816,906,924,928,933,934,935,936,943,992,1008,1014,1022,1031,1036,1043,1053,1065,1177,1219,1220],hdf5:[40,41,1206,1207],head:[1146,1157,1194,1205],head_dim:[1194,1205],height:[1024,1029],height_cutoff:[40,41],help:[59,368,832,844,845,846,847,882,1008,1171,1175,1177,1185,1187,1188,1190,1191,1193],helper:1177,here:[43,1177],hidden:[1146,1156,1194,1203],hierarch:[906,926],hierarchi:[40,41],high:[40,41,1121,1123,1125],higher:[1008,1011,1013,1015,1016,1017,1031,1036],highest:[1121,1123],highest_util:1065,highest_util_nod:1065,highli:1177,highlight:1223,highlight_subgraph:[1165,1167,1171],hint:43,hkt:1223,hold:[882,886,906,909,914,980,981],host:1177,hot:[906,972],how:[1177,1194,1205,1206,1207,1220,1223],howev:[43,1220],http:1223,hyperbol:[1043,1045,1047,1050,1052,1058,1060,1138,1145],hypothet:1223,icon:1177,idea:1177,ident:[40,41,43,113,266,397,509,624,906],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[774,775],if_exist:[40,41],ignor:[40,41,1210,1214],ignore_key_error:[40,41],ignore_miss:[1210,1214],ignore_non:[40,41],iinfo:[79,194,368,475,589,774],imag:[27,906,962,1025,1026,1027,1028,1029,1030,1146,1147,1148,1149,1150,1152,1153,1177,1223],image_dim:[1024,1028],imkkhk:1223,immedi:[1177,1220,1223],implement:[43,791,816,1177,1220,1223],in_featur:[1146,1155],includ:[40,41,43,788,789,906,909,951,990,991,1003,1109,1110,1121,1125,1194,1204,1205,1208,1209,1219],include_deriv:[1109,1111,1118],include_empti:[40,41],include_gener:[1165,1166,1167,1171,1206,1207],include_inf:[40,41,906,951,1003],include_nest:[1109,1110],include_self:[40,41],inclus:[1121,1123],incom:[1146,1155],increas:[832,854,858,864,906,925,938,1005,1065,1109,1118],increasingli:1223,increment:[906,956,1065],increment_param_count:1171,inde:1177,indent:[40,41,42],independ:[1121,1122],index:[40,41,906,911,912,944,945,968,989,992,1109,1112,1114,1115,1116,1119],index_nest:1109,indic:[40,41,906,911,912,913,944,945,953,972,980,981,1109,1110,1112,1114,1115,1116,1117,1119,1120,1121,1122,1138,1143,1146,1147,1148,1149,1150,1151,1152,1153,1163,1164,1194,1195,1196,1197,1198,1199,1200,1201,1206,1207],indices_wher:[113,266,397,624,906],inevit:1223,inf:[40,41,906,951,960,1003,1043,1048],infer:[830,831,906,939,949,952,978,986,1024,1028,1220,1223],infin:[778,779,906,960],inform:[774,775,776,1008,1019],init_c:[1146,1156],init_h:[1146,1156],init_on_first_step:[1210,1214],initi:[40,41,42,59,368,832,844,845,846,847,882,1008,1065,1146,1156,1171,1175,1177,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1210,1214],initialz:[1206,1207],inner:[1061,1062,1063,1064],inner_batch_fn:[1061,1062,1063],inner_batch_shap:[1146,1155],inner_cost_fn:[1061,1062,1063],inner_grad_step:[1061,1062,1063,1064],inner_learning_r:[1061,1062,1063,1064],inner_optimization_step:[1061,1062,1063,1064],inner_v:[1061,1062,1063],inp:1065,inplac:[40,41,906,917,954,958,993,1008,1011,1013,1015,1016,1017,1183,1184,1210,1211,1212,1213,1214,1215],inplace_arrays_support:906,inplace_decr:[113,266,397,509,624,906],inplace_incr:[113,266,397,509,624,906],inplace_oper:[0,11,12],inplace_upd:[40,41,113,266,397,509,624,906,1183,1184],inplace_variables_support:906,input:[15,18,19,40,41,42,43,778,779,788,789,830,831,832,841,842,849,850,851,854,855,858,864,876,877,882,886,887,889,890,891,892,893,897,898,906,907,908,911,912,913,915,916,917,918,920,921,922,923,924,925,927,929,930,932,933,934,935,936,937,938,939,940,941,942,949,951,952,953,955,956,957,959,960,961,962,966,967,968,969,977,979,986,987,989,992,993,994,995,997,998,999,1000,1002,1003,1005,1008,1012,1014,1019,1023,1024,1025,1026,1027,1028,1030,1031,1034,1036,1037,1039,1040,1041,1042,1043,1045,1047,1048,1050,1051,1052,1053,1057,1058,1059,1060,1061,1062,1063,1064,1065,1121,1122,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1163,1164,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209,1220],input_ax:[832,876,1065],input_channel:[1194,1195,1196,1197,1198,1199,1200,1203,1204],input_queu:1065,inputs_split:1065,insert:[906,938],insid:43,inspect:1065,inspir:1223,instal:1177,instanc:[15,16,17,18,19,40,41,43,791,816,832,841,1065,1183,1184,1216,1217],instead:[40,41,1128,1130,1131,1132,1133,1134,1135,1136,1223],int32:43,int64:[882,886,906,909,914,952,973,974,1006,1007],int_dtyp:[882,891,901],integ:[40,41,774,776,788,789,882,898,906,909,920,940,979,988,1031,1037,1121,1123,1126],integr:1177,intend:43,inter:1177,interchang:[40,41,906,994],interest:1177,interfac:[906,914,1220],intermedi:[40,41],intern:[40,41,832,1008,1022,1065,1109,1110,1117,1118,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1216,1217],interpol:[906,962],intersect:[1043,1044],interv:[40,41,788,789,906,909,921,963,964,1043,1046,1121,1125],introduc:1223,inv:[707,1031,1223],invalid:[788,789],invalid_dtyp:882,invers:[1031,1033,1035,1043,1044,1045,1046,1047,1048,1050,1223],invert:[1031,1033,1035],invest:1223,invoc:[830,831],irrespect:1177,is_al:1065,is_arrai:[113,266,397,509,624,906,1065],is_float_dtyp:882,is_int_dtyp:882,is_mean:1065,is_sum:1065,is_var:[1171,1175],is_vari:[149,320,434,551,697,1008],isfinit:[84,199,373,480,594,778],isinf:[266,509,624,906],isinst:1065,isnan:[266,509,624,906],isnumer:1065,item:[15,19,40,41,791,803,804,832,841,842,844,851,853,855,857,863,882,889,906,926,950,990,991,1065,1109,1113,1114,1115,1118,1119,1120,1177,1206,1207,1219],iter:[15,16,17,18,19,40,41,42,830,831,832,835,836,838,839,841,842,845,846,853,855,856,857,858,863,876,906,908,918,924,925,939,952,968,973,977,978,981,986,988,992,995,1000,1005,1006,1065,1109,1110,1111,1113,1117,1118],iterbal:[832,853,857,863,1065],its:[832,876,906,913,952,978,994,1000,1065,1177],itself:[43,1109,1118],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,368,370,371,373,374,774,775,776,778,779,788,789,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,841,842,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1175,1177,1178,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1221,1222],ivy_backend:[40,41],ivy_bay:1223,ivyfcmodel:1219,ivyh:[40,41,42],ivymodul:[179,759],jame:1177,jax:[1008,1014,1177,1223],jax_concat:1177,jnp:1177,join:[40,41,906,924,992,1065],journal:1177,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1177,1194,1203,1223],kaimingnorm:[1185,1189],kalman:1223,kalman_filt:1223,kalman_filter_step:1223,kalman_filter_upd:1223,keep:[40,41,832,877,906,1002,1065,1177,1223],keep_inner_v:[1061,1062,1063],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1061,1062,1063],keepdim:[40,41,788,789,906,1002,1031,1034,1037,1128,1130,1131,1132,1133,1134,1135,1136],kei:[15,16,17,40,41,42,791,796,832,844,906,926,1061,1062,1063,1065,1109,1112,1116,1146,1157,1158,1177,1183,1184,1194,1205,1210,1214],kept:[40,41,42,1061,1062,1063],kera:1223,kernel:[1146,1156],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,832,841,842,854,858,864,906,910,933,934,935,965,1065,1109,1113,1206,1207],keyword_color_dict:[40,41,42],kind:[774,775,776,1223],kwarg:[15,16,17,40,41,42,59,63,832,841,854,858,864,906,965,1065,1165,1166,1167,1171,1183,1184,1206,1207],kwarg_stateful_idx:[1165,1166,1167,1171,1206,1207],kwargs_clon:1065,kwargs_dist:1065,kwargs_uni:1065,label:[1159,1160,1161,1162],lamb:[1008,1015,1177,1210],lamb_upd:1008,lambda:[1065,1210,1213,1215,1219],lar:[1008,1015,1016,1177,1210],larger:[774,775,906,921],largest:[40,41,774,775,776,906,911,940],lars_upd:1008,last:[40,41,788,789,906,909,928,962,988,992,1031,1034,1036,1128,1133,1135,1138,1143,1146,1156,1194,1204],later:[40,41,906,919],latest:[1194,1203],layer:[1008,1011,1013,1015,1017,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1163,1164,1177,1185,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217,1223],layer_norm:1163,layernorm:[1177,1208],layerwis:[1008,1016,1210,1213],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1109,1110,1117],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1138,1139,1140],leaky_relu:[751,1138],learn:[1008,1011,1013,1015,1016,1017,1061,1062,1063,1064,1121,1127,1177,1210,1211,1212,1213,1214,1215,1220,1223],learnabl:[1163,1164,1208,1209],leav:[15,18,19,40,41,1109,1110,1111,1117,1118],left:[40,41,1031,1034,1037,1128,1130,1131,1132,1133,1134,1135,1136,1177],leftmost:[40,41],len:1065,length:[40,41,42,906,909,978,989,1000],lenton2021ivi:1177,lenton:1177,less:[40,41,43,906,920,1065,1121,1125],less_util_node_str:1065,let:[1220,1223],level:1177,librari:[1177,1219,1223],lightweight:1177,like:[43,1008,1014,1121,1125,1177,1219,1220,1223],limit:[40,41,42,774,775,776,906,921,922,923],linalg:[29,1032,1033,1034,1035,1036,1037,1038,1177],linear0:[1177,1219],linear1:1177,linear2:1219,linear:[906,942,962,1031,1138,1139,1140,1141,1146,1154,1177,1194,1195,1196,1197,1198,1199,1200,1201,1219],linear_resampl:[113,266,397,509,624,906],linearli:[906,942],link:1177,linspac:[113,266,397,509,624,906,909],list:[15,18,19,40,41,43,788,789,832,841,842,851,852,854,855,856,858,861,862,876,906,909,914,916,968,987,988,997,1002,1061,1062,1063,1065,1109,1110,1111,1113,1117,1118,1146,1147,1148,1149,1150,1151,1152,1153,1177,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201],list_join:[40,41,42],list_stack:[40,41],littl:1220,load:[40,41],loaded_kwarg:1065,loader:1177,local_set:[906,950],locat:[43,906,960,961,1121,1122],log:[718,906,964,1043,1065,1159,1160,1161,1162,1177],log_all_op:1171,log_global_inference_abs_tim:[1168,1177],log_global_inference_rel_tim:[1168,1177],logarithm:[1043,1056],logic:[31,788,789,1040,1041,1042,1177],logical_and:[334,714,1039],logical_not:[334,714,1039],logical_or:[334,714,1039],logit:[1159,1162],logspac:[113,266,397,509,624,906],look:[43,1220,1223],loop:[1061,1062,1063,1064],loss:[1160,1161,1162,1177,1219],loss_fn:[1177,1219],lot:1220,low:[40,41,1121,1123,1125],lower:[40,41,906,967,1121,1125],lower_depth:[1206,1207],lowest:[15,18,19,40,41,1109,1118,1121,1123],lstm:[1146,1156,1177,1194],lstm_updat:[43,1146],machin:[774,775,776,1121,1127,1177,1220,1223],mai:[906,909,932,936,1177,1220,1223],main:[906,952,1177],mainli:1177,make:[43,832,1065,1177,1220],maml:[1061,1062,1063],maml_step:1061,manag:[832,1065],mani:[40,41,43,906,988,1177],manner:[15,18,19,40,41,43,1109,1118],manual:[1109,1110,1117,1223],map:[40,41,42,832,841,906,960,961,1065,1109,1114,1115,1118,1194,1205,1219],map_cont:[40,41],map_nest_at_index:1109,map_nest_at_indic:1109,map_sequ:[40,41],mapper:[832,841,842,1065],mask:[1146,1157,1158],match:[40,41,906,965],match_kwarg:906,math:[33,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1065,1177],mathbb:[1031,1038],mathbf:[1031,1038],matmul:[43,266,509,624,906,1223],matplotlib:1220,matric:[1146,1155],matrix:[40,41,906,908,922,966,1031,1032,1033,1034,1035,1038,1146,1155,1194,1204],matrix_norm:[40,41,156,329,443,560,707,1031],matter:1177,max:[40,41,368,774,775,776,906,922,923,934,967,980,981,1065,1128,1130,1210,1212],max_batch_s:[40,41],max_chunk_s:[832,876,1065],max_depth:[40,41,832,836,839,846,854,858,864,906,950,1065,1109,1118],max_dev_dim_step_ratio:832,max_freq:[906,942],max_length:[40,41],max_node_dim_step_ratio:1065,max_norm:[40,41,906,922,923],max_split_factor_step_s:[832,1065],max_trust_ratio:[1008,1015,1210,1212],maxim:[1177,1220,1223],maximis:1177,maximum:[40,41,42,624,832,854,858,864,876,906,911,921,922,923,942,1008,1015,1065,1109,1118,1128,1130],mayb:[15,18,19],mdi:1065,mean:[40,41,832,861,862,863,864,876,906,934,1061,1062,1063,1064,1065,1109,1113,1121,1124,1128,1131,1134,1136,1185,1219,1223],measur:[1146,1157,1194,1205],mech:1177,mechan:[1177,1223],medic:1223,memori:[832,848,871,876,878,881,1065,1146,1156,1177],meshgrid:[266,624,906],messag:[1221,1222],meta:[35,1062,1063,1064,1177],method:[40,41,42,43,906,914,926,968,980,981,1008,1015,1016,1065,1109,1110,1117,1118,1177,1194,1205,1206,1207,1220],might:[906,932,1223],min:[40,41,368,774,775,776,906,934,969,980,981,990,1065,1128,1132],min_bas:[906,991],min_denomin:[906,990],min_dev_dim_s:832,min_node_dim_s:1065,min_sf_tune_step:[832,1065],min_unit_dev_tune_step:832,min_unit_node_tune_step:1065,mind:1177,mini:[1163,1164,1208,1209],minimum:[40,41,624,832,882,886,906,909,912,914,921,947,948,982,983,990,991,1065,1128,1132],miss:[1210,1214],ml_framework:[906,909],mod:[906,941],mod_depth:[1206,1207],mod_height:[1206,1207],mod_with_top_mod_key_chain:[1206,1207],mode:[40,41,830,831,832,861,862,863,864,876,1031,1036,1065,1220],model:[1177,1219],modul:[40,41,42,59,906,970,1065,1177,1178,1180,1181,1182,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209,1216,1217,1223],moment:[1008,1010,1011,1015,1210,1211,1212],more:[43,906,992,1065,1177,1220,1223],more_util_node_str:1065,most:[40,41,43,1177,1223],move:[40,41,43,832,877,1065],much:[1177,1223],multi:[906,970,1146,1157,1194,1205],multi_head_attent:1146,multi_index_nest:1109,multi_map:[40,41],multi_nod:1065,multidev:[832,843,844,845,864],multidevcontain:[40,41],multidevic:[832,841],multidevit:[832,835,838,841,842,846],multidevitem:[832,834,837],multidevnest:[832,836,839],multiheadattent:[1177,1194],multinod:[1065,1069],multinodecontain:1065,multinodeit:1065,multinodeitem:1065,multinodenest:1065,multinomi:[161,339,449,566,735,1121],multipl:[40,41,788,789,906,965,988,1031,1033,1128,1130,1131,1132,1133,1134,1136,1163,1164,1194,1204,1220],multipli:[40,41,906,929,1128,1133],multiprocess:[40,41,42,624,832,841,906,1065],must:[40,41,42,43,778,779,788,789,791,816,832,861,862,863,864,876,906,909,924,926,928,936,967,969,981,992,1043,1049,1053,1065,1121,1126,1210,1214],mutabl:[1109,1111,1118],mutlidevic:[832,841],mutlinod:1065,mw_tm1:[1008,1011,1015],mx_concat:1177,mxnet:[43,1177,1223],my_func:43,mymodel:1177,name:[830,831,1165,1166,1167,1171,1219],namespac:[43,1220],nan:[40,41,778,779,906,951,961,1003],nativ:[15,17,18,19,40,41,43,832,848,850,859,860,871,878,881,882,887,894,895,1065,1177,1178,1183,1184],native_modul:[1183,1184],native_module_class:[1183,1184],nativearrai:[15,18,19,43,774,775,776,778,779,788,789,791,816,832,850,876,877,882,886,892,897,898,906,907,908,909,911,912,913,914,915,916,918,920,921,922,923,924,925,927,928,929,930,933,934,935,936,938,939,940,941,942,944,945,949,951,952,953,960,961,962,963,964,966,967,968,969,972,973,974,977,978,979,980,981,986,988,989,992,994,995,997,998,999,1000,1002,1003,1004,1005,1006,1007,1065,1109,1111,1118],natur:[1043,1056,1223],ncdhw:[1146,1151,1152,1194,1199,1200],nchw:[1146,1149,1150,1153,1194,1197,1198,1201],ncw:[1146,1147,1148,1194,1195,1196],ndarrai:[43,368,370,371,373,374,906,998],ndhwc:[1146,1151,1152,1194,1199,1200],nearest:[906,979],need:[43,906,922,923,1146,1148,1150,1152,1177,1194,1196,1198,1200,1223],neg:[40,41,778,779,788,789,1128,1133,1135,1138,1140],negative_slop:1185,neither:1065,nest:[15,16,17,18,19,40,41,42,832,854,858,864,906,914,997,1061,1062,1063,1065,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1206,1207,1210,1211,1212,1213,1214,1215],nested_indices_wher:1109,nested_map:[1065,1109],network:[1146,1155,1177,1178,1180,1194,1206,1207,1223],neural:[1146,1177,1180,1194,1219],new_node_percent_mem:1065,new_node_util:1065,new_node_utils_kei:1065,new_std:[1163,1164,1208,1209],newli:[830,831,906,918,919],newlin:[40,41,42],newshap:[906,918,978],next:[774,775,1065,1206,1207,1210,1211,1212,1213,1214,1215],nhwc:[1146,1149,1150,1153,1194,1197,1198,1201],node:[40,41,1109,1110,1117],node_clon:1065,node_dist:1065,node_dist_arrai:1065,node_dist_it:1065,node_in:1065,node_mapp:1065,node_str:1065,node_to_str:1065,node_util:1065,nodedistit:1065,nodedistitem:1065,nodedistnest:1065,nodemanag:[1065,1076],nodemapp:1065,nodemappermultiproc:1065,noinspect:[43,833,883,884,885,1009,1065,1172],non:[40,41,788,789,830,831,882,896,1206,1207,1210,1214,1220],none:[40,41,42,43,59,61,64,774,775,776,788,789,830,831,832,841,842,848,849,874,875,876,877,882,889,890,891,906,909,914,931,932,937,939,943,944,945,950,952,954,955,956,957,958,963,964,970,972,973,974,977,980,981,982,983,988,989,990,991,1000,1001,1006,1007,1008,1011,1013,1015,1016,1017,1023,1024,1028,1031,1034,1037,1061,1062,1063,1064,1065,1109,1110,1113,1117,1118,1121,1122,1123,1124,1125,1128,1130,1131,1132,1133,1134,1135,1136,1146,1148,1150,1152,1155,1156,1157,1158,1163,1164,1165,1166,1167,1171,1175,1183,1184,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],norm:[40,41,906,922,923,1031,1034,1037,1164,1177,1209,1210,1212],normal:[1121,1124,1163,1164,1208,1209],normalized_idx:[1163,1164],normalized_shap:[1208,1209],notat:[40,41,1128,1129],note:43,noth:[40,41,1220],notimplementederror:1065,now:[40,41,832,877,906,907,1065,1177,1194,1205,1206,1207,1219,1220,1223],np_concat:1177,np_finfo:368,ns_tune_step:1065,num:[906,963,964],num_arrai:[40,41],num_arrays_in_memori:906,num_arrays_on_dev:832,num_band:[906,942],num_channel:[1194,1201],num_chunk:1065,num_chunks_floor:1065,num_class:[1121,1122],num_cpu_cor:832,num_gpu:[106,832,1065],num_head:[1146,1157,1194,1205],num_kei:[1146,1157,1158],num_lay:[1194,1203],num_or_size_split:[40,41,906,988],num_output:1065,num_queri:[1146,1157,1158],num_sampl:[906,962,1024,1025,1121,1122],num_task:[1061,1062,1063,1064],number:[40,41,42,774,775,776,788,789,830,831,832,868,869,870,882,893,897,898,906,909,921,925,938,942,949,952,961,962,963,964,967,971,977,988,995,999,1003,1005,1031,1036,1061,1062,1063,1064,1065,1121,1122,1126,1128,1130,1131,1132,1134,1136,1146,1157,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1220,1223],numer:[43,778,779,791,816,906,947,948,982,983,990,991,1043,1053,1185],numhead:[1146,1157],numpi:[40,41,368,370,371,373,374,906,998,1031,1036,1128,1129,1177,1219,1220,1223],nwc:[1146,1147,1148,1194,1195,1196],obj:[40,41],object:[40,41,42,59,368,774,775,776,832,882,886,906,909,914,1008,1109,1112,1114,1115,1116,1119,1120,1121,1127,1171,1175,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1206,1207],object_in:[906,914],observ:1065,occupi:[774,775,776,906,980,981],off:[906,909],offer:1177,offset:[1163,1164],often:1220,old:[40,41],on_init:[1194,1205,1206,1207],onc:[832,876,1065,1121,1122,1177],one:[40,41,43,832,861,862,863,864,876,882,888,906,952,965,972,980,981,989,992,1031,1034,1037,1065,1128,1129,1130,1131,1132,1133,1134,1135,1136,1177,1220,1223],one_hot:[113,397,509,624,906],onearrai:[906,938],ones:[40,41,113,266,397,509,624,906,952,972,974,1177],ones_lik:[113,266,397,509,624,906],ongo:43,onli:[40,41,43,832,1065,1109,1110,1111,1117,1210,1211,1212,1213,1214,1215,1219,1220],onlin:1177,onto:[832,861,862,877,1065,1109,1113,1118],oom:[832,1065],open:[906,909,1121,1125,1177,1223],opencv:1220,oper:[40,41,906,917,933,934,935,963,964,993,1008,1011,1013,1015,1016,1017,1039,1040,1041,1042,1146,1147,1148,1149,1150,1151,1152,1153,1155,1177,1178],operand:[40,41,1128,1129],oppos:[906,942],optim:[832,1008,1011,1013,1015,1016,1017,1061,1062,1063,1064,1065,1177,1211,1212,1213,1215,1219,1223],optimizer_upd:1008,option:[15,18,19,40,41,42,43,788,789,830,831,832,841,842,850,854,855,856,857,858,861,862,863,864,871,874,875,876,877,881,882,887,892,896,905,906,908,909,911,912,913,914,922,923,924,929,931,932,939,942,943,944,945,949,951,952,959,962,963,964,965,968,970,972,973,974,977,980,981,984,986,988,989,990,991,992,1000,1002,1003,1006,1007,1008,1011,1013,1014,1015,1016,1017,1019,1024,1028,1031,1034,1037,1061,1062,1063,1064,1065,1109,1110,1111,1113,1117,1118,1121,1122,1128,1130,1131,1132,1133,1134,1135,1136,1138,1139,1143,1146,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1220],ord:[906,939,1031,1036],order:[40,41,42,43,906,913,1008,1011,1013,1015,1016,1017,1031,1034,1037,1061,1062,1063,1216,1217],ordered_node_util_kei:1065,org:1223,organ:43,origin:[40,41,42,906,974,978,1007,1031,1034,1037],other:[40,41,43,791,793,794,799,801,802,806,808,809,810,811,812,814,816,817,818,819,820,821,823,824,825,827,828,829,830,831,906,908,909,952,1008,1012,1121,1125,1177,1219,1220,1223],other_i:[43,791,816],otherwis:[15,16,17,18,19,40,41,778,779,788,789,832,849,882,889,890,891,906,917,1000,1001,1004,1008,1014,1019,1023,1061,1062,1063,1065,1128,1130,1131,1132,1134,1136],our:[1177,1223],out:[906,909,1043,1048,1146,1154,1156,1177,1194,1202],out_feat_dim:[1146,1157],out_featur:[1146,1154,1155],out_i:[778,779],outdat:1223,outer:[1061,1062,1063,1064],outer_batch_fn:[1061,1062,1063],outer_batch_shap:[1146,1155],outer_cost_fn:[1061,1062,1063],outer_v:[1061,1062,1063],outlin:1220,output:[40,41,43,832,841,842,876,906,909,919,943,952,977,995,1008,1012,1043,1049,1065,1121,1123,1124,1125,1146,1148,1150,1152,1154,1156,1157,1158,1177,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205],output_ax:[832,876,1065],output_axi:1065,output_channel:[1194,1195,1196,1197,1198,1199,1200,1203,1204],output_connected_onli:[1165,1167,1171,1206,1207],output_queu:1065,output_shap:[1146,1148,1150,1152,1194,1196,1198,1200],outsid:[906,921],over:[40,41,788,789,906,939,1031,1034,1037,1121,1125,1128,1130,1131,1132,1134,1136,1163,1164,1208,1209],overal:1220,overflow:[906,909],overhead:1220,overrid:[906,972,974,1007],overriden:[1210,1214],overwrit:[40,41,832,876,1065],overwrite_at_key_chain:[40,41],own:[1177,1220,1223],packag:[43,1220],pad:[906,925,942,1005,1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201],pad_width:[906,925,1005],page:1177,pair:[1146,1158],parallel:[832,841,842,1065],parallelis:[832,841,842,1065],param:[40,41,42,43,832,876,906,907,944,945,972,973,1006,1065,1176,1177,1206,1207,1219],paramet:[15,16,17,18,19,40,41,42,774,775,776,778,779,788,789,791,816,830,831,832,841,842,848,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,871,874,875,876,877,878,881,882,886,887,888,892,893,894,895,896,897,898,905,906,908,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,927,928,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,949,951,952,953,955,956,957,959,960,961,962,963,964,965,966,967,968,969,970,973,974,977,978,979,980,981,982,983,984,986,987,988,989,990,991,992,993,994,995,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1019,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219],parameter:[1121,1124,1125],params_all_empti:1171,pardo:1177,pars:[906,926],part:[1008,1011,1013,1015,1016,1017,1043,1048,1177,1206,1207,1220],partial:[40,41,1206,1207],particl:1223,particular:1223,pass:[40,41,42,832,841,876,882,887,906,919,1008,1022,1061,1062,1063,1065,1183,1184,1206,1207,1210,1214,1216,1217],pattern:[40,41,906,933,934,935],per:[832,1065,1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201],percent_used_mem_on_dev:832,percent_used_mem_on_nod:1065,percentag:[832,871,1065],perf_count:1065,perform:[40,41,43,788,789,832,906,911,912,913,929,933,934,935,955,956,957,962,963,964,1008,1011,1013,1015,1016,1017,1024,1025,1061,1062,1063,1064,1065,1109,1114,1115,1128,1130,1131,1132,1133,1134,1135,1136,1138,1143,1146,1154,1156],permissable_step:1065,permit:43,permut:[906,994,1000],perpendicular:[906,928],person:1177,physci:1223,pickl:[40,41,1065],pickle_filepath:[40,41],pid:1171,pinv:[329,707,1031],pip:1177,pipelin:1219,pkk:1223,pkkm1:1223,pkm1km1:1223,place:[40,41,43,832,877,906,938,943,955,956,957,1065,1210,1211,1212,1213,1214,1215],placehold:[1109,1118],point:[774,775,882,897,906,909,1043,1053],popul:[40,41,1121,1122],popular:1223,population_s:[1121,1122],portabl:[1177,1178],posit:[15,16,17,774,775,778,779,832,854,858,864,906,907,909,938,942,1065,1121,1126,1183,1184],possibi:[40,41],possibl:[906,965,997,1024,1029,1223],post:[1163,1164],post_shap:[40,41],power:[43,791,816,822,906,947,982,991,1185],practic:1177,pre:[832,1065,1177],pre_shap:[40,41],precis:[774,775],pred:[1159,1160,1161,1162],predict:[1159,1160,1161,1162,1223],preprint:1177,present:[40,41],preserv:[40,41,42,906,939,1008,1019],preserve_typ:[40,41,1008,1019],press:1177,prevent:[43,1008,1010,1011,1015,1065,1210,1211,1212],previou:[1008,1011,1015],previous:[906,919],prime:1177,print:[40,41,42,832,872,906,975,1177,1219],print_all_arrays_in_memori:906,print_all_arrays_on_dev:832,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1210,1214],prob:[1121,1122,1146,1154,1194,1202],probabl:[1121,1122,1146,1154,1194,1202],problem:[43,1223],process:[43,832,841,842,871,881,906,970,1065],process_specif:[832,871,881,1065],prod:[40,41,906,934],produc:[832,841,842,1065],product:[40,41,906,928,929,966,1128,1129,1146,1157,1158,1194,1205],profil:[106,260,395,502,616,832,1065],project:[1177,1219,1220,1223],promot:[43,791,816,1043,1053],prompt:1177,properli:43,properti:[40,41,368,832,844,1065,1171,1175,1206,1207,1210,1211,1212,1213,1215],provid:[40,41,43,788,789,830,831,832,849,882,889,890,891,896,905,906,932,972,974,981,1007,1008,1011,1013,1015,1016,1017,1023,1065,1177,1194,1203,1210,1211,1212,1213,1214,1215,1220],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1031,1035],ptype:[1171,1175],pure:[40,41,1177,1223],purpos:1223,put:1065,pybroadexcept:1065,pyprotectedmemb:[1065,1172],pyshadowingbuiltin:43,pyshadowingnam:[833,883,884,885,1009,1065],python:[40,41,832,871,881,906,909,1065,1177],pytorch:[1008,1011,1013,1015,1016,1017,1177,1210,1211,1212,1213,1214,1215,1219,1220,1223],pyunresolvedrefer:1065,quadrant:[1043,1049],queri:[40,41,791,805,826,832,865,875,1065,1146,1157,1158,1194,1205],query_dim:[1194,1205],query_kei:[40,41],queue:[40,41,42,832,841,842,906,976,984,1065],queue_class:[832,841,842,1065],queue_load_s:[40,41,42],queue_timeout:[40,41,42,906,1065],quick:1177,quickli:1219,radian:[1043,1044,1046,1049,1051,1057,1059],rai:[1043,1044],rais:[40,41,43,788,789,791,816,906,917,947,982,989,991,1001,1065,1206,1207,1210,1214],ram:[832,871,878,881,1065],randint:[161,339,566,735,1121],random:[37,40,41,1122,1123,1124,1125,1126,1127,1177],random_crop:1024,random_norm:[161,339,566,735,1121],random_uniform:[161,339,566,735,1121],randomli:[1024,1028,1146,1154,1194,1202],randomness_factor:[1165,1167,1171,1206,1207],rang:[906,909,963,964,1043,1049,1065,1177,1219,1223],rank:[788,789,906,925,1002,1005],rate:[1008,1011,1013,1015,1016,1017,1061,1062,1063,1064,1194,1205,1210,1211,1212,1213,1214,1215],rather:[40,41,832,876,906,909,959,1008,1014,1065],ratio:[832,1008,1015,1024,1029,1065,1210,1212],raw:[40,41],raw_delta:1065,reach:[832,854,858,864,1065,1109,1118],read:[40,41],readi:[1065,1219],real:[1043,1044,1048],realiti:1220,rearrang:[40,41,906,933,935],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1061,1063],receiv:[832,841,842,906,910,965,1065,1194,1204],receivess:[832,1065],receiving_fn:1171,receivng:[1061,1064],recev:[1061,1062,1063],recognit:1223,recommend:1177,rectifi:[1138,1140,1141],recurr:[1146,1156],recurrent_bia:[1146,1156],recurrent_kernel:[1146,1156],recurs:[40,41,1109,1110,1111,1117,1118],redefin:43,reduc:[40,41,788,789,832,876,906,934,1065,1128,1130,1131,1132,1133,1134,1135,1136],reduce_max:[40,41,168,344,451,571,742,1128],reduce_mean:[40,41,168,344,451,571,742,1128,1177,1219],reduce_min:[40,41,168,344,451,571,742,1128],reduce_prod:[40,41,168,344,451,571,742,1128],reduce_std:[40,41,344,1128],reduce_sum:[40,41,168,344,451,571,742,1065,1128],reduce_var:[40,41,168,344,451,571,742,1128],reduct:[39,40,41,788,789,906,934,980,981,1129,1130,1131,1132,1133,1134,1135,1136,1177],refactor:43,refer:[788,789,1008,1010,1011,1031,1038,1194,1204,1223],reflected_oper:[0,13,14],regard:[832,1065],regardless:[40,41,830,831],register_paramet:1219,reimplement:1223,rel:[1008,1011,1013,1015,1016,1017],rel_slice_obj:1065,relev:[1210,1211,1212,1213,1214,1215],relu:[751,1138,1139,1140,1177,1219],remain:[43,906,978,1109,1113],remaind:[40,41,906,941,988],remov:[40,41,906,989,1061,1062,1063],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,906,939],rep:[906,995],repeat:[40,41,266,624,906,935,995,1065,1220],repeated_config_check:[832,1065],repeatedli:[1109,1116],repetit:[40,41,906,977,995],replac:[40,41,43,906,921,980,981,1121,1122],repo:1177,repres:[43,882,888,893,1146,1155],represent:[40,41,42,43,774,775,776,832,859,860,882,888,894,895,906,987,997,1065],reptil:[1061,1064],reptile_step:1061,requir:[43,830,831,882,886,906,909,914,1183,1184],resampl:[906,962],reshap:[40,41,43,624,906],reshape_lik:[40,41],respect:[906,936,1008,1010,1011,1012,1013,1015,1016,1017,1043,1053,1061,1062,1063,1064],respons:1065,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,778,779,788,789,791,816,832,841,906,909,936,980,981,992,1031,1034,1037,1039,1040,1041,1042,1043,1053,1065,1128,1130,1131,1132,1133,1134,1135,1136,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1177],ret:1065,ret_dict:1065,ret_fn:[832,841,842,1065],retain:[1008,1012],retain_grad:[1008,1012],retreiv:1065,retrn:[906,987],return_cont:[40,41],return_dict:[40,41],return_graph:[1165,1166,1167],return_inner_v:[1061,1062,1063,1064],return_sequ:[1194,1203],return_st:[1194,1203],rev:[906,932],revers:[40,41,906,932,939,1000],right:[40,41],rk_e:1223,robot:1177,ronald:1177,round:[266,624,906,909,1065],row:[906,952,1121,1122],rule:[43,791,816,906,909,1043,1053],run:[832,841,1008,1010,1011,1015,1061,1062,1063,1064,1065,1177,1178,1194,1205,1206,1207],safe:[832,841,1065],safety_factor:[832,1065],same:[15,16,17,40,41,43,832,841,842,876,877,882,886,906,907,920,924,940,941,944,945,972,974,979,980,981,992,1007,1008,1014,1019,1031,1036,1043,1048,1061,1062,1063,1065,1128,1129,1146,1147,1148,1149,1150,1151,1152,1153,1177,1194,1195,1196,1197,1198,1199,1200,1201,1219,1223],same_arrai:[40,41],sampl:[906,962,1024,1025,1121,1122,1124,1125,1146,1154,1177,1194,1202],satisfi:[906,914,1031,1033,1038],save:[40,41,906,985,996,1024,1026,1206,1207],save_debug_info:1171,save_dir:[832,847,1065],save_to_disk:[1165,1167,1171,1206,1207],save_weight:[1206,1207],scalar:[906,921,972,999,1003],scale:[832,874,875,1008,1016,1065,1146,1154,1157,1158,1163,1164,1194,1202,1205,1210,1213],scaled_dot_product_attent:1146,scatter:[906,972,980,981],scatter_flat:[113,266,397,509,624,906],scatter_nd:[113,266,397,509,624,906],scene:[1008,1011,1013,1015,1016,1017],schemat:1177,screen:[40,41],search:[15,18,19,40,41],second:[40,41,832,863,906,915,928,936,976,984,994,1008,1010,1011,1015,1061,1063,1065,1210,1211,1212],secondli:1223,see:[43,59,368,788,789,791,816,832,844,845,846,847,882,906,909,963,964,1008,1043,1053,1171,1175,1177,1185,1187,1188,1190,1191,1193],seed:[40,41,161,735,1121],seed_valu:[40,41,1121,1126],seem:1177,seen_set:[906,950],select:[906,914,989,1220,1223],self:[40,41,43,59,368,791,816,832,844,845,846,847,882,1008,1065,1171,1175,1177,1185,1187,1188,1190,1191,1193,1210,1214,1219,1223],sent:1065,seper:[906,942],seq:[40,41,42,1128,1129,1206,1207],sequenc:[15,16,17,40,41,42,43,830,831,832,841,842,851,852,853,854,855,856,857,858,861,862,876,882,886,906,909,914,916,918,924,925,939,952,965,968,973,977,978,981,988,992,995,1000,1005,1006,1008,1012,1024,1028,1029,1031,1034,1037,1065,1109,1120,1121,1123,1125,1128,1130,1131,1132,1133,1134,1135,1136,1146,1147,1148,1149,1150,1151,1152,1153,1163,1164,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1203,1206,1207,1208,1209,1210,1214,1216,1217],sequenti:1177,set:[15,18,19,40,41,832,861,862,874,875,876,906,908,931,952,982,983,984,985,1008,1011,1013,1014,1015,1016,1017,1031,1034,1037,1065,1109,1110,1117,1119,1120,1121,1122,1126,1128,1130,1131,1132,1133,1134,1135,1136,1175,1177,1194,1203,1210,1211,1212,1213,1214,1215,1220,1223],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1175,set_debug_mod:44,set_default_devic:832,set_default_dtyp:882,set_default_float_dtyp:882,set_default_int_dtyp:882,set_default_nod:1065,set_exception_debug_mod:44,set_framework:[40,41,59,1065,1177,1219,1220,1223],set_ivy_backend:[40,41],set_min_bas:906,set_min_denomin:906,set_nest_at_index:1109,set_nest_at_indic:1109,set_param:1171,set_queue_timeout:906,set_split_factor:[832,1065],set_stat:[1210,1211,1212,1213,1214,1215],set_tmp_dir:906,set_with_grad:1008,setter:1065,sever:1223,sgd:[1177,1210],shape0:1065,shape:[40,41,43,624,832,844,882,886,906,907,918,920,924,925,938,939,940,941,943,945,949,952,972,973,974,977,978,979,980,981,987,989,992,1005,1006,1007,1024,1028,1031,1033,1043,1048,1049,1065,1121,1123,1124,1125,1128,1129,1146,1148,1150,1152,1171,1175,1194,1196,1197,1198,1199,1200,1201,1208,1209],shape_slic:[40,41],shape_to_tupl:906,share:[40,41,1177,1220],shift:1065,should:[40,41,42,43,778,779,791,816,830,831,832,906,918,919,926,972,978,1008,1011,1013,1015,1016,1017,1043,1053,1065,1128,1129,1177],show:[40,41,1171,1177,1223],show_debug_info:1171,show_graph:[1165,1177,1206,1207,1210,1214],show_mod_in_top_mod:[1206,1207],show_structur:[1206,1207],show_sub_contain:[40,41],show_v:[1206,1207],show_v_in_top_v:[1206,1207],shown:[40,41],shp:1065,shuffl:[40,41,161,735,1121],shuffle_h5_fil:[40,41],sigmoid:[751,1138,1177,1219],signatur:[43,59,368,832,844,845,846,847,882,1008,1171,1175,1185,1187,1188,1190,1191,1193],signific:1223,similar:[43,1146,1157,1194,1205],simpl:[43,906,937,1177,1220,1223],simplest:1220,simpli:[40,41,43,1177,1220,1223],simultan:1177,sin:[718,906,942,1043,1059,1220],sinco:1220,sine:[1043,1046,1047,1057,1058],singl:[40,41,830,831,832,841,842,861,862,863,864,906,989,999,1003,1024,1029,1065,1121,1124,1125,1128,1130,1131,1132,1133,1134,1135,1136,1177,1220,1223],singleton:[788,789],singular:[1031,1036],sinh:[718,1043],siren:[1177,1185],size:[40,41,42,832,855,856,857,858,874,875,876,906,909,918,963,964,980,988,1024,1028,1031,1034,1036,1037,1065,1121,1122,1124,1125,1128,1130,1131,1132,1133,1134,1135,1136,1194,1195,1196],size_ordered_arrai:[40,41],skew:[1031,1038],skinv:1223,skip:[40,41],slice:[40,41,906,913,944,945,1065,1109,1116],slice_kei:[40,41],slice_obj:[40,41,1065],slice_via_kei:[40,41],slide:[1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201],slope:[1138,1140],small:[1159,1160,1161,1162,1163,1164,1177,1208,1209,1220],smaller:[906,921],smallest:[40,41,774,775,776,906,912,920],smallest_norm:[368,774,775],softmax:[177,460,751,1138,1146,1157,1158],softplu:[751,1138],solv:1223,some:[40,41,43,906,909,1008,1010,1011,1013,1015,1016,1017,1022,1146,1154,1177,1194,1202,1220,1223],some_backend:43,some_namespac:43,someth:[43,1223],something_cool:43,somewher:[40,41],sort:[40,41,42,906,913,1031,1036,1065],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,368,370,371,373,374,774,775,776,778,779,788,789,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,841,842,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1175,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1221,1222,1223],space:[906,909,942,963,964],spars:[1159,1162],sparse_cross_entropi:1159,spawn:[906,970],specif:[40,41,43,832,874,906,926,933,934,935,970,1061,1062,1063,1064,1065,1121,1127,1177,1206,1207,1219,1220],specifc:[1121,1122],specifi:[40,41,43,788,789,832,851,852,853,854,855,856,857,858,861,862,866,868,872,875,876,877,882,886,888,906,909,911,912,914,921,924,925,943,944,945,951,963,964,992,1002,1005,1031,1034,1037,1065,1109,1114,1115,1119,1120,1128,1129,1130,1131,1132,1133,1134,1135,1136],split:[40,41,113,266,397,509,624,832,841,855,856,857,858,874,875,876,906,965,1065],split_arg:1065,split_factor:[832,841,1065],split_func_cal:[832,1065],split_siz:1065,spread:[832,864,1065],squar:[906,952,1031,1033],squeez:[113,266,397,509,624,906],stabil:[906,990,991],stabl:[906,947,948,982,983,990,991],stable_divid:906,stable_pow:906,stack:[40,41,266,624,906,1024,1029,1109,1110,1117,1194,1203],stack_imag:[152,325,439,556,703,1024],stacked_dim_s:1065,stage:43,standard:[40,41,43,774,775,1121,1124,1128,1134,1163,1164,1208,1209],start:[40,41,832,847,906,909,963,964,1065,1177,1220],starting_index:[40,41],starting_split_factor:[832,1065],state:[1065,1146,1156,1165,1166,1167,1171,1177,1180,1181,1182,1183,1184,1185,1187,1188,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219],statement:1220,static_argnam:[830,831],static_argnum:[830,831],std:[1121,1124],step:[40,41,832,906,909,963,964,1008,1010,1011,1013,1015,1016,1017,1061,1062,1063,1064,1065,1177,1210,1211,1212,1213,1214,1215,1219,1223],stephen:1177,stick:1177,still:[40,41],stochast:[1210,1215],stop:[40,41,832,847,876,906,909,963,964,1008,1011,1013,1015,1016,1017,1019,1061,1062,1063,1064,1065,1210,1211,1212,1213,1214,1215],stop_gradi:[40,41,320,434,551,697,832,876,1008,1011,1013,1015,1016,1017,1061,1062,1063,1064,1065,1210,1211,1212,1213,1214,1215],stopiter:1065,store:[40,41,906,942,988,1008,1022,1206,1207],store_var:[1206,1207],str:[15,16,17,40,41,42,43,368,370,371,774,775,776,830,831,832,841,842,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,876,882,887,888,893,894,895,896,897,898,905,906,914,931,933,934,935,968,970,973,980,981,1031,1034,1037,1061,1062,1063,1064,1065,1109,1113,1128,1129,1183,1184,1194,1205,1206,1207],str_to_nod:1065,straight:1220,strength:[1177,1223],stride:[1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201],string:[40,41,43,832,848,850,859,860,865,871,877,878,881,882,886,892,894,895,896,905,906,909,914,931,952,973,974,1006,1007,1065,1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201,1206,1207],structur:[40,41,42,43,906,926],structural_diff:[40,41],sub:[40,41,832,855,856,861,862,863,864,906,988,1061,1062,1063,1064,1065],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1065,sub_mod:[1206,1207],sub_modul:[1216,1217],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1177,1178,1208,1209,1216,1217],subsequ:43,subset:43,substr:[40,41],suggest:1177,suitabl:[1024,1029],sum:[40,41,832,861,862,863,864,876,906,930,934,980,981,1065,1128,1129,1135],summat:[40,41,1128,1129],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,80,81,82,85,95,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,153,154,155,157,158,162,163,164,165,166,167,169,170,171,172,173,174,175,178,180,181,183,184,185,186,187,188,189,195,196,197,200,210,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,326,327,328,330,331,332,333,335,336,337,340,341,342,343,345,346,347,348,349,350,351,352,355,357,358,359,360,361,362,363,369,370,371,374,384,396,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,435,436,437,438,440,441,442,444,445,448,450,452,453,454,455,456,457,458,461,462,464,465,466,467,468,469,470,476,477,478,481,491,503,504,505,506,507,508,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,552,553,554,555,557,558,559,561,562,563,567,568,569,570,572,573,574,575,576,577,578,582,583,584,590,591,592,595,605,617,618,619,620,621,622,623,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,698,699,700,701,702,704,705,706,708,709,710,711,712,713,715,716,717,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,736,737,738,739,740,741,743,744,745,746,747,748,749,752,753,754,755,756,757,758,760,761,763,764,765,766,767,768,769,775,776,779,789,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,831,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1025,1026,1027,1028,1029,1030,1032,1033,1034,1035,1036,1037,1038,1040,1041,1042,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1062,1063,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1160,1161,1162,1164,1166,1167,1169,1170,1172,1176,1177,1181,1182,1184,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1222,1223],supports_inplac:906,suppos:1223,svd:[329,560,707,1031],swap:[40,41,906,994],swapax:[40,41,509,624,906,1223],symmetr:[1031,1038],tab:1177,take:[906,962],taken:[1128,1130,1131,1132,1134,1136],tan:[718,1043,1048],tangent:[1043,1048,1049,1050,1059,1060,1138,1145],tanh:[718,751,1043,1138],target:[40,41,832,848,851,852,853,854,855,856,857,858,861,862,863,864,877,1065,1177],target_dict:[40,41],task:[1061,1062,1063,1064],team:1223,templat:1177,temporari:[906,985,996],tensor:[40,41,43,832,850,882,892,906,909,911,912,913,918,963,964,967,969,972,973,974,978,980,981,988,1006,1007,1065,1121,1122,1123,1146,1154,1156,1177,1194,1202,1204,1210,1211,1212,1213,1214,1215,1219,1220],tensorflow:[1146,1148,1150,1152,1177,1194,1196,1198,1200,1220,1223],term:[40,41,1146,1156,1177,1194,1204],termcolor:[40,41,42],termin:[40,41,42,1065],test:[778,779,788,789,882,897,898],tf_concat:1177,than:[40,41,774,775,832,876,906,909,920,921,940,959,967,989,992,1008,1014,1065,1121,1125,1177,1220],thei:[40,41,43,1043,1049,1061,1062,1063,1121,1122,1177,1216,1217,1220],them:[1177,1223],themselv:[1109,1110],therefor:43,thi:[40,41,42,43,832,854,858,864,871,876,881,906,909,942,976,978,984,1008,1011,1013,1014,1015,1016,1017,1022,1031,1034,1037,1065,1109,1113,1118,1128,1130,1131,1132,1133,1134,1135,1136,1146,1155,1177,1206,1207,1210,1211,1212,1213,1214,1215,1219,1220,1223],thing:[43,1177],those:[40,41,906,921,1008,1022,1031,1036,1065],though:43,threshold:[906,967,969],through:[40,41],tile:[266,509,624,906],time:[906,995,1008,1011,1015,1061,1062,1063,1064,1065,1121,1122,1146,1156,1194,1205,1206,1207,1223],time_chronolog:[1165,1166,1171],time_infer:[1165,1166],timeout:[40,41,42,832,841,842,906,976,984,1065],timestep:[1146,1156,1194,1203],timing_fnam:[1165,1166],titl:1177,tmp_dir:906,tmp_dr:[906,985],to_appli:[40,41],to_clon:[832,1065],to_dev:[40,41,106,260,502,616,832],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[832,1065],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1177],to_ivy_modul:[179,759,1177,1183],to_json:[40,41],to_kv_fn:[1146,1157],to_kv_v:[1146,1157],to_list:[40,41,624,906],to_multi_dev:[40,41],to_mut:[1109,1111,1118],to_n:[15,40,41,1177],to_nod:1065,to_numpi:[40,41,624,906,1177,1219],to_out_fn:[1146,1157],to_out_v:[1146,1157],to_q_fn:[1146,1157],to_q_v:[1146,1157],to_raw:[40,41],to_scalar:[624,906],todo:1065,togeth:[40,41,1216,1217],tool:[1177,1220],top_mod:[1206,1207],topic:1223,torch:[43,830,831,1177,1219,1220,1223],torch_concat:1177,torchfcmodel:1219,total:[40,41,42,832,878,1065],total_mem_on_dev:832,total_mem_on_nod:1065,tpu:[832,879,1065],tpu_is_avail:[502,616,832,1065],tpye:[882,893],trace:[40,41,906,959],track:[832,1065,1109,1118,1206,1207],track_submod_call_ord:[1206,1207],track_submod_ret:[1206,1207],trail:[1208,1209],train:[1008,1010,1011,1015,1177,1178],trainabl:[1008,1014,1177,1178,1183,1184,1206,1207,1216],trainer:1177,tran:1223,transform:[1146,1154,1155],transpos:[40,41,113,266,397,624,832,863,906,1065,1146,1148,1150,1152,1194,1196,1198,1200],travers:[15,18,19,40,41,1109,1118],treat:[40,41,830,831],tree_depth:1175,tree_height:1171,tri:[40,41],trigonometr:[1043,1044,1048,1051,1057],trim_kei:[40,41],trust:[1008,1015,1210,1212],truth:[906,936,1039,1040,1041,1042],try_else_non:906,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[832,1065],tune_dev_alloc:832,tune_dev_split:832,tune_node_alloc:1065,tune_node_split:1065,tune_step:[832,1065],tupl:[15,16,17,18,19,40,41,43,788,789,830,831,906,925,942,943,987,1005,1065,1109,1110,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1123,1128,1130,1131,1132,1133,1134,1135,1136],two:[40,41,906,909,915,928,966,994,1031,1034,1036],type:[15,18,40,41,42,43,59,370,371,775,776,778,779,788,789,791,816,832,844,845,846,847,859,860,864,876,882,886,887,888,892,893,894,895,896,897,898,905,906,907,909,914,920,924,926,936,940,941,943,952,959,972,973,974,979,993,1003,1006,1007,1008,1014,1019,1043,1053,1065,1171,1175,1177,1185,1187,1188,1190,1191,1193,1206,1207,1220],types_to_iteratively_nest:[40,41,42],uint8:[1024,1026,1030],uint8_img_to_float_img:1024,unchang:[15,16,17,18,19],unif:1065,unifi:[40,41,832,861,862,863,864,876,1065,1177],uniform:[40,41,1121,1122,1124,1125,1185,1187,1188,1191,1192],uniformli:[1121,1123,1125],unify_arrai:1065,unify_it:1065,unify_nest:1065,union:[15,18,19,40,41,43,368,370,371,774,775,776,778,779,788,789,791,816,830,831,832,850,855,856,857,858,876,877,882,886,887,888,892,893,894,895,896,897,898,905,906,907,908,909,911,912,913,914,915,916,918,920,921,922,923,924,925,927,928,929,930,933,934,935,936,938,939,940,941,942,943,944,945,949,951,952,953,960,961,962,963,964,966,967,968,969,972,973,974,977,978,979,980,981,986,987,988,989,992,994,995,997,998,999,1000,1002,1003,1004,1005,1006,1007,1065,1109,1110,1111,1117,1118],uniqu:[832,841,842,1061,1062,1063,1064,1065,1109,1113],unique_kwarg:1065,unit:[832,1043,1044,1046,1065,1138,1139,1140,1141],unitari:[1031,1036],unless:[906,972,974,1007],unlik:[832,1065],unnorm:[1121,1122],unpack:[906,1002],unrol:[1146,1156],unset:1220,unset_debug_mod:44,unset_default_devic:832,unset_default_dtyp:882,unset_default_float_dtyp:882,unset_default_int_dtyp:882,unset_framework:[59,1220],unset_with_grad:1008,unstack:[40,41,113,266,397,509,624,906],unus:[830,831],updat:[40,41,832,841,906,957,980,981,1008,1010,1011,1013,1015,1016,1017,1061,1062,1063,1065,1109,1114,1115,1119,1120,1146,1156,1183,1184,1210,1211,1212,1213,1214,1215,1220,1223],update_backend:[40,41],update_config:[40,41],update_inference_tim:1171,upper:[40,41,1121,1125],upper_depth:[1206,1207],usabl:[1177,1223],usag:[832,876,1065],use:[40,41,42,43,832,841,842,867,879,906,977,990,991,1065,1146,1157,1163,1164,1177,1208,1209,1220,1223],used:[40,41,43,832,841,871,874,875,881,882,893,906,947,948,965,974,980,981,982,983,1007,1008,1015,1016,1031,1034,1061,1062,1063,1064,1065,1109,1118,1194,1205,1210,1212,1213,1219,1220],used_dev:[832,841],used_mem_on_dev:832,used_mem_on_nod:1065,used_node_str:1065,used_node_strs_dict:1065,useful:[40,41,832,876,1065,1146,1155,1177,1220],user:[1177,1194,1205,1206,1207,1220,1223],uses:1177,using:[40,41,1008,1010,1011,1109,1112,1116,1128,1129,1146,1154,1158,1177,1194,1202,1219,1220,1223],util:[832,865,1065],utility_funct:[788,789],v_with_top_v_key_chain:[1206,1207],val:[40,41,791,826,906,955,956,957,982,983,1175],valid:[788,789,882,887,906,990,991,1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201],valid_dtyp:882,valu:[40,41,832,844,875,876,906,907,909,911,912,913,921,922,923,925,926,932,936,942,943,944,945,960,961,963,964,967,969,976,977,978,979,980,981,982,983,984,1000,1003,1004,1005,1008,1012,1015,1024,1030,1031,1036,1039,1040,1041,1042,1043,1054,1055,1056,1061,1062,1063,1065,1109,1113,1114,1115,1119,1120,1121,1124,1125,1128,1130,1132,1146,1157,1158,1163,1164,1171,1194,1205,1208,1209,1210,1212],value_is_nan:906,vanilla:[1061,1063],var_shap:1185,variabl:[15,16,17,18,19,40,41,320,434,551,697,906,917,955,956,957,958,959,993,1008,1011,1012,1013,1014,1015,1016,1017,1019,1022,1061,1062,1063,1064,1146,1157,1163,1164,1183,1184,1185,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217],variable_data:[697,1008],varianc:[40,41,1128,1136,1223],varieti:1220,variou:[43,1177],vector:[40,41,906,923,928,1031,1036,1037,1038,1146,1155,1194,1204],vector_norm:[40,41,1031],vector_to_skew_symmetric_matrix:[156,329,443,560,707,1031],verbos:1222,veri:[43,1177],version:43,via:[1109,1110,1117,1220],view:[1024,1029],vision:1177,visual:1220,volum:[1146,1151],vw_tm1:[1008,1011,1015],wai:[1220,1223],wait:[40,41,42],want:[1177,1220,1223],warn:[59,66,67,68,69,70],warp:[1024,1025],watch:1219,weight:[1008,1010,1011,1013,1015,1016,1017,1146,1155,1156,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1206,1207,1210,1212,1213],weight_initi:[1194,1195,1196,1197,1198,1199,1200,1201,1203,1204],weights_path:[1206,1207],well:[40,41,906,951],were:[40,41,1065],what:1177,when:[40,41,42,43,832,906,919,991,1004,1031,1036,1065,1177,1206,1207,1220,1223],where:[40,41,43,266,624,788,789,791,816,906,909,918,921,925,938,953,960,961,972,1005,1031,1036,1109,1110,1117,1121,1122],wherea:43,wherebi:[1109,1118],whether:[15,18,19,40,41,42,788,789,830,831,832,850,863,867,871,876,879,881,882,892,896,897,898,905,906,908,915,916,929,932,937,942,949,951,954,958,959,965,986,993,1002,1003,1008,1011,1012,1013,1014,1015,1016,1017,1019,1061,1062,1063,1064,1065,1109,1110,1111,1113,1117,1118,1121,1122,1138,1139,1146,1154,1177,1183,1184,1194,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],which:[40,41,42,43,774,775,776,788,789,830,831,832,841,842,850,855,856,857,858,861,862,863,864,866,868,872,874,875,876,882,887,892,896,905,906,909,914,924,926,928,929,930,932,939,943,944,945,946,952,953,962,963,964,971,972,973,974,975,977,980,981,988,992,1002,1004,1006,1007,1008,1011,1012,1013,1015,1016,1017,1019,1021,1022,1024,1026,1031,1034,1037,1043,1049,1065,1109,1113,1114,1115,1119,1120,1121,1122,1123,1124,1125,1128,1130,1131,1132,1133,1134,1135,1136,1138,1143,1146,1157,1158,1177,1183,1184,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217,1219,1220],whitespac:[40,41,42],whose:[43,791,816,906,914,919,1128,1129,1130,1131,1132,1134,1136],why:[1177,1178],width:[1024,1029],wiki:1223,wikipedia:1223,window:[1024,1029,1146,1147,1148,1149,1150,1151,1152,1153,1194,1195,1196,1197,1198,1199,1200,1201],wise:[40,41,43,791,816,906,920,921,936,940,941,967,969,979,1008,1011,1013,1015,1017,1039,1040,1041,1042,1043,1044,1046,1048,1049,1051,1053,1054,1055,1056,1057,1059,1138,1139,1140,1141,1142,1143,1144,1145],wish:1220,with_arg_label:[1165,1167,1171,1206,1207],with_array_cach:[1165,1166,1167,1171],with_bia:[1194,1204],with_cal:[906,932],with_default_key_color:[40,41],with_edge_label:[1165,1167,1171,1206,1207],with_entries_as_list:[40,41],with_grad:[1008,1018,1206,1207],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1065,with_output_label:[1165,1167,1171,1206,1207],with_partial_v:[1206,1207],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,906,988,1065],with_to_kv_fn:[1194,1205],with_to_out_fn:[1194,1205],with_to_q_fn:[1194,1205],within:[15,18,19,906,909,1031,1036,1121,1125],without:[40,41,43,906,976,978,984,1109,1111,1220],wonder:1177,word:[15,16,17,906,909,1121,1125,1183,1184],work:[43,1219],worker:[832,841,842,1065],worker_class:[832,841,842,1065],worker_kwarg:1065,would:[43,906,913,1138,1143,1177,1220,1223],wrap:[15,40,41,42,43,906,919,1008,1022,1177],wrapper:43,write:[40,41,43,1177,1178,1223],written:[43,1177,1223],ws_new:[1008,1011,1013,1015,1016,1017],x1_i:[906,936,1043,1053],x2_i:[906,936,1043,1053],x_feat_dim:[1146,1157],x_i:[778,779],x_in:[1177,1219],x_inv:[1031,1033],x_max:[906,921],x_min:[906,921],x_sub:1065,xkk:1223,xkkm1:1223,xkm1km1:1223,xs0:1065,xs_t:1065,year:[1177,1223],yet:[1109,1118,1223],yield:[906,1004],you:[1177,1219,1220,1223],your:[1177,1219,1220,1223],your_awesome_project:1220,yourself:1177,zero:[40,41,77,113,266,397,509,624,788,789,906,925,972,974,980,981,1005,1007,1008,1010,1011,1015,1016,1146,1154,1177,1185,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1210,1211,1212,1213],zero_pad:[266,509,624,906],zeros_lik:[113,266,397,509,624,906],zip:1065,zk_e:1223},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":932,"function":[77,79,84,86,88,89,90,91,92,93,94,193,194,199,201,203,204,205,206,207,208,209,367,368,373,375,377,378,379,380,381,382,383,474,475,480,482,484,485,486,487,488,489,490,588,589,594,596,598,599,600,601,602,603,604,773,774,778,780,782,783,784,785,786,787,788],Ones:1190,Using:1220,abs:[267,510,625,907],aco:[719,1044],acosh:[720,1045],activ:[177,354,460,580,751,1138,1180],adam:1211,adam_step:1010,adam_upd:1011,algebra:[87,88,202,203,376,377,483,484,597,598,781,782],all:[95,210,384,491,605,789],all_equ:908,all_nested_indic:1110,api:[0,43,75,97,191,212,365,386,472,493,586,607,771],arang:[114,268,398,511,626,909],arg_nam:910,argmax:[115,399,512,627,911],argmin:[116,400,513,628,912],args_to_ivi:16,args_to_n:17,argsort:[629,913],arithmet:[1,98,213,387,494,608],arrai:[0,3,43,75,96,97,99,117,191,211,212,214,221,269,365,385,386,388,401,472,492,493,495,514,586,606,607,609,630,771,791,914],array_equ:[270,631,915],arrays_equ:916,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[721,1046],asinh:[722,1047],assert_supports_inplac:917,atan2:[724,1049],atan:[723,1048],atanh:[725,1050],attribut:[5,100,215,389,496,610],backend:[43,73],bilinear_resampl:[153,326,440,557,704,1025],binary_cross_entropi:1160,bitwis:[7,101,216,390,497,611],broadcast_to:[271,632,918],builder:51,builtin:[96,211,221,385,492,606,791],builtin_ab:[222,792],builtin_add:[223,793],builtin_and:[224,794],builtin_bool:[225,795],builtin_contain:[226,796],builtin_deepcopi:[227,797],builtin_dir:[228,798],builtin_eq:[229,799],builtin_float:[230,800],builtin_floordiv:[231,801],builtin_g:[232,802],builtin_getattr:[233,803],builtin_getattribut:[234,804],builtin_getitem:[235,805],builtin_gt:[236,806],builtin_int:[237,807],builtin_invert:[238,808],builtin_l:[239,809],builtin_lt:[240,810],builtin_mul:[241,811],builtin_n:[242,812],builtin_neg:[243,813],builtin_or:[244,814],builtin_po:[245,815],builtin_pow:[246,816],builtin_radd:[247,817],builtin_rand:[248,818],builtin_rfloordiv:[249,819],builtin_rmul:[250,820],builtin_ror:[251,821],builtin_rpow:[252,822],builtin_rsub:[253,823],builtin_rtruediv:[254,824],builtin_rxor:[255,825],builtin_setitem:[256,826],builtin_sub:[257,827],builtin_truediv:[258,828],builtin_xor:[259,829],cache_fn:919,cast:[118,272,402,515,633,886],ceil:[273,634,920],choleski:[708,1032],choose_random_framework:61,citat:1177,clear_framework_stack:62,clear_mem_on_dev:[618,848],clip:[274,635,921],clip_matrix_norm:922,clip_vector_norm:923,clone:1080,clone_arrai:1081,clone_it:1082,clone_nest:1083,clonedit:1067,cloneditem:1066,clonednest:1068,closest_valid_dtyp:887,code:1223,comparison:[9,102,217,391,498,612],compil:[275,403,636,830,831,1165],compile_graph:1166,concaten:[119,276,404,516,637,924],constant:[76,192,366,473,587,772],constant_pad:[277,517,638,925],contain:[40,41],container_typ:[639,926],content:1177,contribut:43,conv1d:[183,357,464,763,1147,1195],conv1d_transpos:[184,358,465,764,1148],conv1dtranspos:1196,conv2d:[185,359,466,582,765,1149,1197],conv2d_transpos:[186,360,467,766,1150],conv2dtranspos:1198,conv3d:[187,361,468,583,767,1151,1199],conv3d_transpos:[188,362,469,768,1152],conv3dtranspos:1200,convers:15,convert:[179,759,1183],convert_dtyp:888,copy_arrai:[640,927],copy_nest:1111,core:[105,220,394,501,615,790],cos:[726,1051],cosh:[727,1052],cprint:1222,creation:[77,193,367,474,588,773],cross:[278,641,928],cross_entropi:1161,cumprod:[120,279,405,642,929],cumsum:[643,930],current_framework:63,current_framework_str:[644,931],data:[79,83,194,198,368,372,475,479,589,593,774,777],debug_mod:45,debugg:44,default_devic:849,default_dtyp:889,default_float_dtyp:890,default_int_dtyp:891,default_nod:1084,depthwise_conv2d:[189,363,470,584,769,1153],depthwiseconv2d:1201,design:43,dev:[108,262,504,619,850],dev_clon:851,dev_clone_arrai:852,dev_clone_it:853,dev_clone_nest:854,dev_dist:855,dev_dist_arrai:856,dev_dist_it:857,dev_dist_nest:858,dev_from_str:[109,263,505,620,859],dev_to_str:[110,264,506,621,860],dev_unifi:861,dev_unify_arrai:862,dev_unify_it:863,dev_unify_nest:864,dev_util:865,devclonedit:835,devcloneditem:834,devclonednest:836,devdistit:838,devdistitem:837,devdistnest:839,devic:[20,106,260,395,502,616,832],devmapp:841,devmappermultiproc:842,distribute_nest:1085,divid:1053,document:1177,dropout:[1154,1202],dtype:[121,280,406,518,645,882,892],dtype_bit:[122,281,407,519,646,893],dtype_from_str:[123,282,408,520,647,894],dtype_to_str:[124,283,409,521,648,895],ecosystem:52,einops_rearrang:933,einops_reduc:934,einops_repeat:935,einsum:[169,345,452,572,743,1129],elementwis:[84,199,373,480,594,778],equal:[522,649,936],erf:[448,728,1054],execute_with_gradi:[150,321,435,552,698,1012],exist:937,exp:[729,1055],expand_dim:[284,650,938],extens:[87,202,376,483,597,781],finfo:[81,196,370,477,591,775],firstlayersiren:1187,flip:[125,285,410,523,651,939],float_img_to_uint8_img:1026,floor:[286,652,940],floormod:[287,653,941],fomaml_step:1062,fourier_encod:942,framework:59,full:[126,288,411,524,654,943],func:72,gather:[127,289,412,525,655,944],gather_nd:[128,290,413,526,656,945],geglu:1181,gelu:[355,461,752,1139,1182],gener:[22,113,266,397,509,624,906],get_all_arrays_in_memori:946,get_all_arrays_on_dev:866,get_framework:64,get_min_bas:947,get_min_denomin:948,get_num_dim:[657,949],get_referrers_recurs:950,global:1168,glorotuniform:1188,gpu_is_avail:[867,1086],gradient:[24,149,320,434,551,697,1008],gradient_descent_upd:1013,gradient_imag:[154,327,441,558,705,1027],graph:1171,gym:53,handler:59,has_nan:951,helper:1173,ident:[129,291,414,527,658,952],iinfo:[82,197,371,478,592,776],imag:[26,152,325,439,556,703,1024],index_nest:1112,indices_wher:[130,292,415,659,953],initi:1185,inplac:[11,103,218,392,499,613],inplace_arrays_support:954,inplace_decr:[131,293,416,528,660,955],inplace_incr:[132,294,417,529,661,956],inplace_upd:[133,295,418,530,662,957],inplace_variables_support:958,inv:[709,1033],invalid_dtyp:896,is_arrai:[134,296,419,531,663,959],is_float_dtyp:897,is_int_dtyp:898,is_vari:[151,322,436,553,699,1014],isfinit:[85,200,374,481,595,779],isinf:[297,532,664,960],isnan:[298,533,665,961],ivi:[43,50,51,52,53,54,55,56,57,58,770,1219,1220,1223],ivymodul:[180,760],jax:74,lamb:1212,lamb_upd:1015,lar:1213,lars_upd:1016,layer:[182,356,463,581,762,1146,1194],layer_norm:1164,layernorm:1209,leaky_relu:[753,1140],linalg:[28,156,329,443,560,707,1031],linear:[87,88,202,203,376,377,483,484,597,598,781,782,1155,1204],linear_resampl:[135,299,420,534,666,962],linspac:[136,300,421,535,667,963],log:[730,1056,1174],log_global_inference_abs_tim:1169,log_global_inference_rel_tim:1170,logic:[30,159,334,446,564,714,1039],logical_and:[335,715,1040],logical_not:[336,716,1041],logical_or:[337,717,1042],logspac:[137,301,422,536,668,964],loss:1159,lstm:1203,lstm_updat:1156,maml_step:1063,manipul:[89,204,378,485,599,783],map:1113,map_nest_at_index:1114,map_nest_at_indic:1115,match_kwarg:965,math:[32,160,338,447,565,718,1043],matmul:[302,537,669,966],matrix_norm:[157,330,444,561,710,1034],maximum:[670,967],mech:54,memori:55,meshgrid:[303,671,968],meta:[34,1061],method:[86,201,375,482,596,780],minimum:[672,969],model:56,modul:[1206,1207,1219],multi:1065,multi_head_attent:1157,multi_index_nest:1116,multidevcontain:42,multidevit:845,multidevitem:844,multidevnest:846,multiheadattent:1205,multinodeit:1071,multinodeitem:1070,multinodenest:1072,multinomi:[162,340,450,567,736,1122],multiprocess:[673,970],mxnet:190,nativ:1219,nest:1109,nested_indices_wher:1117,nested_map:1118,network:1219,next:1177,node:[1065,1087],node_dist:1088,node_dist_arrai:1089,node_dist_it:1090,node_str:1091,node_to_str:1092,node_util:1093,nodedistit:1074,nodedistitem:1073,nodedistnest:1075,nodemapp:1077,nodemappermultiproc:1078,norm:[1163,1208],num_arrays_in_memori:971,num_arrays_on_dev:868,num_cpu_cor:869,num_gpu:[111,870,1094],numpi:364,nutshel:1177,one_hot:[138,423,538,674,972],ones:[139,304,424,539,675,973],ones_lik:[140,305,425,540,676,974],oper:[1,3,7,9,11,13,43,98,99,101,102,103,104,213,214,216,217,218,219,387,388,390,391,392,393,494,495,497,498,499,500,608,609,611,612,613,614],optim:[1210,1214],optimizer_upd:1017,overview:1177,param:1175,percent_used_mem_on_dev:871,percent_used_mem_on_nod:1095,pinv:[331,711,1035],portabl:1223,print_all_arrays_in_memori:975,print_all_arrays_on_dev:872,profil:[107,261,396,503,617,847,1079],queue_timeout:976,randint:[163,341,568,737,1123],random:[36,161,339,449,566,735,1121],random_crop:1028,random_norm:[164,342,569,738,1124],random_uniform:[165,343,570,739,1125],reduce_max:[170,346,453,573,744,1130],reduce_mean:[171,347,454,574,745,1131],reduce_min:[172,348,455,575,746,1132],reduce_prod:[173,349,456,576,747,1133],reduce_std:[350,1134],reduce_sum:[174,351,457,577,748,1135],reduce_var:[175,352,458,578,749,1136],reduct:[38,168,344,451,571,742,1128],reflect:[13,104,219,393,500,614],relu:[754,1141],repeat:[306,677,977],reptile_step:1064,reshap:[678,978],robot:57,round:[307,679,979],run:1220,scaled_dot_product_attent:1158,scatter_flat:[141,308,426,541,680,980],scatter_nd:[142,309,427,542,681,981],search:[90,205,379,486,600,784],seed:[166,740,1126],sequenti:[1216,1217],set:[91,206,380,487,601,785],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:873,set_default_dtyp:899,set_default_float_dtyp:900,set_default_int_dtyp:901,set_default_nod:1096,set_exception_debug_mod:48,set_framework:65,set_min_bas:982,set_min_denomin:983,set_nest_at_index:1119,set_nest_at_indic:1120,set_queue_timeout:984,set_split_factor:[874,1097],set_tmp_dir:985,set_with_grad:1018,sgd:1215,shape:[682,986],shape_to_tupl:987,show_graph:1167,shuffl:[167,741,1127],sigmoid:[755,1142],signatur:[86,201,375,482,596,780],sin:[731,1057],sinh:[732,1058],siren:1191,softmax:[178,462,756,1143],softplu:[757,1144],sort:[92,207,381,488,602,786],sparse_cross_entropi:1162,split:[143,310,428,543,683,988],split_factor:[875,1098],split_func_cal:[876,1099],squeez:[144,311,429,544,684,989],stable_divid:990,stable_pow:991,stack:[312,685,992],stack_imag:[155,328,442,559,706,1029],statist:[93,208,382,489,603,787],stop_gradi:[323,437,554,700,1019],str_to_nod:1100,submodul:43,supports_inplac:993,svd:[332,562,712,1036],swapax:[545,686,994],tan:[733,1059],tanh:[734,758,1060,1145],tensorflow:471,tile:[313,546,687,995],tmp_dir:996,to_dev:[112,265,507,622,877],to_ivi:18,to_ivy_modul:[181,761,1184],to_list:[688,997],to_n:19,to_nod:1101,to_numpi:[689,998],to_scalar:[690,999],torch:585,total_mem_on_dev:878,total_mem_on_nod:1102,tpu_is_avail:[508,623,879,1103],train:1219,trainabl:1219,transpos:[145,314,430,691,1000],tree:1177,try_else_non:1001,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[79,83,194,198,368,372,475,479,589,593,774,777],uint8_img_to_float_img:1030,unifi:1104,unify_arrai:1105,unify_it:1106,unify_nest:1107,unset_debug_mod:49,unset_default_devic:880,unset_default_dtyp:902,unset_default_float_dtyp:903,unset_default_int_dtyp:904,unset_framework:71,unset_with_grad:1020,unstack:[146,315,431,547,692,1002],used_mem_on_dev:881,used_mem_on_nod:1108,util:[94,209,383,490,604,788],valid_dtyp:905,value_is_nan:1003,variabl:[324,438,555,701,1021],variable_data:[702,1022],vector_norm:1037,vector_to_skew_symmetric_matrix:[158,333,445,563,713,1038],verbos:1221,vision:58,where:[316,693,1004,1177],why:1223,with_grad:1023,wrapper:72,write:1220,zero:[78,147,318,432,549,695,1006,1193],zero_pad:[317,548,694,1005],zeros_lik:[148,319,433,550,696,1007]}})