Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[774,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[367,0,0,"-"],creation_functions:[368,0,0,"-"],data_type_functions:[370,0,0,"-"],data_types:[374,0,0,"-"],elementwise_functions:[375,0,0,"-"],function_and_method_signatures:[377,0,0,"-"],linear_algebra_extension:[378,0,0,"-"],linear_algebra_functions:[379,0,0,"-"],manipulation_functions:[380,0,0,"-"],searching_functions:[381,0,0,"-"],set_functions:[382,0,0,"-"],sorting_functions:[383,0,0,"-"],statistical_functions:[384,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{zeros:[369,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[370,1,1,""],finfo:[372,2,1,""],iinfo:[373,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[370,3,1,""],bits:[370,3,1,""],eps:[370,3,1,""],max:[370,3,1,""],min:[370,3,1,""],smallest_normal:[370,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[376,2,1,""]},"ivy.functional.ivy":{array_api:[775,0,0,"-"],core:[795,0,0,"-"],nn:[1142,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[776,0,0,"-"],creation_functions:[777,0,0,"-"],data_type_functions:[779,0,0,"-"],data_types:[782,0,0,"-"],elementwise_functions:[783,0,0,"-"],function_and_method_signatures:[785,0,0,"-"],linear_algebra_extension:[786,0,0,"-"],linear_algebra_functions:[787,0,0,"-"],manipulation_functions:[788,0,0,"-"],searching_functions:[789,0,0,"-"],set_functions:[790,0,0,"-"],sorting_functions:[791,0,0,"-"],statistical_functions:[792,0,0,"-"],utility_functions:[793,0,0,"-"]},"ivy.functional.ivy.array_api.creation_functions":{zeros:[778,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[780,2,1,""],iinfo:[781,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[784,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[794,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[796,0,0,"-"],compilation:[835,0,0,"-"],device:[837,0,0,"-"],dtype:[887,0,0,"-"],general:[911,0,0,"-"],gradients:[1013,0,0,"-"],image:[1029,0,0,"-"],linalg:[1036,0,0,"-"],logic:[1044,0,0,"-"],math:[1048,0,0,"-"],meta:[1066,0,0,"-"],multi_node:[1070,0,0,"-"],nest:[1114,0,0,"-"],random:[1126,0,0,"-"],reductions:[1133,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[797,2,1,""],builtin_add:[798,2,1,""],builtin_and:[799,2,1,""],builtin_bool:[800,2,1,""],builtin_contains:[801,2,1,""],builtin_deepcopy:[802,2,1,""],builtin_dir:[803,2,1,""],builtin_eq:[804,2,1,""],builtin_float:[805,2,1,""],builtin_floordiv:[806,2,1,""],builtin_ge:[807,2,1,""],builtin_getattr:[808,2,1,""],builtin_getattribute:[809,2,1,""],builtin_getitem:[810,2,1,""],builtin_gt:[811,2,1,""],builtin_int:[812,2,1,""],builtin_invert:[813,2,1,""],builtin_le:[814,2,1,""],builtin_lt:[815,2,1,""],builtin_mul:[816,2,1,""],builtin_ne:[817,2,1,""],builtin_neg:[818,2,1,""],builtin_or:[819,2,1,""],builtin_pos:[820,2,1,""],builtin_pow:[821,2,1,""],builtin_radd:[822,2,1,""],builtin_rand:[823,2,1,""],builtin_rfloordiv:[824,2,1,""],builtin_rmul:[825,2,1,""],builtin_ror:[826,2,1,""],builtin_rpow:[827,2,1,""],builtin_rsub:[828,2,1,""],builtin_rtruediv:[829,2,1,""],builtin_rxor:[830,2,1,""],builtin_setitem:[831,2,1,""],builtin_sub:[832,2,1,""],builtin_truediv:[833,2,1,""],builtin_xor:[834,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[836,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[837,1,1,""],DevClonedItem:[839,1,1,""],DevClonedIter:[840,1,1,""],DevClonedNest:[841,1,1,""],DevDistItem:[842,1,1,""],DevDistIter:[843,1,1,""],DevDistNest:[844,1,1,""],DevManager:[837,1,1,""],DevMapper:[846,1,1,""],DevMapperMultiProc:[847,1,1,""],MultiDev:[837,1,1,""],MultiDevItem:[849,1,1,""],MultiDevIter:[850,1,1,""],MultiDevNest:[851,1,1,""],Profiler:[852,1,1,""],clear_mem_on_dev:[853,2,1,""],default_device:[854,2,1,""],dev:[855,2,1,""],dev_clone:[856,2,1,""],dev_clone_array:[857,2,1,""],dev_clone_iter:[858,2,1,""],dev_clone_nest:[859,2,1,""],dev_dist:[860,2,1,""],dev_dist_array:[861,2,1,""],dev_dist_iter:[862,2,1,""],dev_dist_nest:[863,2,1,""],dev_from_str:[864,2,1,""],dev_to_str:[865,2,1,""],dev_unify:[866,2,1,""],dev_unify_array:[867,2,1,""],dev_unify_iter:[868,2,1,""],dev_unify_nest:[869,2,1,""],dev_util:[870,2,1,""],get_all_arrays_on_dev:[871,2,1,""],gpu_is_available:[872,2,1,""],num_arrays_on_dev:[873,2,1,""],num_cpu_cores:[874,2,1,""],num_gpus:[875,2,1,""],percent_used_mem_on_dev:[876,2,1,""],print_all_arrays_on_dev:[877,2,1,""],set_default_device:[878,2,1,""],set_split_factor:[879,2,1,""],split_factor:[880,2,1,""],split_func_call:[881,2,1,""],to_dev:[882,2,1,""],total_mem_on_dev:[883,2,1,""],tpu_is_available:[884,2,1,""],unset_default_device:[885,2,1,""],used_mem_on_dev:[886,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[837,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[837,3,1,""],da_tune_step:[837,3,1,""],dim_size:[837,3,1,""],ds_tune_step:[837,3,1,""],map:[837,3,1,""],repeated_config_check:[837,3,1,""],tune_step:[837,3,1,""],tuned:[837,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[846,3,1,""],map:[846,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[847,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[837,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[849,3,1,""],items:[849,3,1,""],keys:[849,3,1,""],shape:[849,3,1,""],values:[849,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[850,3,1,""],at_dev:[850,3,1,""],at_devs:[850,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[851,3,1,""],at_dev:[851,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[852,3,1,""],start:[852,3,1,""],stop:[852,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[887,1,1,""],DefaultFloatDtype:[887,1,1,""],DefaultIntDtype:[887,1,1,""],astype:[887,2,1,""],cast:[891,2,1,""],closest_valid_dtype:[892,2,1,""],convert_dtype:[893,2,1,""],default_dtype:[894,2,1,""],default_float_dtype:[895,2,1,""],default_int_dtype:[896,2,1,""],dtype:[897,2,1,""],dtype_bits:[898,2,1,""],dtype_from_str:[899,2,1,""],dtype_to_str:[900,2,1,""],invalid_dtype:[901,2,1,""],is_float_dtype:[902,2,1,""],is_int_dtype:[903,2,1,""],set_default_dtype:[904,2,1,""],set_default_float_dtype:[905,2,1,""],set_default_int_dtype:[906,2,1,""],unset_default_dtype:[907,2,1,""],unset_default_float_dtype:[908,2,1,""],unset_default_int_dtype:[909,2,1,""],valid_dtype:[910,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[887,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[887,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[887,3,1,""]},"ivy.functional.ivy.core.general":{"default":[937,2,1,""],abs:[912,2,1,""],all_equal:[913,2,1,""],arange:[914,2,1,""],arg_names:[915,2,1,""],argmax:[916,2,1,""],argmin:[917,2,1,""],argsort:[918,2,1,""],array:[919,2,1,""],array_equal:[920,2,1,""],arrays_equal:[921,2,1,""],asarray:[911,2,1,""],assert_supports_inplace:[922,2,1,""],broadcast_to:[923,2,1,""],cache_fn:[924,2,1,""],ceil:[925,2,1,""],clip:[926,2,1,""],clip_matrix_norm:[927,2,1,""],clip_vector_norm:[928,2,1,""],concatenate:[929,2,1,""],constant_pad:[930,2,1,""],container_types:[931,2,1,""],copy_array:[932,2,1,""],cross:[933,2,1,""],cumprod:[934,2,1,""],cumsum:[935,2,1,""],current_framework_str:[936,2,1,""],einops_rearrange:[938,2,1,""],einops_reduce:[939,2,1,""],einops_repeat:[940,2,1,""],equal:[941,2,1,""],exists:[942,2,1,""],expand_dims:[943,2,1,""],flip:[944,2,1,""],floor:[945,2,1,""],floormod:[946,2,1,""],fourier_encode:[947,2,1,""],full:[948,2,1,""],gather:[949,2,1,""],gather_nd:[950,2,1,""],get_all_arrays_in_memory:[951,2,1,""],get_min_base:[952,2,1,""],get_min_denominator:[953,2,1,""],get_num_dims:[954,2,1,""],get_referrers_recursive:[955,2,1,""],has_nans:[956,2,1,""],identity:[957,2,1,""],indices_where:[958,2,1,""],inplace_arrays_supported:[959,2,1,""],inplace_decrement:[960,2,1,""],inplace_increment:[961,2,1,""],inplace_update:[962,2,1,""],inplace_variables_supported:[963,2,1,""],is_array:[964,2,1,""],isinf:[965,2,1,""],isnan:[966,2,1,""],linear_resample:[967,2,1,""],linspace:[968,2,1,""],logspace:[969,2,1,""],match_kwargs:[970,2,1,""],matmul:[971,2,1,""],maximum:[972,2,1,""],meshgrid:[973,2,1,""],minimum:[974,2,1,""],multiprocessing:[975,2,1,""],num_arrays_in_memory:[976,2,1,""],one_hot:[977,2,1,""],ones:[978,2,1,""],ones_like:[979,2,1,""],print_all_arrays_in_memory:[980,2,1,""],queue_timeout:[981,2,1,""],repeat:[982,2,1,""],reshape:[983,2,1,""],round:[984,2,1,""],scatter_flat:[985,2,1,""],scatter_nd:[986,2,1,""],set_min_base:[987,2,1,""],set_min_denominator:[988,2,1,""],set_queue_timeout:[989,2,1,""],set_tmp_dir:[990,2,1,""],shape:[991,2,1,""],shape_to_tuple:[992,2,1,""],split:[993,2,1,""],squeeze:[994,2,1,""],stable_divide:[995,2,1,""],stable_pow:[996,2,1,""],stack:[997,2,1,""],supports_inplace:[998,2,1,""],swapaxes:[999,2,1,""],tile:[1000,2,1,""],tmp_dir:[1001,2,1,""],to_list:[1002,2,1,""],to_numpy:[1003,2,1,""],to_scalar:[1004,2,1,""],transpose:[1005,2,1,""],try_else_none:[1006,2,1,""],unstack:[1007,2,1,""],value_is_nan:[1008,2,1,""],where:[1009,2,1,""],zero_pad:[1010,2,1,""],zeros:[1011,2,1,""],zeros_like:[1012,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1013,1,1,""],adam_step:[1015,2,1,""],adam_update:[1016,2,1,""],execute_with_gradients:[1017,2,1,""],gradient_descent_update:[1018,2,1,""],is_variable:[1019,2,1,""],lamb_update:[1020,2,1,""],lars_update:[1021,2,1,""],optimizer_update:[1022,2,1,""],set_with_grads:[1023,2,1,""],stop_gradient:[1024,2,1,""],unset_with_grads:[1025,2,1,""],variable:[1026,2,1,""],variable_data:[1027,2,1,""],with_grads:[1028,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1013,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1030,2,1,""],float_img_to_uint8_img:[1031,2,1,""],gradient_image:[1032,2,1,""],random_crop:[1033,2,1,""],stack_images:[1034,2,1,""],uint8_img_to_float_img:[1035,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1037,2,1,""],inv:[1038,2,1,""],matrix_norm:[1039,2,1,""],pinv:[1040,2,1,""],svd:[1041,2,1,""],vector_norm:[1042,2,1,""],vector_to_skew_symmetric_matrix:[1043,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1045,2,1,""],logical_not:[1046,2,1,""],logical_or:[1047,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1049,2,1,""],acosh:[1050,2,1,""],asin:[1051,2,1,""],asinh:[1052,2,1,""],atan2:[1054,2,1,""],atan:[1053,2,1,""],atanh:[1055,2,1,""],cos:[1056,2,1,""],cosh:[1057,2,1,""],divide:[1058,2,1,""],erf:[1059,2,1,""],exp:[1060,2,1,""],log:[1061,2,1,""],sin:[1062,2,1,""],sinh:[1063,2,1,""],tan:[1064,2,1,""],tanh:[1065,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1067,2,1,""],maml_step:[1068,2,1,""],reptile_step:[1069,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1070,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1115,2,1,""],copy_nest:[1116,2,1,""],index_nest:[1117,2,1,""],map:[1118,2,1,""],map_nest_at_index:[1119,2,1,""],map_nest_at_indices:[1120,2,1,""],multi_index_nest:[1121,2,1,""],nested_indices_where:[1122,2,1,""],nested_map:[1123,2,1,""],set_nest_at_index:[1124,2,1,""],set_nest_at_indices:[1125,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1127,2,1,""],randint:[1128,2,1,""],random_normal:[1129,2,1,""],random_uniform:[1130,2,1,""],seed:[1131,2,1,""],shuffle:[1132,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1134,2,1,""],reduce_max:[1135,2,1,""],reduce_mean:[1136,2,1,""],reduce_min:[1137,2,1,""],reduce_prod:[1138,2,1,""],reduce_std:[1139,2,1,""],reduce_sum:[1140,2,1,""],reduce_var:[1141,2,1,""]},"ivy.functional.ivy.nn":{activations:[1143,0,0,"-"],layers:[1151,0,0,"-"],losses:[1164,0,0,"-"],norms:[1168,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1144,2,1,""],leaky_relu:[1145,2,1,""],relu:[1146,2,1,""],sigmoid:[1147,2,1,""],softmax:[1148,2,1,""],softplus:[1149,2,1,""],tanh:[1150,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1152,2,1,""],conv1d_transpose:[1153,2,1,""],conv2d:[1154,2,1,""],conv2d_transpose:[1155,2,1,""],conv3d:[1156,2,1,""],conv3d_transpose:[1157,2,1,""],depthwise_conv2d:[1158,2,1,""],dropout:[1159,2,1,""],linear:[1160,2,1,""],lstm_update:[1161,2,1,""],multi_head_attention:[1162,2,1,""],scaled_dot_product_attention:[1163,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1165,2,1,""],cross_entropy:[1166,2,1,""],sparse_cross_entropy:[1167,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1169,2,1,""]},"ivy.graph_compiler":{compiler:[1170,0,0,"-"],globals:[1173,0,0,"-"],graph:[1176,0,0,"-"],helpers:[1178,0,0,"-"],op_logging:[1179,0,0,"-"],param:[1180,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1171,2,1,""],show_graph:[1172,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1174,2,1,""],log_global_inference_rel_times:[1175,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1176,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1176,3,1,""],add_fn_to_dict:[1176,3,1,""],add_param:[1176,3,1,""],compiled:[1176,3,1,""],connect:[1176,3,1,""],debug_info:[1176,3,1,""],get_param:[1176,3,1,""],get_param_recursive:[1176,3,1,""],include_generators:[1176,3,1,""],increment_param_count:[1176,3,1,""],log_all_ops:[1176,3,1,""],params_all_empty:[1176,3,1,""],save_debug_info:[1176,3,1,""],set_param:[1176,3,1,""],show:[1176,3,1,""],show_debug_info:[1176,3,1,""],update_inference_times:[1176,3,1,""],with_array_caching:[1176,3,1,""]},"ivy.graph_compiler.param":{Param:[1180,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1180,3,1,""],count:[1180,3,1,""],depth:[1180,3,1,""],get:[1180,3,1,""],is_var:[1180,3,1,""],ptype:[1180,3,1,""],set:[1180,3,1,""],set_count:[1180,3,1,""],shape:[1180,3,1,""]},"ivy.stateful":{activations:[1185,0,0,"-"],converters:[1188,0,0,"-"],initializers:[1190,0,0,"-"],layers:[1199,0,0,"-"],module:[1211,0,0,"-"],norms:[1213,0,0,"-"],optimizers:[1215,0,0,"-"],sequential:[1221,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1186,1,1,""],GELU:[1187,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1186,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1187,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1189,2,1,""]},"ivy.stateful.initializers":{Constant:[1190,1,1,""],FirstLayerSiren:[1192,1,1,""],GlorotUniform:[1193,1,1,""],KaimingNormal:[1190,1,1,""],Ones:[1195,1,1,""],Siren:[1196,1,1,""],Uniform:[1190,1,1,""],Zeros:[1198,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1190,3,1,""],create_variables:[1190,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1192,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1193,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1190,3,1,""],create_variables:[1190,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1195,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1196,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1190,3,1,""],create_variables:[1190,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1198,3,1,""]},"ivy.stateful.layers":{Conv1D:[1200,1,1,""],Conv1DTranspose:[1201,1,1,""],Conv2D:[1202,1,1,""],Conv2DTranspose:[1203,1,1,""],Conv3D:[1204,1,1,""],Conv3DTranspose:[1205,1,1,""],DepthwiseConv2D:[1206,1,1,""],Dropout:[1207,1,1,""],LSTM:[1208,1,1,""],Linear:[1209,1,1,""],MultiHeadAttention:[1210,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1200,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1201,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1202,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1203,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1204,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1205,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1206,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1207,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1208,3,1,""],get_initial_state:[1208,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1209,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1210,3,1,""]},"ivy.stateful.module":{Module:[1212,1,1,""]},"ivy.stateful.module.Module":{__init__:[1212,3,1,""],build:[1212,3,1,""],build_mode:[1212,3,1,""],built:[1212,3,1,""],check_submod_rets:[1212,3,1,""],compile_graph:[1212,3,1,""],compile_on_next_step:[1212,3,1,""],get_mod_key:[1212,3,1,""],mod_depth:[1212,3,1,""],mod_height:[1212,3,1,""],mod_with_top_mod_key_chain:[1212,3,1,""],save_weights:[1212,3,1,""],show_graph:[1212,3,1,""],show_mod_in_top_mod:[1212,3,1,""],show_structure:[1212,3,1,""],show_v_in_top_v:[1212,3,1,""],sub_mods:[1212,3,1,""],track_submod_call_order:[1212,3,1,""],track_submod_rets:[1212,3,1,""],v_with_top_v_key_chains:[1212,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1214,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1214,3,1,""]},"ivy.stateful.optimizers":{Adam:[1216,1,1,""],LAMB:[1217,1,1,""],LARS:[1218,1,1,""],Optimizer:[1219,1,1,""],SGD:[1220,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1216,3,1,""],set_state:[1216,3,1,""],state:[1216,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1217,3,1,""],set_state:[1217,3,1,""],state:[1217,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1218,3,1,""],set_state:[1218,3,1,""],state:[1218,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1219,3,1,""],compile_graph:[1219,3,1,""],compile_on_next_step:[1219,3,1,""],set_state:[1219,3,1,""],show_graph:[1219,3,1,""],step:[1219,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1220,3,1,""],set_state:[1220,3,1,""],state:[1220,3,1,""]},"ivy.stateful.sequential":{Sequential:[1222,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1222,3,1,""]},"ivy.verbosity":{cprint:[1227,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1226,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1215,1216,1217],"02886":1182,"100":[1070,1182,1224],"2021":1182,"2102":1182,"360":[1048,1056,1062,1064],"754":[779,780],"999":[1013,1015,1016,1020,1215,1216,1217],"abstract":[837,852,1182,1215,1219],"boolean":[40,41,837,872,884,887,901,910,911,913,920,921,956,958,959,963,964,965,966,998,1008,1013,1019,1044,1045,1046,1047,1066,1067,1068,1070],"break":43,"case":[15,18,19,40,41,42,43,837,876,883,886,911,914,983,985,986,1036,1039,1042,1070,1114,1117,1121,1182,1199,1210,1211,1212,1215,1219,1228],"catch":[911,937],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,370,779,781,837,839,840,841,842,843,844,846,847,849,850,851,852,864,865,887,911,915,970,978,1013,1027,1070,1114,1116,1123,1164,1166,1167,1176,1180,1182,1185,1186,1187,1188,1189,1190,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1228],"default":[15,18,19,40,41,42,43,793,794,835,836,837,846,847,854,855,859,860,861,862,863,866,867,868,869,876,879,880,881,886,887,894,895,896,897,911,913,914,916,917,918,927,928,929,930,933,934,935,944,947,948,949,954,956,957,967,969,970,973,975,978,981,982,985,986,989,991,993,995,996,1005,1007,1008,1011,1013,1016,1018,1019,1020,1021,1022,1024,1028,1036,1039,1042,1066,1067,1068,1069,1070,1114,1115,1116,1118,1122,1123,1126,1127,1129,1130,1133,1135,1136,1137,1138,1139,1140,1141,1143,1144,1148,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],"final":[40,41,911,947,968,969,1070,1199,1210,1225],"float":[40,41,42,43,779,780,796,821,837,846,847,870,876,879,883,886,887,895,902,911,914,927,928,930,947,948,952,953,969,987,988,989,995,996,1013,1015,1016,1018,1020,1021,1022,1029,1031,1035,1048,1058,1066,1067,1068,1069,1070,1126,1129,1130,1143,1145,1151,1159,1162,1163,1164,1165,1166,1167,1168,1169,1199,1207,1210,1213,1214,1215,1216,1217,1218,1219,1220],"function":[15,40,41,43,369,372,373,376,778,780,781,784,794,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,842,843,844,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1182,1185,1186,1187,1215,1218,1219,1220,1224,1225,1228],"import":[43,1182,1225,1228],"int":[40,41,42,43,777,778,779,780,781,793,794,796,821,835,836,837,859,860,861,862,863,866,867,868,869,874,875,881,887,896,898,903,911,916,917,918,923,929,930,934,935,938,939,940,943,944,947,948,949,954,957,967,968,969,977,978,982,983,985,986,991,992,993,994,997,999,1000,1005,1007,1010,1011,1013,1015,1016,1020,1029,1033,1034,1036,1039,1042,1066,1067,1068,1069,1070,1114,1123,1126,1127,1128,1130,1131,1133,1135,1136,1137,1138,1139,1140,1141,1143,1148,1151,1152,1153,1154,1155,1156,1157,1158,1162,1164,1166,1167,1168,1169,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1213,1214],"long":[1151,1161],"new":[40,41,43,887,891,911,912,923,938,939,940,943,947,948,949,950,978,983,985,986,987,988,995,996,997,1011,1013,1016,1018,1020,1021,1022,1029,1031,1033,1035,1048,1050,1052,1055,1057,1063,1065,1070,1114,1124,1125,1126,1127,1168,1169,1182,1188,1189,1199,1209,1213,1214,1215,1216,1217,1218,1219,1220,1225,1228],"public":[911,931],"return":[15,16,17,18,19,40,41,42,43,779,780,781,783,784,793,794,796,821,835,836,837,846,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,872,873,875,876,880,881,882,883,884,886,887,891,892,893,894,895,896,897,898,899,900,901,902,903,910,911,912,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,954,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,982,983,984,985,986,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1114,1115,1116,1118,1122,1123,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1182,1188,1189,1199,1208,1209,1215,1219,1224,1225,1228],"short":[1151,1161,1182,1228],"static":[40,41,835,836],"super":1070,"true":[40,41,42,783,784,793,794,835,836,837,911,913,922,924,942,947,956,958,1008,1009,1013,1016,1018,1019,1020,1021,1022,1024,1036,1039,1042,1066,1067,1068,1069,1070,1114,1115,1122,1126,1127,1133,1135,1136,1137,1138,1139,1140,1141,1143,1144,1151,1159,1164,1165,1166,1167,1170,1171,1172,1176,1199,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220],"try":[40,41,911,1006,1070],"var":[40,41,1066,1067,1068,1228],"while":[40,41,42,1070],AND:[793,794,1044,1045],But:1228,For:[43,911,914,926,997,1013,1019,1027,1048,1049,1182,1188,1189,1225,1228],Its:[1048,1053],NOT:[1044,1046],One:[40,41,911,939,983,1126,1128,1228],Ones:[1182,1190],Such:[911,931],That:1225,The:[15,16,17,18,19,40,41,42,43,783,784,793,794,796,821,835,836,837,846,847,853,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,876,879,880,881,882,883,886,887,891,892,893,898,899,900,901,910,911,914,918,919,920,923,924,927,928,929,930,932,933,936,937,941,944,947,949,950,957,960,961,962,964,967,969,971,973,975,978,979,982,983,985,986,987,988,989,992,993,994,995,996,997,1000,1008,1011,1012,1013,1015,1016,1018,1020,1021,1022,1024,1027,1029,1031,1033,1035,1036,1039,1041,1048,1049,1051,1053,1056,1058,1059,1060,1061,1062,1064,1066,1067,1068,1069,1070,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1182,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1225,1228],There:[43,1182,1225],These:[43,1182],Used:[1114,1115,1122,1211,1212],Using:[1182,1183,1228],With:[40,41,1036,1039,1042,1133,1135,1136,1137,1138,1139,1140,1141,1182,1224,1228],__array__:[911,919],__call__:[1199,1210,1211,1212],__del__:1070,__dict__:[1070,1225],__enter__:1070,__exit__:1070,__getitem__:1070,__getstate__:1070,__init__:[40,41,42,43,59,60,80,196,370,371,479,594,837,838,845,846,847,848,849,850,851,852,887,888,889,890,1013,1014,1070,1074,1081,1176,1177,1180,1181,1182,1185,1186,1187,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1228],__iter__:1070,__len__:1070,__next__:1070,__pow__:43,__repr__:1070,_assign_vari:1224,_axi:1070,_base:[1114,1115,1122],_compute_node_da_ratio:1070,_compute_node_strs_da:1070,_concat_unify_arrai:1070,_counter:1070,_cur_framework:[43,1070],_da_direct:1070,_da_directions_flip:1070,_da_step_tim:1070,_da_tim:1070,_da_tune_count:1070,_data:1070,_delta_da_dim_s:1070,_delta_sf:1070,_dict:1070,_dim_siz:1070,_first_da_tune_step:1070,_first_ns_tune_step:1070,_fn:1070,_forward:[1182,1224],_get_kalman_param:1228,_get_prior:1228,_get_some_model:1228,_handle_flat_arrays_in_out:43,_index:[1114,1115,1122],_input_queu:1070,_length:1070,_max_depth:1070,_max_node_dim_step_ratio:1070,_max_node_dim_step_s:1070,_max_split_factor_step_s:1070,_mean_unify_arrai:1070,_min_bas:[911,996,1168,1169,1213,1214],_min_denomin:[911,995],_min_node_dim_s:1070,_min_sf_tune_step:1070,_min_unit_node_tune_step:1070,_model:1228,_native_wrapp:43,_node_mapp:1070,_node_percent_mem:1070,_node_str:1070,_node_str_da_ratio:1070,_node_strs_da:1070,_node_strs_kei:1070,_node_strs_n:1070,_node_util:1070,_ns_step_tim:1070,_ns_time:1070,_ns_tune_count:1070,_num_nod:1070,_num_work:1070,_observed_config:1070,_output_queu:1070,_paramet:1224,_percent_mem_inc_per_sf:1070,_percent_mem_inc_per_unit_da_dim:1070,_percent_util_inc_per_unit_da_dim:1070,_ret_fn:1070,_safety_factor:1070,_save_dir:1070,_shift_da_split:1070,_shift_n:1070,_slice:1070,_step:[1215,1219],_sum_unify_arrai:1070,_timeout:1070,_tune:1070,_tune_da:1070,_tune_n:1070,_tune_step:1070,_unit_da_tune_count:1070,_unroll_step:1228,_with_node_mappig:1070,_worker:1070,_worker_class:1070,_worker_fn:1070,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,837,846,852,1070,1211,1212,1215,1219],abil:1182,abl:[40,41],about:[779,780,781],abov:[43,1126,1128],above_height:[40,41],abs:[267,512,628,911,1070],absolut:[40,41,911,912],abstractmethod:1070,accept:[15,43,1182],access:[40,41,1225],accord:[40,41,779,780,911,930,949,985,986,1005,1010],accordingli:[793,794],accur:[59,370,837,849,850,851,852,887,1013,1176,1180,1190,1192,1193,1195,1196,1198],aco:[722,1048],acosh:[722,1048],across:[40,41,837,846,847,856,857,859,860,861,862,863,869,879,880,911,916,917,920,921,1070,1114,1118],activ:[1144,1145,1146,1147,1148,1149,1150,1182,1186,1187],actual:1225,adam:[1013,1015,1016,1020,1182,1215,1217,1224],adam_step:1013,adam_upd:1013,adapt:[1013,1021,1215,1218],add:[40,41,43,1070,1164,1165,1166,1167,1168,1169,1182,1213,1214,1225],add_fn_to_dict:1176,add_param:1176,added:[43,911,995,996,1221,1222],adding:[911,923],addit:[40,41,43,911,938,939,940,1168,1169,1199,1209],adher:43,adjac:[911,914],adopt:[911,931],affect:[911,914],affin:[1213,1214],after:[911,967,1013,1016,1017,1018,1020,1021,1022,1029,1030,1168,1169,1215,1216,1217,1218,1219,1220,1228],after_1:[911,930,1010],after_n:[911,930,1010],again:43,against:[40,41,1036,1039,1042,1133,1135,1136,1137,1138,1139,1140,1141],agnost:[43,1182,1224,1225],aim:1228,algebra:1036,algorithm:[1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206,1228],align:[40,41,43,911,923],aliv:[837,871,873,877,911,951,976,980],all:[15,16,17,18,19,40,41,43,94,210,385,493,608,793,835,836,837,846,871,877,911,912,913,920,921,931,944,951,957,980,994,1066,1067,1068,1069,1070,1114,1115,1116,1122,1123,1126,1127,1130,1133,1135,1136,1137,1138,1139,1140,1141,1151,1161,1182,1225,1228],all_depth:[40,41],all_equ:911,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1114,all_tru:[40,41],alloc:[837,1070],allow:[911,968,969,970,1211,1212],allow_dupl:[911,970],alon:[837,876,886,1070,1182],along:[40,41,43,793,794,837,860,861,862,863,866,867,868,869,881,911,918,929,934,935,944,949,967,968,969,982,993,997,1000,1007,1036,1039,1042,1066,1067,1068,1069,1070,1126,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141],alongsid:[1224,1225],alpha:[1143,1145],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,837,1070],also:[40,41,43,911,914,1013,1016,1066,1067,1068,1069,1114,1115,1116,1122,1123,1151,1160,1199,1209,1224],altern:1224,alwai:[40,41,43,1013,1019,1024],among:[40,41],amount:[837,883,1070,1182],angl:[1048,1049,1054],ani:[15,16,17,18,19,40,41,43,835,836,837,839,842,846,847,849,858,859,862,863,868,911,913,914,919,937,938,939,940,941,942,956,964,970,995,996,1013,1017,1070,1114,1115,1118,1122,1123,1124,1125,1126,1130,1182,1188,1189,1211,1212,1224,1225,1228],anoth:[40,41,887,893,1182],another_backend:43,anyth:[43,1228],anywai:43,apart:43,api:[1182,1183],appear:[911,943],append:[40,41,1070],appli:[15,18,19,40,41,911,938,939,940,1013,1020,1021,1036,1041,1044,1045,1046,1047,1066,1067,1068,1114,1118,1121,1123,1143,1144,1145,1146,1147,1148,1149,1150,1151,1160,1162,1163,1168,1169,1182,1185,1186,1187,1213,1214],applic:[1114,1118,1123,1151,1162,1163,1182,1228],approxim:[43,796,821,1143,1144],arang:[113,267,399,512,628,911,968,969],arbitrari:[40,41,837,866,867,869,1070],arc:[1048,1054],arcco:[1048,1049],arctan:[1048,1053],area:1182,arg:[15,16,17,40,41,43,59,63,837,846,859,863,869,881,911,938,939,940,986,1070,1170,1171,1172,1176,1188,1189,1211,1212],arg_nam:911,arg_stateful_idx:[1170,1171,1172,1176,1211,1212],argmax:[113,399,512,628,911],argmin:[113,399,512,628,911],args_clon:1070,args_dist:1070,args_to_ivi:[15,1182],args_to_n:[15,1182],args_uni:1070,argsort:[628,911],argument:[15,16,17,18,19,40,41,42,43,59,63,835,836,837,846,847,859,863,869,911,914,915,924,937,970,986,1048,1049,1070,1114,1118,1188,1189,1211,1212],aris:[1182,1228],arithmet:[43,1133,1136,1139,1141],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,113,267,399,512,628,777,778,779,780,781,783,784,793,794,821,837,855,856,857,860,861,862,863,866,867,868,869,871,873,877,881,882,887,891,897,902,903,911,912,913,914,916,917,918,920,921,922,923,925,926,927,928,929,930,932,933,934,935,938,939,940,941,943,944,945,946,947,948,949,950,951,954,956,957,958,959,960,961,962,964,965,966,967,968,969,971,972,973,974,976,977,978,979,980,982,983,984,985,986,991,993,994,997,998,999,1000,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1015,1016,1019,1020,1024,1026,1027,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1070,1114,1116,1123,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1182,1183,1199,1207,1208,1210,1215,1219,1224,1225],arrang:[911,938],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,368,369,370,372,373,375,376,777,778,779,780,781,783,784,793,794],array_builtin:[43,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834],array_equ:[267,628,911],array_lik:[911,919],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,911],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1182],arraywithgener:[22,1182],arraywithgradi:[24,1182],arraywithimag:[26,1182],arraywithlinalg:[28,1182],arraywithlog:[30,1182],arraywithmath:[32,1182],arraywithmeta:[34,1182],arraywithrandom:[36,1182],arraywithreduct:[38,1182],arriv:[40,41,42],articl:1182,arxiv:1182,as_arrai:[40,41,911,954,991],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[837,855,887,894,895,896,897],as_vari:[40,41],as_zero:[40,41],asarrai:911,asin:[722,1048],asinh:[722,1048],aspect:[1029,1034],assert:[40,41,911,922,1070],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:911,associ:[43,1036,1043],assum:[1225,1228],astyp:887,asynchron:[40,41,42],at_dev:[40,42,837,850,851],at_kei:[40,41],at_key_chain:[40,41],at_nod:1070,atan2:[722,1048],atan:[722,1048],atanh:[722,1048],attent:[1151,1162,1163,1199,1210],attribut:[0,6,40,41,779,780,781,911,979,1012],audienc:[1182,1225],author:1182,avail:[40,41,837,872,874,875,884,911,939,1070],averag:[1013,1015,1016,1020,1066,1067,1068,1133,1136],average_across_step:[1066,1067,1068],avoid:[837,1070,1225],axes:[40,41,43,793,794,837,881,911,916,917,930,943,944,999,1005,1010,1036,1039,1042,1070,1133,1135,1136,1137,1138,1139,1140,1141],axes_length:[40,41,911,938,939,940],axi:[40,41,793,794,837,839,842,849,860,861,862,863,866,867,868,869,881,911,916,917,918,929,930,933,934,935,943,944,949,967,968,969,982,993,994,997,999,1000,1007,1010,1036,1042,1070,1126,1132,1133,1135,1136,1137,1138,1139,1140,1141,1143,1148,1164,1166,1167],axis0:[40,41,911,999],axis1:[40,41,911,999],back:[1211,1212,1215,1219],backend:[15,17,19,40,41,368,369,370,372,373,375,376,837,872,875,884,887,893,901,910,911,959,963,1013,1016,1018,1020,1021,1022,1027,1070,1182,1183,1188,1189,1215,1216,1217,1218,1219,1220,1224,1225,1228],background:[1182,1225],backprop:1228,backward:[793,794,1224],band:[911,947],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,370,796,821,837,839,840,841,842,843,844,846,847,849,850,851,852,887,911,952,969,987,996,1013,1070,1133,1134,1176,1180,1182,1185,1186,1187,1190,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1228],batch:[40,41,837,879,880,911,944,947,957,1029,1033,1036,1041,1066,1067,1068,1069,1070,1151,1160,1168,1169,1213,1214],batch_shap:[911,944,957,977,1029,1030,1031,1032,1033,1034,1035,1036,1043,1126,1127,1151,1161,1162,1163,1199,1208],batch_siz:[1070,1126,1127,1151,1152,1153,1154,1155,1156,1157,1158],bayesian:1228,becaus:[43,911,914],becom:[911,926,1048,1054,1228],been:[911,938,939,940,1126,1127],befor:[40,41,43,837,881,1066,1067,1068,1070,1114,1123,1133,1135,1136,1137,1138,1139,1140,1141,1151,1162,1163,1228],before_1:[911,930,1010],before_n:[911,930,1010],begin:[1114,1115,1122,1225],behaviour:[43,1228],behind:[1013,1016,1018,1020,1021,1022,1182],being:[40,41,43,911,914,981,989,1070],belong:[40,41],below:[43,1182,1225,1228],below_depth:[40,41],benefit:1182,bernoul:[1151,1159,1199,1207],best:[911,970,1182],beta1:[1013,1015,1016,1020,1215,1216,1217],beta2:[1013,1015,1016,1020,1215,1216,1217],beta:[1168,1169],between:[40,41,42,779,780,911,914,1114,1118,1126,1128,1164,1166,1167,1215,1217],bia:[1151,1160,1161,1199,1200,1201,1202,1203,1204,1205,1206,1209],bias_initi:[1199,1200,1201,1202,1203,1204,1205,1206,1209],bilinear:[1029,1030],bilinear_resampl:[152,326,441,559,707,1029],bilinearli:[1029,1030],binari:[1164,1165],binary_cross_entropi:1164,bit:[370,779,780,781,887,898,1029,1031,1035,1182],bitwise_oper:[0,7,8],block:[1182,1225],bool:[15,18,19,40,41,42,43,783,784,793,794,835,836,837,855,868,872,876,881,884,886,887,897,911,913,920,921,934,937,941,942,947,954,956,964,970,991,993,1007,1008,1009,1013,1016,1017,1018,1019,1020,1021,1022,1024,1036,1039,1042,1066,1067,1068,1069,1070,1114,1115,1116,1118,1122,1123,1126,1127,1133,1135,1136,1137,1138,1139,1140,1141,1143,1144,1151,1159,1188,1189,1199,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220],both:[43,911,933],bottom:1182,boundari:[40,41,1126,1130],branch:[835,836],brittl:43,broadcast:[40,41,43,793,794,796,821,911,923,941,972,973,974,982,1036,1039,1042,1048,1054,1058,1133,1135,1136,1137,1138,1139,1140,1141],broadcast_to:[267,628,911],build:[1070,1182,1199,1210,1211,1212],build_mod:[1199,1210,1211,1212],builder:1182,built:[837,911,914,1070,1199,1210,1211,1212],builtin:43,builtin_ab:[222,796],builtin_add:[222,796],builtin_and:[222,796],builtin_bool:[222,796],builtin_contain:[222,796],builtin_deepcopi:[222,796],builtin_dir:[222,796],builtin_eq:[222,796],builtin_float:[222,796],builtin_floordiv:[222,796],builtin_g:[222,796],builtin_getattr:[222,796],builtin_getattribut:[222,796],builtin_getitem:[222,796],builtin_gt:[222,796],builtin_int:[222,796],builtin_invert:[222,796],builtin_l:[222,796],builtin_lt:[222,796],builtin_mul:[222,796],builtin_n:[222,796],builtin_neg:[222,796],builtin_or:[222,796],builtin_po:[222,796],builtin_pow:[43,222,796],builtin_radd:[222,796],builtin_rand:[222,796],builtin_rfloordiv:[222,796],builtin_rmul:[222,796],builtin_ror:[222,796],builtin_rpow:[222,796],builtin_rsub:[222,796],builtin_rtruediv:[222,796],builtin_rxor:[222,796],builtin_setitem:[222,796],builtin_some_op:43,builtin_sub:[222,796],builtin_truediv:[222,796],builtin_xor:[222,796],bypass:1225,cach:[837,853,911,924],cache_fn:911,calcul:[40,41,42,43,796,821,1048,1058],call:[43,837,881,911,981,989,1006,1013,1017,1070,1114,1115,1118,1122,1199,1210,1211,1212,1215,1219,1225,1228],callabl:[40,41,835,836,837,846,847,881,911,924,937,939,970,1006,1066,1067,1068,1069,1070,1114,1118,1119,1120,1122,1123,1151,1162],can:[43,837,879,880,881,911,983,1029,1031,1070,1182,1224,1225,1228],cancel_join_thread:1070,captur:1182,cast:[40,41,113,267,399,512,628,887,911,929,1029,1031,1035],catch_except:[911,937],categori:43,ceil:[267,628,911,914],cell:[1151,1161,1199,1208],certain:[40,41,911,914,968,969],chain:[40,41,1066,1067,1068,1221,1222],chang:[837,911,983,1070,1114,1116,1123,1182,1224],channel:[911,947,1029,1031,1032,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209],check:[15,16,17,18,19,40,41,837,876,886,887,892,901,910,911,922,942,956,964,998,1008,1013,1019,1070,1114,1115,1122,1182,1225],check_nest:[1114,1122],check_shap:[40,41],check_submod_ret:[1211,1212],check_typ:[40,41],choic:[1182,1225],choleski:[711,1036],choos:[911,1009,1048,1054,1182],choose_random_framework:59,chosen:[40,41,911,914,1009],chunk:[837,879,880,881,1070],chunk_siz:[837,881,1070],circl:[1048,1049,1051],clark:1182,clear:[837,853,1070],clear_framework_stack:59,clear_mem_on_dev:[620,837],click:1182,clip:[40,41,267,628,911,927,928,972,974,1182],clip_matrix_norm:911,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,911],clipped_delta:1070,clone:[40,41,837,856,857,858,859,1070],clone_arrai:1070,clone_it:1070,clone_nest:1070,clonedit:1070,cloneditem:1070,clonednest:1070,close:[43,1029,1034,1048,1051,1070,1228],closest:[887,892],closest_valid_dtyp:887,code:[40,41,42,43,1182,1183,1224,1225],codebas:[837,879,880,1070,1182,1225,1228],collect:[15,40,41,796,835,837,887,911,1013,1029,1036,1044,1048,1070,1114,1126,1133,1143,1151,1164,1168,1185,1199,1213,1215],color:[40,41,42,1226,1227],column:[911,957],combin:[40,41,42,1029,1034,1182,1228],combined_batch_s:1070,come:1225,command:1182,commit:1228,common:[40,41,1048,1054],common_key_chain:[40,41],commun:[1182,1225],compar:[40,41,911,913,920,921],comparison_oper:[0,9,10],compat:[43,793,794,796,821,911,941,983,1048,1058,1182,1228],compil:[267,399,628,1171,1172,1176,1182,1211,1212,1215,1216,1217,1218,1219,1220],compile_graph:[1170,1182,1211,1212,1215,1219],compile_on_next_step:[1211,1212,1215,1216,1217,1218,1219,1220],complet:[40,41,1070],complex:[1225,1228],compon:[911,933],composit:43,comput:[40,41,837,881,911,927,928,934,935,941,971,1013,1015,1016,1017,1018,1020,1021,1022,1024,1026,1029,1032,1036,1037,1038,1039,1040,1042,1044,1045,1046,1047,1048,1049,1051,1053,1054,1056,1059,1060,1061,1062,1064,1114,1118,1133,1134,1135,1136,1137,1138,1139,1140,1141,1151,1152,1153,1154,1155,1156,1157,1158,1160,1162,1164,1165,1166,1167],concat:[40,41,837,866,867,868,869,881,911,947,1070],concaten:[40,41,113,267,399,512,628,911,947,1070,1182],concatten:[40,41,837,866,867,868,869,881,1070],condit:[835,836,911,1009,1114,1122],conditon:[1114,1122],config:[40,41,1070],config_list:1070,configur:[40,41],conjunct:1225,connect:[1176,1199,1209,1210],consid:[40,41,1036,1042,1224,1228],consist:[40,41,837,869,1070,1133,1134,1211,1212,1225],constant:[837,846,847,911,930,1070,1114,1118,1164,1165,1166,1167,1168,1169,1190,1191,1195,1198,1211,1212,1213,1214,1225],constant_kwarg:1070,constant_pad:[267,512,628,911],constitu:[40,41],construct:[911,1000,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224],constructor:[40,41,42,911,915,1221,1222],consum:[837,1070],cont_feat_dim:[1151,1162],contaienr:[40,41],contain:[15,18,19,42,43,783,784,793,794,796,821,837,856,860,881,887,891,911,912,916,917,918,926,927,928,931,941,956,972,974,984,995,996,1013,1015,1016,1018,1020,1021,1022,1048,1058,1066,1067,1068,1069,1070,1126,1127,1133,1135,1136,1137,1139,1141,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[628,911],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[911,975,1151,1162,1199,1210],context_dim:[1199,1210],contextmanag:[59,60],continu:[43,1070,1225],contract:[40,41,1133,1134],contribut:[1182,1183],contributor:1182,control:1182,conv1d:[182,357,465,766,1151,1182,1199],conv1d_transpos:[182,357,465,766,1151],conv1dtranspos:[1182,1199],conv2d:[182,357,465,584,766,1151,1182,1199],conv2d_transpos:[182,357,465,766,1151],conv2dtranspos:[1182,1199],conv3d:[182,357,465,584,766,1151,1182,1199],conv3d_transpos:[182,357,465,766,1151],conv3dtranspos:[1182,1199],convent:[40,41,1133,1134],conver:[837,853,864,876,883,886,1070],convers:[16,17,18,19,40,41,1070,1182],convert:[15,16,17,18,19,40,41,43,837,864,865,887,893,899,900,911,992,1003,1004,1029,1031,1035,1036,1043,1070,1114,1116,1123,1182,1189],convert_dtyp:887,convolut:[1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206],cool:43,cooler:43,coordin:[911,973,1048,1049,1051,1054],copi:[40,41,911,932,1070,1114,1116],copy_arrai:[628,911],copy_nest:1114,core:[796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,842,843,844,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1182],correct:[43,1182,1225],correctli:[40,41,1036,1039,1042,1048,1054,1133,1135,1136,1137,1138,1139,1140,1141],correspond:[40,41,43,796,821,911,929,1126,1127],cos:[722,911,947,1048,1049,1064,1225],cosh:[722,1048],cosin:[1048,1049,1050,1056,1057],cost:[1013,1015,1016,1018,1020,1021,1022,1066,1067,1068,1069],cost_fn:[1066,1069],could:1228,count:[40,41,793,794,1070,1133,1138,1140,1180],cprint:1226,cpu:[40,41,43,837,874,876,882,883,886,911,914,919,949,950,957,968,969,977,978,979,985,986,1011,1012,1070,1126,1127,1128,1129,1130,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222,1224,1225],creat:[40,41,837,846,847,911,914,919,948,949,950,957,968,969,977,978,979,985,986,1002,1011,1012,1013,1026,1070,1126,1127,1128,1129,1130,1182,1188,1189,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1228],create_if_abs:[40,41],create_vari:1190,creation:[40,41,42,43],creation_funct:[368,369,777,778],crop:[1029,1033],crop_siz:[1029,1033],cross:[267,628,911,1164,1165,1166,1167],cross_entropi:1164,cuda:[40,41,837,846,865,882,911,914,919,949,950,957,968,969,977,978,979,985,986,1011,1012,1070,1126,1127,1128,1129,1130,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222],cumprod:[113,267,399,628,911],cumsum:[628,911],cumul:[911,934,935],current:[40,41,42,43,837,846,870,871,873,877,887,893,901,910,911,936,951,959,963,976,980,1070,1114,1115,1122,1182,1228],current_framework:59,current_framework_str:[628,911,1070],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1176,d_in:[1151,1152,1153,1154,1155,1156,1157],d_out:[1151,1152,1153,1154,1155,1156,1157],da_can_termin:1070,da_dim_s:[837,1070],da_direct:1070,da_tune_step:[837,1070],dai:1228,daniel:1182,data:[40,41,42,43,780,781,783,784,793,794,796,821,837,839,840,841,842,843,844,849,850,851,865,887,891,892,893,897,898,899,900,901,902,903,910,911,914,919,941,948,957,964,978,979,983,994,998,1011,1012,1013,1019,1027,1048,1058,1070,1151,1160,1182],data_format:[1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206],data_type_funct:[370,372,373,779,780,781],dataset:[40,41],datatyp:[40,41,887,892,902,903],dcdw:[1013,1015,1016,1018,1020,1021],debug_info:1176,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1013,1020,1021,1215,1217,1218],decay_lambda:[1013,1020,1021,1215,1217,1218],decid:[40,41,1228],decompos:[1036,1037],decomposit:[1036,1037,1041],decor:43,decrement:[911,960],dedic:[1013,1027,1188,1189],deep:[40,41,1182],deep_copi:[40,41],deeper:[837,859,863,869,1070,1114,1123,1182],deepli:[1114,1116],def:[43,60,80,196,371,479,594,838,845,848,888,889,890,1014,1070,1074,1081,1177,1181,1182,1191,1194,1197,1224,1225,1228],default_dev:43,default_devic:837,default_dtyp:[43,887],default_float_dtyp:887,default_int_dtyp:887,default_key_color:[40,41,42],default_nod:1070,default_v:[911,937],defaultdevic:[837,838],defaultdtyp:[887,888],defaultfloatdtyp:[887,889],defaultintdtyp:[887,890],defer:43,defin:[43,911,933,977,979,1012,1126,1128],degre:[1048,1056,1062,1064],del:1070,delta:[1013,1015,1070,1176],delta_dim_s:1070,delta_percent_mem:1070,delta_sf:1070,delta_util:1070,demo:1182,denomin:[911,946,953,988,995,996,1168,1169,1213,1214],dens:[1199,1209],depend:[43,796,821,911,1009,1036,1041,1182],depth:[40,41,837,859,863,869,911,955,977,1070,1114,1123,1176,1180,1211,1212],depth_cutoff:[40,41],depthwis:[1151,1158,1199,1206],depthwise_conv2d:[182,357,465,584,766,1151],depthwiseconv2d:[1182,1199],deriv:[1013,1015,1016,1018,1020,1021,1022,1114,1116,1123,1182,1211,1215,1219,1221],descend:[1036,1041],descent:[1013,1018,1215,1220],describ:[40,41,1133,1134],design:[1182,1183],desir:[40,41,837,882,887,891,911,914,919,957,958,978,979,1011,1012,1029,1034,1070,1133,1135,1136,1137,1139,1141],desired_aspect_ratio:[1029,1034],desired_percent_increas:1070,detail:1228,detect:[40,41,1114,1115,1122],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,783,784,793,794,796,821,837,872,874,875,884,887,891,892,898,901,902,903,910,911,913,914,919,920,921,956,959,963,964,998,1008,1013,1019,1048,1058,1066,1067,1068,1069,1070,1151,1162],dev:[40,41,42,43,106,261,505,620,777,778,837,840,841,843,844,846,847,850,851,853,854,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,873,876,877,878,879,880,881,882,883,886,911,914,919,949,950,957,968,969,977,978,979,985,986,1011,1012,1013,1028,1126,1127,1128,1129,1130,1188,1189,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222],dev_clon:[40,41,837],dev_clone_arrai:837,dev_clone_it:837,dev_clone_nest:837,dev_dist:[40,41,837],dev_dist_arrai:837,dev_dist_it:837,dev_dist_nest:837,dev_from_str:[43,106,261,505,620,837],dev_mapp:837,dev_str:[40,41],dev_to_str:[106,261,505,620,837],dev_unifi:837,dev_unify_arrai:837,dev_unify_it:837,dev_unify_nest:837,dev_util:837,devclonedit:837,devcloneditem:837,devclonednest:837,devdistit:837,devdistitem:837,devdistnest:837,develop:[1182,1225,1228],deviat:[40,41,1126,1129,1133,1139,1168,1169,1213,1214],devic:[21,40,41,43,777,778,839,840,841,842,843,844,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,911,914,919,948,949,950,957,968,969,977,978,979,985,986,1011,1012,1013,1028,1126,1127,1128,1129,1130,1182,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222],devmanag:[837,845],devmapp:[837,847],devmappermultiproc:837,diag:[1036,1041],diagon:[911,957],dict:[15,16,17,18,19,40,41,42,837,839,842,846,847,849,859,860,861,862,863,911,938,939,940,970,1066,1067,1068,1070,1114,1116,1117,1118,1121,1123,1188,1189],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,779,780,837,856,857,860,861,1070,1151,1160,1182,1225,1228],differenti:[1182,1225],dilat:[1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206],dim:[40,41,43,911,977,1029,1030,1034,1036,1041,1070,1199,1210],dim_siz:[40,41,837,1070],dimens:[40,41,42,793,794,837,868,911,923,929,933,938,939,940,943,947,954,967,977,982,983,993,994,997,1005,1007,1029,1033,1036,1039,1041,1042,1066,1067,1068,1069,1070,1126,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1148,1151,1152,1153,1154,1155,1156,1157,1158,1161,1164,1166,1167,1199,1200,1201,1202,1203,1204,1205,1206,1209,1210],dimension:[40,41,793,794,911,993,994,1036,1041],direct:1070,directli:[43,1114,1123,1225,1228],directori:[911,990,1001],discret:[1164,1166],disk:[40,41,1029,1031],distanc:[911,914],distribut:[40,41,837,856,860,861,862,863,1070,1126,1127,1128,1129,1130,1151,1159,1199,1207,1211,1212],distribute_nest:1070,distributedarrai:[40,41],distrubt:[1164,1166],dive:[1182,1225],divid:[40,41,911,993,995,1048],dividend:[1048,1058],divis:[911,946,953,988,995,996,1013,1015,1016,1020,1048,1058,1215,1216,1217],divisor:[1013,1015,1016,1020,1048,1058,1215,1216,1217],doc:1182,docstr:43,doe:[40,41,43,911,914,993,1224],doesn:1182,doing:43,domain:[1048,1049],don:1182,door:1228,dot:[1036,1038,1151,1162,1163,1199,1210],down:1224,downscal:[911,927,928],drag:[1182,1228],draw:[1126,1127,1129,1130],drawn:[1126,1127,1128,1129,1130],drop:[1182,1228],dropout:[1151,1182,1199,1210],dropout_r:[1199,1210],ds_tune_step:837,dtype:[40,41,43,113,267,368,369,370,372,373,399,512,628,777,778,779,780,781,891,892,893,894,895,896,898,899,900,901,902,903,904,905,906,907,908,909,910,911,914,919,948,957,977,978,979,1011,1012],dtype_bit:[113,267,399,512,628,887],dtype_from_str:[43,113,267,399,512,628,887],dtype_in:[887,893,898,899,900,901,902,903,910],dtype_to_str:[113,267,399,512,628,887],duplic:[40,41],dure:[40,41,43,835,836,911,1006,1013,1015,1016,1020,1066,1067,1068,1069,1211,1212,1215,1216,1217,1219],dynam:[835,836],each:[40,41,42,43,783,784,796,821,837,846,847,856,857,858,859,860,861,862,868,880,881,911,912,913,918,930,941,982,993,997,1000,1010,1013,1016,1018,1020,1021,1022,1029,1032,1036,1041,1048,1051,1058,1060,1061,1070,1114,1118,1126,1127,1133,1134,1151,1152,1153,1154,1155,1156,1157,1158,1159,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1225],eager:1225,easi:1228,easili:1182,econom:1228,ecosystem:1182,edg:[911,926,930,1010],effect:[1013,1022],effective_grad:[1013,1022],effici:1228,einop:[40,41,911,938,939,940],einops_rearrang:[40,41,911],einops_reduc:[40,41,911],einops_repeat:[40,41,911],einstein:[40,41,1133,1134],einsum:[40,41,168,345,453,574,746,1133],either:[40,41,911,937,970,973,975,1066,1067,1068,1069,1070,1199,1210,1211,1212,1225],eleg:1070,element:[40,41,43,783,784,793,794,796,821,837,858,862,868,887,891,911,912,914,916,917,918,920,921,925,926,927,928,934,935,941,944,945,946,957,958,972,974,982,984,993,1004,1009,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1070,1133,1134,1136,1138,1140,1143,1144,1145,1146,1147,1148,1149,1150,1151,1159,1199,1207],elementwis:[40,41],elementwise_affin:[1213,1214],elementwise_funct:[375,376,783,784],elemtn:[1126,1127],elif:1070,els:[911,922,937,942,1070],elsewher:[911,1009],emphas:1182,empti:[40,41,1070],enabl:[40,41,42,1182],encapsul:[779,781],encod:[911,947,1029,1031],end:[911,914,1182,1225],ensur:43,entir:[40,41,793,794,837,881,1070,1182,1199,1208],entri:[40,41,911,944,968,969,993,994],entropi:[1164,1165,1166,1167],enumer:1070,environ:1182,eps:[370,779,780],epsilon:[1013,1015,1016,1020,1164,1165,1166,1167,1168,1169,1213,1214,1215,1216,1217],equal:[40,41,512,628,783,784,911,913,920,921,930,993,1010,1048,1056,1062,1064,1126,1130],equality_matrix:[911,913],equat:[40,41,1133,1134],equival:[911,914,1048,1064],erf:[449,722,1048],error:[40,41,837,911,994,1048,1059,1070,1143,1144,1211,1212,1215,1219],essenti:43,etc:[40,41,43,837,882,911,914,919,949,950,957,968,969,977,978,979,985,986,1011,1012,1070,1126,1127,1128,1129,1130,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222,1228],evalu:[40,41,793,794,911,973,1114,1115,1122],even:1228,evenli:[40,41,911,914,968,969,993],everi:[911,913,1228],exact:[40,41],exampl:[43,835,836,911,926,997,1182,1224,1225,1228],example_input:[835,836],exc_tb:1070,exc_typ:1070,exc_val:1070,exce:[911,974],except:[40,41,44,47,793,794,911,914,922,929,937,1006,1070],excess_s:1070,excit:[1182,1225],exclud:[59,61,911,914,1126,1130],exclus:[40,41,911,934,964,1013,1019,1126,1128],execut:[43,911,1006,1225],execute_with_gradi:[149,321,436,554,701,1013,1182,1224],exist:[40,41,911,937,1070,1182,1215,1219,1228],exp:[722,1048],expand:[40,41,911,943,947],expand_dim:[40,41,267,628,911,1070],expect:[911,915],explain:1225,explicitli:[1199,1208,1210,1211,1212,1225],expon:[43,796,821,911,996],exponenti:[43,796,821,1048,1059,1060],expos:[911,919,931],express:[911,973],exsit:[40,41],extend:43,extra:[40,41,42,1013,1017],eye:[1036,1038],fabian:1182,fabio:1182,factor:[837,846,879,880,881,1013,1015,1016,1020,1021,1036,1041,1070,1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206,1215,1216,1217,1218],falck:1182,fall:[1211,1212,1215,1219],fallback_to_non_compil:[1211,1212,1215,1219],fals:[15,18,19,40,41,42,59,66,67,68,69,70,783,784,793,794,837,855,868,876,881,886,887,894,895,896,897,911,913,934,937,942,947,954,964,970,991,993,1007,1009,1013,1016,1017,1018,1019,1020,1021,1022,1036,1039,1042,1066,1067,1068,1069,1070,1114,1115,1116,1118,1122,1123,1133,1135,1136,1137,1138,1139,1140,1141,1170,1171,1172,1176,1180,1188,1189,1211,1212,1215,1216,1217,1218,1219,1220],fan_in:1190,fan_mod:1190,fan_out:1190,far:[1114,1115,1122,1224],faster:[835,836],favourit:[1182,1224],feasibl:1228,feat_dim:[1151,1162,1163],fed:[837,881,1070],feed:[837,881,1070],field:1228,file:[40,41,43,911,990,1001,1211,1212],filepath:[40,41],fill:[40,41,911,948,978,1011,1126,1128],fill_valu:[911,948],filter:[1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206,1228],filter_s:[1199,1200,1201],filter_shap:[1199,1202,1203,1204,1205,1206],find:[40,41,1228],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[79,80,195,196,370,371,478,479,593,594,779],finish:[1182,1228],finit:[783,784],first:[40,41,835,836,837,868,911,920,929,933,941,968,969,997,999,1013,1017,1036,1041,1066,1067,1068,1069,1070,1114,1115,1122,1126,1132,1133,1138,1140,1199,1210,1211,1212,1215,1219,1225,1228],firstlayersiren:[1182,1190],firstli:[1225,1228],fist:[837,881,1070],fit:[40,41,911,982,1029,1034],fkt:1228,flag:[40,41,1013,1019],flat:[40,41,43,911,982,985],flat_list:[40,41],flatten:[40,41,911,947,982,1036,1042,1133,1135,1136,1137,1139,1141],flatten_key_chain:[40,41,1211,1212],flexibl:[1182,1225],flip:[40,41,113,267,399,512,628,911],float32:[43,887,891,899,900,911,914,919,957,978,979,1011,1012],float_dtyp:[887,895,905],float_img_to_uint8_img:1029,floor:[267,628,911,946,1070],floormod:[267,628,911],fluid:1228,fname:[1170,1172,1176,1211,1212],folder:[43,1182],follow:[40,41,43,779,781,837,881,911,960,961,962,995,996,1013,1016,1018,1020,1021,1022,1070,1114,1118,1123,1151,1162,1163,1182,1199,1209,1215,1219],followng:[779,780],fomaml_step:1066,forget:[1013,1015,1016,1020,1215,1216,1217],fork:[911,975],forkserv:[911,975,1070],form:[15,16,17,18,19,40,41,911,919,1013,1016,1018,1020,1021,1022,1114,1116,1123,1151],format:[40,41,43,837,855,887,891,893,897,911,914,919,957,978,979,1011,1012,1070,1133,1134,1182,1224,1225],format_fn:[40,41],format_key_chain:[40,41],forward:[1211,1212,1215,1219,1224],found:[40,41,42],fourier:[911,947],fourier_encod:911,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,80,81,82,85,95,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,153,154,155,157,158,162,163,164,165,166,167,169,170,171,172,173,174,175,178,180,181,183,184,185,186,187,188,189,194,196,197,198,201,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,327,328,329,331,332,333,334,336,337,338,341,342,343,344,346,347,348,349,350,351,352,353,356,358,359,360,361,362,363,364,369,371,372,373,376,386,398,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,437,438,439,440,442,443,444,446,447,450,452,454,455,456,457,458,459,460,463,464,466,467,468,469,470,471,472,477,479,480,481,484,494,506,507,508,509,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,555,556,557,558,560,561,562,564,565,566,570,571,572,573,575,576,577,578,579,580,581,585,586,587,592,594,595,596,599,609,621,622,623,624,625,626,627,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,702,703,704,705,706,708,709,710,712,713,714,715,716,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,740,741,742,743,744,745,747,748,749,750,751,752,753,756,757,758,759,760,761,762,764,765,767,768,769,770,771,772,773,778,780,781,784,794,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1165,1166,1167,1169,1171,1172,1174,1175,1177,1181,1182,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1225,1227,1228],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1070,framewrk:[911,975],freeli:43,frequenc:[911,947],from:[40,41,42,43,793,794,837,846,847,881,887,893,911,937,944,949,950,957,983,994,1002,1009,1013,1016,1020,1029,1033,1066,1067,1068,1069,1070,1114,1116,1123,1126,1127,1128,1129,1130,1133,1138,1140,1151,1159,1162,1182,1188,1189,1199,1207,1210,1215,1219,1224,1225],from_cal:[1211,1212],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[113,267,399,512,628,779,780,911,1182],full_matric:[1036,1041],fulli:[43,1182,1199,1209,1210,1224],func:[40,41,835,836,837,881,911,924,1013,1017,1070],further:1228,furthermor:1228,futur:1228,gain:1190,gamma:[1168,1169],gather:[40,41,113,267,399,512,628,911,950],gather_nd:[40,41,113,267,399,512,628,911],gauss:[1048,1059],gaussian:[1143,1144],geglu:[1182,1185],gelu:[355,462,755,1143,1182,1185],gener:[23,40,41,43,835,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1019,1126,1128,1130,1131,1182,1215,1219],geometr:[911,947],get:[40,41,779,780,781,837,846,847,855,870,871,876,880,883,886,887,897,898,911,915,951,952,953,981,1070,1180,1182,1199,1208,1228],get_all_arrays_in_memori:911,get_all_arrays_on_dev:837,get_framework:59,get_initial_st:[1199,1208],get_min_bas:911,get_min_denomin:911,get_mod_kei:[1211,1212],get_num_dim:[628,911],get_param:1176,get_param_recurs:1176,get_referrers_recurs:911,getfullargspec:1070,gist:1182,give:[911,918,983,1225],given:[40,41,43,837,870,876,879,880,881,883,886,887,891,911,914,918,919,926,934,935,944,950,968,969,978,979,982,985,986,993,1000,1005,1007,1011,1012,1013,1015,1016,1018,1020,1021,1022,1036,1038,1043,1048,1049,1070,1114,1119,1120,1126,1129,1130,1132,1133,1136,1138,1139,1140,1141,1151,1152,1153,1154,1155,1156,1157,1158,1188,1189,1228],global:[40,41,42,837,846,847,854,879,880,881,887,894,895,896,911,936,952,953,981,987,988,989,995,996,1013,1028,1070,1168,1169,1174,1175,1182,1213,1214],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1182,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209],got:1182,gpu0:43,gpu2:43,gpu:[837,872,875,1070],gpu_is_avail:[837,1070],grad:[1182,1215,1219,1224],gradient:[25,40,41,837,881,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1032,1066,1067,1068,1069,1182,1215,1216,1217,1218,1219,1220,1224,1228],gradient_descent_upd:[1013,1066,1067,1068,1069],gradient_imag:[152,326,441,559,707,1029],gradienttrack:[1013,1014],graph:[1013,1016,1018,1020,1021,1022,1170,1171,1172,1177,1182,1211,1212],graph_compil:[1170,1171,1172,1173,1174,1175,1176,1180],greater:[40,41,911,914,945,994,1126,1130],green:[40,41,42,1226,1227],grid:[911,973],group:[1029,1034],guid:[1182,1183,1228],gym:1182,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1228,half:[911,914,1070,1126,1130],hand:1182,handl:[40,41,42,43,835,836,837,853,855,864,865,876,883,886,1013,1016,1018,1020,1021,1022,1070,1215,1216,1217,1218,1219,1220],has:[40,41,43,911,997,1048,1053],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,911],hasattr:1070,have:[40,41,43,779,780,783,784,793,794,796,821,911,929,933,938,939,940,941,948,997,1013,1019,1027,1036,1041,1048,1058,1070,1182,1224,1225],hdf5:[40,41,1211,1212],head:[1151,1162,1199,1210],head_dim:[1199,1210],height:[1029,1034],height_cutoff:[40,41],help:[59,370,837,849,850,851,852,887,1013,1176,1180,1182,1190,1192,1193,1195,1196,1198],helper:1182,here:[43,1182],hidden:[1151,1161,1199,1208],hierarch:[911,931],hierarchi:[40,41],high:[40,41,1126,1128,1130],higher:[1013,1016,1018,1020,1021,1022,1036,1041],highest:[1126,1128],highest_util:1070,highest_util_nod:1070,highli:1182,highlight:1228,highlight_subgraph:[1170,1172,1176],hint:43,hkt:1228,hold:[887,891,911,914,919,985,986],host:1182,hot:[911,977],how:[1182,1199,1210,1211,1212,1225,1228],howev:[43,1225],http:1228,hyperbol:[1048,1050,1052,1055,1057,1063,1065,1143,1150],hypothet:1228,icon:1182,idea:1182,ident:[40,41,43,113,267,399,512,628,911],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[779,780],if_exist:[40,41],ignor:[40,41,1215,1219],ignore_key_error:[40,41],ignore_miss:[1215,1219],ignore_non:[40,41],iinfo:[79,195,370,478,593,779],imag:[27,911,967,1030,1031,1032,1033,1034,1035,1151,1152,1153,1154,1155,1157,1158,1182,1228],image_dim:[1029,1033],imkkhk:1228,immedi:[1182,1225,1228],implement:[43,796,821,1182,1225,1228],in_featur:[1151,1160],includ:[40,41,43,793,794,911,914,956,995,996,1008,1114,1115,1126,1130,1199,1209,1210,1213,1214,1224],include_deriv:[1114,1116,1123],include_empti:[40,41],include_gener:[1170,1171,1172,1176,1211,1212],include_inf:[40,41,911,956,1008],include_nest:[1114,1115],include_self:[40,41],inclus:[1126,1128],incom:[1151,1160],increas:[837,859,863,869,911,930,943,1010,1070,1114,1123],increasingli:1228,increment:[911,961,1070],increment_param_count:1176,inde:1182,indent:[40,41,42],independ:[1126,1127],index:[40,41,911,916,917,949,950,973,994,997,1114,1117,1119,1120,1121,1124],index_nest:1114,indic:[40,41,911,916,917,918,949,950,958,977,985,986,1114,1115,1117,1119,1120,1121,1122,1124,1125,1126,1127,1143,1148,1151,1152,1153,1154,1155,1156,1157,1158,1168,1169,1199,1200,1201,1202,1203,1204,1205,1206,1211,1212],indices_wher:[113,267,399,628,911],inevit:1228,inf:[40,41,911,956,965,1008,1048,1053],infer:[835,836,911,944,954,957,983,991,1029,1033,1225,1228],infin:[783,784,911,965],inform:[779,780,781,1013,1024],init_c:[1151,1161],init_h:[1151,1161],init_on_first_step:[1215,1219],initi:[40,41,42,59,370,837,849,850,851,852,887,1013,1070,1151,1161,1176,1180,1182,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1215,1219],initialz:[1211,1212],inner:[1066,1067,1068,1069],inner_batch_fn:[1066,1067,1068],inner_batch_shap:[1151,1160],inner_cost_fn:[1066,1067,1068],inner_grad_step:[1066,1067,1068,1069],inner_learning_r:[1066,1067,1068,1069],inner_optimization_step:[1066,1067,1068,1069],inner_v:[1066,1067,1068],inp:1070,inplac:[40,41,911,922,959,963,998,1013,1016,1018,1020,1021,1022,1188,1189,1215,1216,1217,1218,1219,1220],inplace_arrays_support:911,inplace_decr:[113,267,399,512,628,911],inplace_incr:[113,267,399,512,628,911],inplace_oper:[0,11,12],inplace_upd:[40,41,113,267,399,512,628,911,1188,1189],inplace_variables_support:911,input:[15,18,19,40,41,42,43,783,784,793,794,835,836,837,846,847,854,855,856,859,860,863,869,881,882,887,891,892,894,895,896,897,898,902,903,911,912,913,916,917,918,920,921,922,923,925,926,927,928,929,930,932,934,935,937,938,939,940,941,942,943,944,945,946,947,954,956,957,958,960,961,962,964,965,966,967,971,972,973,974,982,984,991,992,994,997,998,999,1000,1002,1003,1004,1005,1007,1008,1010,1013,1017,1019,1024,1028,1029,1030,1031,1032,1033,1035,1036,1039,1041,1042,1044,1045,1046,1047,1048,1050,1052,1053,1055,1056,1057,1058,1062,1063,1064,1065,1066,1067,1068,1069,1070,1126,1127,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1168,1169,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1213,1214,1225],input_ax:[837,881,1070],input_channel:[1199,1200,1201,1202,1203,1204,1205,1208,1209],input_queu:1070,inputs_split:1070,insert:[911,943],insid:43,inspect:1070,inspir:1228,instal:1182,instanc:[15,16,17,18,19,40,41,43,796,821,837,846,1070,1188,1189,1221,1222],instead:[40,41,1133,1135,1136,1137,1138,1139,1140,1141,1228],int32:43,int64:[887,891,911,914,919,957,978,979,1011,1012],int_dtyp:[887,896,906],integ:[40,41,779,781,793,794,887,903,911,914,925,945,984,993,1036,1042,1126,1128,1131],integr:1182,intend:43,inter:1182,interchang:[40,41,911,999],interest:1182,interfac:[911,919,1225],intermedi:[40,41],intern:[40,41,837,1013,1027,1070,1114,1115,1122,1123,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1221,1222],interpol:[911,967],intersect:[1048,1049],interv:[40,41,793,794,911,914,926,968,969,1048,1051,1126,1130],introduc:1228,inv:[711,1036,1228],invalid:[793,794],invalid_dtyp:887,invers:[1036,1038,1040,1048,1049,1050,1051,1052,1053,1055,1228],invert:[1036,1038,1040],invest:1228,invoc:[835,836],irrespect:1182,is_al:1070,is_arrai:[113,267,399,512,628,911,1070],is_float_dtyp:887,is_int_dtyp:887,is_mean:1070,is_sum:1070,is_var:[1176,1180],is_vari:[149,321,436,554,701,1013],isfinit:[84,200,375,483,598,783],isinf:[267,512,628,911],isinst:1070,isnan:[267,512,628,911],isnumer:1070,item:[15,19,40,41,796,808,809,837,846,847,849,856,858,860,862,868,887,894,911,931,955,995,996,1070,1114,1118,1119,1120,1123,1124,1125,1182,1211,1212,1224],iter:[15,16,17,18,19,40,41,42,777,778,835,836,837,840,841,843,844,846,847,850,851,858,860,861,862,863,868,881,911,913,923,929,930,944,957,973,978,982,983,986,991,993,997,1000,1005,1010,1011,1070,1114,1115,1116,1118,1122,1123],iterbal:[837,858,862,868,1070],its:[837,881,911,918,957,983,999,1005,1070,1182],itself:[43,1114,1123],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,368,369,370,372,373,375,376,777,778,779,780,781,783,784,793,794,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,842,843,844,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1180,1182,1183,1185,1186,1187,1188,1189,1190,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1226,1227],ivy_backend:[40,41],ivy_bay:1228,ivyfcmodel:1224,ivyh:[40,41,42],ivymodul:[179,763],jame:1182,jax:[1013,1019,1182,1228],jax_concat:1182,jnp:1182,join:[40,41,911,929,997,1070],journal:1182,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1182,1199,1208,1228],kaimingnorm:[1190,1194],kalman:1228,kalman_filt:1228,kalman_filter_step:1228,kalman_filter_upd:1228,keep:[40,41,837,882,911,1007,1070,1182,1228],keep_inner_v:[1066,1067,1068],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1066,1067,1068],keepdim:[40,41,793,794,911,1007,1036,1039,1042,1133,1135,1136,1137,1138,1139,1140,1141],kei:[15,16,17,40,41,42,796,801,837,849,911,931,1066,1067,1068,1070,1114,1117,1121,1151,1162,1163,1182,1188,1189,1199,1210,1215,1219],kept:[40,41,42,1066,1067,1068],kera:1228,kernel:[1151,1161],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,837,846,847,859,863,869,911,915,938,939,940,970,1070,1114,1118,1211,1212],keyword_color_dict:[40,41,42],kind:[779,780,781,1228],kwarg:[15,16,17,40,41,42,59,63,837,846,859,863,869,911,970,1070,1170,1171,1172,1176,1188,1189,1211,1212],kwarg_stateful_idx:[1170,1171,1172,1176,1211,1212],kwargs_clon:1070,kwargs_dist:1070,kwargs_uni:1070,label:[1164,1165,1166,1167],lamb:[1013,1020,1182,1215],lamb_upd:1013,lambda:[1070,1215,1218,1220,1224],lar:[1013,1020,1021,1182,1215],larger:[779,780,911,926],largest:[40,41,779,780,781,911,916,945],lars_upd:1013,last:[40,41,793,794,911,914,933,967,993,997,1036,1039,1041,1133,1138,1140,1143,1148,1151,1161,1199,1209],later:[40,41,911,924],latest:[1199,1208],layer:[1013,1016,1018,1020,1022,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1168,1169,1182,1190,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222,1228],layer_norm:1168,layernorm:[1182,1213],layerwis:[1013,1021,1215,1218],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1114,1115,1122],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1143,1144,1145],leaky_relu:[755,1143],learn:[1013,1016,1018,1020,1021,1022,1066,1067,1068,1069,1126,1132,1182,1215,1216,1217,1218,1219,1220,1225,1228],learnabl:[1168,1169,1213,1214],leav:[15,18,19,40,41,1114,1115,1116,1122,1123],left:[40,41,1036,1039,1042,1133,1135,1136,1137,1138,1139,1140,1141,1182],leftmost:[40,41],len:1070,length:[40,41,42,911,914,983,994,1005],lenton2021ivi:1182,lenton:1182,less:[40,41,43,911,925,1070,1126,1130],less_util_node_str:1070,let:[1225,1228],level:1182,librari:[1182,1224,1228],lightweight:1182,like:[43,1013,1019,1126,1130,1182,1224,1225,1228],limit:[40,41,42,779,780,781,911,926,927,928],linalg:[29,1037,1038,1039,1040,1041,1042,1043,1182],linear0:[1182,1224],linear1:1182,linear2:1224,linear:[911,947,967,1036,1143,1144,1145,1146,1151,1159,1182,1199,1200,1201,1202,1203,1204,1205,1206,1224],linear_resampl:[113,267,399,512,628,911],linearli:[911,947],link:1182,linspac:[113,267,399,512,628,911,914],list:[15,18,19,40,41,43,793,794,837,846,847,856,857,859,860,861,863,866,867,881,911,914,919,921,973,992,993,1002,1007,1066,1067,1068,1070,1114,1115,1116,1118,1122,1123,1151,1152,1153,1154,1155,1156,1157,1158,1182,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206],list_join:[40,41,42],list_stack:[40,41],littl:1225,load:[40,41],loaded_kwarg:1070,loader:1182,local_set:[911,955],locat:[43,911,965,966,1126,1127],log:[722,911,969,1048,1070,1164,1165,1166,1167,1182],log_all_op:1176,log_global_inference_abs_tim:[1173,1182],log_global_inference_rel_tim:[1173,1182],logarithm:[1048,1061],logic:[31,793,794,1045,1046,1047,1182],logical_and:[335,718,1044],logical_not:[335,718,1044],logical_or:[335,718,1044],logit:[1164,1167],logspac:[113,267,399,512,628,911],look:[43,1225,1228],loop:[1066,1067,1068,1069],loss:[1165,1166,1167,1182,1224],loss_fn:[1182,1224],lot:1225,low:[40,41,1126,1128,1130],lower:[40,41,911,972,1126,1130],lower_depth:[1211,1212],lowest:[15,18,19,40,41,1114,1123,1126,1128],lstm:[1151,1161,1182,1199],lstm_updat:[43,1151],machin:[779,780,781,1126,1132,1182,1225,1228],mai:[911,914,937,941,1182,1225,1228],main:[911,957,1182],mainli:1182,make:[43,837,1070,1182,1225],maml:[1066,1067,1068],maml_step:1066,manag:[837,1070],mani:[40,41,43,911,993,1182],manner:[15,18,19,40,41,43,1114,1123],manual:[1114,1115,1122,1228],map:[40,41,42,837,846,911,965,966,1070,1114,1119,1120,1123,1199,1210,1224],map_cont:[40,41],map_nest_at_index:1114,map_nest_at_indic:1114,map_sequ:[40,41],mapper:[837,846,847,1070],mask:[1151,1162,1163],match:[40,41,911,970],match_kwarg:911,math:[33,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1070,1182],mathbb:[1036,1043],mathbf:[1036,1043],matmul:[43,267,512,628,911,1228],matplotlib:1225,matric:[1151,1160],matrix:[40,41,911,913,927,971,1036,1037,1038,1039,1040,1043,1151,1160,1199,1209],matrix_norm:[40,41,156,330,445,563,711,1036],matter:1182,max:[40,41,370,779,780,781,911,927,928,939,972,985,986,1070,1133,1135,1215,1217],max_batch_s:[40,41],max_chunk_s:[837,881,1070],max_depth:[40,41,837,841,844,851,859,863,869,911,955,1070,1114,1123],max_dev_dim_step_ratio:837,max_freq:[911,947],max_length:[40,41],max_node_dim_step_ratio:1070,max_norm:[40,41,911,927,928],max_split_factor_step_s:[837,1070],max_trust_ratio:[1013,1020,1215,1217],maxim:[1182,1225,1228],maximis:1182,maximum:[40,41,42,628,837,859,863,869,881,911,916,926,927,928,947,1013,1020,1070,1114,1123,1133,1135],mayb:[15,18,19],mdi:1070,mean:[40,41,837,866,867,868,869,881,911,939,1066,1067,1068,1069,1070,1114,1118,1126,1129,1133,1136,1139,1141,1190,1224,1228],measur:[1151,1162,1199,1210],mech:1182,mechan:[1182,1228],medic:1228,memori:[837,853,876,881,883,886,1070,1151,1161,1182],meshgrid:[267,628,911],messag:[1226,1227],meta:[35,1067,1068,1069,1182],method:[40,41,42,43,911,919,931,973,985,986,1013,1020,1021,1070,1114,1115,1122,1123,1182,1199,1210,1211,1212,1225],might:[911,937,1228],min:[40,41,370,779,780,781,911,939,974,985,986,995,1070,1133,1137],min_bas:[911,996],min_denomin:[911,995],min_dev_dim_s:837,min_node_dim_s:1070,min_sf_tune_step:[837,1070],min_unit_dev_tune_step:837,min_unit_node_tune_step:1070,mind:1182,mini:[1168,1169,1213,1214],minimum:[40,41,628,837,887,891,911,914,917,919,926,952,953,987,988,995,996,1070,1133,1137],miss:[1215,1219],ml_framework:[911,914],mod:[911,946],mod_depth:[1211,1212],mod_height:[1211,1212],mod_with_top_mod_key_chain:[1211,1212],mode:[40,41,835,836,837,866,867,868,869,881,1036,1041,1070,1225],model:[1182,1224],modul:[40,41,42,59,911,975,1070,1182,1183,1185,1186,1187,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1213,1214,1221,1222,1228],moment:[1013,1015,1016,1020,1215,1216,1217],more:[43,911,997,1070,1182,1225,1228],more_util_node_str:1070,most:[40,41,43,1182,1228],move:[40,41,43,837,882,1070],much:[1182,1228],multi:[911,975,1151,1162,1199,1210],multi_head_attent:1151,multi_index_nest:1114,multi_map:[40,41],multi_nod:1070,multidev:[837,848,849,850,869],multidevcontain:[40,41],multidevic:[837,846],multidevit:[837,840,843,846,847,851],multidevitem:[837,839,842],multidevnest:[837,841,844],multiheadattent:[1182,1199],multinod:[1070,1074],multinodecontain:1070,multinodeit:1070,multinodeitem:1070,multinodenest:1070,multinomi:[161,340,451,569,739,1126],multipl:[40,41,793,794,911,970,993,1036,1038,1133,1135,1136,1137,1138,1139,1141,1168,1169,1199,1209,1225],multipli:[40,41,911,934,1133,1138],multiprocess:[40,41,42,628,837,846,911,1070],must:[40,41,42,43,783,784,793,794,796,821,837,866,867,868,869,881,911,914,929,931,933,941,972,974,986,997,1048,1054,1058,1070,1126,1131,1215,1219],mutabl:[1114,1116,1123],mutlidevic:[837,846],mutlinod:1070,mw_tm1:[1013,1016,1020],mx_concat:1182,mxnet:[43,1182,1228],my_func:43,mymodel:1182,name:[835,836,1170,1171,1172,1176,1224],namespac:[43,1225],nan:[40,41,783,784,911,956,966,1008],nativ:[15,17,18,19,40,41,43,837,853,855,864,865,876,883,886,887,892,899,900,1070,1182,1183,1188,1189],native_modul:[1188,1189],native_module_class:[1188,1189],nativearrai:[15,18,19,43,779,780,781,783,784,793,794,796,821,837,855,881,882,887,891,897,902,903,911,912,913,914,916,917,918,919,920,921,923,925,926,927,928,929,930,932,933,934,935,938,939,940,941,943,944,945,946,947,949,950,954,956,957,958,965,966,967,968,969,971,972,973,974,977,978,979,982,983,984,985,986,991,993,994,997,999,1000,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1070,1114,1116,1123],natur:[1048,1061,1228],ncdhw:[1151,1156,1157,1199,1204,1205],nchw:[1151,1154,1155,1158,1199,1202,1203,1206],ncw:[1151,1152,1153,1199,1200,1201],ndarrai:[43,368,369,370,372,373,375,376,911,1003],ndhwc:[1151,1156,1157,1199,1204,1205],nearest:[911,984],need:[43,911,927,928,1151,1153,1155,1157,1182,1199,1201,1203,1205,1228],neg:[40,41,783,784,793,794,1133,1138,1140,1143,1145],negative_slop:1190,neither:1070,nest:[15,16,17,18,19,40,41,42,837,859,863,869,911,919,1002,1066,1067,1068,1070,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1211,1212,1215,1216,1217,1218,1219,1220],nested_indices_wher:1114,nested_map:[1070,1114],network:[1151,1160,1182,1183,1185,1199,1211,1212,1228],neural:[1151,1182,1185,1199,1224],new_node_percent_mem:1070,new_node_util:1070,new_node_utils_kei:1070,new_std:[1168,1169,1213,1214],newli:[835,836,911,923,924],newlin:[40,41,42],newshap:[911,923,983],next:[779,780,1070,1211,1212,1215,1216,1217,1218,1219,1220],nhwc:[1151,1154,1155,1158,1199,1202,1203,1206],node:[40,41,1114,1115,1122],node_clon:1070,node_dist:1070,node_dist_arrai:1070,node_dist_it:1070,node_in:1070,node_mapp:1070,node_str:1070,node_to_str:1070,node_util:1070,nodedistit:1070,nodedistitem:1070,nodedistnest:1070,nodemanag:[1070,1081],nodemapp:1070,nodemappermultiproc:1070,noinspect:[43,838,888,889,890,1014,1070,1177],non:[40,41,793,794,835,836,887,901,1211,1212,1215,1219,1225],none:[40,41,42,43,59,61,64,368,369,777,778,779,780,781,793,794,835,836,837,846,847,853,854,879,880,881,882,887,894,895,896,911,914,919,936,937,942,944,948,949,950,955,957,959,960,961,962,963,968,969,975,977,978,979,982,985,986,987,988,993,994,995,996,1005,1006,1011,1012,1013,1016,1018,1020,1021,1022,1028,1029,1033,1036,1039,1042,1066,1067,1068,1069,1070,1114,1115,1118,1122,1123,1126,1127,1128,1129,1130,1133,1135,1136,1137,1138,1139,1140,1141,1151,1153,1155,1157,1160,1161,1162,1163,1168,1169,1170,1171,1172,1176,1180,1188,1189,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],norm:[40,41,911,927,928,1036,1039,1042,1169,1182,1214,1215,1217],normal:[1126,1129,1168,1169,1213,1214],normalized_idx:[1168,1169],normalized_shap:[1213,1214],notat:[40,41,1133,1134],note:43,noth:[40,41,1225],notimplementederror:1070,now:[40,41,837,882,911,912,1070,1182,1199,1210,1211,1212,1224,1225,1228],np_concat:1182,np_finfo:370,ns_tune_step:1070,num:[911,968,969],num_arrai:[40,41],num_arrays_in_memori:911,num_arrays_on_dev:837,num_band:[911,947],num_channel:[1199,1206],num_chunk:1070,num_chunks_floor:1070,num_class:[1126,1127],num_cpu_cor:837,num_gpu:[106,837,1070],num_head:[1151,1162,1199,1210],num_kei:[1151,1162,1163],num_lay:[1199,1208],num_or_size_split:[40,41,911,993],num_output:1070,num_queri:[1151,1162,1163],num_sampl:[911,967,1029,1030,1126,1127],num_task:[1066,1067,1068,1069],number:[40,41,42,779,780,781,793,794,835,836,837,873,874,875,887,898,902,903,911,914,926,930,943,947,954,957,966,967,968,969,972,976,982,993,1000,1004,1008,1010,1036,1041,1066,1067,1068,1069,1070,1126,1127,1131,1133,1135,1136,1137,1139,1141,1151,1162,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1225,1228],numer:[43,783,784,796,821,911,952,953,987,988,995,996,1048,1058,1190],numhead:[1151,1162],numpi:[40,41,368,369,370,372,373,375,376,911,1003,1036,1041,1133,1134,1182,1224,1225,1228],nwc:[1151,1152,1153,1199,1200,1201],obj:[40,41],object:[40,41,42,59,370,779,780,781,837,887,891,911,914,919,1013,1114,1117,1119,1120,1121,1124,1125,1126,1132,1176,1180,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1211,1212],object_in:[911,919],observ:1070,occupi:[779,780,781,911,985,986],off:[911,914],offer:1182,offset:[1168,1169],often:1225,old:[40,41],on_init:[1199,1210,1211,1212],onc:[837,881,1070,1126,1127,1182],one:[40,41,43,837,866,867,868,869,881,887,893,911,957,970,977,985,986,994,997,1036,1039,1042,1070,1133,1134,1135,1136,1137,1138,1139,1140,1141,1182,1225,1228],one_hot:[113,399,512,628,911],onearrai:[911,943],ones:[40,41,113,267,399,512,628,911,957,977,979,1182],ones_lik:[113,267,399,512,628,911],ongo:43,onli:[40,41,43,837,1070,1114,1115,1116,1122,1215,1216,1217,1218,1219,1220,1224,1225],onlin:1182,onto:[837,866,867,882,1070,1114,1118,1123],oom:[837,1070],open:[911,914,1126,1130,1182,1228],opencv:1225,oper:[40,41,911,922,938,939,940,968,969,998,1013,1016,1018,1020,1021,1022,1044,1045,1046,1047,1151,1152,1153,1154,1155,1156,1157,1158,1160,1182,1183],operand:[40,41,1133,1134],oppos:[911,947],optim:[837,1013,1016,1018,1020,1021,1022,1066,1067,1068,1069,1070,1182,1216,1217,1218,1220,1224,1228],optimizer_upd:1013,option:[15,18,19,40,41,42,43,777,778,793,794,835,836,837,846,847,855,859,860,861,862,863,866,867,868,869,876,879,880,881,882,886,887,892,897,901,910,911,913,914,916,917,918,919,927,928,929,934,936,937,944,947,948,949,950,954,956,957,964,967,968,969,970,973,975,977,978,979,982,985,986,989,991,993,994,995,996,997,1005,1007,1008,1011,1012,1013,1016,1018,1019,1020,1021,1022,1024,1029,1033,1036,1039,1042,1066,1067,1068,1069,1070,1114,1115,1116,1118,1122,1123,1126,1127,1133,1135,1136,1137,1138,1139,1140,1141,1143,1144,1148,1151,1159,1160,1162,1163,1164,1165,1166,1167,1168,1169,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1225],ord:[911,944,1036,1041],order:[40,41,42,43,911,918,1013,1016,1018,1020,1021,1022,1036,1039,1042,1066,1067,1068,1221,1222],ordered_node_util_kei:1070,org:1228,organ:43,origin:[40,41,42,911,979,983,1012,1036,1039,1042],other:[40,41,43,796,798,799,804,806,807,811,813,814,815,816,817,819,821,822,823,824,825,826,828,829,830,832,833,834,835,836,911,913,914,957,1013,1017,1126,1130,1182,1224,1225,1228],other_i:[43,796,821],otherwis:[15,16,17,18,19,40,41,783,784,793,794,837,854,887,894,895,896,911,922,1005,1006,1009,1013,1019,1024,1028,1066,1067,1068,1070,1133,1135,1136,1137,1139,1141],our:[1182,1228],out:[911,914,1048,1053,1151,1159,1161,1182,1199,1207],out_feat_dim:[1151,1162],out_featur:[1151,1159,1160],out_i:[783,784],outdat:1228,outer:[1066,1067,1068,1069],outer_batch_fn:[1066,1067,1068],outer_batch_shap:[1151,1160],outer_cost_fn:[1066,1067,1068],outer_v:[1066,1067,1068],outlin:1225,output:[40,41,43,837,846,847,881,911,914,924,948,957,982,1000,1013,1017,1048,1054,1070,1126,1128,1129,1130,1151,1153,1155,1157,1159,1161,1162,1163,1182,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210],output_ax:[837,881,1070],output_axi:1070,output_channel:[1199,1200,1201,1202,1203,1204,1205,1208,1209],output_connected_onli:[1170,1172,1176,1211,1212],output_queu:1070,output_shap:[1151,1153,1155,1157,1199,1201,1203,1205],outsid:[911,926],over:[40,41,793,794,911,944,1036,1039,1042,1126,1130,1133,1135,1136,1137,1139,1141,1168,1169,1213,1214],overal:1225,overflow:[911,914],overhead:1225,overrid:[911,977,979,1012],overriden:[1215,1219],overwrit:[40,41,837,881,1070],overwrite_at_key_chain:[40,41],own:[1182,1225,1228],packag:[43,1225],pad:[911,930,947,1010,1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206],pad_width:[911,930,1010],page:1182,pair:[1151,1163],parallel:[837,846,847,1070],parallelis:[837,846,847,1070],param:[40,41,42,43,837,881,911,912,949,950,977,978,1011,1070,1181,1182,1211,1212,1224],paramet:[15,16,17,18,19,40,41,42,779,780,781,783,784,793,794,796,821,835,836,837,846,847,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,876,879,880,881,882,883,886,887,891,892,893,897,898,899,900,901,902,903,910,911,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,932,933,934,935,937,938,939,940,941,942,943,944,945,946,947,948,949,950,954,956,957,958,960,961,962,964,965,966,967,968,969,970,971,972,973,974,975,978,979,982,983,984,985,986,987,988,989,991,992,993,994,995,996,997,998,999,1000,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1024,1026,1027,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224],parameter:[1126,1129,1130],params_all_empti:1176,pardo:1182,pars:[911,931],part:[1013,1016,1018,1020,1021,1022,1048,1053,1182,1211,1212,1225],partial:[40,41,1211,1212],particl:1228,particular:1228,pass:[40,41,42,837,846,881,887,892,911,924,1013,1027,1066,1067,1068,1070,1188,1189,1211,1212,1215,1219,1221,1222],pattern:[40,41,911,938,939,940],per:[837,1070,1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206],percent_used_mem_on_dev:837,percent_used_mem_on_nod:1070,percentag:[837,876,1070],perf_count:1070,perform:[40,41,43,793,794,837,911,916,917,918,934,938,939,940,960,961,962,967,968,969,1013,1016,1018,1020,1021,1022,1029,1030,1066,1067,1068,1069,1070,1114,1119,1120,1133,1135,1136,1137,1138,1139,1140,1141,1143,1148,1151,1159,1161],permissable_step:1070,permit:43,permut:[911,999,1005],perpendicular:[911,933],person:1182,physci:1228,pickl:[40,41,1070],pickle_filepath:[40,41],pid:1176,pinv:[330,711,1036],pip:1182,pipelin:1224,pkk:1228,pkkm1:1228,pkm1km1:1228,place:[40,41,43,837,882,911,943,948,960,961,962,1070,1215,1216,1217,1218,1219,1220],placehold:[1114,1123],point:[779,780,887,902,911,914,1048,1058],popul:[40,41,1126,1127],popular:1228,population_s:[1126,1127],portabl:[1182,1183],posit:[15,16,17,779,780,783,784,837,859,863,869,911,912,914,943,947,1070,1126,1131,1188,1189],possibi:[40,41],possibl:[911,970,1002,1029,1034,1228],post:[1168,1169],post_shap:[40,41],power:[43,796,821,827,911,952,987,996,1190],practic:1182,pre:[837,1070,1182],pre_shap:[40,41],precis:[779,780],pred:[1164,1165,1166,1167],predict:[1164,1165,1166,1167,1228],preprint:1182,present:[40,41],preserv:[40,41,42,911,944,1013,1024],preserve_typ:[40,41,1013,1024],press:1182,prevent:[43,1013,1015,1016,1020,1070,1215,1216,1217],previou:[1013,1016,1020],previous:[911,924],prime:1182,print:[40,41,42,837,877,911,980,1182,1224],print_all_arrays_in_memori:911,print_all_arrays_on_dev:837,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1215,1219],prob:[1126,1127,1151,1159,1199,1207],probabl:[1126,1127,1151,1159,1199,1207],problem:[43,1228],process:[43,837,846,847,876,886,911,975,1070],process_specif:[837,876,886,1070],prod:[40,41,911,939],produc:[837,846,847,1070],product:[40,41,911,933,934,971,1133,1134,1151,1162,1163,1199,1210],profil:[106,261,397,505,620,837,1070],project:[1182,1224,1225,1228],promot:[43,796,821,1048,1058],prompt:1182,properli:43,properti:[40,41,370,837,849,1070,1176,1180,1211,1212,1215,1216,1217,1218,1220],provid:[40,41,43,793,794,835,836,837,854,887,894,895,896,901,910,911,937,977,979,986,1012,1013,1016,1018,1020,1021,1022,1028,1070,1182,1199,1208,1215,1216,1217,1218,1219,1220,1225],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1036,1040],ptype:[1176,1180],pure:[40,41,1182,1228],purpos:1228,put:1070,pybroadexcept:1070,pyprotectedmemb:[1070,1177],pyshadowingbuiltin:43,pyshadowingnam:[838,888,889,890,1014,1070],python:[40,41,837,876,886,911,914,1070,1182],pytorch:[1013,1016,1018,1020,1021,1022,1182,1215,1216,1217,1218,1219,1220,1224,1225,1228],pyunresolvedrefer:1070,quadrant:[1048,1054],queri:[40,41,796,810,831,837,870,880,1070,1151,1162,1163,1199,1210],query_dim:[1199,1210],query_kei:[40,41],queue:[40,41,42,837,846,847,911,981,989,1070],queue_class:[837,846,847,1070],queue_load_s:[40,41,42],queue_timeout:[40,41,42,911,1070],quick:1182,quickli:1224,radian:[1048,1049,1051,1054,1056,1062,1064],rai:[1048,1049],rais:[40,41,43,793,794,796,821,911,922,952,987,994,996,1006,1070,1211,1212,1215,1219],ram:[837,876,883,886,1070],randint:[161,340,569,739,1126],random:[37,40,41,1127,1128,1129,1130,1131,1132,1182],random_crop:1029,random_norm:[161,340,569,739,1126],random_uniform:[161,340,569,739,1126],randomli:[1029,1033,1151,1159,1199,1207],randomness_factor:[1170,1172,1176,1211,1212],rang:[911,914,968,969,1048,1054,1070,1182,1224,1228],rank:[793,794,911,930,1007,1010],rate:[1013,1016,1018,1020,1021,1022,1066,1067,1068,1069,1199,1210,1215,1216,1217,1218,1219,1220],rather:[40,41,837,881,911,914,964,1013,1019,1070],ratio:[837,1013,1020,1029,1034,1070,1215,1217],raw:[40,41],raw_delta:1070,reach:[837,859,863,869,1070,1114,1123],read:[40,41],readi:[1070,1224],real:[1048,1049,1053],realiti:1225,rearrang:[40,41,911,938,940],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1066,1068],receiv:[837,846,847,911,915,970,1070,1199,1209],receivess:[837,1070],receiving_fn:1176,receivng:[1066,1069],recev:[1066,1067,1068],recognit:1228,recommend:1182,rectifi:[1143,1145,1146],recurr:[1151,1161],recurrent_bia:[1151,1161],recurrent_kernel:[1151,1161],recurs:[40,41,1114,1115,1116,1122,1123],redefin:43,reduc:[40,41,793,794,837,881,911,939,1070,1133,1135,1136,1137,1138,1139,1140,1141],reduce_max:[40,41,168,345,453,574,746,1133],reduce_mean:[40,41,168,345,453,574,746,1133,1182,1224],reduce_min:[40,41,168,345,453,574,746,1133],reduce_prod:[40,41,168,345,453,574,746,1133],reduce_std:[40,41,345,1133],reduce_sum:[40,41,168,345,453,574,746,1070,1133],reduce_var:[40,41,168,345,453,574,746,1133],reduct:[39,40,41,793,794,911,939,985,986,1134,1135,1136,1137,1138,1139,1140,1141,1182],refactor:43,refer:[793,794,1013,1015,1016,1036,1043,1199,1209,1228],reflected_oper:[0,13,14],regard:[837,1070],regardless:[40,41,835,836],register_paramet:1224,reimplement:1228,rel:[1013,1016,1018,1020,1021,1022],rel_slice_obj:1070,relev:[1215,1216,1217,1218,1219,1220],relu:[755,1143,1144,1145,1182,1224],remain:[43,911,983,1114,1118],remaind:[40,41,911,946,993],remov:[40,41,911,994,1066,1067,1068],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,911,944],rep:[911,1000],repeat:[40,41,267,628,911,940,1000,1070,1225],repeated_config_check:[837,1070],repeatedli:[1114,1121],repetit:[40,41,911,982,1000],replac:[40,41,43,911,926,985,986,1126,1127],repo:1182,repres:[43,887,893,898,1151,1160],represent:[40,41,42,43,779,780,781,837,864,865,887,893,899,900,911,992,1002,1070],reptil:[1066,1069],reptile_step:1066,requir:[43,835,836,887,891,911,914,919,1188,1189],resampl:[911,967],reshap:[40,41,43,628,911],reshape_lik:[40,41],respect:[911,941,1013,1015,1016,1017,1018,1020,1021,1022,1048,1058,1066,1067,1068,1069],respons:1070,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,783,784,793,794,796,821,837,846,911,914,941,985,986,997,1036,1039,1042,1044,1045,1046,1047,1048,1058,1070,1133,1135,1136,1137,1138,1139,1140,1141,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1182],ret:1070,ret_dict:1070,ret_fn:[837,846,847,1070],retain:[1013,1017],retain_grad:[1013,1017],retreiv:1070,retrn:[911,992],return_cont:[40,41],return_dict:[40,41],return_graph:[1170,1171,1172],return_inner_v:[1066,1067,1068,1069],return_sequ:[1199,1208],return_st:[1199,1208],rev:[911,937],revers:[40,41,911,937,944,1005],right:[40,41],rk_e:1228,robot:1182,ronald:1182,round:[267,628,911,914,1070],row:[911,957,1126,1127],rule:[43,796,821,911,914,1048,1058],run:[837,846,1013,1015,1016,1020,1066,1067,1068,1069,1070,1182,1183,1199,1210,1211,1212],safe:[837,846,1070],safety_factor:[837,1070],same:[15,16,17,40,41,43,837,846,847,881,882,887,891,911,912,925,929,945,946,949,950,977,979,984,985,986,997,1012,1013,1019,1024,1036,1041,1048,1053,1066,1067,1068,1070,1133,1134,1151,1152,1153,1154,1155,1156,1157,1158,1182,1199,1200,1201,1202,1203,1204,1205,1206,1224,1228],same_arrai:[40,41],sampl:[911,967,1029,1030,1126,1127,1129,1130,1151,1159,1182,1199,1207],satisfi:[911,919,1036,1038,1043],save:[40,41,911,990,1001,1029,1031,1211,1212],save_debug_info:1176,save_dir:[837,852,1070],save_to_disk:[1170,1172,1176,1211,1212],save_weight:[1211,1212],scalar:[911,926,977,1004,1008],scale:[837,879,880,1013,1021,1070,1151,1159,1162,1163,1168,1169,1199,1207,1210,1215,1218],scaled_dot_product_attent:1151,scatter:[911,977,985,986],scatter_flat:[113,267,399,512,628,911],scatter_nd:[113,267,399,512,628,911],scene:[1013,1016,1018,1020,1021,1022],schemat:1182,screen:[40,41],search:[15,18,19,40,41],second:[40,41,837,868,911,920,933,941,981,989,999,1013,1015,1016,1020,1066,1068,1070,1215,1216,1217],secondli:1228,see:[43,59,370,793,794,796,821,837,849,850,851,852,887,911,914,968,969,1013,1048,1058,1176,1180,1182,1190,1192,1193,1195,1196,1198],seed:[40,41,161,739,1126],seed_valu:[40,41,1126,1131],seem:1182,seen_set:[911,955],select:[911,919,994,1225,1228],self:[40,41,43,59,370,796,821,837,849,850,851,852,887,1013,1070,1176,1180,1182,1190,1192,1193,1195,1196,1198,1215,1219,1224,1228],sent:1070,seper:[911,947],seq:[40,41,42,1133,1134,1211,1212],sequenc:[15,16,17,40,41,42,43,835,836,837,846,847,856,857,858,859,860,861,862,863,866,867,881,887,891,911,914,919,921,923,929,930,944,957,970,973,978,982,983,986,993,997,1000,1005,1010,1011,1013,1017,1029,1033,1034,1036,1039,1042,1070,1114,1125,1126,1128,1130,1133,1135,1136,1137,1138,1139,1140,1141,1151,1152,1153,1154,1155,1156,1157,1158,1168,1169,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1208,1211,1212,1213,1214,1215,1219,1221,1222],sequenti:1182,set:[15,18,19,40,41,837,866,867,879,880,881,911,913,936,957,987,988,989,990,1013,1016,1018,1019,1020,1021,1022,1036,1039,1042,1070,1114,1115,1122,1124,1125,1126,1127,1131,1133,1135,1136,1137,1138,1139,1140,1141,1180,1182,1199,1208,1215,1216,1217,1218,1219,1220,1225,1228],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1180,set_debug_mod:44,set_default_devic:837,set_default_dtyp:887,set_default_float_dtyp:887,set_default_int_dtyp:887,set_default_nod:1070,set_exception_debug_mod:44,set_framework:[40,41,59,1070,1182,1224,1225,1228],set_ivy_backend:[40,41],set_min_bas:911,set_min_denomin:911,set_nest_at_index:1114,set_nest_at_indic:1114,set_param:1176,set_queue_timeout:911,set_split_factor:[837,1070],set_stat:[1215,1216,1217,1218,1219,1220],set_tmp_dir:911,set_with_grad:1013,setter:1070,sever:1228,sgd:[1182,1215],shape0:1070,shape:[40,41,43,368,369,628,777,778,837,849,887,891,911,912,923,925,929,930,943,944,945,946,948,950,954,957,977,978,979,982,983,984,985,986,992,994,997,1010,1011,1012,1029,1033,1036,1038,1048,1053,1054,1070,1126,1128,1129,1130,1133,1134,1151,1153,1155,1157,1176,1180,1199,1201,1202,1203,1204,1205,1206,1213,1214],shape_slic:[40,41],shape_to_tupl:911,share:[40,41,1182,1225],shift:1070,should:[40,41,42,43,783,784,796,821,835,836,837,911,923,924,931,977,983,1013,1016,1018,1020,1021,1022,1048,1058,1070,1133,1134,1182],show:[40,41,1176,1182,1228],show_debug_info:1176,show_graph:[1170,1182,1211,1212,1215,1219],show_mod_in_top_mod:[1211,1212],show_structur:[1211,1212],show_sub_contain:[40,41],show_v:[1211,1212],show_v_in_top_v:[1211,1212],shown:[40,41],shp:1070,shuffl:[40,41,161,739,1126],shuffle_h5_fil:[40,41],sigmoid:[755,1143,1182,1224],signatur:[43,59,370,837,849,850,851,852,887,1013,1176,1180,1190,1192,1193,1195,1196,1198],signific:1228,similar:[43,1151,1162,1199,1210],simpl:[43,911,942,1182,1225,1228],simplest:1225,simpli:[40,41,43,1182,1225,1228],simultan:1182,sin:[722,911,947,1048,1064,1225],sinco:1225,sine:[1048,1051,1052,1062,1063],singl:[40,41,835,836,837,846,847,866,867,868,869,911,994,1004,1008,1029,1034,1070,1126,1129,1130,1133,1135,1136,1137,1138,1139,1140,1141,1182,1225,1228],singleton:[793,794],singular:[1036,1041],sinh:[722,1048],siren:[1182,1190],size:[40,41,42,837,860,861,862,863,879,880,881,911,914,923,968,969,985,993,1029,1033,1036,1039,1041,1042,1070,1126,1127,1129,1130,1133,1135,1136,1137,1138,1139,1140,1141,1199,1200,1201],size_ordered_arrai:[40,41],skew:[1036,1043],skinv:1228,skip:[40,41],slice:[40,41,911,918,949,950,1070,1114,1121],slice_kei:[40,41],slice_obj:[40,41,1070],slice_via_kei:[40,41],slide:[1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206],slope:[1143,1145],small:[1164,1165,1166,1167,1168,1169,1182,1213,1214,1225],smaller:[911,926],smallest:[40,41,779,780,781,911,917,925],smallest_norm:[370,779,780],softmax:[177,462,755,1143,1151,1162,1163],softplu:[755,1143],solv:1228,some:[40,41,43,911,914,1013,1015,1016,1018,1020,1021,1022,1027,1151,1159,1182,1199,1207,1225,1228],some_backend:43,some_namespac:43,someth:[43,1228],something_cool:43,somewher:[40,41],sort:[40,41,42,911,918,1036,1041,1070],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,368,369,370,372,373,375,376,777,778,779,780,781,783,784,793,794,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,839,840,841,842,843,844,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1180,1185,1186,1187,1188,1189,1190,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1226,1227,1228],space:[911,914,947,968,969],spars:[1164,1167],sparse_cross_entropi:1164,spawn:[911,975],specif:[40,41,43,837,879,911,931,938,939,940,975,1066,1067,1068,1069,1070,1126,1132,1182,1211,1212,1224,1225],specifc:[1126,1127],specifi:[40,41,43,793,794,837,856,857,858,859,860,861,862,863,866,867,871,873,877,880,881,882,887,891,893,911,914,916,917,919,926,929,930,948,949,950,956,968,969,997,1007,1010,1036,1039,1042,1070,1114,1119,1120,1124,1125,1133,1134,1135,1136,1137,1138,1139,1140,1141],split:[40,41,113,267,399,512,628,837,846,860,861,862,863,879,880,881,911,970,1070],split_arg:1070,split_factor:[837,846,1070],split_func_cal:[837,1070],split_siz:1070,spread:[837,869,1070],squar:[911,957,1036,1038],squeez:[113,267,399,512,628,911],stabil:[911,995,996],stabl:[911,952,953,987,988,995,996],stable_divid:911,stable_pow:911,stack:[40,41,267,628,911,1029,1034,1114,1115,1122,1199,1208],stack_imag:[152,326,441,559,707,1029],stacked_dim_s:1070,stage:43,standard:[40,41,43,779,780,1126,1129,1133,1139,1168,1169,1213,1214],start:[40,41,837,852,911,914,968,969,1070,1182,1225],starting_index:[40,41],starting_split_factor:[837,1070],state:[1070,1151,1161,1170,1171,1172,1176,1182,1185,1186,1187,1188,1189,1190,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224],statement:1225,static_argnam:[835,836],static_argnum:[835,836],std:[1126,1129],step:[40,41,837,911,914,968,969,1013,1015,1016,1018,1020,1021,1022,1066,1067,1068,1069,1070,1182,1215,1216,1217,1218,1219,1220,1224,1228],stephen:1182,stick:1182,still:[40,41],stochast:[1215,1220],stop:[40,41,837,852,881,911,914,968,969,1013,1016,1018,1020,1021,1022,1024,1066,1067,1068,1069,1070,1215,1216,1217,1218,1219,1220],stop_gradi:[40,41,321,436,554,701,837,881,1013,1016,1018,1020,1021,1022,1066,1067,1068,1069,1070,1215,1216,1217,1218,1219,1220],stopiter:1070,store:[40,41,911,947,993,1013,1027,1211,1212],store_var:[1211,1212],str:[15,16,17,40,41,42,43,370,372,373,779,780,781,835,836,837,846,847,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,881,887,892,893,898,899,900,901,902,903,910,911,919,936,938,939,940,973,975,978,985,986,1036,1039,1042,1066,1067,1068,1069,1070,1114,1118,1133,1134,1188,1189,1199,1210,1211,1212],str_to_nod:1070,straight:1225,strength:[1182,1228],stride:[1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206],string:[40,41,43,837,853,855,864,865,870,876,882,883,886,887,891,897,899,900,901,910,911,914,919,936,957,978,979,1011,1012,1070,1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206,1211,1212],structur:[40,41,42,43,911,931],structural_diff:[40,41],sub:[40,41,837,860,861,866,867,868,869,911,993,1066,1067,1068,1069,1070],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1070,sub_mod:[1211,1212],sub_modul:[1221,1222],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1182,1183,1213,1214,1221,1222],subsequ:43,subset:43,substr:[40,41],suggest:1182,suitabl:[1029,1034],sum:[40,41,837,866,867,868,869,881,911,935,939,985,986,1070,1133,1134,1140],summat:[40,41,1133,1134],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,80,81,82,85,95,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,153,154,155,157,158,162,163,164,165,166,167,169,170,171,172,173,174,175,178,180,181,183,184,185,186,187,188,189,194,196,197,198,201,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,327,328,329,331,332,333,334,336,337,338,341,342,343,344,346,347,348,349,350,351,352,353,356,358,359,360,361,362,363,364,369,371,372,373,376,386,398,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,437,438,439,440,442,443,444,446,447,450,452,454,455,456,457,458,459,460,463,464,466,467,468,469,470,471,472,477,479,480,481,484,494,506,507,508,509,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,555,556,557,558,560,561,562,564,565,566,570,571,572,573,575,576,577,578,579,580,581,585,586,587,592,594,595,596,599,609,621,622,623,624,625,626,627,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,702,703,704,705,706,708,709,710,712,713,714,715,716,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,740,741,742,743,744,745,747,748,749,750,751,752,753,756,757,758,759,760,761,762,764,765,767,768,769,770,771,772,773,778,780,781,784,794,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1165,1166,1167,1169,1171,1172,1174,1175,1177,1181,1182,1186,1187,1189,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1225,1227,1228],supports_inplac:911,suppos:1228,svd:[330,563,711,1036],swap:[40,41,911,999],swapax:[40,41,512,628,911,1228],symmetr:[1036,1043],tab:1182,take:[911,967],taken:[1133,1135,1136,1137,1139,1141],tan:[722,1048,1053],tangent:[1048,1053,1054,1055,1064,1065,1143,1150],tanh:[722,755,1048,1143],target:[40,41,837,853,856,857,858,859,860,861,862,863,866,867,868,869,882,1070,1182],target_dict:[40,41],task:[1066,1067,1068,1069],team:1228,templat:1182,temporari:[911,990,1001],tensor:[40,41,43,837,855,887,897,911,914,916,917,918,923,968,969,972,974,977,978,979,983,985,986,993,1011,1012,1070,1126,1127,1128,1151,1159,1161,1182,1199,1207,1209,1215,1216,1217,1218,1219,1220,1224,1225],tensorflow:[1151,1153,1155,1157,1182,1199,1201,1203,1205,1225,1228],term:[40,41,1151,1161,1182,1199,1209],termcolor:[40,41,42],termin:[40,41,42,1070],test:[783,784,793,794,887,902,903],tf_concat:1182,than:[40,41,779,780,837,881,911,914,925,926,945,964,972,994,997,1013,1019,1070,1126,1130,1182,1225],thei:[40,41,43,1048,1054,1066,1067,1068,1126,1127,1182,1221,1222,1225],them:[1182,1228],themselv:[1114,1115],therefor:43,thi:[40,41,42,43,837,859,863,869,876,881,886,911,914,947,981,983,989,1013,1016,1018,1019,1020,1021,1022,1027,1036,1039,1042,1070,1114,1118,1123,1133,1135,1136,1137,1138,1139,1140,1141,1151,1160,1182,1211,1212,1215,1216,1217,1218,1219,1220,1224,1225,1228],thing:[43,1182],those:[40,41,911,926,1013,1027,1036,1041,1070],though:43,threshold:[911,972,974],through:[40,41],tile:[267,512,628,911],time:[911,1000,1013,1016,1020,1066,1067,1068,1069,1070,1126,1127,1151,1161,1199,1210,1211,1212,1228],time_chronolog:[1170,1171,1176],time_infer:[1170,1171],timeout:[40,41,42,837,846,847,911,981,989,1070],timestep:[1151,1161,1199,1208],timing_fnam:[1170,1171],titl:1182,tmp_dir:911,tmp_dr:[911,990],to_appli:[40,41],to_clon:[837,1070],to_dev:[40,41,106,261,505,620,837],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[837,1070],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1182],to_ivy_modul:[179,763,1182,1188],to_json:[40,41],to_kv_fn:[1151,1162],to_kv_v:[1151,1162],to_list:[40,41,628,911],to_multi_dev:[40,41],to_mut:[1114,1116,1123],to_n:[15,40,41,1182],to_nod:1070,to_numpi:[40,41,628,911,1182,1224],to_out_fn:[1151,1162],to_out_v:[1151,1162],to_q_fn:[1151,1162],to_q_v:[1151,1162],to_raw:[40,41],to_scalar:[628,911],todo:1070,togeth:[40,41,1221,1222],tool:[1182,1225],top_mod:[1211,1212],topic:1228,torch:[43,835,836,1182,1224,1225,1228],torch_concat:1182,torchfcmodel:1224,total:[40,41,42,837,883,1070],total_mem_on_dev:837,total_mem_on_nod:1070,tpu:[837,884,1070],tpu_is_avail:[505,620,837,1070],tpye:[887,898],trace:[40,41,911,964],track:[837,1070,1114,1123,1211,1212],track_submod_call_ord:[1211,1212],track_submod_ret:[1211,1212],trail:[1213,1214],train:[1013,1015,1016,1020,1182,1183],trainabl:[1013,1019,1182,1183,1188,1189,1211,1212,1221],trainer:1182,tran:1228,transform:[1151,1159,1160],transpos:[40,41,113,267,399,628,837,868,911,1070,1151,1153,1155,1157,1199,1201,1203,1205],travers:[15,18,19,40,41,1114,1123],treat:[40,41,835,836],tree_depth:1180,tree_height:1176,tri:[40,41],trigonometr:[1048,1049,1053,1056,1062],trim_kei:[40,41],trust:[1013,1020,1215,1217],truth:[911,941,1044,1045,1046,1047],try_else_non:911,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[837,1070],tune_dev_alloc:837,tune_dev_split:837,tune_node_alloc:1070,tune_node_split:1070,tune_step:[837,1070],tupl:[15,16,17,18,19,40,41,43,793,794,835,836,911,930,947,948,992,1010,1070,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1128,1133,1135,1136,1137,1138,1139,1140,1141],two:[40,41,911,914,920,933,971,999,1036,1039,1041],type:[15,18,40,41,42,43,59,372,373,780,781,783,784,793,794,796,821,837,849,850,851,852,864,865,869,881,887,891,892,893,897,898,899,900,901,902,903,910,911,912,914,919,925,929,931,941,945,946,948,957,964,977,978,979,984,998,1008,1011,1012,1013,1019,1024,1048,1058,1070,1176,1180,1182,1190,1192,1193,1195,1196,1198,1211,1212,1225],types_to_iteratively_nest:[40,41,42],uint8:[1029,1031,1035],uint8_img_to_float_img:1029,unchang:[15,16,17,18,19],unif:1070,unifi:[40,41,837,866,867,868,869,881,1070,1182],uniform:[40,41,1126,1127,1129,1130,1190,1192,1193,1196,1197],uniformli:[1126,1128,1130],unify_arrai:1070,unify_it:1070,unify_nest:1070,union:[15,18,19,40,41,43,370,372,373,779,780,781,783,784,793,794,796,821,835,836,837,855,860,861,862,863,881,882,887,891,892,893,897,898,899,900,901,902,903,910,911,912,913,914,916,917,918,919,920,921,923,925,926,927,928,929,930,932,933,934,935,938,939,940,941,943,944,945,946,947,948,949,950,954,956,957,958,965,966,967,968,969,971,972,973,974,977,978,979,982,983,984,985,986,991,992,993,994,997,999,1000,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1070,1114,1115,1116,1122,1123],uniqu:[837,846,847,1066,1067,1068,1069,1070,1114,1118],unique_kwarg:1070,unit:[837,1048,1049,1051,1070,1143,1144,1145,1146],unitari:[1036,1041],unless:[911,977,979,1012],unlik:[837,1070],unnorm:[1126,1127],unpack:[911,1007],unrol:[1151,1161],unset:1225,unset_debug_mod:44,unset_default_devic:837,unset_default_dtyp:887,unset_default_float_dtyp:887,unset_default_int_dtyp:887,unset_framework:[59,1225],unset_with_grad:1013,unstack:[40,41,113,267,399,512,628,911],unus:[835,836],updat:[40,41,837,846,911,962,985,986,1013,1015,1016,1018,1020,1021,1022,1066,1067,1068,1070,1114,1119,1120,1124,1125,1151,1161,1188,1189,1215,1216,1217,1218,1219,1220,1225,1228],update_backend:[40,41],update_config:[40,41],update_inference_tim:1176,upper:[40,41,1126,1130],upper_depth:[1211,1212],usabl:[1182,1228],usag:[837,881,1070],use:[40,41,42,43,837,846,847,872,884,911,982,995,996,1070,1151,1162,1168,1169,1182,1213,1214,1225,1228],used:[40,41,43,837,846,876,879,880,886,887,898,911,952,953,970,979,985,986,987,988,1012,1013,1020,1021,1036,1039,1066,1067,1068,1069,1070,1114,1123,1199,1210,1215,1217,1218,1224,1225],used_dev:[837,846],used_mem_on_dev:837,used_mem_on_nod:1070,used_node_str:1070,used_node_strs_dict:1070,useful:[40,41,837,881,1070,1151,1160,1182,1225],user:[1182,1199,1210,1211,1212,1225,1228],uses:1182,using:[40,41,1013,1015,1016,1114,1117,1121,1133,1134,1151,1159,1163,1182,1199,1207,1224,1225,1228],util:[837,870,1070],utility_funct:[793,794],v_with_top_v_key_chain:[1211,1212],val:[40,41,796,831,911,960,961,962,987,988,1180],valid:[793,794,887,892,911,995,996,1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206],valid_dtyp:887,valu:[40,41,837,849,880,881,911,912,914,916,917,918,926,927,928,930,931,937,941,947,948,949,950,965,966,968,969,972,974,981,982,983,984,985,986,987,988,989,1005,1008,1009,1010,1013,1017,1020,1029,1035,1036,1041,1044,1045,1046,1047,1048,1059,1060,1061,1066,1067,1068,1070,1114,1118,1119,1120,1124,1125,1126,1129,1130,1133,1135,1137,1151,1162,1163,1168,1169,1176,1199,1210,1213,1214,1215,1217],value_is_nan:911,vanilla:[1066,1068],var_shap:1190,variabl:[15,16,17,18,19,40,41,321,436,554,701,911,922,960,961,962,963,964,998,1013,1016,1017,1018,1019,1020,1021,1022,1024,1027,1066,1067,1068,1069,1151,1162,1168,1169,1188,1189,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],variable_data:[701,1013],varianc:[40,41,1133,1141,1228],varieti:1225,variou:[43,1182],vector:[40,41,911,928,933,1036,1041,1042,1043,1151,1160,1199,1209],vector_norm:[40,41,1036],vector_to_skew_symmetric_matrix:[156,330,445,563,711,1036],verbos:1227,veri:[43,1182],version:43,via:[1114,1115,1122,1225],view:[1029,1034],vision:1182,visual:1225,volum:[1151,1156],vw_tm1:[1013,1016,1020],wai:[1225,1228],wait:[40,41,42],want:[1182,1225,1228],warn:[59,66,67,68,69,70],warp:[1029,1030],watch:1224,weight:[1013,1015,1016,1018,1020,1021,1022,1151,1160,1161,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1211,1212,1215,1217,1218],weight_initi:[1199,1200,1201,1202,1203,1204,1205,1206,1208,1209],weights_path:[1211,1212],well:[40,41,911,956],were:[40,41,1070],what:1182,when:[40,41,42,43,837,911,924,996,1009,1036,1041,1070,1182,1211,1212,1225,1228],where:[40,41,43,267,628,793,794,796,821,911,914,923,926,930,943,958,965,966,977,1010,1036,1041,1114,1115,1122,1126,1127],wherea:43,wherebi:[1114,1123],whether:[15,18,19,40,41,42,793,794,835,836,837,855,868,872,876,881,884,886,887,897,901,902,903,910,911,913,920,921,934,937,942,947,954,956,959,963,964,970,991,998,1007,1008,1013,1016,1017,1018,1019,1020,1021,1022,1024,1066,1067,1068,1069,1070,1114,1115,1116,1118,1122,1123,1126,1127,1143,1144,1151,1159,1182,1188,1189,1199,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220],which:[40,41,42,43,779,780,781,793,794,835,836,837,846,847,855,860,861,862,863,866,867,868,869,871,873,877,879,880,881,887,892,897,901,910,911,914,919,929,931,933,934,935,937,944,948,949,950,951,957,958,967,968,969,976,977,978,979,980,982,985,986,993,997,1007,1009,1011,1012,1013,1016,1017,1018,1020,1021,1022,1024,1026,1027,1029,1031,1036,1039,1042,1048,1054,1070,1114,1118,1119,1120,1124,1125,1126,1127,1128,1129,1130,1133,1135,1136,1137,1138,1139,1140,1141,1143,1148,1151,1162,1163,1182,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222,1224,1225],whitespac:[40,41,42],whose:[43,796,821,911,919,924,1133,1134,1135,1136,1137,1139,1141],why:[1182,1183],width:[1029,1034],wiki:1228,wikipedia:1228,window:[1029,1034,1151,1152,1153,1154,1155,1156,1157,1158,1199,1200,1201,1202,1203,1204,1205,1206],wise:[40,41,43,796,821,911,925,926,941,945,946,972,974,984,1013,1016,1018,1020,1022,1044,1045,1046,1047,1048,1049,1051,1053,1054,1056,1058,1059,1060,1061,1062,1064,1143,1144,1145,1146,1147,1148,1149,1150],wish:1225,with_arg_label:[1170,1172,1176,1211,1212],with_array_cach:[1170,1171,1172,1176],with_bia:[1199,1209],with_cal:[911,937],with_default_key_color:[40,41],with_edge_label:[1170,1172,1176,1211,1212],with_entries_as_list:[40,41],with_grad:[1013,1023,1211,1212],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1070,with_output_label:[1170,1172,1176,1211,1212],with_partial_v:[1211,1212],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,911,993,1070],with_to_kv_fn:[1199,1210],with_to_out_fn:[1199,1210],with_to_q_fn:[1199,1210],within:[15,18,19,911,914,1036,1041,1126,1130],without:[40,41,43,911,981,983,989,1114,1116,1225],wonder:1182,word:[15,16,17,911,914,1126,1130,1188,1189],work:[43,1224],worker:[837,846,847,1070],worker_class:[837,846,847,1070],worker_kwarg:1070,would:[43,911,918,1143,1148,1182,1225,1228],wrap:[15,40,41,42,43,911,924,1013,1027,1182],wrapper:43,write:[40,41,43,1182,1183,1228],written:[43,1182,1228],ws_new:[1013,1016,1018,1020,1021,1022],x1_i:[911,941,1048,1058],x2_i:[911,941,1048,1058],x_feat_dim:[1151,1162],x_i:[783,784],x_in:[1182,1224],x_inv:[1036,1038],x_max:[911,926],x_min:[911,926],x_sub:1070,xkk:1228,xkkm1:1228,xkm1km1:1228,xs0:1070,xs_t:1070,year:[1182,1228],yet:[1114,1123,1228],yield:[911,1009],you:[1182,1224,1225,1228],your:[1182,1224,1225,1228],your_awesome_project:1225,yourself:1182,zero:[40,41,77,113,193,267,368,399,476,512,591,628,777,793,794,911,930,977,979,985,986,1010,1012,1013,1015,1016,1020,1021,1151,1159,1182,1190,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1215,1216,1217,1218],zero_pad:[267,512,628,911],zeros_lik:[113,267,399,512,628,911],zip:1070,zk_e:1228},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":937,"function":[77,79,84,86,88,89,90,91,92,93,94,193,195,200,202,204,205,206,207,208,209,210,368,370,375,377,379,380,381,382,383,384,385,476,478,483,485,487,488,489,490,491,492,493,591,593,598,600,602,603,604,605,606,607,608,777,779,783,785,787,788,789,790,791,792,793],Ones:1195,Using:1225,abs:[268,513,629,912],aco:[723,1049],acosh:[724,1050],activ:[177,355,462,583,755,1143,1185],adam:1216,adam_step:1015,adam_upd:1016,algebra:[87,88,203,204,378,379,486,487,601,602,786,787],all:[95,211,386,494,609,794],all_equ:913,all_nested_indic:1115,api:[0,43,75,97,191,213,366,388,474,496,589,611,775],arang:[114,269,400,514,630,914],arg_nam:915,argmax:[115,401,515,631,916],argmin:[116,402,516,632,917],args_to_ivi:16,args_to_n:17,argsort:[633,918],arithmet:[1,98,214,389,497,612],arrai:[0,3,43,75,96,97,99,117,191,212,213,215,222,270,366,387,388,390,403,474,495,496,498,517,589,610,611,613,634,775,796,919],array_equ:[271,635,920],arrays_equ:921,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[725,1051],asinh:[726,1052],assert_supports_inplac:922,atan2:[728,1054],atan:[727,1053],atanh:[729,1055],attribut:[5,100,216,391,499,614],backend:[43,73],bilinear_resampl:[153,327,442,560,708,1030],binary_cross_entropi:1165,bitwis:[7,101,217,392,500,615],broadcast_to:[272,636,923],builder:51,builtin:[96,212,222,387,495,610,796],builtin_ab:[223,797],builtin_add:[224,798],builtin_and:[225,799],builtin_bool:[226,800],builtin_contain:[227,801],builtin_deepcopi:[228,802],builtin_dir:[229,803],builtin_eq:[230,804],builtin_float:[231,805],builtin_floordiv:[232,806],builtin_g:[233,807],builtin_getattr:[234,808],builtin_getattribut:[235,809],builtin_getitem:[236,810],builtin_gt:[237,811],builtin_int:[238,812],builtin_invert:[239,813],builtin_l:[240,814],builtin_lt:[241,815],builtin_mul:[242,816],builtin_n:[243,817],builtin_neg:[244,818],builtin_or:[245,819],builtin_po:[246,820],builtin_pow:[247,821],builtin_radd:[248,822],builtin_rand:[249,823],builtin_rfloordiv:[250,824],builtin_rmul:[251,825],builtin_ror:[252,826],builtin_rpow:[253,827],builtin_rsub:[254,828],builtin_rtruediv:[255,829],builtin_rxor:[256,830],builtin_setitem:[257,831],builtin_sub:[258,832],builtin_truediv:[259,833],builtin_xor:[260,834],cache_fn:924,cast:[118,273,404,518,637,891],ceil:[274,638,925],choleski:[712,1037],choose_random_framework:61,citat:1182,clear_framework_stack:62,clear_mem_on_dev:[622,853],clip:[275,639,926],clip_matrix_norm:927,clip_vector_norm:928,clone:1085,clone_arrai:1086,clone_it:1087,clone_nest:1088,clonedit:1072,cloneditem:1071,clonednest:1073,closest_valid_dtyp:892,code:1228,comparison:[9,102,218,393,501,616],compil:[276,405,640,835,836,1170],compile_graph:1171,concaten:[119,277,406,519,641,929],constant:[76,192,367,475,590,776],constant_pad:[278,520,642,930],contain:[40,41],container_typ:[643,931],content:1182,contribut:43,conv1d:[183,358,466,767,1152,1200],conv1d_transpos:[184,359,467,768,1153],conv1dtranspos:1201,conv2d:[185,360,468,585,769,1154,1202],conv2d_transpos:[186,361,469,770,1155],conv2dtranspos:1203,conv3d:[187,362,470,586,771,1156,1204],conv3d_transpos:[188,363,471,772,1157],conv3dtranspos:1205,convers:15,convert:[179,763,1188],convert_dtyp:893,copy_arrai:[644,932],copy_nest:1116,core:[105,221,396,504,619,795],cos:[730,1056],cosh:[731,1057],cprint:1227,creation:[77,193,368,476,591,777],cross:[279,645,933],cross_entropi:1166,cumprod:[120,280,407,646,934],cumsum:[647,935],current_framework:63,current_framework_str:[648,936],data:[79,83,195,199,370,374,478,482,593,597,779,782],debug_mod:45,debugg:44,default_devic:854,default_dtyp:894,default_float_dtyp:895,default_int_dtyp:896,default_nod:1089,depthwise_conv2d:[189,364,472,587,773,1158],depthwiseconv2d:1206,design:43,dev:[108,263,507,623,855],dev_clon:856,dev_clone_arrai:857,dev_clone_it:858,dev_clone_nest:859,dev_dist:860,dev_dist_arrai:861,dev_dist_it:862,dev_dist_nest:863,dev_from_str:[109,264,508,624,864],dev_to_str:[110,265,509,625,865],dev_unifi:866,dev_unify_arrai:867,dev_unify_it:868,dev_unify_nest:869,dev_util:870,devclonedit:840,devcloneditem:839,devclonednest:841,devdistit:843,devdistitem:842,devdistnest:844,devic:[20,106,261,397,505,620,837],devmapp:846,devmappermultiproc:847,distribute_nest:1090,divid:1058,document:1182,dropout:[1159,1207],dtype:[121,281,408,521,649,887,897],dtype_bit:[122,282,409,522,650,898],dtype_from_str:[123,283,410,523,651,899],dtype_to_str:[124,284,411,524,652,900],ecosystem:52,einops_rearrang:938,einops_reduc:939,einops_repeat:940,einsum:[169,346,454,575,747,1134],elementwis:[84,200,375,483,598,783],equal:[525,653,941],erf:[450,732,1059],execute_with_gradi:[150,322,437,555,702,1017],exist:942,exp:[733,1060],expand_dim:[285,654,943],extens:[87,203,378,486,601,786],finfo:[81,197,372,480,595,780],firstlayersiren:1192,flip:[125,286,412,526,655,944],float_img_to_uint8_img:1031,floor:[287,656,945],floormod:[288,657,946],fomaml_step:1067,fourier_encod:947,framework:59,full:[126,289,413,527,658,948],func:72,gather:[127,290,414,528,659,949],gather_nd:[128,291,415,529,660,950],geglu:1186,gelu:[356,463,756,1144,1187],gener:[22,113,267,399,512,628,911],get_all_arrays_in_memori:951,get_all_arrays_on_dev:871,get_framework:64,get_min_bas:952,get_min_denomin:953,get_num_dim:[661,954],get_referrers_recurs:955,global:1173,glorotuniform:1193,gpu_is_avail:[872,1091],gradient:[24,149,321,436,554,701,1013],gradient_descent_upd:1018,gradient_imag:[154,328,443,561,709,1032],graph:1176,gym:53,handler:59,has_nan:956,helper:1178,ident:[129,292,416,530,662,957],iinfo:[82,198,373,481,596,781],imag:[26,152,326,441,559,707,1029],index_nest:1117,indices_wher:[130,293,417,663,958],initi:1190,inplac:[11,103,219,394,502,617],inplace_arrays_support:959,inplace_decr:[131,294,418,531,664,960],inplace_incr:[132,295,419,532,665,961],inplace_upd:[133,296,420,533,666,962],inplace_variables_support:963,inv:[713,1038],invalid_dtyp:901,is_arrai:[134,297,421,534,667,964],is_float_dtyp:902,is_int_dtyp:903,is_vari:[151,323,438,556,703,1019],isfinit:[85,201,376,484,599,784],isinf:[298,535,668,965],isnan:[299,536,669,966],ivi:[43,50,51,52,53,54,55,56,57,58,774,1224,1225,1228],ivymodul:[180,764],jax:74,lamb:1217,lamb_upd:1020,lar:1218,lars_upd:1021,layer:[182,357,465,584,766,1151,1199],layer_norm:1169,layernorm:1214,leaky_relu:[757,1145],linalg:[28,156,330,445,563,711,1036],linear:[87,88,203,204,378,379,486,487,601,602,786,787,1160,1209],linear_resampl:[135,300,422,537,670,967],linspac:[136,301,423,538,671,968],log:[734,1061,1179],log_global_inference_abs_tim:1174,log_global_inference_rel_tim:1175,logic:[30,159,335,448,567,718,1044],logical_and:[336,719,1045],logical_not:[337,720,1046],logical_or:[338,721,1047],logspac:[137,302,424,539,672,969],loss:1164,lstm:1208,lstm_updat:1161,maml_step:1068,manipul:[89,205,380,488,603,788],map:1118,map_nest_at_index:1119,map_nest_at_indic:1120,match_kwarg:970,math:[32,160,339,449,568,722,1048],matmul:[303,540,673,971],matrix_norm:[157,331,446,564,714,1039],maximum:[674,972],mech:54,memori:55,meshgrid:[304,675,973],meta:[34,1066],method:[86,202,377,485,600,785],minimum:[676,974],model:56,modul:[1211,1212,1224],multi:1070,multi_head_attent:1162,multi_index_nest:1121,multidevcontain:42,multidevit:850,multidevitem:849,multidevnest:851,multiheadattent:1210,multinodeit:1076,multinodeitem:1075,multinodenest:1077,multinomi:[162,341,452,570,740,1127],multiprocess:[677,975],mxnet:190,nativ:1224,nest:1114,nested_indices_wher:1122,nested_map:1123,network:1224,next:1182,node:[1070,1092],node_dist:1093,node_dist_arrai:1094,node_dist_it:1095,node_str:1096,node_to_str:1097,node_util:1098,nodedistit:1079,nodedistitem:1078,nodedistnest:1080,nodemapp:1082,nodemappermultiproc:1083,norm:[1168,1213],num_arrays_in_memori:976,num_arrays_on_dev:873,num_cpu_cor:874,num_gpu:[111,875,1099],numpi:365,nutshel:1182,one_hot:[138,425,541,678,977],ones:[139,305,426,542,679,978],ones_lik:[140,306,427,543,680,979],oper:[1,3,7,9,11,13,43,98,99,101,102,103,104,214,215,217,218,219,220,389,390,392,393,394,395,497,498,500,501,502,503,612,613,615,616,617,618],optim:[1215,1219],optimizer_upd:1022,overview:1182,param:1180,percent_used_mem_on_dev:876,percent_used_mem_on_nod:1100,pinv:[332,715,1040],portabl:1228,print_all_arrays_in_memori:980,print_all_arrays_on_dev:877,profil:[107,262,398,506,621,852,1084],queue_timeout:981,randint:[163,342,571,741,1128],random:[36,161,340,451,569,739,1126],random_crop:1033,random_norm:[164,343,572,742,1129],random_uniform:[165,344,573,743,1130],reduce_max:[170,347,455,576,748,1135],reduce_mean:[171,348,456,577,749,1136],reduce_min:[172,349,457,578,750,1137],reduce_prod:[173,350,458,579,751,1138],reduce_std:[351,1139],reduce_sum:[174,352,459,580,752,1140],reduce_var:[175,353,460,581,753,1141],reduct:[38,168,345,453,574,746,1133],reflect:[13,104,220,395,503,618],relu:[758,1146],repeat:[307,681,982],reptile_step:1069,reshap:[682,983],robot:57,round:[308,683,984],run:1225,scaled_dot_product_attent:1163,scatter_flat:[141,309,428,544,684,985],scatter_nd:[142,310,429,545,685,986],search:[90,206,381,489,604,789],seed:[166,744,1131],sequenti:[1221,1222],set:[91,207,382,490,605,790],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:878,set_default_dtyp:904,set_default_float_dtyp:905,set_default_int_dtyp:906,set_default_nod:1101,set_exception_debug_mod:48,set_framework:65,set_min_bas:987,set_min_denomin:988,set_nest_at_index:1124,set_nest_at_indic:1125,set_queue_timeout:989,set_split_factor:[879,1102],set_tmp_dir:990,set_with_grad:1023,sgd:1220,shape:[686,991],shape_to_tupl:992,show_graph:1172,shuffl:[167,745,1132],sigmoid:[759,1147],signatur:[86,202,377,485,600,785],sin:[735,1062],sinh:[736,1063],siren:1196,softmax:[178,464,760,1148],softplu:[761,1149],sort:[92,208,383,491,606,791],sparse_cross_entropi:1167,split:[143,311,430,546,687,993],split_factor:[880,1103],split_func_cal:[881,1104],squeez:[144,312,431,547,688,994],stable_divid:995,stable_pow:996,stack:[313,689,997],stack_imag:[155,329,444,562,710,1034],statist:[93,209,384,492,607,792],stop_gradi:[324,439,557,704,1024],str_to_nod:1105,submodul:43,supports_inplac:998,svd:[333,565,716,1041],swapax:[548,690,999],tan:[737,1064],tanh:[738,762,1065,1150],tensorflow:473,tile:[314,549,691,1000],tmp_dir:1001,to_dev:[112,266,510,626,882],to_ivi:18,to_ivy_modul:[181,765,1189],to_list:[692,1002],to_n:19,to_nod:1106,to_numpi:[693,1003],to_scalar:[694,1004],torch:588,total_mem_on_dev:883,total_mem_on_nod:1107,tpu_is_avail:[511,627,884,1108],train:1224,trainabl:1224,transpos:[145,315,432,695,1005],tree:1182,try_else_non:1006,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[79,83,195,199,370,374,478,482,593,597,779,782],uint8_img_to_float_img:1035,unifi:1109,unify_arrai:1110,unify_it:1111,unify_nest:1112,unset_debug_mod:49,unset_default_devic:885,unset_default_dtyp:907,unset_default_float_dtyp:908,unset_default_int_dtyp:909,unset_framework:71,unset_with_grad:1025,unstack:[146,316,433,550,696,1007],used_mem_on_dev:886,used_mem_on_nod:1113,util:[94,210,385,493,608,793],valid_dtyp:910,value_is_nan:1008,variabl:[325,440,558,705,1026],variable_data:[706,1027],vector_norm:1042,vector_to_skew_symmetric_matrix:[158,334,447,566,717,1043],verbos:1226,vision:58,where:[317,697,1009,1182],why:1228,with_grad:1028,wrapper:72,write:1225,zero:[78,147,194,319,369,434,477,552,592,699,778,1011,1198],zero_pad:[318,551,698,1010],zeros_lik:[148,320,435,553,700,1012]}})