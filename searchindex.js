Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/container/MultiDevContainer", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_docstrings", "deep_dive/12_docstring_examples", "deep_dive/13_array_api_tests", "deep_dive/14_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_container", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/container/MultiDevContainer.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_docstrings.rst", "deep_dive/12_docstring_examples.rst", "deep_dive/13_array_api_tests.rst", "deep_dive/14_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_container.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "Array", "Variable", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "Container", "MultiDevContainer", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.Container.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 128, 129, 130, 131, 135, 136, 138, 139, 140, 150, 151, 152, 273, 315, 318, 345, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 360, 634, 641, 678, 684, 715, 717, 719, 721, 752, 923, 925, 935, 959, 962, 1040, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 169, 174, 179, 184, 189, 194, 199, 200, 201, 202, 203, 206, 211, 212, 217, 220, 225, 226, 231, 234, 237, 242, 247, 250, 255, 260, 265, 268, 273, 277, 278, 279, 284, 289, 294, 299, 300, 301, 302, 303, 307, 308, 313, 314, 315, 320, 321, 326, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 405, 409, 414, 418, 423, 427, 431, 435, 439, 443, 447, 451, 455, 459, 463, 468, 472, 477, 481, 485, 489, 493, 497, 501, 505, 509, 513, 517, 521, 525, 529, 533, 537, 541, 545, 549, 553, 557, 561, 565, 566, 567, 572, 576, 580, 584, 588, 592, 596, 601, 606, 611, 615, 619, 624, 629, 630, 634, 635, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710, 711, 712, 713, 714, 715, 717, 722, 726, 727, 731, 736, 740, 744, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 766, 767, 768, 769, 770, 771, 772, 777, 780, 783, 786, 789, 792, 795, 799, 802, 803, 806, 809, 812, 815, 818, 819, 822, 825, 828, 831, 834, 837, 840, 843, 844, 849, 854, 859, 860, 865, 869, 873, 877, 881, 885, 889, 893, 898, 899, 903, 907, 911, 915, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 947, 948, 949, 952, 953, 957, 958, 959, 960, 961, 962, 963, 964, 965, 970, 975, 980, 985, 986, 991, 996, 997, 1001, 1005, 1009, 1013, 1017, 1021, 1025, 1029, 1030, 1035, 1040, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1040], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 70, 71, 75, 76, 77, 78, 79, 116, 117, 124, 125, 126, 128, 132, 133, 135, 136, 138, 140, 151, 152, 634, 685, 947, 948, 952, 1040, 1048, 1049, 1050, 1051, 1052, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1077, 1084, 1085], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 128, 129, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088], "base": [0, 19, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 127, 129, 135, 151, 202, 234, 235, 236, 273, 345, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 360, 395, 485, 488, 529, 532, 533, 536, 537, 540, 541, 544, 584, 587, 634, 669, 692, 701, 715, 964, 965, 969, 970, 974, 980, 984, 996, 997, 1000, 1048, 1049, 1050, 1053, 1055, 1056, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "object": [0, 23, 72, 75, 76, 77, 78, 79, 124, 137, 140, 202, 220, 223, 273, 308, 311, 345, 390, 715, 923, 926, 928, 930, 931, 932, 937, 938, 939, 940, 947, 958, 1053, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1074, 1075], "__init__": [0, 1, 4, 5, 26, 27, 28, 75, 76, 77, 78, 79, 119, 126, 130, 135, 137, 138, 139, 140, 273, 274, 275, 276, 345, 346, 353, 354, 355, 356, 357, 358, 359, 360, 715, 716, 947, 948, 952, 1040, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "choose_random_backend": 0, "exclud": [0, 2, 122, 135, 202, 203, 204, 947, 953, 955], "none": [0, 2, 5, 12, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 122, 124, 125, 129, 130, 131, 132, 133, 135, 137, 139, 140, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 301, 302, 303, 305, 308, 310, 311, 312, 315, 317, 318, 319, 321, 323, 325, 326, 328, 330, 332, 334, 336, 344, 345, 354, 355, 363, 364, 387, 388, 389, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 639, 640, 646, 647, 648, 649, 651, 652, 653, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 672, 674, 675, 679, 685, 687, 690, 691, 692, 693, 695, 700, 701, 705, 706, 708, 711, 712, 715, 722, 723, 724, 725, 727, 728, 729, 730, 731, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 818, 819, 820, 821, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 929, 934, 935, 936, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1051, 1052, 1053, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "clear_backend_stack": 0, "current_backend": [0, 26, 27, 77, 78, 119, 125], "arg": [0, 4, 21, 23, 26, 27, 29, 30, 31, 72, 75, 76, 135, 137, 139, 345, 354, 369, 373, 377, 389, 634, 691, 1051, 1052, 1074, 1075], "kwarg": [0, 4, 23, 26, 27, 29, 30, 31, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 135, 137, 139, 345, 354, 369, 373, 377, 634, 684, 1051, 1052, 1074, 1075], "return": [0, 4, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 344, 345, 354, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 690, 691, 692, 693, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 742, 743, 744, 745, 746, 747, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 929, 933, 934, 935, 936, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1045, 1051, 1052, 1062, 1071, 1072, 1078, 1082], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 26, 27, 75, 76, 77, 78, 79, 125, 131, 135, 140, 151, 152, 273, 313, 314, 320, 344, 345, 354, 378, 379, 383, 385, 634, 668, 675, 679, 686, 688, 698, 715, 753, 923, 924, 933, 934, 1040], "prioriti": [0, 4, 19, 75, 76, 132], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 29, 30, 31, 32, 33, 72, 75, 76, 77, 78, 79, 118, 119, 121, 122, 124, 125, 126, 128, 129, 133, 135, 137, 138, 199, 200, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 332, 335, 345, 354, 355, 369, 373, 377, 395, 396, 399, 409, 412, 414, 417, 418, 421, 459, 462, 493, 496, 565, 576, 579, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 634, 640, 641, 645, 655, 662, 684, 691, 754, 757, 761, 764, 770, 771, 772, 775, 783, 785, 859, 893, 896, 923, 929, 941, 942, 945, 964, 970, 974, 996, 1001, 1004, 1021, 1024, 1029, 1030, 1033, 1043, 1045, 1051, 1052, 1074, 1075], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 26, 27, 29, 32, 33, 34, 35, 72, 75, 76, 118, 120, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 151, 152, 201, 202, 237, 240, 255, 257, 259, 260, 262, 264, 273, 313, 314, 345, 364, 388, 395, 588, 591, 634, 643, 715, 722, 724, 727, 729, 736, 738, 744, 746, 771, 822, 824, 825, 827, 923, 929, 935, 996, 1017, 1020, 1025, 1028, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1084, 1085], "paramet": [0, 4, 5, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 70, 71, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 116, 117, 119, 121, 124, 137, 138, 151, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 277, 278, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 311, 313, 314, 315, 318, 320, 321, 324, 326, 329, 331, 332, 335, 337, 338, 339, 340, 344, 345, 354, 355, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 690, 691, 692, 693, 694, 696, 697, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 731, 732, 733, 734, 735, 736, 738, 740, 742, 744, 746, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1043, 1045, 1051, 1052, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 48, 49, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 88, 89, 94, 95, 116, 117, 118, 119, 120, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 151, 152, 202, 203, 204, 206, 207, 209, 212, 213, 215, 220, 223, 225, 226, 227, 229, 237, 240, 242, 243, 245, 250, 251, 253, 268, 270, 272, 273, 294, 295, 296, 297, 298, 332, 335, 345, 354, 355, 364, 379, 383, 388, 389, 395, 501, 504, 611, 614, 634, 655, 662, 663, 664, 665, 666, 667, 704, 715, 722, 724, 736, 738, 754, 761, 762, 763, 764, 765, 766, 769, 771, 783, 785, 822, 824, 834, 836, 859, 877, 880, 889, 892, 899, 902, 919, 920, 921, 922, 923, 925, 935, 936, 947, 948, 949, 950, 952, 953, 955, 959, 963, 964, 965, 969, 975, 979, 996, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040, 1046, 1051, 1052, 1062, 1070, 1073, 1078, 1082], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 26, 27, 34, 35, 36, 37, 42, 43, 52, 53, 54, 55, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 151, 152, 163, 184, 187, 194, 195, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 294, 295, 296, 297, 298, 299, 303, 306, 308, 311, 315, 318, 320, 344, 345, 354, 355, 365, 370, 371, 372, 373, 374, 375, 376, 377, 379, 383, 385, 387, 388, 389, 395, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 588, 591, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 637, 639, 640, 652, 653, 655, 662, 663, 664, 665, 666, 667, 668, 674, 678, 686, 687, 688, 690, 691, 705, 706, 708, 713, 715, 722, 724, 726, 727, 729, 731, 733, 735, 736, 738, 740, 742, 744, 746, 749, 751, 752, 754, 769, 771, 772, 774, 776, 777, 779, 783, 785, 799, 801, 819, 821, 822, 824, 834, 836, 837, 839, 843, 849, 850, 852, 854, 855, 857, 859, 865, 868, 877, 880, 885, 888, 893, 894, 895, 896, 897, 898, 903, 906, 923, 928, 929, 930, 931, 936, 937, 938, 939, 940, 947, 948, 949, 950, 953, 955, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040, 1043, 1045, 1051, 1052, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1084, 1085], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 75, 76, 128, 129, 133, 137, 152, 634, 711, 1040], "infer": [0, 4, 34, 35, 118, 126, 130, 131, 135, 140, 199, 200, 202, 203, 204, 206, 207, 209, 212, 213, 215, 225, 226, 227, 229, 242, 243, 245, 250, 251, 253, 268, 270, 272, 395, 501, 504, 634, 671, 697, 859, 889, 892], "when": [0, 4, 14, 15, 18, 19, 20, 23, 52, 53, 72, 75, 76, 77, 78, 79, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 140, 152, 273, 279, 282, 345, 395, 409, 412, 489, 492, 584, 587, 634, 645, 678, 701, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 923, 934, 959, 960, 961, 963, 996, 1001, 1004, 1009, 1012, 1017, 1020, 1025, 1028, 1040, 1074, 1075], "global": [0, 4, 5, 6, 12, 75, 76, 77, 78, 79, 125, 126, 130, 131, 135, 273, 300, 301, 302, 345, 354, 355, 387, 388, 389, 634, 669, 670, 689, 692, 693, 694, 700, 701, 715, 753, 941, 942, 945, 1076, 1077], "set": [0, 4, 5, 6, 12, 14, 17, 19, 29, 32, 33, 42, 43, 44, 45, 63, 72, 75, 76, 88, 89, 90, 91, 109, 118, 119, 124, 125, 127, 128, 129, 130, 131, 132, 135, 137, 138, 345, 364, 374, 375, 386, 387, 388, 389, 395, 427, 430, 634, 635, 636, 637, 638, 639, 692, 693, 694, 695, 696, 715, 722, 724, 727, 729, 731, 732, 733, 734, 735, 736, 738, 740, 742, 744, 746, 771, 777, 779, 799, 801, 803, 805, 812, 814, 819, 821, 923, 924, 933, 934, 935, 939, 940, 947, 957, 959, 960, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 989, 991, 994, 996, 1017, 1020, 1025, 1028, 1062, 1071, 1078, 1079, 1080, 1081, 1082, 1083], "ret": [0, 4, 5, 12, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 119, 121, 135, 140, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 277, 278, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 303, 306, 307, 308, 311, 313, 314, 315, 318, 320, 321, 324, 326, 329, 331, 332, 335, 344, 345, 354, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 690, 691, 697, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 731, 732, 733, 734, 735, 736, 738, 740, 742, 744, 746, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 919, 920, 921, 922, 923, 924, 925, 926, 929, 933, 934, 935, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1043, 1045, 1051, 1052, 1078, 1082], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 163, 164, 165, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 202, 225, 226, 229, 237, 240, 247, 248, 250, 253, 265, 267, 268, 272, 273, 279, 282, 294, 295, 296, 297, 298, 303, 306, 313, 314, 326, 329, 344, 345, 364, 365, 367, 379, 380, 381, 382, 383, 386, 388, 390, 392, 393, 395, 396, 397, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 431, 434, 435, 438, 439, 442, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 485, 488, 493, 494, 495, 496, 501, 504, 505, 508, 521, 524, 525, 528, 565, 566, 572, 575, 576, 579, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 624, 625, 626, 627, 628, 629, 634, 635, 636, 637, 638, 639, 642, 643, 651, 652, 659, 662, 663, 664, 665, 666, 667, 670, 681, 695, 697, 698, 699, 704, 705, 706, 707, 708, 709, 710, 712, 715, 717, 718, 719, 720, 721, 731, 732, 733, 734, 735, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 792, 794, 803, 805, 809, 811, 822, 824, 828, 830, 831, 833, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 868, 873, 876, 877, 880, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 923, 926, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971, 972, 973, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1017, 1020, 1021, 1024, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 29, 32, 33, 34, 35, 50, 51, 52, 53, 54, 55, 72, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 140, 152, 194, 195, 197, 202, 203, 204, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 294, 296, 298, 332, 335, 345, 364, 388, 395, 396, 398, 399, 400, 401, 404, 405, 408, 409, 411, 412, 413, 414, 417, 418, 420, 421, 422, 423, 426, 427, 430, 459, 461, 462, 463, 465, 466, 467, 468, 471, 485, 488, 489, 492, 493, 495, 496, 529, 532, 533, 536, 541, 544, 545, 548, 553, 556, 557, 560, 567, 570, 584, 587, 588, 591, 592, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 614, 624, 625, 627, 628, 629, 630, 633, 634, 635, 637, 639, 663, 665, 667, 678, 705, 706, 708, 715, 722, 724, 727, 729, 731, 733, 735, 736, 738, 740, 742, 744, 746, 753, 771, 772, 773, 774, 775, 776, 777, 779, 799, 801, 803, 805, 812, 814, 815, 817, 819, 821, 822, 824, 834, 836, 837, 839, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 873, 876, 877, 880, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 919, 920, 921, 923, 935, 936, 947, 952, 953, 955, 959, 960, 961, 962, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040], "import": [0, 4, 15, 20, 70, 71, 116, 117, 119, 121, 122, 126, 128, 129, 130, 131, 132, 133, 135, 137, 138, 140, 152, 345, 386, 1040, 1046], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 42, 43, 75, 76, 88, 89, 120, 124, 126, 130, 131, 132, 135, 137, 140, 634, 705, 706, 707, 708, 709, 996, 997, 1000, 1040], "np": [0, 4, 120, 124, 128, 130, 131, 132, 137, 138, 140, 1040], "x": [0, 4, 12, 21, 24, 25, 26, 27, 29, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 119, 120, 121, 122, 124, 125, 126, 129, 132, 133, 135, 137, 138, 139, 140, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 202, 206, 209, 210, 212, 215, 216, 220, 223, 224, 226, 229, 230, 237, 240, 242, 245, 246, 250, 253, 254, 255, 256, 259, 260, 261, 264, 265, 267, 268, 269, 272, 273, 279, 282, 283, 289, 292, 293, 294, 295, 296, 297, 298, 303, 306, 326, 329, 345, 364, 365, 366, 367, 370, 371, 379, 383, 388, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 553, 556, 565, 566, 572, 575, 580, 583, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 624, 625, 626, 627, 628, 629, 630, 633, 634, 642, 643, 644, 646, 647, 649, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 673, 674, 676, 677, 678, 680, 681, 682, 683, 687, 697, 699, 702, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 726, 731, 732, 733, 734, 735, 749, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 799, 801, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 822, 824, 825, 827, 828, 830, 831, 833, 837, 839, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 907, 910, 911, 914, 915, 918, 923, 924, 926, 929, 933, 934, 935, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 976, 979, 980, 981, 984, 985, 986, 989, 990, 991, 994, 995, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1062, 1073], "arrai": [0, 4, 18, 19, 20, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 152, 153, 161, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 197, 198, 201, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 239, 240, 241, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 279, 282, 284, 286, 287, 288, 289, 292, 294, 296, 297, 298, 303, 306, 308, 311, 315, 318, 321, 324, 326, 329, 332, 335, 340, 345, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 379, 383, 385, 389, 390, 395, 396, 398, 399, 400, 401, 404, 405, 408, 409, 411, 412, 413, 414, 417, 418, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 461, 462, 463, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 627, 628, 629, 630, 633, 634, 635, 637, 638, 639, 642, 643, 644, 646, 647, 649, 651, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 671, 673, 674, 675, 676, 677, 678, 680, 681, 683, 686, 687, 688, 690, 691, 695, 697, 699, 702, 704, 705, 706, 708, 709, 710, 712, 713, 714, 715, 717, 719, 720, 721, 722, 724, 727, 729, 731, 733, 734, 735, 736, 738, 740, 742, 744, 746, 749, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 846, 847, 848, 849, 851, 852, 853, 854, 856, 857, 858, 859, 860, 862, 863, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 919, 920, 921, 922, 923, 925, 926, 935, 936, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971, 973, 974, 975, 979, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1043, 1045, 1062, 1070, 1073], "2": [0, 4, 18, 19, 21, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 122, 124, 126, 129, 134, 135, 137, 138, 139, 140, 152, 163, 169, 170, 172, 174, 177, 179, 180, 182, 184, 187, 194, 195, 196, 197, 198, 201, 202, 225, 226, 229, 237, 240, 247, 248, 250, 253, 268, 272, 273, 279, 282, 294, 295, 296, 297, 298, 303, 306, 326, 329, 345, 364, 365, 367, 379, 381, 383, 390, 395, 396, 397, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 420, 421, 422, 423, 426, 427, 430, 435, 438, 439, 442, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 466, 468, 471, 485, 488, 493, 494, 495, 496, 501, 504, 505, 508, 521, 524, 525, 528, 541, 544, 565, 566, 572, 575, 576, 579, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 624, 625, 626, 627, 628, 629, 634, 635, 636, 637, 638, 642, 643, 646, 647, 649, 652, 659, 662, 663, 664, 665, 666, 667, 681, 697, 699, 704, 715, 717, 718, 719, 720, 721, 731, 732, 733, 734, 735, 754, 757, 758, 759, 760, 761, 762, 763, 764, 765, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 784, 785, 792, 794, 795, 798, 799, 801, 803, 805, 809, 811, 812, 814, 815, 817, 822, 824, 828, 829, 830, 831, 833, 837, 838, 839, 843, 844, 845, 846, 847, 848, 849, 851, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 868, 873, 876, 877, 880, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 907, 910, 923, 926, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971, 972, 973, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040], "0": [0, 4, 19, 24, 25, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 124, 135, 137, 138, 139, 140, 163, 164, 165, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 197, 198, 202, 203, 204, 217, 218, 219, 231, 232, 234, 235, 236, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 272, 273, 279, 282, 294, 296, 297, 298, 303, 306, 308, 311, 326, 329, 345, 347, 350, 354, 357, 361, 364, 365, 367, 370, 371, 372, 373, 374, 375, 376, 377, 379, 383, 386, 388, 389, 393, 395, 396, 397, 399, 400, 401, 404, 405, 408, 409, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 443, 446, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 485, 488, 489, 492, 493, 494, 495, 496, 505, 508, 525, 528, 529, 532, 533, 536, 541, 544, 565, 566, 567, 570, 572, 575, 576, 579, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 642, 643, 646, 647, 649, 651, 652, 653, 659, 662, 663, 664, 665, 666, 667, 672, 681, 687, 690, 691, 697, 704, 705, 706, 707, 708, 709, 710, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 784, 785, 792, 794, 822, 824, 828, 830, 831, 832, 833, 837, 839, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 880, 881, 884, 885, 888, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 907, 910, 915, 917, 923, 926, 935, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971, 972, 973, 974, 980, 984, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1005, 1008, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1053, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085], "print": [0, 4, 5, 6, 12, 18, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 122, 124, 129, 135, 137, 138, 139, 163, 164, 165, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 197, 198, 202, 225, 226, 229, 237, 240, 247, 248, 250, 253, 265, 267, 268, 272, 273, 279, 282, 294, 295, 296, 297, 298, 303, 306, 313, 314, 326, 329, 344, 345, 365, 379, 380, 381, 382, 383, 385, 388, 392, 395, 396, 397, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 431, 434, 435, 438, 439, 442, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 485, 488, 493, 494, 495, 496, 501, 504, 505, 508, 521, 524, 525, 528, 565, 566, 572, 575, 576, 579, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 624, 625, 626, 627, 628, 629, 634, 635, 636, 637, 638, 639, 642, 643, 651, 652, 659, 662, 663, 664, 665, 666, 667, 670, 688, 697, 699, 704, 705, 706, 707, 708, 709, 710, 715, 717, 718, 720, 721, 731, 732, 733, 734, 735, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 792, 794, 809, 811, 822, 824, 828, 830, 831, 833, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 873, 876, 877, 880, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 907, 910, 923, 926, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971, 972, 973, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1017, 1020, 1021, 1024, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040], "function": [0, 4, 5, 6, 14, 19, 21, 24, 25, 26, 27, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 132, 133, 134, 136, 137, 138, 139, 150, 151, 163, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 277, 278, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 311, 313, 314, 315, 318, 320, 321, 324, 326, 329, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 731, 732, 733, 734, 735, 736, 738, 740, 742, 744, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971, 972, 973, 974, 975, 979, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1045, 1048, 1049, 1050, 1078, 1081, 1083], "py": [0, 4, 5, 19, 119, 120, 121, 124, 125, 126, 130, 131, 133, 135, 137, 139, 140, 947, 948, 952], "noqa": [0, 4, 5, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 409, 412, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 525, 528, 565, 576, 579, 592, 595, 596, 599, 611, 614, 615, 618, 624, 628, 629, 771, 780, 782, 783, 785, 859, 873, 876, 877, 880, 893, 896, 996, 1001, 1004], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 151, 163, 164, 167, 169, 172, 184, 187, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 220, 223, 234, 235, 255, 257, 259, 260, 262, 264, 273, 277, 278, 279, 282, 294, 296, 298, 299, 307, 313, 314, 320, 321, 324, 331, 340, 344, 345, 354, 355, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 385, 386, 387, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 567, 570, 576, 579, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 637, 639, 640, 642, 645, 646, 654, 655, 661, 663, 664, 665, 666, 667, 676, 677, 678, 680, 681, 682, 683, 685, 690, 691, 692, 693, 694, 699, 700, 701, 705, 706, 708, 714, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 731, 733, 735, 736, 738, 740, 742, 744, 746, 749, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 895, 897, 898, 911, 914, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 945, 947, 948, 952, 959, 960, 961, 962, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040, 1051, 1052, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082], "set_backend": [0, 4, 5, 12, 125, 126, 127, 130, 273, 313, 314, 345, 386, 634, 697, 1040], "ha": [0, 4, 5, 14, 15, 16, 19, 72, 75, 76, 121, 122, 124, 125, 126, 127, 130, 131, 133, 135, 137, 139, 140, 151, 152, 202, 237, 240, 345, 364, 395, 396, 399, 567, 570, 584, 587, 715, 753, 771, 795, 798, 818, 819, 821, 822, 824, 831, 833, 859, 873, 876, 899, 902, 964, 965, 969, 970, 974, 980, 984, 996, 1005, 1008, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028], "over": [0, 4, 14, 16, 18, 70, 71, 72, 75, 76, 116, 117, 121, 122, 124, 126, 132, 137, 152, 771, 799, 801, 828, 830, 834, 836, 837, 839, 941, 942, 945, 947, 953, 955, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1076, 1077], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 34, 35, 42, 43, 68, 69, 70, 71, 75, 76, 88, 89, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 199, 200, 202, 203, 204, 206, 207, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 345, 390, 395, 396, 399, 409, 412, 414, 417, 418, 421, 459, 462, 477, 480, 493, 496, 505, 508, 525, 528, 565, 576, 579, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 634, 635, 636, 637, 638, 639, 655, 656, 657, 658, 659, 662, 673, 680, 681, 682, 683, 700, 701, 715, 726, 754, 757, 761, 764, 768, 770, 771, 772, 775, 783, 785, 859, 893, 896, 919, 920, 921, 922, 923, 926, 929, 933, 941, 942, 945, 947, 953, 955, 964, 970, 974, 996, 1001, 1004, 1029, 1030, 1033, 1039, 1040], "pass": [0, 4, 20, 70, 71, 75, 76, 77, 78, 79, 116, 117, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 137, 152, 273, 299, 345, 354, 389, 395, 427, 430, 634, 645, 678, 715, 752, 919, 920, 921, 1051, 1052, 1074, 1075, 1078, 1082, 1084, 1085], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 44, 45, 90, 91, 120, 124, 126, 130, 131, 132, 135, 137, 140, 152, 715, 731, 732, 733, 734, 735, 964, 965, 969, 970, 974, 980, 984, 1040], "get_backend": [0, 125, 126], "specifi": [0, 5, 34, 35, 52, 53, 54, 55, 72, 75, 76, 100, 101, 118, 120, 124, 125, 130, 131, 132, 135, 138, 139, 140, 202, 203, 204, 211, 225, 231, 232, 234, 235, 247, 248, 255, 257, 259, 260, 262, 264, 265, 267, 273, 279, 282, 289, 292, 345, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 383, 385, 388, 389, 390, 395, 588, 591, 634, 640, 652, 662, 663, 666, 673, 713, 771, 783, 785, 799, 801, 828, 830, 831, 833, 834, 836, 837, 839, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 877, 880, 893, 894, 895, 896, 897, 899, 902, 903, 906, 915, 918, 923, 928, 930, 931, 937, 938, 939, 940, 959, 960, 961, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 996, 997, 1000, 1013, 1016, 1021, 1024, 1029, 1030, 1033, 1035, 1038], "isn": [0, 5, 19, 138, 152], "t": [0, 5, 15, 16, 18, 19, 20, 21, 26, 27, 70, 71, 116, 117, 122, 124, 130, 135, 137, 138, 139, 140, 152, 634, 643, 754, 767, 768], "associ": [0, 5, 19, 124, 125, 127, 152, 395, 409, 412, 567, 570, 771, 803, 805, 812, 814, 840, 842], "option": [0, 5, 18, 19, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 70, 71, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 116, 117, 119, 120, 121, 122, 124, 125, 129, 130, 131, 132, 133, 135, 140, 152, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 294, 296, 298, 299, 300, 301, 302, 320, 344, 345, 364, 388, 389, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 637, 639, 640, 646, 647, 649, 652, 653, 654, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 674, 685, 687, 690, 691, 700, 701, 705, 706, 708, 715, 731, 733, 735, 749, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 919, 920, 921, 922, 923, 924, 929, 934, 935, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 958, 959, 960, 961, 963, 964, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "str": [0, 5, 23, 29, 30, 31, 48, 49, 72, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 130, 131, 133, 194, 195, 197, 199, 200, 202, 237, 240, 273, 277, 294, 296, 298, 299, 300, 301, 307, 308, 311, 315, 318, 320, 321, 324, 326, 329, 337, 338, 339, 344, 345, 361, 364, 365, 367, 370, 371, 372, 373, 389, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 637, 639, 640, 654, 656, 657, 658, 663, 665, 667, 685, 690, 691, 705, 706, 708, 731, 733, 735, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 771, 772, 774, 776, 815, 817, 893, 895, 897, 919, 920, 921, 922, 923, 929, 996, 997, 1000], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 70, 71, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 151, 152, 715, 726, 1040, 1046], "want": [0, 5, 15, 17, 18, 19, 70, 71, 116, 117, 124, 138, 139, 140, 152], "retriev": [0, 5, 19, 634, 640], "i": [0, 5, 19, 21, 118, 124, 135, 138, 140, 202, 203, 204, 237, 240, 395, 396, 399, 427, 430, 443, 446, 451, 454, 459, 462, 493, 496, 497, 500, 509, 512, 565, 566, 572, 575, 584, 587, 588, 591, 634, 642, 643, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 761, 764, 771, 777, 779, 795, 798, 803, 805, 812, 814, 819, 821, 822, 824, 831, 833, 837, 839, 859, 903, 906, 923, 926, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1017, 1020, 1021, 1024, 1025, 1028], "e": [0, 5, 15, 16, 17, 19, 21, 72, 118, 124, 129, 138, 152, 201, 202, 237, 240, 273, 278, 332, 335, 345, 361, 395, 396, 399, 427, 430, 443, 446, 451, 454, 459, 462, 485, 488, 493, 496, 497, 500, 509, 512, 529, 532, 537, 540, 565, 566, 572, 575, 584, 587, 588, 591, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 771, 777, 779, 795, 798, 803, 805, 812, 814, 819, 821, 822, 824, 837, 839, 859, 903, 906, 923, 926, 947, 952, 953, 955, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028], "one": [0, 5, 15, 16, 18, 19, 26, 27, 72, 75, 76, 86, 87, 88, 89, 96, 97, 100, 101, 102, 103, 104, 105, 120, 122, 124, 125, 128, 129, 130, 132, 133, 134, 137, 138, 140, 152, 202, 203, 204, 237, 240, 273, 284, 287, 294, 297, 345, 374, 375, 376, 377, 389, 395, 396, 400, 409, 413, 418, 422, 565, 596, 600, 601, 605, 634, 635, 637, 638, 639, 663, 667, 684, 687, 690, 691, 705, 706, 708, 771, 772, 776, 795, 798, 799, 801, 809, 811, 815, 817, 834, 836, 837, 839, 859, 860, 864, 873, 876, 877, 880, 893, 896, 897, 899, 902, 941, 942, 944, 945, 946, 949, 951, 959, 960, 962, 964, 965, 969, 970, 974, 975, 979, 980, 984, 996, 997, 1000, 1040], "default": [0, 5, 19, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 116, 117, 120, 121, 122, 124, 125, 126, 129, 130, 131, 139, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 294, 296, 298, 300, 301, 302, 303, 306, 345, 354, 355, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 384, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 646, 647, 649, 652, 653, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 671, 672, 673, 674, 675, 678, 679, 680, 681, 683, 684, 685, 687, 689, 690, 691, 694, 697, 700, 701, 705, 706, 708, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 731, 732, 733, 734, 735, 736, 738, 740, 742, 744, 746, 749, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 919, 920, 921, 922, 923, 924, 925, 929, 933, 934, 935, 936, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1051, 1052, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "torch": [0, 5, 12, 19, 119, 120, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 152, 199, 200, 273, 313, 314, 345, 386, 634, 697, 859, 873, 876, 1040], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 120, 124, 130, 131, 132, 135, 140, 152, 1040], "mxnet": [0, 5, 15, 20, 130, 131, 132, 135, 140, 1040], "either": [0, 5, 12, 18, 19, 21, 72, 75, 76, 121, 122, 124, 125, 126, 129, 130, 131, 135, 137, 138, 152, 202, 220, 223, 395, 409, 412, 427, 430, 513, 516, 529, 532, 533, 536, 541, 544, 545, 548, 567, 570, 588, 591, 596, 599, 601, 604, 624, 628, 634, 655, 680, 684, 685, 771, 795, 798, 919, 920, 921, 922, 996, 1013, 1016, 1021, 1024, 1062, 1073, 1074, 1075], "doesn": [0, 5, 18, 21, 122, 124, 130, 135, 152], "matter": [0, 5, 14, 122], "been": [0, 5, 19, 120, 121, 124, 125, 126, 129, 130, 131, 133, 135, 151, 152, 345, 364, 634, 656, 657, 658, 947, 948], "ivy_np": [0, 5, 124], "us": [0, 5, 12, 15, 16, 17, 19, 20, 23, 40, 41, 54, 55, 70, 71, 72, 75, 76, 77, 78, 79, 86, 87, 100, 101, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 151, 152, 163, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 198, 201, 273, 307, 345, 354, 355, 380, 384, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 414, 417, 418, 419, 420, 435, 438, 455, 458, 468, 471, 505, 508, 525, 528, 566, 572, 575, 576, 579, 592, 595, 596, 597, 598, 611, 614, 634, 662, 669, 670, 684, 690, 691, 692, 693, 700, 701, 715, 717, 720, 722, 724, 736, 738, 740, 742, 754, 760, 766, 767, 769, 770, 771, 780, 782, 783, 785, 799, 801, 843, 844, 847, 859, 873, 876, 877, 880, 885, 888, 893, 894, 895, 896, 897, 907, 910, 919, 920, 921, 922, 923, 924, 926, 932, 933, 934, 936, 941, 942, 945, 959, 960, 961, 962, 964, 965, 969, 996, 997, 1000, 1029, 1030, 1033, 1040, 1062, 1070, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 120, 122, 124, 125, 128, 132, 139], "call": [0, 6, 12, 15, 21, 23, 72, 77, 78, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 152, 345, 389, 634, 689, 694, 711, 715, 726, 923, 924, 929, 933, 934, 1062, 1073, 1074, 1075, 1078, 1082], "nativ": [0, 6, 29, 31, 32, 33, 34, 35, 75, 76, 124, 130, 132, 137, 138, 202, 242, 243, 245, 273, 277, 278, 299, 345, 361, 362, 363, 364, 365, 384, 391, 394, 634, 678, 680, 683, 1051, 1052], "native_arrai": [0, 6, 12, 34, 35, 42, 43, 80, 81, 88, 89, 124, 163, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 198, 202, 237, 240, 268, 272, 273, 294, 297, 303, 306, 326, 329, 345, 367, 383, 395, 396, 399, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 493, 496, 505, 508, 525, 528, 566, 572, 575, 576, 579, 596, 599, 601, 604, 606, 609, 611, 614, 615, 618, 629, 634, 635, 636, 637, 638, 639, 643, 651, 652, 659, 662, 663, 666, 699, 704, 705, 706, 708, 709, 710, 715, 717, 720, 731, 734, 754, 757, 760, 761, 764, 770, 771, 777, 779, 780, 782, 783, 785, 828, 830, 843, 844, 847, 854, 857, 859, 860, 863, 873, 876, 877, 880, 885, 888, 898, 907, 910, 947, 948, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 996, 997, 1000, 1001, 1004, 1029, 1030, 1033], "1": [0, 6, 12, 15, 16, 21, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 68, 69, 72, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 120, 122, 124, 125, 129, 132, 133, 134, 135, 137, 138, 139, 140, 152, 163, 164, 165, 169, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 194, 195, 196, 197, 198, 202, 203, 204, 205, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 268, 272, 273, 279, 282, 294, 295, 296, 297, 298, 303, 306, 308, 311, 326, 329, 345, 349, 352, 354, 359, 364, 365, 367, 369, 373, 377, 379, 382, 383, 390, 395, 396, 397, 398, 399, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 427, 430, 435, 438, 439, 442, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 485, 488, 489, 492, 493, 494, 495, 496, 501, 504, 505, 508, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 565, 566, 572, 575, 576, 579, 584, 587, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 624, 625, 626, 627, 628, 629, 634, 635, 636, 637, 638, 639, 642, 643, 651, 652, 659, 662, 663, 664, 665, 666, 667, 681, 687, 690, 691, 697, 699, 701, 704, 705, 706, 707, 708, 709, 710, 713, 715, 717, 718, 719, 720, 721, 731, 733, 734, 735, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 792, 794, 803, 805, 809, 811, 819, 821, 822, 824, 828, 830, 831, 833, 834, 835, 836, 837, 839, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 868, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 923, 926, 935, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971, 972, 973, 974, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1000, 1001, 1004, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1084, 1085], "type": [0, 6, 12, 18, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 127, 128, 129, 131, 132, 133, 135, 137, 138, 140, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 344, 345, 361, 362, 363, 364, 365, 367, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 645, 646, 647, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 673, 674, 676, 677, 678, 680, 681, 682, 683, 687, 690, 691, 692, 693, 695, 697, 698, 700, 701, 702, 704, 705, 706, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 742, 743, 744, 745, 746, 747, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 929, 933, 934, 935, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073], "ndarrai": [0, 6, 34, 35, 120, 128, 130, 131, 132, 137, 202, 206, 207, 209, 242, 245, 634, 705, 709], "Or": [0, 6, 138], "jaxlib": [0, 6, 18, 120, 130, 131, 137], "xla_extens": [0, 6, 120, 130, 131, 137], "devicearrai": [0, 6, 137], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 42, 43, 44, 45, 50, 51, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 129, 132, 133, 138, 139, 140, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 208, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 279, 281, 282, 283, 284, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 308, 310, 312, 315, 317, 319, 321, 323, 325, 326, 328, 329, 330, 332, 334, 336, 344, 345, 364, 365, 376, 380, 381, 384, 389, 392, 394, 395, 396, 398, 400, 401, 403, 405, 407, 409, 411, 413, 414, 416, 418, 420, 422, 423, 425, 427, 429, 431, 433, 435, 437, 438, 439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 459, 461, 463, 465, 467, 468, 470, 472, 474, 476, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 504, 505, 507, 508, 509, 511, 512, 513, 515, 516, 517, 519, 520, 521, 523, 524, 525, 527, 528, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 556, 557, 559, 560, 561, 563, 567, 569, 571, 572, 574, 576, 578, 579, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 617, 619, 620, 622, 624, 625, 627, 630, 632, 634, 635, 636, 637, 638, 639, 642, 643, 647, 648, 652, 655, 659, 661, 663, 665, 667, 671, 678, 680, 681, 683, 684, 695, 697, 698, 705, 706, 708, 712, 713, 715, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 753, 771, 772, 773, 774, 775, 776, 795, 797, 799, 800, 801, 822, 824, 837, 838, 839, 844, 846, 848, 849, 851, 853, 854, 856, 858, 859, 860, 862, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 898, 899, 901, 903, 905, 907, 909, 911, 913, 915, 917, 919, 920, 921, 922, 923, 924, 925, 929, 933, 934, 935, 936, 942, 944, 946, 947, 948, 953, 954, 956, 959, 960, 961, 963, 964, 965, 966, 968, 969, 970, 971, 973, 974, 975, 976, 978, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1051, 1052, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 126], "unset": [0, 12, 126, 135, 137], "adjust": [0, 12, 996, 1017, 1020, 1025, 1028], "dict": [0, 12, 29, 30, 31, 32, 33, 72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 129, 133, 138, 139, 194, 195, 197, 294, 296, 298, 345, 354, 355, 364, 367, 370, 371, 372, 373, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 637, 639, 640, 656, 657, 658, 663, 665, 667, 705, 706, 708, 731, 733, 735, 772, 774, 776, 893, 895, 897, 923, 925, 926, 929, 932, 935, 936], "previous": [0, 12, 18, 21, 124, 125, 135, 634, 645], "otherwis": [0, 12, 23, 26, 27, 29, 30, 31, 32, 33, 36, 37, 44, 45, 50, 51, 72, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 120, 124, 128, 130, 131, 135, 137, 194, 195, 197, 202, 203, 204, 273, 279, 282, 294, 295, 296, 297, 298, 300, 301, 302, 326, 329, 345, 364, 395, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 509, 512, 513, 516, 517, 520, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 637, 639, 644, 663, 665, 667, 705, 706, 708, 711, 715, 731, 732, 733, 734, 735, 749, 771, 772, 773, 774, 775, 776, 780, 782, 834, 836, 837, 839, 893, 895, 897, 919, 920, 921, 923, 936, 959, 960, 961, 963, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "implement": [0, 12, 20, 23, 72, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 273, 279, 282, 332, 335, 345, 390, 395, 396, 399, 401, 404, 405, 408, 414, 417, 418, 421, 423, 426, 427, 430, 463, 466, 468, 471, 485, 488, 489, 492, 529, 532, 533, 536, 537, 540, 541, 544, 567, 570, 584, 587, 588, 591, 601, 604, 606, 609, 624, 628, 629, 771, 786, 788, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1040], "wa": [0, 12, 15, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 122, 135, 137, 194, 195, 197, 294, 296, 298, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 637, 639, 663, 665, 667, 705, 706, 708, 711, 731, 733, 735, 772, 774, 776, 893, 895, 897, 923, 936, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "last": [0, 12, 16, 19, 52, 53, 72, 75, 76, 122, 124, 126, 133, 152, 163, 184, 187, 345, 364, 715, 753, 754, 768, 771, 777, 779, 783, 785, 799, 801, 831, 833, 834, 836, 843, 849, 850, 852, 854, 855, 857, 859, 877, 880, 893, 896, 898, 903, 906, 985, 986, 989, 991, 994, 1029, 1030, 1033, 1035, 1038, 1062, 1072], "henc": [0, 12, 124, 964, 965, 969, 970, 974, 980, 984], "here": [0, 12, 18, 19, 20, 119, 120, 122, 124, 129, 135, 136, 137, 138, 139, 140, 151, 152], "tensor": [0, 12, 14, 75, 76, 119, 120, 125, 126, 128, 130, 131, 132, 135, 137, 138, 139, 140, 152, 202, 231, 232, 234, 235, 273, 303, 306, 395, 435, 438, 565, 566, 634, 687, 690, 691, 754, 766, 768, 771, 828, 830, 859, 873, 876, 889, 892, 898, 947, 948, 959, 962, 1040, 1062, 1070, 1072], "howev": [0, 12, 15, 18, 20, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 137, 138, 139, 140, 152], "befor": [0, 12, 18, 19, 20, 75, 76, 121, 124, 128, 130, 131, 132, 135, 138, 152, 345, 389, 395, 630, 633, 754, 769, 770, 919, 920, 921, 923, 935, 964, 965, 969, 970, 974, 980, 984, 996, 1013, 1016, 1021, 1024], "becom": [0, 12, 14, 16, 19, 122, 129, 135, 140, 152, 859, 860, 863], "swap": [0, 12, 859, 907, 910], "python": [0, 12, 13, 14, 15, 18, 19, 21, 124, 133, 135, 137, 138, 152, 202, 203, 204, 345, 384, 394, 395, 588, 591, 1040, 1046], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 41, 43, 44, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 79, 81, 83, 85, 87, 89, 90, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 118, 120, 123, 125, 126, 127, 128, 131, 134, 137, 140, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1088], "op": [0, 12, 119, 135, 152], "eagertensor": [0, 12], "def": [1, 20, 119, 120, 122, 124, 125, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 274, 275, 276, 346, 353, 356, 716, 1040, 1054, 1057, 1060], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 30, 31, 32, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 140, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 942, 943, 944, 945, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1049, 1050, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1088], "backend": [4, 5, 6, 12, 14, 19, 20, 29, 31, 33, 75, 76, 118, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 136, 137, 140, 273, 313, 314, 320, 344, 345, 380, 382, 392, 634, 675, 678, 679, 685, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 752, 1040, 1046, 1051, 1052, 1078, 1079, 1080, 1081, 1082, 1083], "ml": [13, 15, 16, 17, 134, 135, 136, 138, 139, 140, 151, 1040, 1046], "explos": [13, 15, 1040], "A": [13, 14, 15, 16, 21, 34, 35, 75, 76, 77, 78, 79, 118, 124, 125, 129, 130, 131, 135, 138, 152, 202, 217, 218, 242, 243, 245, 345, 354, 355, 389, 395, 580, 583, 634, 670, 704, 771, 809, 811, 818, 819, 821, 822, 824, 859, 898, 903, 906, 923, 924, 926, 928, 930, 931, 932, 933, 934, 937, 938, 939, 940, 996, 997, 1000, 1029, 1030, 1033, 1035, 1038, 1040, 1084, 1085], "huge": [13, 15, 138, 1040], "number": [13, 14, 18, 26, 27, 54, 55, 75, 76, 77, 78, 79, 100, 101, 122, 124, 129, 131, 132, 135, 138, 140, 199, 200, 201, 202, 203, 204, 206, 209, 217, 218, 231, 232, 234, 235, 237, 240, 242, 245, 273, 284, 287, 307, 308, 311, 315, 318, 321, 324, 326, 329, 332, 335, 345, 381, 382, 383, 395, 409, 412, 427, 430, 459, 462, 493, 496, 497, 500, 565, 566, 567, 570, 584, 587, 588, 591, 592, 595, 596, 599, 630, 633, 634, 635, 638, 661, 670, 671, 686, 710, 714, 754, 769, 771, 783, 785, 786, 788, 803, 805, 818, 822, 824, 834, 836, 859, 860, 863, 869, 872, 881, 884, 885, 888, 893, 894, 895, 896, 897, 898, 903, 906, 911, 914, 915, 918, 919, 920, 921, 922, 947, 948, 957, 959, 962, 964, 965, 969, 970, 974, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073], "tool": [13, 16, 19, 136, 140, 151, 152, 1040], "have": [13, 14, 15, 16, 18, 19, 20, 21, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 77, 78, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 151, 152, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 308, 311, 345, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 646, 647, 649, 652, 656, 657, 658, 660, 663, 664, 665, 666, 667, 674, 687, 690, 691, 715, 731, 732, 733, 734, 735, 749, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040], "explod": [13, 14, 1040], "onto": [13, 14, 345, 374, 375, 923, 929, 935, 1040], "scene": [13, 14, 118, 134, 136, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 1040], "b": [13, 16, 17, 26, 27, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 122, 125, 126, 129, 134, 135, 136, 138, 139, 140, 150, 194, 195, 197, 202, 268, 272, 273, 294, 296, 297, 298, 303, 306, 326, 329, 345, 367, 395, 396, 398, 399, 400, 409, 411, 412, 413, 414, 417, 418, 420, 421, 422, 435, 438, 455, 458, 459, 461, 462, 463, 465, 466, 467, 468, 471, 493, 495, 496, 505, 508, 525, 528, 565, 572, 575, 576, 579, 592, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 614, 615, 618, 624, 625, 627, 628, 629, 634, 635, 637, 638, 639, 642, 643, 651, 652, 659, 662, 663, 665, 666, 667, 705, 706, 708, 709, 710, 715, 717, 719, 720, 721, 731, 733, 734, 735, 754, 757, 760, 761, 763, 764, 765, 770, 771, 772, 774, 775, 776, 777, 779, 780, 782, 783, 785, 809, 811, 819, 821, 828, 830, 840, 842, 843, 844, 846, 847, 848, 849, 851, 853, 854, 856, 858, 859, 860, 862, 863, 864, 873, 876, 877, 880, 885, 888, 893, 895, 896, 897, 903, 906, 907, 910, 923, 926, 941, 942, 944, 945, 946, 947, 949, 951, 952, 953, 955, 959, 961, 962, 963, 964, 970, 971, 973, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1039, 1040, 1046], "why": [13, 15, 19, 120, 129, 132, 137, 1040], "unifi": [13, 15, 75, 76, 128, 135, 152, 345, 374, 375, 376, 377, 389, 1040], "should": [13, 15, 18, 19, 20, 21, 23, 26, 27, 34, 35, 40, 41, 50, 51, 72, 75, 76, 77, 78, 79, 86, 87, 96, 97, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 194, 195, 196, 197, 199, 200, 202, 237, 240, 255, 257, 259, 260, 262, 264, 273, 289, 292, 345, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 485, 488, 489, 492, 493, 494, 495, 496, 509, 512, 513, 516, 517, 520, 521, 524, 529, 532, 533, 536, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 567, 570, 576, 579, 584, 587, 588, 591, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 645, 678, 687, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 792, 794, 795, 798, 803, 805, 809, 811, 812, 814, 815, 817, 819, 821, 822, 824, 828, 830, 831, 833, 834, 836, 837, 839, 859, 889, 892, 947, 958, 959, 960, 961, 964, 965, 969, 970, 974, 980, 984, 996, 997, 1000, 1001, 1004, 1005, 1008, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1040], "them": [13, 14, 15, 16, 124, 126, 128, 129, 135, 137, 138, 139, 152, 1040], "c": [13, 15, 16, 17, 44, 45, 86, 87, 90, 91, 104, 105, 118, 122, 125, 129, 134, 135, 136, 138, 152, 395, 576, 579, 596, 598, 599, 634, 642, 643, 651, 710, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 760, 859, 903, 906, 923, 926, 949, 951, 959, 962, 996, 997, 1000, 1017, 1020, 1025, 1028, 1040, 1046], "standard": [13, 23, 118, 119, 120, 121, 123, 124, 128, 132, 152, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 308, 311, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 493, 496, 525, 528, 565, 576, 579, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 771, 780, 782, 783, 785, 859, 873, 876, 877, 880, 893, 896, 941, 942, 945, 947, 952, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1017, 1020, 1025, 1028, 1029, 1030, 1033, 1040, 1046, 1076, 1077], "re": [13, 14, 15, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 140, 152, 345, 389, 634, 656, 771, 828, 830, 859, 893, 896, 959, 963, 1040], "collabor": [13, 14, 15, 1040], "consortium": [13, 15, 1040, 1046], "data": [13, 15, 26, 27, 28, 34, 35, 37, 40, 41, 44, 45, 50, 51, 54, 55, 75, 76, 77, 78, 79, 83, 86, 87, 90, 91, 96, 97, 100, 101, 118, 119, 120, 121, 125, 127, 129, 131, 132, 137, 194, 195, 196, 197, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 277, 278, 279, 282, 289, 292, 294, 295, 296, 297, 298, 299, 303, 306, 307, 308, 311, 313, 314, 315, 318, 320, 321, 324, 326, 329, 331, 340, 344, 345, 347, 348, 349, 350, 351, 352, 357, 358, 359, 361, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 567, 570, 576, 579, 584, 587, 588, 591, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 642, 643, 680, 681, 683, 702, 715, 731, 732, 733, 734, 735, 752, 754, 767, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 819, 821, 822, 824, 828, 830, 831, 833, 834, 836, 837, 839, 859, 873, 876, 877, 880, 881, 884, 889, 892, 893, 894, 895, 896, 897, 899, 902, 903, 906, 947, 958, 959, 960, 961, 962, 985, 986, 989, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040, 1046, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073], "api": [13, 14, 18, 19, 118, 120, 121, 122, 124, 125, 127, 128, 130, 131, 132, 134, 136, 138, 152, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 493, 496, 525, 528, 565, 576, 579, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 771, 780, 782, 783, 785, 859, 873, 876, 877, 880, 893, 896, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1029, 1030, 1033, 1040, 1046], "open": [14, 15, 16, 17, 18, 21, 121, 151, 202, 203, 204, 947, 949, 950, 953, 955, 1040], "project": [14, 15, 16, 18, 19, 21, 119, 124, 126, 137, 139, 151, 152, 947, 948, 952], "grown": 14, "consider": [14, 120, 122], "recent": [14, 15, 18, 19, 124], "year": [14, 16, 152, 1040], "especi": [14, 18], "deep": [14, 17, 19, 20, 75, 76, 134, 138, 1040], "learn": [14, 15, 18, 20, 118, 125, 134, 140, 151, 395, 501, 504, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 919, 920, 921, 922, 1040, 1078, 1079, 1080, 1081, 1082, 1083], "can": [14, 15, 16, 17, 18, 19, 23, 34, 35, 36, 37, 72, 82, 83, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 151, 152, 202, 206, 207, 209, 242, 245, 273, 294, 295, 296, 297, 298, 345, 387, 388, 389, 771, 792, 794, 859, 889, 892, 947, 949, 950, 1040, 1046], "seen": [14, 15, 122, 124, 137, 138], "rapidli": 14, "increas": [14, 345, 369, 373, 377, 859, 869, 872, 915, 918, 923, 935], "github": [14, 19, 20, 121, 124], "repo": [14, 15, 16, 18, 19, 123, 135, 137, 138, 139, 140, 151, 1040, 1046], "contain": [14, 18, 19, 20, 21, 26, 27, 29, 32, 33, 34, 35, 40, 41, 50, 51, 52, 53, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 130, 132, 134, 135, 136, 139, 140, 152, 163, 164, 169, 174, 177, 179, 182, 184, 189, 192, 194, 196, 202, 203, 204, 206, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 247, 248, 250, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 272, 273, 279, 284, 289, 294, 297, 303, 306, 308, 315, 321, 326, 329, 332, 345, 366, 367, 370, 379, 383, 395, 396, 397, 399, 401, 404, 405, 408, 409, 410, 412, 414, 417, 418, 419, 421, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 462, 463, 464, 466, 468, 471, 472, 475, 477, 480, 481, 485, 488, 489, 492, 493, 494, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 584, 587, 588, 591, 592, 595, 596, 597, 599, 601, 602, 604, 606, 607, 609, 611, 614, 615, 618, 619, 623, 624, 626, 628, 629, 630, 633, 634, 635, 638, 640, 643, 646, 647, 649, 651, 652, 659, 662, 663, 666, 673, 682, 704, 705, 709, 710, 715, 717, 720, 722, 727, 731, 734, 736, 740, 744, 754, 757, 760, 761, 764, 770, 771, 772, 773, 775, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 869, 873, 876, 877, 880, 881, 884, 885, 888, 889, 893, 896, 898, 899, 903, 907, 910, 911, 915, 919, 920, 921, 922, 923, 936, 941, 942, 945, 947, 948, 949, 952, 953, 955, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 975, 980, 984, 985, 986, 989, 991, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1078, 1082, 1084, 1085], "term": [14, 19, 129, 754, 768, 1062, 1072], "time": [14, 15, 16, 18, 19, 20, 120, 124, 125, 129, 130, 135, 138, 140, 152, 715, 722, 724, 736, 738, 754, 768, 859, 911, 914, 919, 920, 921, 922, 959, 960, 961, 964, 965, 969, 970, 974, 1062, 1073, 1074, 1075], "These": [14, 15, 16, 19, 120, 121, 122, 124, 125, 129, 130, 132, 135, 136, 138, 139, 140, 152, 771, 786, 788, 1040, 1046], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 29, 30, 31, 40, 41, 42, 43, 54, 55, 72, 75, 76, 77, 78, 79, 86, 87, 88, 89, 100, 101, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 151, 152, 153, 161, 202, 203, 204, 345, 354, 355, 379, 383, 385, 389, 395, 463, 464, 465, 466, 467, 553, 556, 557, 560, 592, 595, 601, 602, 603, 604, 605, 624, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 642, 643, 644, 668, 674, 675, 679, 686, 688, 702, 715, 753, 754, 767, 771, 777, 779, 795, 798, 799, 801, 803, 805, 812, 814, 822, 824, 825, 827, 834, 836, 859, 860, 863, 877, 880, 893, 894, 895, 896, 897, 923, 925, 929, 935, 947, 952, 953, 955, 959, 960, 961, 962, 964, 965, 969, 1040, 1084, 1085], "written": [14, 18, 119, 120, 121, 124, 128, 132, 135, 137, 140, 152], "mani": [14, 15, 16, 18, 19, 20, 75, 76, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 152, 859, 898], "differ": [14, 15, 16, 18, 19, 75, 76, 77, 78, 79, 118, 119, 120, 121, 122, 124, 125, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 152, 273, 308, 311, 345, 366, 367, 370, 371, 395, 409, 412, 567, 570, 619, 623, 754, 767, 859, 903, 906, 996, 1013, 1016, 1021, 1024, 1040], "while": [14, 15, 18, 19, 75, 76, 77, 78, 79, 122, 124, 126, 132, 133, 139, 140, 152, 395, 553, 556, 557, 560, 964, 965, 969, 996, 1005, 1008], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 151, 152, 164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 197, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 294, 295, 296, 297, 298, 326, 329, 345, 369, 373, 377, 384, 389, 394, 395, 396, 397, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 435, 438, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 471, 489, 492, 493, 494, 495, 496, 525, 528, 553, 556, 557, 560, 565, 576, 579, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 614, 615, 618, 624, 625, 626, 627, 628, 629, 634, 635, 636, 637, 639, 661, 662, 663, 664, 665, 667, 678, 689, 694, 705, 706, 707, 708, 715, 717, 718, 719, 721, 722, 724, 727, 729, 731, 732, 733, 734, 735, 736, 738, 740, 742, 744, 746, 752, 753, 754, 757, 761, 762, 763, 764, 765, 767, 770, 771, 772, 773, 774, 775, 776, 780, 782, 783, 785, 799, 801, 818, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 856, 858, 859, 860, 861, 862, 864, 873, 876, 877, 880, 889, 892, 893, 894, 895, 896, 897, 903, 906, 923, 929, 935, 936, 941, 942, 943, 944, 945, 946, 949, 951, 959, 960, 964, 965, 969, 970, 971, 972, 973, 974, 980, 984, 985, 986, 989, 996, 1001, 1004, 1005, 1008, 1017, 1020, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1046, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083], "wonder": [14, 16, 137], "thing": [14, 15, 16, 18, 19, 20, 124, 126, 137, 138], "research": [14, 151], "develop": [14, 15, 16, 17, 18, 19, 20, 151, 152, 1040], "also": [14, 15, 17, 18, 19, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 197, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 294, 295, 296, 297, 298, 326, 329, 395, 396, 397, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 435, 438, 455, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 471, 493, 494, 495, 496, 565, 576, 579, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 614, 615, 618, 624, 625, 626, 627, 628, 629, 634, 635, 636, 637, 639, 662, 663, 664, 665, 667, 678, 705, 706, 707, 708, 715, 717, 718, 719, 721, 722, 724, 731, 732, 733, 735, 754, 757, 761, 762, 763, 764, 765, 767, 770, 771, 772, 773, 774, 775, 776, 780, 782, 783, 785, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 856, 858, 859, 860, 861, 862, 864, 873, 876, 877, 880, 893, 894, 895, 896, 897, 919, 920, 921, 922, 923, 924, 925, 933, 934, 935, 941, 942, 943, 944, 945, 946, 949, 951, 964, 965, 969, 970, 971, 972, 973, 974, 985, 986, 989, 996, 1001, 1004, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1062, 1072], "consid": [14, 15, 75, 76, 119, 125, 136, 137, 138, 395, 553, 556, 557, 560, 964, 965, 969, 970, 974, 980, 984], "speed": [14, 124], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 75, 76, 77, 78, 79, 90, 91, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 150, 152, 163, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 198, 345, 367, 390, 395, 455, 458, 615, 618, 715, 717, 719, 720, 721, 753, 754, 760, 761, 764, 964, 965, 969, 970, 974, 985, 986, 989, 996, 997, 1000, 1040, 1046], "significantli": 14, "hinder": [14, 120], "librari": [14, 15, 16, 26, 27, 135, 140, 150, 152, 345, 390, 395, 489, 492, 553, 556, 557, 560, 771, 786, 788, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1040], "outdat": 14, "month": 14, "rigor": [14, 124], "maintain": [14, 19, 985, 986, 989, 991, 994], "against": [14, 75, 76, 124, 152, 273, 284, 287, 771, 795, 798, 799, 801, 803, 805, 812, 814, 959, 960], "newest": 14, "version": [14, 15, 16, 18, 121, 135, 137, 771, 786, 788, 1040], "For": [14, 15, 16, 18, 19, 20, 21, 26, 27, 44, 45, 72, 90, 91, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 202, 203, 204, 237, 240, 395, 396, 399, 401, 404, 405, 408, 409, 412, 414, 417, 418, 421, 423, 426, 427, 430, 459, 462, 463, 466, 468, 471, 485, 488, 489, 492, 493, 496, 529, 532, 533, 536, 541, 544, 545, 548, 567, 570, 584, 587, 588, 591, 592, 595, 601, 604, 606, 609, 611, 614, 624, 628, 629, 630, 633, 715, 731, 732, 733, 734, 735, 752, 771, 822, 824, 831, 833, 859, 860, 863, 903, 906, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1009, 1012, 1021, 1024, 1051, 1052], "softwar": [14, 15, 18, 19], "pipelin": [14, 128, 140], "where": [14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 34, 35, 75, 76, 77, 78, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 152, 202, 225, 226, 227, 229, 237, 240, 395, 427, 430, 485, 488, 537, 540, 567, 570, 584, 587, 634, 674, 678, 687, 715, 753, 771, 786, 788, 803, 805, 812, 814, 815, 817, 822, 824, 825, 827, 831, 833, 834, 836, 859, 860, 863, 869, 872, 873, 876, 881, 884, 903, 906, 915, 918, 923, 924, 934, 947, 948, 959, 962, 996, 1017, 1020, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 140], "signific": [14, 15, 152], "bottleneck": 14, "As": [14, 19, 70, 71, 116, 117, 120, 124, 125, 128, 129, 130, 131, 132, 135, 137, 138, 139, 152, 964, 965, 969, 970, 974, 980, 984], "new": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 42, 43, 72, 75, 76, 82, 83, 88, 89, 118, 119, 121, 122, 124, 127, 129, 130, 132, 134, 137, 140, 151, 202, 211, 220, 223, 225, 226, 229, 247, 248, 250, 253, 265, 267, 268, 272, 273, 340, 395, 431, 434, 537, 540, 580, 583, 634, 656, 657, 658, 661, 662, 663, 664, 665, 666, 667, 690, 691, 692, 693, 700, 701, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 859, 873, 876, 889, 892, 903, 906, 923, 928, 939, 940, 941, 942, 945, 1040, 1051, 1052, 1062, 1072, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083], "futur": [14, 16, 18, 19, 137, 152, 771, 786, 788], "avail": [14, 18, 19, 75, 76, 121, 131, 152, 345, 364, 380, 381, 382, 392, 634, 657], "specif": [14, 20, 75, 76, 120, 124, 125, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 151, 152, 273, 332, 335, 345, 387, 390, 395, 553, 556, 557, 560, 634, 656, 657, 658, 685, 771, 786, 788, 828, 830, 859, 903, 906, 919, 920, 921, 922, 947, 948, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1040, 1043, 1045, 1046, 1074, 1075], "quickli": [14, 16, 18, 19, 138, 139], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 118, 124, 126, 129, 132, 134, 152, 1062, 1073, 1074, 1075], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 70, 71, 116, 117, 122, 124, 129, 133, 134, 137, 138, 139, 140, 152, 1040], "desir": [14, 36, 37, 75, 76, 82, 83, 273, 279, 282, 294, 295, 296, 297, 298, 345, 390, 634, 674, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073], "provid": [14, 18, 19, 23, 72, 75, 76, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 135, 139, 151, 152, 199, 200, 202, 237, 240, 273, 300, 301, 302, 320, 332, 335, 344, 345, 364, 634, 655, 687, 691, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 771, 834, 836, 859, 877, 880, 903, 906, 959, 960, 996, 1017, 1020, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1078, 1079, 1080, 1081, 1082, 1083], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 42, 43, 54, 55, 68, 69, 70, 71, 72, 75, 76, 88, 89, 100, 101, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 151, 152, 153, 161, 199, 200, 202, 203, 204, 255, 257, 259, 260, 262, 264, 345, 354, 379, 385, 634, 635, 638, 642, 643, 668, 688, 705, 706, 707, 708, 709, 754, 768, 771, 819, 821, 828, 830, 837, 839, 859, 877, 880, 893, 894, 895, 896, 897, 919, 920, 921, 922, 923, 924, 925, 934, 935, 936, 947, 948, 953, 955, 1029, 1034, 1040, 1043, 1045], "modern": [14, 15], "simpl": [14, 18, 19, 119, 121, 122, 124, 125, 128, 129, 130, 131, 132, 135, 137, 139, 140, 152, 634, 659], "scalabl": [14, 135], "manner": [14, 29, 32, 33, 75, 76, 119, 121, 124, 131, 138, 151, 152, 923, 935], "must": [14, 16, 18, 19, 20, 26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 119, 120, 121, 122, 125, 128, 129, 130, 131, 135, 139, 140, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 345, 374, 375, 376, 377, 389, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 646, 647, 649, 652, 656, 657, 658, 660, 663, 664, 665, 666, 667, 674, 687, 690, 691, 715, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1078, 1082], "determin": [14, 26, 27, 40, 41, 50, 51, 75, 76, 77, 78, 86, 87, 96, 97, 121, 125, 129, 130, 131, 194, 195, 196, 197, 273, 294, 297, 299, 307, 320, 321, 324, 326, 329, 344, 345, 380, 381, 382, 392, 395, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 443, 446, 447, 450, 451, 454, 455, 458, 463, 464, 465, 466, 467, 468, 471, 472, 475, 485, 488, 489, 492, 509, 512, 513, 516, 517, 520, 529, 532, 533, 536, 541, 544, 545, 548, 561, 564, 567, 570, 584, 587, 588, 591, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 624, 625, 626, 627, 628, 629, 634, 635, 638, 642, 643, 673, 675, 679, 680, 681, 682, 683, 702, 714, 715, 731, 734, 754, 769, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 792, 794, 795, 798, 803, 805, 809, 811, 812, 814, 818, 819, 821, 831, 833, 834, 836, 837, 839, 919, 920, 921, 922, 964, 965, 969, 970, 974, 980, 984, 1029, 1030, 1033, 1035, 1038], "exactli": [14, 16, 122, 129, 131, 1040, 1046], "common": [14, 20, 75, 76, 122, 125, 127, 129, 131, 133, 152], "ground": [14, 124], "li": 14, "between": [14, 52, 53, 75, 76, 77, 78, 79, 120, 122, 124, 125, 128, 129, 134, 136, 137, 138, 140, 151, 202, 203, 204, 273, 308, 311, 395, 427, 430, 584, 587, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 873, 876, 903, 906, 923, 929, 947, 949, 950, 964, 965, 969, 970, 974, 980, 984, 1040, 1078, 1080], "find": [14, 18, 19, 75, 76, 124, 135, 138, 964, 965, 969, 970, 974, 980, 984, 1040], "exist": [14, 15, 18, 20, 21, 26, 27, 75, 76, 77, 78, 121, 122, 123, 124, 125, 126, 127, 132, 135, 152, 634, 655, 1078, 1082], "essenti": [14, 15, 20, 122, 125, 131], "order": [14, 18, 19, 21, 72, 75, 76, 77, 78, 79, 120, 121, 122, 126, 128, 129, 130, 131, 137, 138, 140, 152, 395, 427, 430, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 771, 786, 788, 799, 801, 822, 824, 825, 827, 837, 839, 859, 877, 880, 919, 920, 921, 959, 962, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 1084, 1085], "design": [14, 15, 118, 132, 135, 137, 152], "univers": 14, "abstract": [14, 23, 72, 129, 139, 152, 345, 360, 1078, 1082], "In": [14, 16, 18, 19, 72, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 151, 152, 345, 384, 390, 391, 394, 395, 409, 412, 567, 570, 588, 591, 634, 640, 678, 859, 889, 892, 947, 953, 955, 1040], "search": [14, 18, 29, 32, 33, 61, 75, 76, 107, 119, 122, 124, 960, 961, 962, 963], "languag": [14, 16, 135], "first": [14, 15, 18, 19, 21, 26, 27, 40, 41, 72, 77, 78, 86, 87, 120, 122, 124, 125, 128, 129, 135, 137, 138, 140, 199, 200, 202, 231, 232, 234, 235, 273, 331, 340, 345, 364, 376, 395, 409, 410, 411, 412, 413, 435, 438, 443, 446, 447, 450, 451, 454, 455, 458, 477, 480, 497, 500, 505, 508, 521, 524, 525, 528, 545, 548, 549, 552, 557, 560, 561, 564, 567, 570, 576, 579, 584, 587, 619, 623, 634, 642, 715, 726, 771, 777, 779, 783, 785, 786, 788, 795, 798, 809, 811, 815, 817, 822, 824, 828, 830, 834, 836, 859, 865, 868, 893, 896, 903, 906, 907, 910, 919, 920, 921, 922, 923, 924, 933, 934, 947, 958, 959, 960, 961, 964, 965, 969, 970, 974, 1062, 1073, 1074, 1075, 1078, 1082], "see": [14, 17, 18, 19, 20, 23, 26, 27, 40, 41, 72, 77, 78, 86, 87, 120, 123, 125, 129, 131, 137, 138, 151, 152, 202, 203, 204, 220, 223, 231, 232, 234, 235, 273, 289, 292, 332, 335, 395, 409, 410, 411, 412, 413, 435, 438, 443, 446, 447, 450, 451, 454, 455, 458, 472, 475, 489, 492, 521, 524, 545, 548, 557, 560, 561, 564, 567, 570, 576, 579, 584, 587, 588, 591, 619, 623, 771, 803, 805, 812, 814, 819, 821, 834, 836, 837, 839, 959, 961, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040], "clear": [14, 15, 16, 19, 20, 72, 122, 130, 131, 135, 137, 345, 363], "front": [14, 134, 135, 138, 1040, 1046], "runner": 14, "look": [14, 18, 19, 21, 119, 120, 122, 124, 125, 126, 129, 130, 131, 135, 137, 139, 140, 1040], "littl": [14, 137], "deeper": [14, 19, 118, 134, 345, 369, 373, 377, 923, 934, 935], "follow": [14, 15, 18, 19, 20, 21, 72, 75, 76, 119, 121, 122, 124, 126, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 152, 273, 315, 318, 345, 389, 395, 588, 591, 634, 676, 677, 678, 700, 701, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 769, 770, 771, 815, 817, 837, 839, 923, 929, 935, 964, 965, 969, 970, 974, 980, 984, 1040, 1062, 1072, 1078, 1082], "same": [14, 16, 18, 19, 21, 29, 30, 31, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 75, 76, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 119, 120, 122, 124, 125, 128, 129, 131, 132, 133, 135, 137, 139, 140, 202, 203, 204, 212, 213, 215, 226, 227, 229, 237, 240, 250, 251, 253, 255, 257, 259, 260, 262, 264, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 345, 354, 355, 389, 395, 396, 397, 398, 399, 400, 409, 412, 439, 442, 459, 460, 461, 462, 493, 494, 495, 496, 567, 570, 588, 591, 592, 595, 596, 597, 598, 599, 600, 630, 633, 634, 660, 662, 663, 664, 665, 666, 667, 687, 690, 691, 715, 731, 732, 733, 734, 735, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 806, 808, 812, 814, 815, 817, 819, 821, 822, 824, 831, 833, 834, 836, 859, 865, 868, 877, 880, 881, 884, 893, 894, 895, 896, 897, 899, 902, 903, 906, 919, 920, 921, 923, 936, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1021, 1024, 1025, 1028, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "core": [14, 18, 20, 131, 135, 140, 345, 381, 1040], "principl": 14, "oper": [14, 18, 20, 26, 27, 48, 49, 75, 76, 77, 78, 94, 95, 121, 122, 124, 125, 128, 129, 131, 132, 138, 139, 202, 231, 232, 234, 235, 273, 332, 335, 395, 409, 412, 451, 454, 455, 458, 505, 508, 572, 575, 576, 579, 588, 591, 615, 618, 634, 644, 656, 657, 658, 702, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767], "expos": [14, 135, 139, 634, 650], "almost": [14, 19, 129, 136, 138], "ident": [14, 16, 75, 76, 125, 127, 129, 137, 138, 152, 345, 379, 923, 936, 1040], "uniqu": [14, 124, 125, 129, 152, 345, 354, 355, 919, 920, 921, 922, 923, 929, 964, 965, 969, 970, 974, 975, 979, 980, 984], "syntax": [14, 15, 133], "There": [14, 18, 19, 122, 125, 128, 129, 130, 133, 135, 138, 152], "onli": [14, 17, 18, 19, 26, 27, 75, 76, 119, 120, 122, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 150, 152, 345, 385, 395, 553, 556, 557, 560, 771, 795, 798, 815, 817, 859, 877, 880, 923, 924, 925, 933, 934, 959, 960, 961, 996, 1005, 1008, 1040, 1078, 1079, 1080, 1081, 1082, 1083], "so": [14, 15, 18, 19, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 124, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 152, 153, 161, 164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 197, 206, 207, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 396, 397, 398, 400, 409, 410, 411, 413, 418, 419, 420, 422, 459, 460, 461, 463, 464, 465, 467, 493, 494, 495, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 624, 625, 626, 627, 635, 636, 637, 639, 663, 664, 665, 667, 705, 706, 707, 708, 717, 718, 719, 721, 731, 732, 733, 735, 761, 762, 763, 765, 772, 773, 774, 776, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 856, 858, 860, 861, 862, 864, 893, 894, 895, 897, 923, 924, 934, 942, 943, 944, 946, 949, 951, 970, 971, 972, 973, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039, 1040], "wai": [14, 15, 18, 23, 124, 126, 132, 137, 138, 139, 140, 152], "manipul": [14, 55, 101, 119, 140, 151, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 896, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918], "unsurprisingli": [14, 122], "fundament": [14, 129, 135], "consist": [14, 75, 76, 128, 132, 345, 377, 771, 786, 788, 996, 997, 1000, 1074, 1075], "each": [14, 15, 16, 19, 20, 40, 41, 42, 43, 48, 49, 50, 51, 54, 55, 75, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 140, 151, 152, 163, 174, 177, 179, 182, 189, 192, 194, 195, 196, 197, 202, 237, 240, 273, 284, 287, 345, 354, 355, 366, 367, 368, 369, 370, 371, 372, 376, 389, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 412, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 786, 788, 795, 798, 803, 805, 806, 808, 812, 814, 819, 821, 822, 824, 859, 869, 872, 885, 888, 893, 894, 895, 896, 897, 898, 903, 906, 911, 914, 915, 918, 923, 929, 936, 947, 948, 959, 962, 964, 965, 969, 970, 974, 996, 997, 1000, 1040, 1046, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "veri": [14, 15, 18, 19, 119, 120, 122, 124, 125, 129, 131, 132, 136, 138, 139, 140, 152, 1040], "similar": [14, 119, 124, 129, 130, 131, 138, 152, 395, 588, 591, 754, 769, 1062, 1073], "convent": [14, 151, 771, 795, 798, 996, 997, 1000], "those": [14, 18, 19, 20, 75, 76, 124, 129, 135, 140, 202, 203, 204, 715, 752, 771, 815, 817, 822, 824, 859, 860, 863], "introduc": [14, 129, 138, 859, 893, 896, 964, 965, 969], "2006": 14, "layer": [14, 49, 95, 119, 121, 135, 136, 139, 755, 756, 757, 758, 759, 760, 761, 764, 766, 767, 768, 769, 770, 941, 942, 945, 1040, 1053, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1084, 1085], "therefor": [14, 19, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 135, 137, 139, 152, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 395, 396, 399, 409, 412, 414, 417, 418, 421, 459, 462, 493, 496, 565, 576, 579, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 634, 662, 754, 757, 761, 764, 770, 771, 772, 775, 783, 785, 859, 893, 896, 941, 942, 945, 964, 970, 974, 996, 1001, 1004, 1029, 1030, 1033], "present": [14, 19, 72, 75, 76, 120, 123, 129, 130, 131, 132, 135], "itself": [14, 18, 19, 120, 129, 132, 139, 151, 152, 634, 640, 923, 935], "cut": 14, "cloth": 14, "adher": [14, 15, 121, 123, 135, 140], "semant": [14, 135, 140, 395, 588, 591], "round": [14, 15, 16, 18, 19, 20, 21, 40, 41, 86, 87, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 395, 409, 412, 459, 460, 461, 462, 493, 494, 495, 496, 497, 500, 567, 570, 611, 614, 630, 633, 1040], "up": [14, 15, 16, 17, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 151, 152], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151], "paint": [14, 135], "pictur": [14, 135], "how": [14, 16, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 151, 152, 1040, 1046, 1062, 1073, 1074, 1075], "pleas": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 1040], "check": [14, 15, 16, 18, 19, 29, 30, 31, 32, 33, 44, 45, 75, 76, 90, 91, 124, 129, 134, 135, 137, 138, 139, 140, 151, 273, 299, 313, 314, 320, 321, 324, 344, 345, 384, 394, 634, 644, 659, 673, 680, 681, 682, 683, 702, 714, 715, 731, 732, 733, 734, 735, 771, 786, 788, 923, 924, 933, 934, 935, 1040], "out": [14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 151, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 289, 290, 291, 292, 293, 303, 305, 345, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 646, 647, 648, 649, 651, 652, 653, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 674, 687, 690, 691, 715, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 963, 964, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1062, 1070], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 1040], "faq": [14, 15, 16, 135, 137, 138, 139, 140, 151], "reach": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 345, 369, 373, 377, 923, 935], "discord": [14, 15, 16, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 1040], "you": [14, 15, 16, 17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 151, 152, 1040, 1046], "question": [14, 15, 16, 18, 19, 122, 124, 135, 137, 138, 139, 140, 151, 152, 1040], "With": [15, 16, 18, 26, 27, 40, 41, 42, 43, 44, 45, 75, 76, 77, 78, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 122, 124, 135, 163, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 198, 202, 237, 240, 268, 272, 273, 294, 297, 303, 306, 326, 329, 345, 367, 383, 395, 396, 399, 400, 409, 412, 413, 414, 417, 418, 421, 422, 435, 438, 455, 458, 459, 462, 463, 464, 465, 466, 467, 468, 471, 493, 496, 505, 508, 525, 528, 565, 566, 572, 575, 576, 579, 592, 595, 596, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 624, 625, 628, 629, 634, 635, 636, 637, 638, 639, 643, 651, 652, 659, 662, 663, 666, 667, 699, 704, 705, 706, 707, 708, 709, 710, 715, 717, 718, 720, 731, 732, 733, 734, 735, 754, 757, 760, 761, 764, 770, 771, 772, 775, 776, 777, 779, 780, 782, 783, 785, 799, 801, 828, 830, 843, 844, 847, 848, 849, 853, 854, 857, 858, 859, 860, 863, 864, 873, 876, 877, 880, 885, 888, 893, 896, 897, 898, 907, 910, 923, 926, 941, 942, 944, 945, 946, 947, 948, 949, 951, 952, 953, 955, 959, 960, 961, 962, 963, 964, 965, 969, 970, 973, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1029, 1030, 1033], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 75, 76, 120, 122, 124, 127, 128, 129, 130, 131, 132, 133, 135, 138, 151, 152, 202, 203, 204, 634, 689, 694, 964, 975, 979, 1040], "would": [15, 18, 19, 21, 118, 120, 121, 122, 124, 126, 127, 128, 129, 132, 134, 135, 137, 139, 140, 152, 163, 184, 187, 345, 390, 1040], "entir": [15, 16, 19, 75, 76, 122, 123, 124, 128, 129, 132, 137, 138, 139, 140, 152, 345, 389, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1062, 1071], "forgiven": 15, "rais": [15, 19, 72, 75, 76, 132, 133, 135, 137, 273, 289, 292, 395, 485, 488, 584, 587, 634, 644, 669, 678, 692, 701, 711, 715, 753, 771, 795, 798, 802, 834, 836, 859, 899, 902, 903, 906, 959, 962, 996, 1001, 1004, 1009, 1012, 1029, 1030, 1033, 1035, 1038, 1074, 1075, 1078, 1082], "an": [15, 16, 18, 19, 20, 21, 23, 26, 27, 29, 32, 33, 34, 35, 40, 41, 44, 45, 50, 51, 54, 55, 70, 71, 72, 75, 76, 86, 87, 90, 91, 100, 101, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 151, 152, 163, 174, 177, 179, 182, 189, 192, 194, 195, 196, 197, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 294, 297, 308, 311, 326, 329, 332, 335, 345, 367, 371, 390, 395, 396, 397, 399, 401, 404, 405, 408, 409, 410, 412, 414, 417, 418, 419, 421, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 462, 463, 464, 466, 468, 471, 472, 475, 477, 480, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 584, 587, 588, 591, 592, 595, 596, 597, 599, 601, 602, 604, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 645, 646, 647, 649, 651, 660, 661, 662, 674, 678, 680, 681, 682, 683, 705, 709, 710, 711, 715, 731, 732, 733, 734, 735, 749, 751, 752, 753, 754, 757, 761, 764, 770, 771, 772, 773, 775, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 802, 803, 805, 806, 808, 812, 814, 815, 817, 818, 819, 821, 822, 824, 831, 833, 834, 836, 837, 839, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 923, 929, 941, 942, 945, 947, 949, 950, 958, 959, 962, 963, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040, 1051, 1052, 1074, 1075, 1078, 1079, 1080, 1082], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 120, 125, 130, 131, 132, 135, 137, 140, 152, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 1040, 1078, 1079, 1080, 1081, 1082, 1083], "other": [15, 18, 19, 26, 27, 42, 43, 75, 76, 77, 78, 88, 89, 119, 121, 122, 124, 125, 128, 129, 132, 133, 135, 137, 139, 140, 150, 151, 152, 199, 200, 202, 203, 204, 395, 489, 492, 634, 635, 636, 637, 638, 639, 640, 715, 726, 947, 953, 955, 964, 975, 979, 996, 1017, 1020, 1025, 1028, 1040], "strong": [15, 152], "industri": 15, "back": [15, 128, 134, 135, 137, 152, 1040, 1046, 1074, 1075, 1078, 1082], "momentum": 15, "won": [15, 16, 19, 140], "ad": [15, 18, 19, 20, 116, 117, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 135, 139, 152, 634, 700, 701, 771, 786, 788, 859, 873, 876, 1084, 1085], "just": [15, 16, 18, 19, 121, 122, 124, 125, 132, 135, 137, 138, 152, 996, 997, 1000, 1062, 1071], "make": [15, 16, 18, 19, 20, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 137, 138, 140, 345], "problem": [15, 19, 128, 137], "even": [15, 16, 18, 19, 120, 121, 125, 130, 131, 137, 138, 139, 140, 152, 395, 584, 587, 592, 595], "wors": 15, "rather": [15, 44, 45, 75, 76, 90, 91, 119, 121, 124, 129, 140, 152, 202, 203, 204, 345, 389, 634, 680, 681, 683, 715, 731, 732, 733, 734, 735], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 125, 129], "feasibl": 15, "space": [15, 202, 203, 204, 231, 232, 234, 235, 634, 661, 715, 753], "case": [15, 18, 19, 20, 29, 32, 33, 72, 75, 76, 77, 78, 79, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 137, 139, 140, 152, 202, 237, 240, 345, 384, 391, 394, 395, 396, 399, 401, 404, 405, 408, 409, 412, 414, 417, 418, 421, 423, 426, 427, 430, 455, 458, 459, 462, 463, 466, 468, 471, 485, 488, 489, 492, 493, 496, 529, 532, 533, 536, 541, 544, 545, 548, 567, 570, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 606, 609, 611, 614, 624, 628, 629, 630, 633, 634, 678, 690, 691, 771, 799, 801, 859, 889, 892, 923, 926, 932, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1017, 1020, 1021, 1024, 1025, 1028, 1062, 1073, 1074, 1075, 1078, 1082], "unlik": [15, 122, 129, 345], "charger": 15, "charact": [15, 133], "encod": [15, 138, 634, 661], "instant": [15, 1040], "messag": [15, 19, 133, 135, 137, 1087, 1088], "much": [15, 19, 119, 128, 129, 132, 135, 137, 138], "doe": [15, 19, 21, 23, 72, 75, 76, 118, 119, 120, 121, 122, 124, 125, 126, 130, 132, 135, 137, 138, 152, 395, 455, 458, 634, 678, 859, 898], "mandat": [15, 124, 132], "adopt": [15, 19, 128], "continu": [15, 16, 123, 124, 133, 152], "own": [15, 16, 18, 121, 124, 133, 135, 152], "signatur": [15, 23, 72, 119, 120, 121, 122, 124, 129, 130, 131, 132, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 414, 417, 418, 421, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 601, 604, 611, 614, 615, 618, 771, 783, 785, 859, 873, 876, 893, 896, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004], "replac": [15, 19, 21, 75, 76, 122, 124, 127, 129, 130, 131, 135, 137, 140, 152, 634, 690, 691, 859, 860, 863, 947, 948], "your": [15, 16, 17, 18, 20, 21, 119, 121, 138, 139, 152, 1040], "10": [15, 18, 21, 40, 41, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 124, 129, 135, 137, 138, 202, 225, 234, 235, 236, 345, 395, 435, 438, 439, 442, 468, 471, 505, 508, 525, 528, 533, 536, 606, 607, 608, 609, 610, 611, 614, 634, 652, 662, 689, 694, 715, 736, 737, 738, 739, 754, 760, 771, 780, 782, 783, 785, 809, 811, 828, 830, 859, 877, 880, 885, 888, 898, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 959, 962, 964, 965, 969, 996, 997, 1000, 1001, 1004, 1078, 1080], "100": [15, 16, 104, 105, 124, 138, 139, 140, 152, 395, 611, 614, 949, 951, 1040], "despit": [15, 129, 131], "distinct": [15, 121, 129, 132, 134, 964, 965, 969, 970, 974, 980, 984, 1040], "still": [15, 75, 76, 121, 124, 130, 137, 139, 152, 1040], "believ": [15, 19], "share": [15, 75, 76, 122, 124, 125, 126, 129, 135, 273, 340], "bring": [15, 124, 135, 136], "benefit": [15, 16, 18, 19, 128, 129, 132, 137, 138, 152], "unrel": [15, 19], "what": [15, 16, 19, 118, 120, 121, 122, 124, 127, 129, 133, 134, 135, 137, 138, 139, 140, 151, 152, 1040], "again": [15, 16, 19, 119, 122, 124, 129, 132, 138, 140, 152], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 138], "most": [15, 18, 19, 75, 76, 119, 120, 124, 125, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 152, 771, 786, 788], "technolog": 15, "sector": [15, 40, 41, 86, 87, 395, 405, 408, 418, 419, 420, 421, 422, 431, 434], "full": [15, 16, 19, 26, 27, 77, 78, 120, 121, 124, 130, 135, 152, 202, 273, 308, 311, 395, 505, 508, 525, 528, 754, 760, 771, 815, 817, 819, 821, 822, 824], "success": 15, "reason": [15, 19, 119, 122, 125, 128, 129, 130, 132, 135, 137, 395, 588, 591], "build": [15, 17, 18, 125, 134, 136, 139, 140, 152, 964, 965, 969, 970, 974, 980, 984, 1040, 1062, 1073, 1074, 1075], "custom": [15, 23, 72, 124, 139], "comput": [15, 16, 18, 26, 27, 52, 53, 75, 76, 124, 125, 129, 135, 138, 152, 345, 389, 395, 409, 412, 435, 438, 447, 450, 455, 458, 477, 480, 481, 484, 501, 504, 505, 508, 521, 524, 525, 528, 549, 552, 553, 556, 557, 560, 561, 564, 567, 570, 572, 575, 576, 579, 634, 646, 647, 649, 652, 653, 715, 717, 720, 722, 724, 726, 727, 729, 736, 738, 740, 742, 744, 746, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 764, 767, 769, 771, 772, 775, 777, 779, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 815, 817, 818, 819, 821, 822, 824, 834, 836, 837, 839, 843, 844, 847, 849, 850, 852, 854, 855, 857, 923, 929, 964, 965, 969, 970, 974, 980, 984, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028], "thank": [15, 138], "interoper": 15, "compon": [15, 135, 715, 753], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 72, 75, 76, 77, 78, 79, 124, 126, 130, 131, 345, 754, 768, 1055, 1056, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1078, 1082], "pcie": 15, "interfac": [15, 140, 152], "motherboard": 15, "raid": 15, "storag": [15, 138], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 29, 30, 31, 32, 33, 34, 35, 50, 51, 75, 76, 96, 97, 124, 125, 139, 140, 202, 206, 207, 209, 242, 245, 255, 257, 259, 260, 262, 264, 634, 640, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 771, 772, 773, 774, 775, 776, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 803, 805, 806, 808, 812, 814, 815, 817, 819, 821, 822, 824, 825, 827, 831, 833, 923, 925, 935], "factor": [15, 44, 45, 48, 49, 50, 51, 90, 91, 94, 95, 96, 97, 345, 354, 387, 388, 389, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 740, 742, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 771, 772, 773, 774, 775, 776, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1078, 1079, 1080, 1081], "sata": 15, "connect": [15, 18, 139, 140, 1062, 1072, 1073], "host": [15, 152], "bu": 15, "adapt": [15, 715, 740, 742, 1078, 1081], "devic": [15, 19, 26, 27, 34, 35, 39, 42, 43, 75, 76, 80, 81, 85, 88, 89, 104, 105, 118, 119, 125, 127, 130, 137, 138, 152, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 634, 662, 663, 664, 665, 666, 667, 687, 690, 691, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 1051, 1052, 1053, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1084, 1085], "html": [15, 21, 121, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 414, 417, 418, 421, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 601, 604, 611, 614, 615, 618, 771, 783, 785, 859, 873, 876, 893, 896, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004], "enabl": [15, 18, 19, 75, 76, 77, 78, 79, 124, 125, 128, 129, 132, 134, 135, 136, 138, 140, 152, 715, 753], "anyon": [15, 17, 152], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 75, 76, 129, 923, 924, 933, 934], "commun": [15, 17, 19, 20, 152, 1040, 1046], "network": [15, 125, 129, 135, 139, 151, 754, 767, 1040, 1048, 1062, 1074, 1075], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 121, 122, 124, 129, 130, 132, 135, 138, 151, 152, 634, 684, 704, 996, 1001, 1004, 1009, 1012], "send": 15, "gmail": 15, "outlook": 15, "pop": [15, 72], "email": 15, "ieee": [15, 201, 273, 308, 311, 395, 409, 412, 489, 492, 567, 570, 588, 591, 611, 614], "754": [15, 201, 273, 308, 311, 395, 409, 412, 489, 492, 567, 570, 588, 591, 611, 614], "allow": [15, 124, 135, 152, 202, 231, 232, 234, 235, 634, 684, 1074, 1075], "calcul": [15, 52, 53, 75, 76, 77, 78, 79, 121, 395, 396, 399, 401, 404, 405, 408, 409, 412, 414, 417, 418, 421, 423, 426, 427, 430, 463, 466, 468, 471, 472, 475, 485, 488, 489, 492, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 567, 570, 584, 587, 601, 604, 606, 609, 611, 614, 619, 623, 624, 628, 629, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028], "live": [15, 16], "depend": [15, 18, 19, 26, 27, 121, 124, 127, 129, 130, 135, 152, 273, 279, 282, 395, 396, 399, 401, 404, 405, 408, 414, 417, 418, 421, 423, 426, 427, 430, 463, 466, 468, 471, 485, 488, 489, 492, 529, 532, 533, 536, 537, 540, 541, 544, 584, 587, 601, 604, 606, 609, 624, 628, 629, 771, 786, 788, 815, 817, 819, 821, 822, 824, 959, 963, 985, 986, 989, 991, 994], "did": [15, 20, 140], "aris": [15, 152], "until": [15, 19, 133, 152, 1040], "substanti": [15, 19, 124, 128], "innov": 15, "growth": 15, "usag": [15, 135, 345, 389], "relev": [15, 18, 20, 122, 129, 130, 138, 1078, 1079, 1080, 1081, 1082, 1083], "area": [15, 40, 41, 86, 87, 132, 150, 395, 405, 408, 418, 419, 420, 421, 422, 431, 434, 1040], "necess": 15, "parti": [15, 152], "could": [15, 16, 18, 19, 122, 124, 129, 130, 132, 135, 137, 138, 139, 964, 965, 969, 970, 974, 980, 984], "easili": [15, 19, 138, 139, 140, 152, 1040], "engag": [15, 17, 18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "regard": [15, 129, 345], "effect": [15, 120, 121, 128, 129, 152, 202, 237, 240, 715, 744, 746, 996, 1017, 1020, 1025, 1028], "2015": 15, "sinc": [15, 18, 19, 124, 152], "alongsid": 15, "machin": [15, 18, 125, 151, 273, 308, 311, 315, 318, 395, 501, 504, 771, 803, 805, 812, 814], "given": [15, 16, 18, 19, 20, 21, 42, 43, 52, 53, 54, 55, 72, 75, 76, 88, 89, 100, 101, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 139, 140, 151, 202, 203, 204, 211, 231, 232, 234, 235, 345, 378, 384, 386, 387, 388, 389, 391, 394, 634, 652, 653, 663, 664, 665, 666, 667, 690, 691, 695, 713, 715, 717, 720, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 755, 756, 757, 758, 759, 760, 761, 764, 771, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 873, 876, 877, 880, 885, 888, 893, 894, 895, 896, 897, 898, 911, 914, 923, 930, 931, 947, 949, 950, 952, 953, 955, 958, 985, 991, 994, 1051, 1052], "frame": [15, 151], "less": [15, 19, 26, 27, 40, 41, 75, 76, 86, 87, 120, 122, 129, 134, 135, 395, 401, 404, 405, 408, 414, 417, 427, 430, 459, 462, 529, 532, 533, 536, 541, 544, 584, 587, 588, 591, 596, 599, 611, 614, 771, 803, 805, 812, 814, 837, 839, 947, 953, 955, 996, 1025, 1028], "matur": [15, 152], "state": [15, 120, 121, 124, 134, 135, 136, 138, 151, 395, 567, 570, 634, 698, 712, 754, 768, 1040, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "than": [15, 19, 26, 27, 44, 45, 75, 76, 90, 91, 119, 122, 124, 129, 132, 135, 138, 139, 140, 152, 202, 203, 204, 273, 308, 311, 345, 389, 395, 401, 404, 405, 408, 414, 417, 427, 430, 443, 446, 451, 454, 459, 462, 493, 496, 497, 500, 529, 532, 533, 536, 541, 544, 565, 584, 587, 588, 591, 596, 599, 611, 614, 630, 633, 634, 680, 681, 683, 715, 731, 732, 733, 734, 735, 771, 777, 779, 795, 798, 803, 805, 812, 814, 837, 839, 859, 860, 863, 877, 880, 899, 902, 947, 953, 955, 964, 965, 969, 970, 974, 980, 984, 996, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028], "preced": [15, 139], "mention": [15, 18, 19, 120, 122, 125, 132], "aros": 15, "70": [15, 771, 809, 811, 996, 997, 1000], "80": [15, 771, 809, 811, 996, 997, 1000], "90": [15, 104, 105, 395, 455, 458, 592, 595, 771, 809, 811, 949, 951, 996, 997, 1000], "effort": [15, 17, 152], "stage": [15, 17, 19, 21, 118, 133, 1040], "complet": [15, 19, 20, 75, 76, 128, 129, 137, 138, 771, 815, 817], "natur": [15, 122, 128, 129, 151, 395, 485, 488, 529, 532, 537, 540, 771, 818], "like": [15, 18, 19, 21, 44, 45, 72, 90, 91, 118, 119, 120, 121, 122, 124, 131, 132, 134, 135, 137, 138, 139, 140, 151, 152, 715, 731, 732, 733, 734, 735, 947, 953, 955, 1040], "certainli": 15, "mission": [15, 1040], "creat": [15, 17, 18, 19, 21, 23, 34, 35, 42, 43, 72, 75, 76, 88, 89, 124, 130, 131, 132, 135, 136, 139, 150, 151, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 345, 354, 355, 634, 662, 663, 664, 665, 666, 667, 687, 690, 691, 704, 715, 751, 947, 948, 949, 950, 953, 955, 1040, 1046, 1051, 1052, 1053, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 124, 125, 129, 135, 140, 345, 354, 355, 384, 394], "ourselv": 15, "lead": [15, 16, 75, 76, 77, 78, 79, 152, 771, 815, 817, 822, 824], "quansight": 15, "compani": 15, "made": [15, 19, 20, 129, 132, 135, 137], "organ": [15, 119, 125, 128, 129], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 964, 965, 969, 970, 974, 980, 984], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 135, 140], "sympi": 15, "rai": [15, 395, 427, 430], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 34, 35, 75, 76, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 151, 152, 202, 203, 204, 206, 207, 209, 242, 245, 634, 673, 714, 771, 837, 839, 923, 924, 947, 953, 955, 959, 961, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1043, 1045, 1062, 1072, 1073, 1076, 1077], "member": [15, 19], "googl": [15, 1040], "octoml": 15, "einop": [15, 75, 76, 634, 656, 657, 658], "further": [15, 16, 19, 21, 122, 128, 134, 138, 139, 1040], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 48, 49, 72, 94, 95, 104, 105, 118, 129, 138, 634, 643, 651, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 771, 783, 785, 809, 811, 923, 926, 949, 951, 1040, 1046], "shaw": 15, "co": [15, 40, 41, 86, 87, 135, 151, 395, 467, 634, 661, 1040], "intel": 15, "togeth": [15, 75, 76, 128, 129, 133, 139, 140, 152, 1084, 1085], "major": [15, 124, 130, 131, 152, 959, 962], "involv": [15, 17, 21, 118, 130, 140, 273, 332, 335, 395, 409, 412, 567, 570, 1040, 1046], "anoth": [15, 18, 19, 75, 76, 124, 125, 129, 130, 137, 140, 202, 220, 223, 273, 284, 287, 294, 297], "promis": 15, "sign": [15, 18, 40, 41, 86, 87, 136, 140, 202, 203, 204, 395, 396, 399, 409, 412, 427, 430, 451, 454, 567, 570, 588, 591, 600, 771, 818, 964, 965, 969, 970, 974, 980, 984, 996, 1013, 1016, 1021, 1024], "pursuit": 15, "unif": [15, 17, 137, 1040, 1046], "clearli": [15, 20, 122, 124], "lot": [15, 16, 127, 137, 152], "thought": [15, 18, 19, 120], "care": [15, 19, 140], "attent": [15, 19, 128, 129, 754, 769, 770, 1062, 1073], "gone": [15, 134], "simplifi": [15, 135, 136, 137, 139], "compat": [15, 26, 27, 40, 41, 77, 78, 86, 87, 120, 152, 273, 289, 292, 395, 409, 410, 411, 412, 413, 427, 430, 435, 438, 443, 446, 447, 450, 451, 454, 455, 458, 472, 475, 477, 480, 497, 500, 505, 508, 521, 524, 525, 528, 545, 548, 549, 552, 557, 560, 561, 564, 567, 570, 576, 579, 584, 587, 588, 591, 619, 623, 771, 803, 805, 812, 814, 819, 821, 828, 830, 834, 836, 837, 839, 859, 889, 892, 959, 961, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040], "excit": [15, 17, 118, 1040], "complianc": 15, "hope": [15, 152], "due": [15, 18, 26, 27, 129, 132, 395, 567, 570], "suit": [15, 18, 118, 123, 124, 138, 151], "some": [15, 16, 18, 19, 20, 75, 76, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 151, 152, 395, 489, 492, 715, 717, 720, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 752, 754, 766, 1040, 1062, 1070], "motiv": [15, 137], "great": [15, 16, 124, 135, 137], "convinc": 15, "celebr": 15, "encourag": [15, 151, 152, 1040, 1046], "foundat": 15, "point": [16, 19, 40, 41, 50, 51, 86, 87, 96, 97, 120, 121, 122, 124, 128, 132, 135, 137, 138, 151, 194, 195, 196, 197, 201, 202, 203, 204, 211, 217, 218, 225, 247, 248, 265, 267, 273, 279, 282, 308, 311, 321, 324, 332, 335, 395, 401, 404, 405, 408, 409, 412, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 455, 458, 459, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 485, 488, 489, 492, 493, 496, 529, 532, 533, 536, 541, 544, 545, 548, 567, 570, 584, 587, 588, 591, 592, 595, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 624, 625, 626, 627, 628, 629, 630, 633, 771, 772, 773, 774, 775, 776, 780, 782, 786, 788, 789, 791, 792, 794, 803, 805, 812, 814, 815, 817, 819, 821, 822, 824, 837, 839, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028], "mai": [16, 18, 19, 23, 26, 27, 72, 124, 129, 137, 139, 202, 203, 204, 220, 223, 345, 390, 395, 477, 480, 505, 508, 525, 528, 553, 556, 557, 560, 634, 655, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012], "ask": [16, 135, 137, 152, 1040], "perfectli": 16, "happi": [16, 18, 152], "abund": 16, "better": [16, 118, 133, 134, 137, 138, 139], "ll": [16, 17, 19, 122, 129, 132, 138], "give": [16, 18, 19, 118, 120, 121, 122, 126, 137, 859, 889, 892], "two": [16, 34, 35, 50, 51, 72, 77, 78, 96, 97, 121, 122, 124, 128, 129, 134, 138, 140, 202, 203, 204, 217, 218, 237, 240, 255, 257, 259, 260, 262, 264, 273, 331, 340, 395, 451, 454, 592, 595, 634, 642, 771, 772, 773, 774, 775, 776, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 831, 833, 834, 836, 859, 907, 910, 964, 965, 969, 970, 974, 975, 979, 980, 984, 1040], "streamlin": 16, "workflow": [16, 19, 138, 150, 1040], "save": [16, 75, 76, 124, 133, 152, 634, 696, 1074, 1075], "week": [16, 19, 20, 1040], "let": [16, 121, 122, 124, 129, 130, 131, 135, 137, 138, 139, 140, 996, 1005, 1008, 1017, 1020, 1021, 1024, 1025, 1028, 1040], "sai": [16, 18, 127, 137], "deepmind": 16, "releas": [16, 18, 20, 1040], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 132, 138, 996, 1017, 1020, 1025, 1028], "perceiverio": 16, "happen": [16, 18, 19, 124, 138], "slew": 16, "rush": 16, "f": [16, 21, 72, 118, 124, 129, 133, 135, 138, 140, 395, 501, 504, 634, 675, 679, 923, 926], "g": [16, 118, 129, 152, 273, 278, 332, 335, 345, 361, 923, 926, 947, 952, 953, 955, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1009, 1012, 1013, 1016, 1021, 1024], "inevit": 16, "deviat": [16, 124, 941, 942, 945, 947, 952, 996, 1017, 1020, 1076, 1077], "origin": [16, 54, 55, 75, 76, 77, 78, 79, 100, 101, 126, 127, 130, 135, 137, 395, 427, 430, 771, 799, 801, 859, 889, 892, 893, 894, 895, 896, 897], "often": [16, 124, 125, 133, 152], "erron": 16, "train": [16, 44, 45, 90, 91, 125, 129, 131, 138, 139, 140, 150, 151, 152, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 1040], "poor": 16, "converg": 16, "perform": [16, 75, 76, 119, 120, 122, 124, 125, 126, 128, 129, 131, 132, 135, 138, 152, 163, 184, 187, 202, 231, 232, 234, 235, 345, 634, 652, 656, 657, 658, 676, 677, 678, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 766, 768, 771, 822, 824, 919, 920, 921, 922, 923, 930, 931, 1029, 1030, 1033, 1035, 1038], "issu": [16, 17, 20, 124, 135, 137, 139, 152], "etc": [16, 18, 19, 20, 42, 43, 70, 71, 75, 76, 88, 89, 116, 117, 119, 120, 122, 124, 128, 129, 130, 135, 137, 138, 152, 202, 231, 232, 234, 235, 634, 662, 663, 664, 665, 666, 667, 687, 690, 691, 947, 948, 949, 950, 953, 955, 964, 965, 969, 970, 974, 980, 984, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1084, 1085], "publish": [16, 152], "manag": [16, 17, 132, 152, 345], "get": [16, 17, 18, 20, 72, 75, 76, 118, 124, 125, 130, 131, 132, 135, 136, 137, 138, 139, 273, 303, 306, 307, 308, 311, 315, 318, 345, 354, 355, 364, 365, 378, 379, 384, 388, 391, 394, 634, 641, 668, 669, 670, 689, 698, 1040, 1046, 1062, 1071], "work": [16, 18, 19, 20, 118, 124, 129, 130, 131, 134, 135, 136, 137, 139, 140, 1040, 1046], "repositori": [16, 18, 19, 21, 123, 133], "pull": [16, 17, 18, 21, 119, 152], "request": [16, 17, 119, 345, 381], "confus": [16, 132], "do": [16, 18, 19, 20, 44, 45, 75, 76, 90, 91, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 152, 395, 588, 591, 634, 678, 715, 731, 732, 733, 734, 735, 752, 923, 924, 933, 934, 935], "don": [16, 18, 19, 20, 70, 71, 116, 117, 124, 130, 139, 152], "expect": [16, 124, 152, 634, 641, 1040], "codebas": [16, 17, 118, 119, 132, 134, 345, 387, 388, 1040], "total": [16, 17, 19, 75, 76, 77, 78, 79, 122, 124, 131, 138, 139, 152, 345, 391, 959, 962, 996, 1017, 1020, 1025, 1028], "hour": 16, "spent": 16, "spin": 16, "off": [16, 134, 771, 783, 785, 831, 833], "test": [16, 18, 20, 118, 122, 133, 152, 273, 326, 329, 395, 509, 512, 513, 516, 517, 520, 1029, 1030, 1033, 1035, 1038], "error": [16, 18, 75, 76, 120, 124, 128, 131, 133, 137, 152, 163, 164, 167, 345, 395, 481, 484, 996, 1001, 1004, 1009, 1012, 1074, 1075, 1078, 1082], "iter": [16, 29, 30, 31, 32, 33, 42, 43, 70, 71, 72, 75, 76, 77, 78, 79, 88, 89, 116, 117, 129, 135, 138, 199, 200, 345, 367, 368, 370, 371, 372, 373, 376, 389, 634, 635, 636, 637, 638, 639, 859, 869, 872, 885, 888, 898, 911, 914, 915, 918, 923, 924, 925, 926, 929, 933, 934, 935], "address": [16, 19, 20, 128, 135], "sake": 16, "singl": [16, 19, 75, 76, 119, 120, 122, 124, 125, 127, 129, 132, 135, 138, 139, 140, 152, 345, 354, 355, 374, 375, 376, 377, 634, 710, 714, 947, 952, 953, 955, 964, 965, 969], "multipl": [16, 19, 75, 76, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 102, 103, 104, 105, 122, 125, 129, 152, 395, 409, 413, 565, 567, 570, 634, 635, 637, 638, 639, 663, 667, 684, 715, 731, 733, 734, 735, 771, 772, 775, 776, 792, 794, 859, 860, 863, 864, 893, 896, 897, 898, 941, 942, 944, 945, 946, 949, 951, 959, 960, 961, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1062, 1072], "line": [16, 18, 122, 124, 128, 133, 136, 137, 138, 139, 150, 1040, 1046], "convert": [16, 29, 30, 31, 32, 33, 34, 35, 75, 76, 124, 128, 135, 152, 153, 161, 202, 206, 207, 209, 242, 245, 273, 277, 278, 345, 361, 362, 363, 364, 384, 391, 394, 634, 699, 705, 709, 710, 771, 840, 842, 923, 925, 935, 936, 1052], "directli": [16, 19, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 135, 137, 139, 140, 151, 152, 923, 935], "graph": [16, 26, 27, 125, 129, 136, 152, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 964, 965, 969, 970, 974, 980, 984, 1074, 1075], "guarante": [16, 128, 152, 964, 965, 969], "turn": [16, 122, 124, 129], "4": [16, 21, 26, 27, 40, 41, 44, 45, 50, 51, 54, 55, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 124, 126, 129, 135, 137, 138, 139, 140, 163, 169, 172, 174, 177, 184, 187, 194, 195, 197, 202, 226, 229, 237, 240, 250, 253, 268, 272, 273, 294, 296, 297, 298, 303, 306, 326, 329, 345, 367, 383, 395, 396, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 420, 421, 422, 427, 430, 435, 438, 455, 458, 459, 461, 462, 463, 466, 468, 471, 493, 495, 496, 505, 508, 525, 528, 565, 566, 572, 575, 576, 579, 592, 595, 596, 598, 599, 601, 603, 604, 605, 606, 609, 611, 614, 615, 618, 624, 625, 627, 628, 629, 634, 643, 652, 661, 662, 663, 665, 666, 667, 699, 704, 715, 717, 719, 720, 721, 731, 732, 733, 734, 735, 754, 757, 758, 759, 761, 764, 768, 770, 771, 772, 773, 775, 777, 779, 780, 782, 783, 785, 792, 794, 803, 805, 809, 811, 828, 830, 831, 833, 843, 854, 857, 859, 860, 861, 862, 863, 864, 865, 868, 873, 876, 877, 880, 885, 888, 889, 892, 893, 895, 896, 897, 898, 907, 910, 923, 926, 941, 942, 944, 945, 946, 947, 948, 949, 951, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971, 973, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1029, 1030, 1033, 1040, 1078, 1079, 1080, 1081, 1083], "step": [16, 18, 19, 21, 44, 45, 75, 76, 80, 81, 90, 91, 122, 126, 128, 129, 130, 131, 135, 138, 139, 140, 151, 202, 203, 204, 205, 231, 232, 234, 235, 345, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 729, 736, 737, 738, 739, 740, 742, 744, 746, 919, 920, 921, 922, 1040, 1078, 1079, 1080, 1081, 1082, 1083], "take": [16, 17, 18, 19, 121, 122, 124, 129, 130, 131, 135, 137, 139, 140, 152, 395, 455, 458, 1040, 1046], "few": [16, 19, 20, 124, 125, 129, 130, 131, 132, 133, 136, 137, 138, 139, 150, 1040, 1046], "second": [16, 18, 26, 27, 40, 41, 44, 45, 77, 78, 86, 87, 90, 91, 122, 124, 132, 137, 273, 331, 340, 345, 376, 395, 409, 410, 411, 412, 413, 435, 438, 443, 446, 447, 450, 451, 454, 455, 458, 477, 480, 497, 500, 505, 508, 521, 524, 525, 528, 545, 548, 549, 552, 557, 560, 561, 564, 567, 570, 576, 579, 584, 587, 619, 623, 634, 642, 689, 694, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 771, 777, 779, 783, 785, 786, 788, 795, 798, 809, 811, 815, 817, 822, 824, 828, 830, 834, 836, 859, 903, 906, 907, 910, 919, 921, 964, 965, 969, 970, 974, 1078, 1079, 1080], "automat": [16, 18, 19, 118, 120, 125, 129, 134, 135, 136, 139, 140, 1040], "convers": [16, 30, 31, 32, 33, 75, 76, 134, 136, 140, 151, 152, 1040, 1046], "everyon": [16, 17, 19, 152], "regardless": [16, 17, 75, 76, 137, 140, 199, 200], "wouldn": 16, "nice": [16, 124], "write": [16, 19, 20, 21, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 118, 119, 121, 122, 125, 126, 132, 135, 137, 140, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 345, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 646, 647, 649, 652, 653, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 674, 687, 690, 691, 715, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 958, 959, 963, 964, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "onc": [16, 18, 19, 124, 129, 130, 131, 135, 138, 152, 345, 389, 771, 792, 794, 822, 824, 947, 948], "know": [16, 19, 124, 964, 965, 969, 970, 974, 980, 984], "among": [16, 75, 76, 124], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 125, 135], "understand": [16, 18, 19, 20, 21, 118, 120, 121, 122, 123, 133, 134], "pattern": [16, 75, 76, 121, 130, 634, 656, 657, 658], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 123, 124, 129, 135, 139, 152, 164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 197, 206, 207, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 345, 396, 397, 398, 400, 409, 410, 411, 413, 418, 419, 420, 422, 459, 460, 461, 463, 464, 465, 467, 493, 494, 495, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 624, 625, 626, 627, 635, 636, 637, 639, 663, 664, 665, 667, 705, 706, 707, 708, 717, 718, 719, 721, 731, 732, 733, 735, 761, 762, 763, 765, 771, 772, 773, 774, 776, 777, 779, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 856, 858, 859, 860, 861, 862, 864, 889, 892, 893, 894, 895, 897, 923, 925, 935, 942, 943, 944, 946, 949, 951, 970, 971, 972, 973, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039, 1040, 1046], "now": [16, 18, 21, 75, 76, 119, 120, 124, 127, 129, 130, 133, 137, 138, 140, 151, 152, 202, 268, 272, 1062, 1073, 1074, 1075], "spend": 16, "torchvis": 16, "probabl": [16, 124, 754, 766, 947, 948, 1062, 1070], "sonnet": 16, "about": [16, 18, 19, 123, 124, 134, 135, 139, 140, 152, 273, 308, 311, 315, 318], "next": [16, 18, 19, 20, 21, 121, 122, 126, 127, 133, 137, 138, 273, 308, 311, 1040, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083], "everyth": [16, 19, 20, 124, 136, 152], "zero": [16, 26, 27, 34, 35, 40, 41, 44, 45, 75, 76, 77, 78, 86, 87, 90, 91, 120, 122, 128, 129, 130, 131, 135, 138, 139, 163, 169, 172, 174, 177, 202, 211, 217, 218, 237, 240, 255, 257, 259, 260, 262, 264, 268, 270, 272, 273, 279, 282, 395, 409, 412, 414, 417, 418, 421, 443, 446, 463, 464, 466, 468, 471, 489, 492, 493, 496, 553, 556, 557, 560, 565, 566, 567, 570, 572, 575, 576, 579, 584, 587, 588, 591, 592, 595, 601, 604, 606, 607, 608, 610, 611, 614, 615, 618, 624, 628, 629, 634, 652, 687, 690, 691, 715, 717, 718, 719, 720, 721, 722, 724, 731, 734, 736, 738, 740, 742, 754, 766, 771, 772, 775, 780, 782, 795, 798, 803, 805, 812, 814, 834, 836, 837, 839, 859, 873, 876, 877, 880, 885, 888, 893, 896, 915, 918, 941, 942, 945, 947, 949, 950, 959, 960, 961, 962, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040, 1053, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1078, 1079, 1080, 1081], "need": [16, 18, 19, 20, 21, 119, 121, 122, 123, 125, 128, 129, 132, 135, 137, 138, 151, 152, 634, 646, 647, 649, 859, 860, 863, 873, 876], "said": 16, "high": [16, 20, 75, 76, 104, 105, 138, 947, 949, 950, 951, 953, 954, 955, 956], "level": [16, 17, 20, 125, 134, 135, 138, 139, 140, 152], "optim": [16, 132, 136, 138, 140, 151, 345, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 919, 920, 921, 922, 1040, 1079, 1080, 1081, 1083], "trainer": [16, 150, 152, 1040], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 140], "flax": [16, 140, 152], "trax": [16, 140], "objax": [16, 140], "idea": [16, 133, 151], "fulli": [16, 120, 128, 129, 135, 136, 137, 138, 139, 140, 152, 1062, 1072, 1073], "offer": [16, 139], "strongli": [17, 18, 1040, 1046], "welcom": [17, 18, 19, 1040, 1046], "absolut": [17, 40, 41, 75, 76, 86, 87, 395, 396, 397, 398, 399, 400, 771, 818], "skill": 17, "whether": [17, 18, 26, 27, 29, 30, 31, 32, 33, 42, 43, 44, 45, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 116, 117, 120, 130, 132, 163, 164, 167, 194, 195, 197, 199, 200, 273, 279, 282, 294, 296, 298, 303, 306, 320, 321, 324, 326, 329, 344, 345, 364, 365, 376, 380, 381, 384, 385, 389, 392, 394, 395, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 517, 520, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 636, 637, 638, 639, 642, 643, 652, 655, 659, 661, 663, 665, 667, 671, 673, 675, 678, 679, 680, 681, 682, 683, 684, 695, 697, 702, 705, 706, 708, 713, 714, 715, 722, 724, 726, 727, 729, 731, 732, 733, 734, 735, 736, 738, 740, 742, 744, 746, 749, 753, 754, 766, 771, 772, 774, 776, 786, 788, 893, 895, 897, 919, 920, 921, 922, 923, 924, 925, 929, 933, 934, 935, 936, 947, 948, 1029, 1030, 1033, 1035, 1038, 1051, 1052, 1062, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 75, 76, 80, 81, 118, 121, 122, 130, 134, 135, 137, 138, 139, 151, 152, 202, 203, 204, 205, 231, 232, 233, 234, 235, 236, 345, 360], "aspect": [17, 138, 1040], "guid": [17, 18, 19, 133, 1040], "through": [17, 19, 20, 118, 122, 124, 125, 126, 129, 133, 134, 135, 137, 138, 139, 140, 151, 395, 427, 430, 923, 926], "journei": [17, 1040, 1046], "inclusvi": 17, "big": [17, 152], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 134, 1040], "split": [17, 19, 26, 27, 75, 76, 134, 135, 152, 345, 354, 370, 371, 372, 373, 387, 388, 389, 634, 684, 859, 1040], "section": [17, 19, 20, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 964, 965, 969, 970, 974, 980, 984], "below": [17, 18, 20, 21, 34, 35, 118, 119, 122, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 151, 202, 255, 257, 259, 260, 262, 264, 395, 435, 438, 455, 458, 468, 471, 592, 595, 629, 771, 780, 782, 783, 785, 831, 833, 859, 873, 876, 877, 880, 964, 965, 969, 985, 986, 989, 1040], "best": [17, 18, 19, 20, 21, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 634, 684], "go": [17, 18, 19, 20, 118, 119, 122, 129, 134, 138, 152, 923, 934], "finish": [17, 18, 118, 1040], "dive": [17, 19, 20, 134, 137, 138, 152, 1040], "right": [17, 18, 19, 75, 76, 118, 122, 138, 395, 443, 446, 451, 454, 771, 822, 824], "environ": [17, 19, 21, 151], "basic": [17, 20, 21], "fork": [17, 18, 634, 685], "doc": [17, 20, 120, 121, 135, 138, 139, 1040], "document": [17, 19, 124, 136, 138, 140], "local": [17, 18, 21, 125], "task": [17, 19, 151, 919, 920, 921, 922, 1040], "help": [17, 18, 23, 72, 122, 124, 126, 128, 129, 137, 138, 139, 150, 634, 640, 996, 1021, 1024, 1040], "video": [17, 19, 120, 121, 122, 124], "realli": [18, 129, 152], "contribut": [18, 19, 20, 135, 1046], "toward": [18, 54, 55, 100, 101, 135, 859, 893, 894, 895, 896, 897, 1040, 1046], "page": [18, 19, 136, 140, 150, 1040, 1046], "explain": [18, 19, 20, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 1040, 1046], "main": [18, 21, 34, 35, 127, 129, 202, 217, 218, 255, 257, 259, 260, 262, 264, 771, 783, 785, 831, 833], "prefer": [18, 129], "mode": [18, 50, 51, 75, 76, 122, 129, 152, 199, 200, 345, 374, 375, 376, 377, 389, 395, 409, 412, 567, 570, 634, 695, 712, 771, 815, 816, 817], "git": [18, 19, 124], "recurs": [18, 21, 29, 30, 31, 32, 33, 75, 76, 125, 129, 139, 152, 923, 924, 925, 933, 934, 935], "submodul": [18, 19, 20, 21, 123, 124, 125, 131, 134, 135, 139, 1040, 1076, 1077, 1084, 1085], "com": 18, "unifyai": [18, 21], "http": [18, 121, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 414, 417, 418, 421, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 601, 604, 611, 614, 615, 618, 715, 717, 720, 722, 724, 771, 783, 785, 859, 873, 876, 893, 896, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004], "gh": 18, "your_fold": 18, "id": [18, 128, 129, 133, 345, 364, 1074, 1075], "cours": [18, 19, 122, 138, 152], "whatev": [18, 152], "integr": [18, 273, 279, 282], "familiar": [18, 20], "decid": [18, 75, 76, 923, 934], "sure": [18, 20, 123, 124], "elig": 18, "free": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 151, 1040], "student": 18, "licenc": 18, "peopl": [18, 19, 118], "seem": [18, 139, 152], "miss": [18, 122, 124, 128, 129, 133, 1078, 1082], "add": [18, 19, 20, 26, 27, 40, 41, 70, 71, 75, 76, 77, 78, 86, 87, 88, 89, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 135, 137, 152, 395, 396, 399, 413, 565, 635, 639, 715, 753, 941, 942, 945, 1040, 1046, 1076, 1077], "explicit": [18, 21, 129, 130, 132, 135, 152], "remind": 18, "channel": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 634, 661, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072], "pace": 18, "updat": [18, 19, 20, 21, 44, 45, 72, 75, 76, 90, 91, 118, 120, 122, 123, 127, 128, 129, 130, 135, 137, 138, 140, 152, 345, 354, 634, 678, 690, 691, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 768, 919, 920, 921, 923, 930, 931, 939, 940, 1051, 1052, 1078, 1079, 1080, 1081, 1082, 1083], "suggest": [18, 19, 119, 124], "latest": [18, 20, 21, 121, 152, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 414, 417, 418, 421, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 601, 604, 611, 614, 615, 618, 771, 783, 785, 859, 873, 876, 893, 896, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1062, 1071], "packag": [18, 21, 133, 152], "ensur": [18, 19, 120, 124, 128, 130, 133, 634, 678], "align": [18, 75, 76, 135, 137, 1040, 1046], "accord": [18, 21, 36, 37, 75, 76, 82, 83, 125, 130, 273, 294, 295, 296, 297, 298, 308, 311, 395, 409, 412, 451, 454, 567, 570, 634, 662, 690, 691, 771, 834, 836, 859, 869, 872, 915, 918, 996, 1017, 1020, 1025, 1028], "stabl": [18, 64, 65, 110, 111, 135, 152, 634, 669, 670, 692, 693, 700, 701, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995], "pypi": [18, 20, 152], "mayb": [18, 29, 32, 33, 135, 137], "person": [18, 19], "experi": [18, 136, 138, 152], "avoid": [18, 19, 124, 126, 127, 129, 133, 137, 345, 395, 489, 492], "pip": [18, 151, 1040], "instal": [18, 21, 133, 151, 1040], "abil": [18, 136, 152], "certain": [18, 75, 76, 124, 152, 202, 203, 204, 231, 232, 234, 235], "perhap": [18, 137, 138, 139, 152], "keep": [18, 19, 75, 76, 123, 124, 129, 136, 138, 140, 634, 713], "track": [18, 19, 345, 923, 935, 1074, 1075], "termin": [18, 19, 21, 75, 76, 77, 78, 79, 129, 135, 138], "run": [18, 21, 44, 45, 90, 91, 120, 123, 124, 126, 133, 135, 136, 137, 138, 139, 140, 151, 152, 345, 354, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 919, 920, 921, 922, 1062, 1073, 1074, 1075], "command": [18, 21, 1040], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 23, 26, 27, 72, 121, 124, 133, 135, 137, 138, 140, 199, 200, 634, 640, 771, 786, 788, 815, 817, 822, 824, 964, 965, 969, 970, 974], "3": [18, 21, 24, 25, 26, 27, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 122, 124, 126, 129, 135, 137, 138, 139, 140, 163, 164, 165, 169, 172, 174, 177, 179, 182, 184, 187, 194, 195, 197, 201, 202, 226, 229, 237, 240, 250, 253, 265, 267, 268, 272, 273, 294, 295, 296, 297, 298, 303, 306, 326, 329, 345, 364, 367, 383, 390, 395, 396, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 435, 438, 451, 454, 455, 458, 459, 461, 462, 463, 464, 466, 468, 471, 485, 488, 493, 494, 495, 496, 501, 504, 505, 508, 521, 524, 525, 528, 565, 566, 572, 575, 576, 579, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 624, 625, 627, 628, 629, 634, 635, 636, 637, 642, 643, 652, 659, 662, 663, 664, 665, 666, 667, 697, 699, 704, 710, 715, 717, 718, 719, 720, 721, 731, 734, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 792, 794, 803, 805, 809, 811, 822, 824, 828, 830, 831, 833, 840, 842, 843, 844, 846, 847, 848, 849, 851, 853, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 868, 873, 876, 877, 880, 885, 888, 889, 892, 893, 895, 896, 897, 898, 899, 902, 907, 910, 923, 926, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971, 973, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1021, 1024, 1029, 1030, 1033, 1040], "8": [18, 21, 26, 27, 40, 41, 52, 53, 54, 55, 77, 78, 86, 87, 90, 91, 98, 99, 104, 105, 122, 124, 129, 134, 138, 163, 179, 182, 202, 268, 272, 345, 367, 395, 409, 412, 413, 418, 421, 422, 435, 438, 459, 462, 468, 471, 505, 508, 525, 528, 565, 566, 592, 595, 596, 597, 598, 599, 600, 611, 614, 615, 618, 629, 634, 643, 662, 715, 717, 720, 731, 733, 734, 735, 754, 761, 764, 771, 777, 779, 780, 782, 783, 785, 809, 811, 828, 830, 843, 844, 845, 846, 847, 848, 849, 851, 853, 854, 855, 856, 858, 859, 860, 861, 863, 877, 880, 885, 888, 898, 947, 948, 949, 950, 951, 959, 963, 964, 965, 969, 996, 997, 1000, 1040, 1062, 1073], "activ": [18, 19, 21, 25, 70, 71, 74, 116, 117, 119, 139, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 198, 1040, 1049, 1050], "setup": 18, "click": [18, 19, 121, 1040], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 140, 345, 390, 395, 553, 556, 557, 560, 959, 963, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1005, 1008, 1009, 1012], "left": [18, 19, 75, 76, 122, 130, 395, 443, 446, 771, 786, 788, 799, 801, 822, 824, 959, 960, 1040], "panel": 18, "select": [18, 19, 124, 135, 137, 140, 152], "drop": [18, 152], "down": [18, 124, 137], "path": [18, 21], "manual": [18, 19, 124, 139, 923, 924, 933, 934], "builtin": [18, 21, 137, 139], "requir": [18, 21, 119, 120, 121, 122, 124, 127, 128, 130, 131, 137, 152, 199, 200, 395, 611, 614, 771, 786, 788, 859, 903, 906, 1051, 1052], "cmd": [18, 21], "directori": [18, 19, 21, 124, 634, 696], "folder": [18, 19, 21, 119, 123, 124, 125], "file": [18, 19, 21, 75, 76, 119, 121, 124, 125, 126, 128, 129, 133, 135, 138, 634, 696, 1074, 1075], "abov": [18, 19, 21, 34, 35, 120, 121, 122, 124, 125, 126, 128, 129, 132, 133, 137, 138, 139, 140, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 493, 496, 565, 567, 570, 576, 579, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 634, 662, 754, 757, 761, 764, 770, 771, 772, 775, 780, 782, 783, 785, 786, 788, 831, 833, 859, 873, 876, 877, 880, 893, 896, 941, 942, 945, 947, 949, 950, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1013, 1016, 1017, 1020, 1021, 1024, 1029, 1030, 1033], "m": [18, 19, 21, 34, 35, 50, 51, 96, 97, 118, 135, 202, 237, 240, 255, 257, 259, 260, 262, 264, 634, 643, 771, 772, 773, 774, 775, 776, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 819, 821, 822, 824, 825, 827, 831, 833, 947, 952, 953, 955], "python3": [18, 21], "script": [18, 19, 21, 122, 135, 152], "bat": [18, 19, 21], "OR": [18, 19, 21, 395, 447, 450, 557, 560, 1029, 1035, 1038], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 72, 75, 76, 77, 78, 79, 121, 128, 129, 133, 345, 379], "os": 18, "note": [18, 19, 119, 121, 122, 124, 129, 395, 588, 591, 771, 786, 788, 822, 824, 859, 903, 906, 964, 970, 974, 996, 1005, 1008], "tick": [18, 19], "abl": [18, 19, 75, 76, 125, 130, 132, 133, 137, 140], "To": [18, 122, 124, 125, 129, 133, 138, 139, 140, 1040], "ivy_test": [18, 19], "test_array_api": [18, 19, 123, 124], "cd": [18, 19, 21], "r": [18, 75, 76, 634, 643, 713, 771, 815, 817, 840, 842], "txt": 18, "visual": [18, 133, 152], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 134, 395, 489, 492], "conflict": [18, 19, 138], "addit": [18, 19, 75, 76, 119, 121, 124, 129, 130, 137, 138, 140, 345, 390, 395, 409, 412, 634, 656, 657, 658, 941, 942, 945, 1062, 1072], "yet": [18, 20, 129], "particular": [18, 19, 119, 124, 132, 395, 396, 399], "system": [18, 152, 771, 819, 821], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 47, 48, 49, 93, 94, 95, 119, 135, 136, 138, 140, 151, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 1040], "profession": 18, "execut": [18, 21, 129, 132, 135, 137, 140, 152, 634, 711], "deploy": 18, "top": [18, 19, 124, 138, 139, 1040], "press": [18, 138, 1040], "ok": 18, "correctli": [18, 75, 76, 120, 124, 129, 130, 133, 139, 152, 771, 799, 801, 959, 960], "caus": [18, 19, 122, 124, 129, 132, 133, 152], "earlier": [18, 19], "might": [18, 19, 119, 124, 127, 135, 137, 138, 634, 655], "necessari": [18, 122, 126, 129, 132], "virtualis": 18, "detail": [18, 19, 20, 119, 120, 123, 124, 125, 126, 127, 129, 138, 139, 202, 220, 223, 964, 965, 969, 970, 974, 980, 984], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 75, 76, 88, 89, 202, 237, 240, 634, 646, 647, 648, 649, 754, 766, 771, 799, 801, 837, 839, 1062, 1070], "keyr": 18, "fssl": 18, "download": [18, 124], "gpg": 18, "dearmor": 18, "o": [18, 118, 135, 634, 643], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 140, 152], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 70, 71, 72, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 108, 109, 116, 117, 119, 120, 122, 124, 130, 131, 133, 135, 138, 139, 140, 152, 194, 195, 197, 202, 203, 204, 206, 207, 209, 237, 238, 240, 242, 245, 273, 284, 285, 287, 294, 296, 298, 345, 354, 355, 364, 366, 367, 370, 371, 374, 375, 389, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 637, 639, 643, 663, 665, 667, 699, 704, 705, 706, 708, 713, 715, 717, 719, 721, 731, 733, 735, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 771, 772, 774, 776, 828, 830, 859, 865, 868, 877, 880, 893, 895, 897, 898, 903, 906, 923, 924, 925, 926, 929, 934, 935, 941, 942, 945, 959, 962, 964, 970, 971, 973, 974, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "dev": [18, 26, 27, 75, 76, 77, 79, 125, 131, 135, 137, 139, 345, 354, 379], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 124, 129, 152], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 124, 133, 151, 345], "post": [18, 140, 941, 942, 945, 1040, 1046], "It": [18, 19, 21, 23, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 72, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 118, 119, 121, 122, 124, 126, 128, 129, 132, 135, 137, 138, 139, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 345, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 646, 647, 649, 652, 656, 657, 658, 660, 663, 664, 665, 666, 667, 674, 687, 690, 691, 715, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 958, 959, 960, 963, 964, 980, 984, 985, 986, 989, 991, 994, 1029, 1030, 1033, 1035, 1038], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 120, 121, 122, 124, 125, 129, 132, 135, 137, 138, 152], "featur": [18, 119, 120, 138, 1040], "vm": 18, "azur": 18, "cloud": [18, 151], "mean": [18, 19, 66, 67, 75, 76, 112, 113, 116, 117, 118, 122, 124, 125, 129, 130, 131, 132, 135, 137, 138, 139, 140, 151, 152, 345, 374, 375, 376, 377, 389, 634, 657, 919, 920, 921, 922, 923, 929, 947, 952, 964, 965, 969, 996, 1040, 1053], "configur": [18, 19, 21, 75, 76, 130, 345, 388, 923, 936], "defin": [18, 20, 119, 120, 121, 124, 130, 137, 139, 152, 395, 567, 570, 588, 591, 634, 687, 771, 777, 779, 786, 788, 819, 821, 947, 949, 950, 996, 1001, 1004, 1005, 1008, 1009, 1012], "dockerfil": [18, 21], "longer": [18, 124, 130, 132], "worri": 18, "platform": 18, "agnost": [18, 120, 128, 135, 137, 140, 152, 1040], "usual": [18, 124], "studio": 18, "favourit": 18, "extens": [18, 19, 121, 124, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 493, 496, 525, 528, 565, 576, 579, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 771, 780, 782, 783, 785, 859, 873, 876, 877, 880, 893, 896, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1029, 1030, 1033], "theme": 18, "too": [18, 19, 133, 152, 395, 409, 412, 567, 570], "done": [18, 19, 122, 124, 133, 138], "unsupport": [18, 130, 133, 273, 314], "old": [18, 75, 76, 132], "slow": 18, "ipad": 18, "long": [18, 19, 122, 754, 768], "browser": 18, "cool": [18, 119], "requisit": 18, "head": [18, 129, 754, 769, 1040, 1062, 1073], "pane": [18, 19], "readi": [18, 20], "begin": [18, 923, 924, 934], "outlin": [18, 19, 20, 118, 121, 124, 125, 129, 132, 137], "green": [18, 19, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 1087, 1088], "dropdown": 18, "tab": [18, 138, 1040], "master": [18, 19, 129], "vs": [18, 124], "view": [18, 19, 72, 202, 220, 223, 754, 757, 761, 764], "log": [18, 19, 40, 41, 86, 87, 125, 129, 132, 135, 138, 202, 234, 235, 395, 537, 540, 545, 548, 771, 818, 1040], "built": [18, 124, 136, 202, 203, 204, 345, 1062, 1073, 1074, 1075], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 40, 41, 104, 105, 122, 124, 395, 435, 438, 592, 595, 596, 597, 754, 757, 771, 783, 785, 809, 811, 828, 830, 859, 893, 896, 947, 949, 950, 951, 959, 962, 964, 965, 969, 996, 997, 1000], "minut": 18, "launch": 18, "12": [18, 86, 87, 102, 103, 104, 105, 122, 124, 129, 395, 435, 438, 455, 458, 468, 471, 592, 595, 606, 608, 610, 634, 652, 670, 715, 717, 720, 771, 783, 785, 809, 811, 828, 830, 859, 877, 880, 885, 888, 893, 896, 941, 942, 944, 945, 946, 947, 949, 950, 951, 959, 963, 964, 965, 969, 996, 997, 1000], "output": [18, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 118, 119, 120, 121, 122, 124, 125, 128, 129, 131, 132, 135, 137, 139, 140, 152, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 345, 354, 355, 389, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 645, 646, 647, 649, 652, 653, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 674, 687, 690, 691, 715, 726, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 923, 936, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 958, 959, 963, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073], "That": [18, 19, 124, 137, 138, 139, 395, 588, 591], "alreadi": [18, 19, 75, 76, 120, 126, 129, 137, 152, 345, 395, 459, 462, 493, 496, 567, 570, 592, 595, 630, 633, 771, 809, 811, 1040], "refer": [18, 19, 120, 124, 125, 130, 152, 202, 217, 218, 395, 489, 492, 537, 540, 715, 717, 720, 722, 724, 771, 834, 836, 840, 842, 996, 1017, 1020, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1062, 1072], "approach": [18, 19, 124, 125, 129, 137, 138, 152], "colour": 18, "applic": [18, 130, 131, 139, 754, 769, 770, 923, 929, 935], "good": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 139], "chanc": 18, "vscode": 18, "show": [18, 19, 75, 76, 122, 124, 132, 151, 152, 1040], "explor": [18, 136, 140, 151], "troubleshoot": 18, "sometim": [18, 19, 124], "ever": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "64": [18, 48, 49, 94, 95, 124, 138, 139, 395, 611, 614, 615, 618, 754, 760, 761, 762, 763, 764, 765, 771, 809, 811, 996, 997, 1000, 1040, 1062, 1073], "bit": [18, 122, 124, 125, 129, 137, 273, 307, 308, 311, 315, 318, 395, 439, 442, 443, 446, 451, 454, 996, 1013, 1016, 1021, 1024], "usr": 18, "more": [18, 19, 20, 26, 27, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 151, 152, 202, 203, 204, 273, 284, 287, 395, 489, 492, 771, 795, 798, 859, 877, 880, 964, 965, 969, 970, 974, 980, 984, 1040], "nutshel": [18, 120], "hook": 18, "lint": 18, "accept": [18, 19, 29, 120, 121, 122, 124, 125, 128, 129, 131, 132, 137, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 493, 496, 553, 556, 557, 560, 565, 576, 579, 588, 591, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 634, 662, 754, 757, 761, 764, 770, 771, 772, 775, 780, 782, 783, 785, 859, 873, 876, 877, 880, 893, 896, 941, 942, 945, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1005, 1008, 1029, 1030, 1033, 1040], "fix": [18, 19], "fail": [18, 20, 123, 124, 133, 135, 137], "attempt": [18, 133, 152], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 135, 137, 138, 139, 140, 150, 152, 163, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 197, 198, 206, 207, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 273, 294, 295, 296, 298, 332, 335, 396, 397, 398, 400, 409, 410, 411, 413, 418, 419, 420, 422, 459, 460, 461, 463, 464, 465, 467, 493, 494, 495, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 624, 625, 626, 627, 634, 635, 636, 637, 639, 656, 657, 658, 663, 664, 665, 667, 705, 706, 707, 708, 715, 717, 718, 719, 721, 731, 732, 733, 735, 736, 738, 740, 742, 754, 761, 762, 763, 765, 767, 769, 770, 771, 772, 773, 774, 776, 803, 805, 812, 814, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 893, 894, 895, 897, 903, 906, 919, 920, 921, 923, 929, 932, 935, 936, 941, 942, 943, 944, 945, 946, 949, 951, 970, 971, 972, 973, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039, 1040, 1048, 1049, 1050, 1076, 1077], "proce": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "modifi": [18, 19, 121, 125, 130, 131, 133, 135], "properli": [18, 118], "enter": [18, 19, 120, 128, 130, 131, 345, 715, 753], "unsur": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "feel": [18, 19, 20, 21, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 1040], "server": [19, 1040], "appropri": [19, 70, 71, 116, 117, 124, 127, 395, 409, 412, 567, 570, 959, 960], "context": [19, 122, 124, 129, 130, 131, 345, 634, 685, 754, 769, 1062, 1073], "suitabl": [19, 119, 129], "quick": [19, 118, 139], "alwai": [19, 20, 44, 45, 75, 76, 90, 91, 119, 120, 121, 124, 125, 126, 128, 129, 132, 133, 135, 137, 152, 273, 279, 282, 395, 409, 412, 567, 570, 634, 678, 715, 731, 732, 733, 734, 735, 749], "correct": [19, 20, 66, 67, 112, 113, 118, 120, 125, 129, 130, 131, 133, 273, 340, 859, 860, 863, 996, 1017, 1018, 1019, 1020, 1025, 1026, 1027, 1028, 1040], "tendenc": 19, "gener": [19, 20, 21, 43, 44, 45, 70, 71, 75, 76, 89, 90, 91, 116, 117, 118, 119, 120, 121, 122, 125, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 151, 152, 199, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 414, 417, 418, 421, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 588, 591, 601, 604, 611, 614, 615, 618, 635, 638, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 709, 710, 711, 712, 713, 714, 715, 731, 732, 733, 734, 735, 771, 783, 785, 859, 873, 876, 893, 896, 947, 948, 949, 950, 953, 955, 957, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1040, 1078, 1082], "land": 19, "end": [19, 129, 132, 134, 151, 152, 202, 203, 204, 395, 427, 430, 1040, 1046], "world": 19, "come": [19, 20, 124, 139, 150, 1040, 1046], "fly": 19, "hard": [19, 137], "receiv": [19, 124, 130, 131, 345, 354, 355, 634, 641, 684, 1062, 1072], "respons": [19, 21], "internship": 19, "comment": [19, 133], "trigger": 19, "unansw": 19, "label": [19, 52, 53, 135, 136, 140, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857], "respond": 19, "remov": [19, 20, 21, 72, 75, 76, 121, 124, 125, 130, 132, 140, 771, 783, 785, 795, 798, 831, 833, 859, 899, 902, 919, 920, 921], "someon": [19, 152], "els": [19, 20, 72, 119, 125, 126, 132, 135, 137, 139, 140, 152, 634, 644, 655, 659, 923, 933], "strive": [19, 124, 152], "repli": 19, "newli": [19, 124, 132, 199, 200, 273, 279, 282, 634, 645], "place": [19, 34, 35, 54, 55, 75, 76, 100, 101, 118, 119, 120, 121, 122, 124, 125, 129, 131, 133, 140, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 259, 260, 264, 265, 267, 268, 270, 272, 273, 294, 297, 326, 329, 345, 390, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 634, 662, 676, 677, 678, 754, 757, 761, 764, 770, 771, 772, 775, 780, 782, 783, 785, 859, 873, 876, 877, 880, 893, 894, 895, 896, 897, 941, 942, 945, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1029, 1030, 1033, 1078, 1079, 1080, 1081, 1082, 1083], "bug": [19, 124], "serv": [19, 120, 124, 125, 128, 129, 134, 1040], "suspect": 19, "behaviour": [19, 120, 121, 124, 128, 129, 132, 137], "observ": 19, "confid": 19, "noth": [19, 23, 72, 75, 76], "wrong": 19, "someth": [19, 119, 138, 139, 152], "bet": 19, "act": [19, 122, 152], "placehold": [19, 120, 128, 133, 923, 935], "sub": [19, 20, 75, 76, 118, 124, 129, 137, 138, 139, 345, 370, 371, 374, 375, 376, 377, 771, 783, 785, 859, 898, 919, 920, 921, 922, 1040], "mark": [19, 124], "ii": [19, 996, 997, 1000], "iii": 19, "titl": [19, 1040], "issue_numb": 19, "delet": [19, 21, 72], "No": [19, 135], "wait": [19, 75, 76, 77, 78, 79], "progress": [19, 129, 136, 140], "pr": 19, "soon": [19, 129, 150, 152, 1040, 1046], "partial": [19, 75, 76, 1074, 1075], "solut": [19, 124, 129, 771, 819, 821], "review": [19, 119], "merg": 19, "everi": [19, 20, 21, 34, 35, 42, 43, 88, 89, 120, 122, 123, 124, 125, 126, 127, 129, 132, 135, 137, 139, 202, 225, 226, 227, 229, 634, 635, 636, 637, 638, 639], "shape": [19, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 104, 105, 108, 109, 119, 120, 121, 122, 124, 130, 131, 132, 135, 137, 138, 139, 140, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 247, 248, 249, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 266, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 290, 291, 292, 293, 345, 357, 385, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 646, 647, 649, 652, 656, 657, 658, 660, 663, 664, 665, 666, 667, 671, 674, 687, 690, 691, 695, 699, 712, 715, 717, 719, 721, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 941, 942, 945, 947, 948, 949, 950, 951, 952, 953, 955, 956, 958, 959, 960, 962, 963, 971, 973, 985, 986, 989, 991, 994, 996, 997, 1000, 1029, 1030, 1033, 1035, 1038, 1040, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1076, 1077], "move": [19, 75, 76, 119, 345, 390], "within": [19, 29, 32, 33, 124, 139, 152, 202, 203, 204, 947, 953, 955], "7": [19, 21, 26, 27, 40, 41, 44, 45, 52, 53, 54, 55, 77, 78, 86, 87, 90, 91, 98, 99, 102, 103, 104, 105, 122, 124, 125, 129, 132, 163, 169, 172, 174, 177, 345, 367, 395, 396, 399, 409, 410, 411, 412, 413, 418, 420, 435, 438, 439, 442, 455, 458, 459, 462, 468, 471, 485, 488, 493, 496, 505, 508, 525, 528, 565, 566, 592, 595, 596, 597, 598, 599, 601, 604, 606, 609, 611, 614, 624, 628, 629, 634, 643, 652, 662, 715, 717, 718, 719, 720, 721, 722, 724, 731, 732, 734, 736, 738, 754, 760, 761, 764, 770, 771, 777, 779, 780, 782, 783, 785, 809, 811, 828, 830, 843, 844, 845, 847, 848, 849, 850, 852, 854, 855, 857, 858, 859, 860, 861, 863, 873, 876, 877, 880, 885, 888, 898, 907, 910, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 959, 963, 964, 965, 969, 996, 997, 1000], "dai": 19, "close": [19, 121, 395, 489, 492, 592, 595, 771, 822, 824], "likewis": [19, 120, 121, 125, 129, 130, 138], "freed": 19, "flag": [19, 44, 45, 75, 76, 90, 91, 132, 137, 345, 364, 715, 731, 732, 733, 734, 735], "purpos": [19, 21, 120, 122, 124, 125, 127, 128, 129, 134, 137, 395, 489, 492, 1040], "remain": [19, 122, 152, 395, 409, 412, 567, 570, 588, 591, 859, 889, 892, 923, 929], "access": [19, 21, 75, 76, 130], "short": [19, 139, 754, 768], "basi": [19, 123, 138], "situat": [19, 140], "alloc": [19, 34, 35, 152, 202, 255, 257, 259, 260, 262, 264, 273, 279, 282, 345], "upon": [19, 122, 124, 132, 152], "period": 19, "prevent": [19, 44, 45, 90, 91, 132, 133, 137, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 996, 1021, 1024, 1078, 1079, 1080], "unabl": 19, "obvious": 19, "never": [19, 124, 129], "reflect": [19, 128], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 137, 140], "becaus": [19, 120, 121, 124, 125, 126, 128, 130, 131, 132, 135, 139, 140, 152], "inact": 19, "limit": [19, 75, 76, 77, 78, 79, 122, 124, 133, 135, 138, 140, 152, 273, 308, 311, 315, 318, 634, 646, 647, 649, 859, 860, 863], "me": 19, "unfairli": 19, "definit": [19, 50, 51, 96, 97, 125, 130, 137, 771, 772, 773, 774, 775, 776, 777, 779], "investig": 19, "Then": [19, 21, 137, 152], "practic": 19, "separ": [19, 124, 128, 133, 135, 137, 138], "branch": [19, 129, 152, 199, 200, 395, 427, 430], "simpli": [19, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 121, 122, 124, 125, 128, 129, 131, 132, 135, 139, 140, 164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 197, 206, 207, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 395, 396, 397, 398, 400, 409, 410, 411, 413, 418, 419, 420, 422, 459, 460, 461, 463, 464, 465, 467, 489, 492, 493, 494, 495, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 624, 625, 626, 627, 635, 636, 637, 639, 663, 664, 665, 667, 705, 706, 707, 708, 717, 718, 719, 721, 731, 732, 733, 735, 761, 762, 763, 765, 772, 773, 774, 776, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 856, 858, 860, 861, 862, 864, 893, 894, 895, 897, 942, 943, 944, 946, 949, 951, 970, 971, 972, 973, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039], "role": [19, 136], "kept": [19, 75, 76, 77, 78, 79, 132, 919, 920, 921], "date": 19, "upstream": [19, 123], "complic": [19, 135], "root": [19, 21, 138, 395, 611, 614, 947, 948, 952], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 996, 1013, 1016, 1021, 1024], "clone": [19, 21, 75, 76, 345, 366, 367, 368, 369], "push": [19, 123, 133], "both": [19, 120, 121, 122, 124, 125, 129, 131, 132, 135, 137, 138, 139, 140, 151, 152, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 331, 395, 396, 399, 409, 412, 414, 417, 418, 421, 459, 462, 493, 496, 565, 576, 579, 584, 587, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 634, 662, 715, 717, 720, 754, 757, 761, 764, 770, 771, 772, 775, 777, 779, 783, 785, 795, 798, 834, 836, 859, 893, 896, 941, 942, 945, 964, 970, 974, 996, 1001, 1004, 1029, 1030, 1033], "abort": 19, "tediou": 19, "resolut": 19, "stash": 19, "reinstat": 19, "correspond": [19, 54, 55, 72, 75, 76, 77, 78, 100, 101, 120, 121, 122, 123, 124, 125, 128, 129, 130, 273, 284, 287, 395, 427, 430, 584, 587, 771, 777, 779, 786, 788, 819, 821, 859, 865, 868, 893, 894, 895, 896, 897, 947, 948, 959, 960, 961, 964, 965, 969, 970, 974, 980, 984, 996, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 120, 121, 129, 137], "atlassian": 19, "tutori": 19, "wrote": 19, "piec": [19, 125, 127, 128, 135], "inform": [19, 124, 133, 273, 308, 311, 315, 318, 634, 640, 715, 749], "tag": 19, "usu": 19, "describ": [19, 124, 136, 140, 996, 997, 1000, 1013, 1016, 1017, 1020, 1021, 1024], "navig": [19, 118], "blame": 19, "revis": 19, "author": [19, 1040], "eg": [19, 124], "16": [19, 50, 51, 86, 87, 104, 105, 122, 124, 138, 395, 624, 625, 627, 628, 754, 760, 761, 764, 771, 772, 773, 775, 783, 785, 809, 811, 949, 951, 959, 963, 996, 997, 1000], "5": [19, 21, 26, 27, 40, 41, 42, 43, 50, 51, 54, 55, 56, 57, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 120, 122, 124, 126, 137, 138, 139, 163, 169, 172, 174, 177, 184, 187, 194, 195, 197, 202, 226, 229, 237, 240, 250, 253, 265, 267, 268, 272, 273, 294, 296, 297, 298, 303, 306, 326, 329, 345, 367, 383, 395, 396, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 420, 421, 422, 431, 434, 435, 438, 451, 454, 455, 458, 459, 460, 461, 462, 468, 471, 493, 494, 495, 496, 505, 508, 525, 528, 565, 566, 572, 575, 576, 579, 592, 595, 596, 597, 598, 599, 601, 603, 604, 605, 611, 614, 615, 618, 624, 625, 627, 628, 629, 634, 635, 636, 643, 652, 662, 663, 666, 667, 699, 704, 715, 717, 719, 720, 721, 731, 734, 754, 757, 759, 760, 761, 764, 770, 771, 772, 773, 775, 777, 779, 780, 782, 783, 785, 792, 794, 809, 811, 828, 830, 831, 833, 843, 854, 857, 859, 860, 861, 862, 863, 864, 865, 868, 873, 876, 877, 880, 885, 888, 889, 892, 893, 895, 896, 897, 898, 907, 910, 923, 926, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 958, 959, 961, 962, 963, 964, 965, 969, 970, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1029, 1030, 1033, 1062, 1073], "past": 19, "l": [19, 50, 51, 96, 97, 118, 771, 772, 773, 774, 775, 776, 786, 788, 795, 798, 831, 833], "filepath": [19, 75, 76], "grep": 19, "v": [19, 72, 135, 138, 139, 140, 754, 770, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1082, 1084, 1085], "commit_id": 19, "handi": [19, 124], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 122], "previou": [19, 120, 124, 140, 152, 634, 712, 715, 722, 724, 736, 738], "shown": [19, 70, 71, 75, 76, 116, 117, 120, 122, 124, 133, 135, 137, 152, 395, 435, 438, 455, 458, 468, 471, 592, 595, 629, 771, 780, 782, 859, 873, 876, 877, 880, 964, 965, 969, 985, 986, 989], "whenev": [19, 124, 137, 138], "think": [19, 122], "interact": [19, 124, 1040], "gain": [19, 134, 139, 1053], "quit": [19, 20, 121, 124, 125, 127, 128], "repeat": [19, 54, 55, 75, 76, 100, 101, 121, 122, 124, 126, 128, 129, 133, 634, 658, 859, 911, 914], "yourself": [19, 20, 124, 151], "simpler": [19, 137], "cannot": [19, 126, 130, 140], "least": [19, 122, 124, 125, 128, 771, 795, 798], "final": [19, 121, 122, 125, 128, 130, 132, 133, 135, 137, 138, 202, 231, 232, 234, 235, 634, 661, 1062, 1073], "tickbox": 19, "lower": [19, 34, 35, 50, 51, 75, 76, 96, 97, 122, 124, 135, 152, 202, 217, 218, 255, 257, 259, 395, 565, 771, 772, 773, 774, 775, 776, 947, 953, 955], "corner": 19, "without": [19, 75, 76, 119, 120, 125, 128, 129, 131, 133, 135, 137, 138, 139, 151, 152, 634, 689, 694, 859, 889, 892, 923, 925, 964, 965, 969, 970, 974, 980, 984], "span": 19, "intent": [19, 132], "larg": [19, 138, 395, 409, 412, 567, 570], "discourag": 19, "philosophi": 19, "increment": [19, 634, 677], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 23, 72, 1040], "wast": 19, "spot": [19, 125], "mistak": [19, 133], "propos": 19, "mountain": 19, "around": [19, 75, 76, 77, 78, 79, 120, 125, 128, 137, 152], "advoc": [19, 152], "individu": [19, 20, 125], "per": [19, 48, 49, 94, 95, 124, 138, 345, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "style": [19, 959, 962], "ve": [19, 134, 137, 947, 948, 1040], "were": [19, 75, 76, 119, 124, 129, 133], "actual": [19, 118, 125, 132, 134, 137, 139, 152], "aim": [19, 134], "part": [19, 34, 35, 119, 123, 124, 125, 135, 136, 140, 151, 152, 202, 255, 257, 259, 260, 262, 264, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 1074, 1075], "subsect": 19, "session": [19, 1040], "block": [19, 124, 125, 133, 134, 136, 140, 152, 345, 715, 753, 1040], "smaller": [19, 54, 55, 100, 101, 135, 140, 859, 860, 863, 893, 894, 895, 896, 897, 996, 1013, 1016, 1021, 1024], "edit": 19, "exact": [19, 75, 76, 135, 964, 965, 969], "beauti": 19, "particularli": [19, 138, 152], "concern": [19, 118, 122, 129, 132, 134], "effici": [19, 120, 124, 125, 129, 132, 133, 135, 138, 152], "difficult": [19, 124, 152, 964, 965, 969, 970, 974, 980, 984], "undo": 19, "stress": 19, "frequenc": [19, 634, 661], "pycharm": 19, "pytest": [19, 124], "button": 19, "declar": 19, "insid": [19, 21, 119, 124, 130], "exec": 19, "rm": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "bash": [19, 21], "test_ivi": [19, 124], "test_funct": [19, 124], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 75, 76, 82, 83, 124, 273, 300, 301, 302, 337, 338, 339, 345, 358, 359, 634, 650, 654, 672, 715, 748], "q": [19, 152, 754, 770, 771, 786, 788, 815, 817], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 48, 49, 94, 95, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "variou": [19, 120, 121, 127, 151], "valu": [19, 23, 26, 27, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 54, 55, 62, 63, 72, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 94, 95, 100, 101, 120, 121, 122, 124, 125, 129, 130, 131, 132, 133, 135, 137, 140, 152, 194, 195, 196, 197, 202, 203, 204, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 273, 279, 282, 300, 301, 302, 345, 357, 388, 389, 395, 396, 397, 398, 399, 400, 401, 404, 409, 412, 414, 417, 423, 426, 459, 462, 477, 480, 481, 484, 493, 496, 497, 500, 501, 504, 505, 508, 521, 524, 525, 528, 565, 566, 567, 570, 576, 579, 580, 583, 584, 587, 592, 595, 629, 630, 633, 634, 646, 647, 649, 650, 655, 661, 662, 663, 664, 665, 666, 667, 672, 675, 679, 689, 690, 691, 692, 693, 694, 714, 715, 717, 718, 719, 720, 721, 722, 724, 726, 736, 738, 749, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 803, 805, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 837, 839, 859, 860, 863, 869, 870, 871, 872, 885, 888, 889, 892, 915, 917, 918, 919, 920, 921, 923, 927, 928, 929, 930, 931, 936, 939, 940, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 957, 959, 960, 961, 963, 964, 965, 969, 970, 972, 974, 975, 979, 980, 984, 985, 986, 989, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082], "cpu": [19, 42, 43, 75, 76, 88, 89, 131, 152, 202, 231, 232, 234, 235, 268, 272, 345, 364, 365, 367, 381, 384, 386, 390, 391, 393, 394, 634, 662, 663, 664, 665, 666, 667, 687, 690, 691, 947, 948, 949, 950, 952, 953, 955, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1084, 1085], "gpu": [19, 104, 105, 131, 137, 152, 345, 364, 367, 380, 382, 386, 388, 393, 949, 951], "combin": [19, 75, 76, 77, 78, 79, 122, 124, 125, 128, 129, 140, 771, 777, 779], "wherebi": [20, 129, 923, 935], "broad": 20, "distribut": [20, 52, 53, 75, 76, 124, 131, 152, 345, 366, 370, 371, 372, 373, 754, 766, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 947, 948, 949, 950, 952, 953, 955, 1062, 1070, 1074, 1075], "across": [20, 75, 76, 120, 122, 124, 125, 129, 130, 345, 354, 355, 366, 367, 369, 370, 371, 372, 373, 377, 387, 388, 634, 642, 643, 923, 929, 959, 961], "todo": 20, "commit": [20, 124], "NOT": [20, 395, 553, 556], "static": [20, 73, 74, 75, 76, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 121, 122, 125, 152, 194, 195, 199, 200, 294, 298, 396, 400, 409, 413, 418, 422, 463, 467, 596, 600, 601, 605, 624, 625, 635, 639, 663, 667, 705, 706, 731, 735, 761, 765, 772, 776, 844, 848, 849, 853, 854, 858, 860, 864, 893, 897, 942, 946, 949, 951, 970, 971, 1030, 1034, 1035, 1039], "method": [20, 23, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 128, 133, 135, 136, 139, 140, 152, 163, 164, 165, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 197, 198, 202, 206, 207, 212, 213, 220, 221, 223, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 272, 273, 294, 295, 296, 298, 303, 306, 395, 396, 397, 398, 400, 409, 410, 411, 413, 414, 417, 418, 419, 420, 422, 435, 438, 455, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 471, 493, 494, 495, 496, 505, 508, 525, 528, 566, 572, 575, 576, 579, 592, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 614, 615, 618, 624, 625, 626, 627, 629, 634, 635, 636, 637, 639, 650, 651, 662, 663, 664, 665, 667, 690, 691, 704, 705, 706, 707, 708, 709, 710, 715, 717, 718, 719, 721, 731, 732, 733, 735, 736, 738, 740, 742, 753, 754, 760, 761, 762, 763, 765, 770, 771, 772, 773, 774, 776, 777, 779, 780, 782, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 854, 855, 856, 858, 859, 860, 861, 862, 864, 873, 876, 877, 880, 885, 888, 893, 894, 895, 897, 898, 907, 910, 923, 924, 934, 935, 936, 942, 943, 944, 946, 947, 949, 951, 952, 953, 955, 959, 960, 961, 962, 963, 964, 965, 969, 970, 971, 972, 973, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1062, 1073, 1074, 1075], "instanc": [20, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 70, 71, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 114, 115, 116, 117, 120, 121, 122, 124, 125, 128, 130, 132, 138, 139, 140, 153, 161, 163, 164, 165, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 196, 197, 198, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 294, 295, 296, 297, 303, 306, 326, 329, 345, 354, 386, 395, 396, 397, 398, 399, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 435, 438, 455, 458, 459, 460, 461, 462, 463, 464, 465, 468, 471, 493, 494, 495, 496, 505, 508, 525, 528, 565, 566, 572, 575, 576, 579, 592, 595, 596, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 610, 611, 614, 615, 618, 624, 626, 627, 628, 629, 634, 635, 636, 637, 651, 662, 663, 664, 665, 678, 695, 704, 705, 707, 708, 709, 710, 717, 718, 719, 721, 731, 732, 733, 754, 757, 760, 761, 762, 763, 764, 770, 771, 772, 773, 774, 775, 777, 779, 780, 782, 783, 785, 843, 844, 845, 846, 847, 849, 850, 851, 854, 855, 856, 859, 860, 861, 862, 873, 876, 877, 880, 885, 888, 893, 894, 895, 896, 898, 907, 910, 941, 942, 943, 944, 945, 947, 952, 953, 955, 959, 960, 961, 962, 963, 964, 965, 969, 970, 972, 973, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1051, 1052], "revers": [20, 26, 27, 72, 77, 78, 121, 122, 140, 152, 634, 655, 859, 877, 880], "resourc": 20, "content": [20, 21, 75, 76, 132, 135, 138], "thei": [20, 75, 76, 118, 119, 122, 124, 125, 127, 129, 130, 131, 132, 133, 137, 138, 139, 140, 152, 273, 331, 919, 920, 921, 947, 948, 1040, 1084, 1085], "hypothesi": 20, "cover": [20, 121, 122, 124, 125, 127, 134], "lambda": [20, 135, 138, 1078, 1081, 1083], "direct": [20, 139, 140, 151, 985, 991, 994], "bind": [20, 129], "special": [20, 26, 27, 77, 78, 119, 120, 121, 122, 128, 395, 396, 399, 401, 404, 405, 408, 409, 412, 414, 417, 418, 421, 423, 426, 427, 430, 455, 458, 459, 462, 463, 466, 468, 471, 485, 488, 489, 492, 493, 496, 529, 532, 533, 536, 541, 544, 545, 548, 567, 570, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 606, 609, 611, 614, 624, 628, 629, 630, 633, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1017, 1020, 1021, 1024, 1025, 1028], "aforement": 20, "categori": [20, 119, 128, 129, 130, 134, 1040], "parent": [20, 137, 715, 753], "arraywithelementwis": [20, 26, 27, 40, 128], "containerwithmanipul": [20, 77, 78, 100], "hint": [20, 119, 120, 121, 125, 128, 132, 133, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 634, 662, 754, 757, 761, 764, 770, 771, 772, 775, 780, 782, 783, 785, 859, 873, 876, 877, 880, 893, 896, 941, 942, 945, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1029, 1030, 1033], "its": [20, 21, 54, 55, 100, 101, 121, 124, 133, 273, 284, 287, 345, 389, 771, 795, 798, 859, 873, 876, 889, 892, 893, 894, 895, 896, 897, 907, 910], "docstr": [20, 21, 24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 118, 119, 120, 125, 129, 133, 164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 197, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 237, 240, 242, 243, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 294, 295, 296, 297, 298, 395, 396, 397, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 435, 438, 455, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 471, 493, 494, 495, 496, 525, 528, 565, 576, 579, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 614, 615, 618, 624, 625, 626, 627, 628, 629, 635, 636, 637, 639, 663, 664, 665, 667, 705, 706, 707, 708, 717, 718, 719, 721, 731, 732, 733, 735, 761, 762, 763, 765, 771, 772, 773, 774, 776, 780, 782, 783, 785, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 856, 858, 859, 860, 861, 862, 864, 873, 876, 877, 880, 893, 894, 895, 896, 897, 942, 943, 944, 946, 949, 951, 964, 965, 969, 970, 971, 972, 973, 974, 985, 986, 989, 996, 1001, 1004, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039], "thorough": [20, 120, 121, 124], "transpil": [20, 134, 136, 1040, 1046], "builder": [21, 150, 152, 1040], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 54, 55, 100, 101, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 771, 783, 785, 803, 805, 812, 814, 831, 833, 859, 877, 880, 893, 894, 895, 896, 897, 985, 986, 989, 991, 994, 1040], "synchron": 21, "rest": [21, 136, 140], "remove_doc": 21, "_": [21, 121, 124, 129, 132, 137, 138, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 414, 417, 418, 421, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 601, 604, 611, 614, 615, 618, 715, 717, 720, 722, 724, 771, 783, 785, 840, 842, 859, 873, 876, 893, 896, 964, 965, 969, 985, 986, 989, 996, 1001, 1004], "indic": [21, 42, 43, 48, 49, 54, 55, 75, 76, 88, 89, 94, 95, 100, 101, 133, 136, 140, 163, 184, 187, 395, 596, 599, 634, 662, 663, 664, 665, 666, 667, 674, 687, 690, 691, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 771, 837, 839, 859, 893, 894, 895, 896, 897, 923, 924, 926, 928, 930, 931, 932, 934, 937, 938, 939, 940, 941, 942, 945, 947, 948, 959, 960, 961, 962, 964, 965, 969, 975, 979, 985, 986, 989, 991, 994, 1040, 1043, 1045, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1074, 1075], "privat": [21, 124, 1078, 1082], "fulfil": [21, 134, 1040], "autogenerated_sourc": 21, "format": [21, 75, 76, 118, 121, 130, 131, 135, 137, 138, 273, 303, 306, 345, 365, 996, 997, 1000, 1040], "png": [21, 138], "_imag": 21, "lastli": 21, "structur": [21, 75, 76, 77, 78, 79, 119, 125, 128, 129, 138, 139, 634, 650, 923, 936], "rst": 21, "skip": [21, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 124, 194, 195, 197, 294, 296, 298, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 635, 637, 639, 663, 665, 667, 705, 706, 708, 731, 733, 735, 772, 774, 776, 893, 895, 897, 923, 936], "read": [21, 75, 76, 1040], "partial_sourc": 21, "conf": 21, "copi": [21, 34, 35, 36, 37, 42, 43, 75, 76, 80, 81, 82, 83, 88, 89, 121, 126, 130, 135, 137, 138, 151, 152, 202, 206, 207, 208, 209, 210, 220, 223, 273, 279, 280, 281, 282, 283, 345, 390, 634, 651, 705, 706, 707, 708, 709, 710, 859, 889, 892, 923, 925, 985, 991, 994], "create_rst_fil": 21, "filter": [21, 48, 49, 94, 95, 124, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "repres": [21, 40, 41, 86, 87, 124, 137, 194, 195, 196, 197, 202, 237, 240, 273, 307, 395, 405, 408, 409, 412, 418, 419, 420, 421, 422, 431, 434, 468, 471, 567, 570, 606, 607, 608, 609, 610, 629, 715, 753, 754, 767, 771, 818, 819, 821], "overal": [21, 121, 129, 130, 131, 140], "markup": 21, "6": [21, 26, 27, 40, 41, 44, 45, 54, 55, 77, 78, 86, 87, 88, 89, 98, 99, 102, 103, 104, 105, 122, 124, 126, 129, 137, 138, 139, 163, 169, 172, 174, 177, 184, 187, 202, 226, 229, 268, 272, 273, 303, 306, 345, 367, 383, 395, 396, 397, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 421, 435, 438, 439, 442, 455, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 471, 493, 496, 505, 508, 525, 528, 565, 566, 572, 575, 592, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 611, 614, 615, 618, 624, 628, 629, 634, 643, 652, 662, 663, 666, 667, 699, 704, 715, 717, 718, 720, 754, 757, 760, 761, 764, 770, 771, 777, 779, 780, 782, 783, 785, 809, 811, 822, 824, 828, 830, 843, 844, 846, 847, 848, 849, 851, 853, 854, 856, 857, 858, 859, 860, 861, 863, 865, 868, 873, 876, 877, 880, 885, 888, 889, 892, 893, 896, 898, 907, 910, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 959, 960, 963, 964, 965, 969, 970, 974, 996, 997, 1000, 1001, 1004], "extract": [21, 119], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 152], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 75, 76, 124, 135, 138, 395, 443, 446, 771, 783, 785, 795, 798], "append_toctree_to_rst": 21, "9": [21, 26, 27, 40, 41, 44, 45, 54, 55, 77, 78, 86, 87, 90, 91, 104, 105, 122, 124, 138, 139, 395, 409, 410, 411, 412, 413, 418, 421, 435, 438, 439, 442, 565, 566, 592, 595, 596, 599, 611, 614, 615, 618, 634, 662, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 731, 734, 736, 737, 738, 739, 754, 757, 760, 761, 764, 771, 777, 779, 780, 782, 783, 785, 809, 811, 822, 824, 828, 830, 859, 860, 861, 863, 877, 880, 885, 888, 893, 896, 898, 947, 948, 949, 950, 951, 959, 963, 964, 965, 969, 996, 997, 1000, 1078, 1079, 1080], "index": [21, 34, 35, 42, 43, 75, 76, 80, 81, 88, 89, 125, 129, 137, 201, 202, 217, 218, 237, 238, 239, 240, 241, 345, 386, 634, 640, 662, 663, 664, 665, 666, 667, 859, 903, 906, 923, 926, 927, 930, 931, 932, 937, 939, 959, 960, 961, 962, 964, 965, 969, 970, 974, 985, 986, 989, 1043, 1045], "create_index_rst": 21, "14": [21, 86, 87, 102, 103, 104, 105, 122, 124, 129, 395, 418, 421, 455, 458, 596, 600, 606, 608, 610, 715, 717, 720, 754, 770, 771, 783, 785, 809, 811, 942, 944, 946, 949, 951, 964, 965, 969, 996, 997, 1000], "\u03c0": [21, 395, 401, 404, 414, 417, 423, 426, 427, 430], "namespac": [21, 119, 130, 135, 140], "helper": [23, 72, 138], "abc": [23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 75, 76, 137, 345, 354, 360, 634, 659, 1074, 1075, 1078, 1082], "inherit": [23, 128, 129, 137], "__delattr__": [23, 72], "self": [23, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 72, 75, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 128, 129, 135, 137, 138, 139, 140, 164, 165, 166, 169, 170, 171, 174, 175, 176, 179, 180, 181, 184, 185, 186, 189, 190, 191, 194, 196, 197, 206, 207, 208, 212, 213, 214, 220, 221, 222, 226, 227, 228, 237, 238, 239, 242, 243, 244, 250, 251, 252, 255, 257, 258, 260, 262, 263, 268, 270, 271, 279, 280, 281, 284, 285, 286, 289, 290, 291, 294, 295, 296, 303, 304, 305, 308, 309, 310, 315, 316, 317, 321, 322, 323, 326, 327, 328, 332, 333, 334, 345, 396, 397, 398, 401, 402, 403, 405, 406, 407, 409, 410, 411, 414, 415, 416, 418, 419, 420, 423, 424, 425, 427, 428, 429, 431, 432, 433, 435, 436, 437, 439, 440, 441, 443, 444, 445, 447, 448, 449, 451, 452, 453, 455, 456, 457, 459, 460, 461, 463, 464, 465, 468, 469, 470, 472, 473, 474, 477, 478, 479, 481, 482, 483, 485, 486, 487, 489, 490, 491, 493, 494, 495, 497, 498, 499, 501, 502, 503, 505, 506, 507, 509, 510, 511, 513, 514, 515, 517, 518, 519, 521, 522, 523, 525, 526, 527, 529, 530, 531, 533, 534, 535, 537, 538, 539, 541, 542, 543, 545, 546, 547, 549, 550, 551, 553, 554, 555, 557, 558, 559, 561, 562, 563, 567, 568, 569, 572, 573, 574, 576, 577, 578, 580, 581, 582, 584, 585, 586, 588, 589, 590, 592, 593, 594, 596, 597, 598, 601, 602, 603, 606, 607, 608, 611, 612, 613, 615, 616, 617, 619, 621, 622, 624, 626, 627, 630, 631, 632, 635, 636, 637, 647, 648, 663, 664, 665, 705, 706, 707, 708, 717, 718, 719, 722, 723, 727, 728, 731, 732, 733, 736, 737, 740, 741, 744, 745, 761, 762, 763, 772, 773, 774, 776, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 792, 793, 795, 796, 797, 799, 800, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 819, 820, 822, 823, 825, 826, 828, 829, 831, 832, 834, 835, 837, 838, 840, 841, 844, 845, 846, 849, 850, 851, 854, 855, 856, 860, 861, 862, 865, 866, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 899, 900, 901, 903, 904, 905, 907, 908, 909, 911, 912, 913, 915, 916, 917, 942, 943, 944, 953, 954, 965, 967, 968, 970, 972, 973, 975, 977, 978, 980, 982, 983, 986, 987, 988, 991, 992, 993, 997, 998, 999, 1001, 1002, 1003, 1005, 1006, 1007, 1009, 1010, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1025, 1026, 1027, 1030, 1031, 1032, 1035, 1036, 1037, 1040, 1078, 1082], "delattr": [23, 72], "__format__": [23, 72], "format_spec": [23, 72], "formatt": [23, 72], "__getattribute__": [23, 72], "getattr": [23, 72], "__init_subclass__": [23, 72], "subclass": [23, 72], "overridden": [23, 72], "extend": [23, 72, 120, 121, 126], "__new__": [23, 72], "accur": [23, 72, 395, 489, 492], "__reduce__": [23, 72], "pickl": [23, 72, 75, 76, 129, 138], "__reduce_ex__": [23, 72], "protocol": [23, 72], "__setattr__": [23, 129], "setattr": 23, "__sizeof__": [23, 72], "size": [23, 26, 27, 54, 55, 72, 75, 76, 77, 78, 79, 100, 101, 124, 137, 138, 202, 231, 232, 234, 235, 345, 387, 388, 389, 634, 690, 697, 754, 770, 771, 783, 785, 799, 801, 809, 811, 815, 817, 822, 824, 834, 836, 859, 873, 876, 893, 894, 895, 896, 897, 898, 899, 902, 947, 948, 952, 953, 955, 959, 960, 962, 1029, 1030, 1033, 1035, 1038, 1062, 1063, 1064], "memori": [23, 72, 131, 132, 150, 152, 345, 363, 384, 389, 391, 394, 754, 768, 1040], "byte": [23, 72, 133], "__str__": [23, 72], "__subclasshook__": [23, 72], "overrid": [23, 72, 634, 687], "issubclass": [23, 72], "invok": [23, 26, 27, 72], "abcmeta": [23, 72], "__subclasscheck__": [23, 72], "true": [23, 24, 25, 26, 27, 36, 37, 42, 43, 44, 45, 50, 51, 52, 53, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125, 129, 130, 132, 133, 135, 137, 138, 139, 140, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 199, 200, 202, 203, 205, 206, 208, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 232, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 279, 280, 281, 282, 283, 284, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 303, 305, 308, 310, 312, 315, 317, 319, 321, 323, 325, 326, 328, 329, 330, 332, 334, 336, 344, 345, 364, 381, 385, 386, 395, 396, 398, 400, 401, 403, 405, 407, 409, 411, 413, 414, 416, 418, 420, 422, 423, 425, 427, 429, 431, 433, 435, 437, 438, 439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 458, 459, 461, 463, 465, 467, 468, 470, 472, 474, 476, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 504, 505, 507, 508, 509, 511, 512, 513, 515, 516, 517, 519, 520, 521, 523, 524, 525, 527, 528, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 556, 557, 559, 560, 561, 563, 567, 569, 571, 572, 574, 576, 578, 579, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 617, 619, 620, 622, 624, 625, 627, 630, 632, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 647, 648, 652, 659, 661, 663, 665, 667, 673, 674, 681, 695, 697, 698, 704, 705, 706, 708, 710, 712, 714, 715, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 753, 754, 766, 771, 772, 773, 774, 775, 776, 795, 797, 799, 801, 822, 823, 824, 837, 839, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 862, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 898, 899, 901, 903, 905, 907, 909, 911, 913, 915, 917, 919, 920, 921, 922, 923, 924, 933, 934, 936, 942, 944, 946, 947, 948, 953, 954, 956, 959, 960, 961, 963, 964, 965, 966, 968, 969, 970, 971, 973, 974, 975, 976, 978, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1001, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1062, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083], "notimpl": [23, 72, 133], "normal": [23, 72, 138, 859, 903, 906, 941, 942, 945, 947, 952, 1076, 1077], "algorithm": [23, 48, 49, 72, 94, 95, 152, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "outcom": [23, 72], "cach": [23, 72, 124, 125, 345, 363, 634, 645], "arraywithactiv": [24, 26, 27], "gelu": [24, 25, 73, 74, 163, 1048], "approxim": [24, 25, 73, 74, 121, 163, 164, 165, 166, 167, 168, 395, 401, 404, 405, 408, 414, 417, 418, 421, 423, 426, 427, 430, 463, 466, 468, 471, 485, 488, 489, 492, 529, 532, 533, 536, 537, 540, 541, 544, 584, 587, 601, 604, 606, 609, 624, 628, 629, 771, 803, 805, 812, 814], "variant": [24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 122, 164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 197, 206, 207, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 396, 397, 398, 400, 409, 410, 411, 413, 418, 419, 420, 422, 459, 460, 461, 463, 464, 465, 467, 493, 494, 495, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 624, 625, 626, 627, 635, 636, 637, 639, 663, 664, 665, 667, 705, 706, 707, 708, 717, 718, 719, 721, 731, 732, 733, 735, 761, 762, 763, 765, 772, 773, 774, 776, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 856, 858, 860, 861, 862, 864, 893, 894, 895, 897, 942, 943, 944, 946, 949, 951, 970, 971, 972, 973, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039], "wrap": [24, 25, 26, 27, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 71, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 117, 118, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 140, 152, 153, 161, 164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 197, 206, 207, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 396, 397, 398, 400, 409, 410, 411, 413, 418, 419, 420, 422, 459, 460, 461, 463, 464, 465, 467, 493, 494, 495, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 624, 625, 626, 627, 634, 635, 636, 637, 639, 645, 663, 664, 665, 667, 705, 706, 707, 708, 715, 717, 718, 719, 721, 731, 732, 733, 735, 752, 761, 762, 763, 765, 772, 773, 774, 776, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 856, 858, 860, 861, 862, 864, 893, 894, 895, 897, 942, 943, 944, 946, 949, 951, 970, 971, 972, 973, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039], "minim": [24, 25, 26, 27, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 68, 69, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 132, 135, 164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 195, 196, 197, 206, 207, 212, 213, 220, 221, 226, 227, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 294, 295, 296, 298, 396, 397, 398, 400, 409, 410, 411, 413, 418, 419, 420, 422, 459, 460, 461, 463, 464, 465, 467, 493, 494, 495, 596, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 610, 624, 625, 626, 627, 635, 636, 637, 639, 663, 664, 665, 667, 705, 706, 707, 708, 717, 718, 719, 721, 731, 732, 733, 735, 761, 762, 763, 765, 772, 773, 774, 776, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 856, 858, 860, 861, 862, 864, 893, 894, 895, 897, 942, 943, 944, 946, 949, 951, 970, 971, 972, 973, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039], "y": [24, 25, 26, 27, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 77, 78, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 114, 115, 119, 122, 126, 129, 135, 137, 163, 164, 165, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 197, 198, 202, 225, 226, 229, 237, 240, 247, 248, 250, 253, 268, 272, 273, 279, 282, 303, 306, 345, 365, 379, 383, 388, 395, 396, 397, 398, 399, 400, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 427, 430, 435, 438, 439, 442, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 485, 488, 493, 494, 495, 496, 505, 508, 525, 528, 565, 566, 572, 575, 576, 579, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 624, 625, 626, 627, 628, 629, 634, 635, 636, 637, 638, 639, 642, 643, 651, 652, 659, 660, 662, 663, 664, 665, 666, 667, 697, 704, 705, 706, 707, 708, 709, 710, 715, 726, 754, 760, 761, 762, 763, 764, 765, 767, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 792, 794, 809, 811, 828, 830, 831, 833, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 868, 873, 876, 877, 880, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 907, 910, 923, 926, 947, 948, 949, 950, 951, 952, 953, 955, 958, 959, 960, 961, 962, 963, 964, 970, 971, 972, 973, 974, 985, 986, 989, 996, 997, 1000, 1001, 1004, 1017, 1020, 1021, 1024, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039], "185": [24, 25, 164, 165], "046": [24, 25, 164, 165], "leaky_relu": [24, 25, 73, 74, 124, 163, 1040], "alpha": [24, 25, 73, 74, 124, 163, 169, 170, 171, 172, 173], "39": [24, 25, 163, 169, 170, 172, 395, 418, 421, 485, 488, 715, 717, 720, 771, 809, 811, 996, 997, 1000], "85": [24, 25, 163, 169, 170, 172, 395, 455, 458], "17": [24, 25, 122, 129, 163, 169, 170, 172, 771, 783, 785, 947, 952], "relu": [24, 25, 70, 71, 73, 74, 138, 139, 163, 164, 167, 169, 172, 1040], "sigmoid": [24, 25, 73, 74, 135, 138, 139, 163, 1040], "269": [24, 25, 163, 179, 180, 182], "731": [24, 25, 163, 179, 180, 182], "881": [24, 25, 40, 41, 86, 87, 163, 179, 180, 182, 395, 418, 419, 420, 421], "softmax": [24, 25, 70, 71, 73, 74, 163, 754, 769, 770, 1040], "axi": [24, 25, 50, 51, 52, 53, 54, 55, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 80, 81, 98, 99, 100, 101, 110, 111, 112, 113, 114, 115, 120, 122, 124, 125, 129, 130, 132, 133, 135, 137, 140, 151, 163, 184, 185, 186, 187, 188, 202, 231, 232, 233, 234, 235, 236, 345, 347, 350, 357, 370, 371, 372, 373, 374, 375, 376, 377, 389, 634, 652, 653, 662, 713, 771, 777, 778, 779, 783, 785, 834, 835, 836, 837, 838, 839, 843, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 865, 866, 867, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 885, 886, 887, 888, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 910, 911, 914, 915, 918, 947, 958, 959, 960, 961, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "422": [24, 25, 163, 184, 185, 187], "155": [24, 25, 163, 184, 185, 187], "softplu": [24, 25, 73, 74, 163, 1040], "3461": [24, 25, 163, 189, 190, 192], "6491": [24, 25, 163, 189, 190, 192], "535": [24, 25, 163, 189, 190, 192], "42": [24, 25, 102, 103, 104, 105, 140, 163, 189, 190, 192, 715, 717, 720, 771, 809, 811, 942, 944, 946, 947, 949, 951, 957, 996, 997, 1000], "tanh": [24, 25, 40, 41, 73, 74, 86, 87, 135, 163, 195, 395, 1040], "55": [24, 25, 163, 194, 198, 754, 760, 771, 809, 811, 996, 997, 1000], "501": [24, 25, 163, 194, 198], "arraywithcr": [26, 27, 34], "arraywithdatatyp": [26, 27, 36], "arraywithdevic": [26, 27, 38, 137], "arraywithgener": [26, 27, 42, 137], "arraywithgradi": [26, 27, 44, 137], "arraywithimag": [26, 27, 46, 137], "arraywithlay": [26, 27, 48], "arraywithlinearalgebra": [26, 27, 50], "arraywithloss": [26, 27, 52], "arraywithmanipul": [26, 27, 54], "arraywithnorm": [26, 27, 56], "arraywithrandom": [26, 27, 58, 137], "arraywithsearch": [26, 27, 60], "arraywithset": [26, 27, 62], "arraywithsort": [26, 27, 64], "arraywithstatist": [26, 27, 66], "arraywithutil": [26, 27, 68], "properti": [26, 27, 75, 76, 122, 124, 125, 129, 137, 138, 139, 345, 357, 1074, 1075, 1078, 1079, 1080, 1081, 1083], "__add__": [26, 27, 77, 78, 120, 121, 122, 128, 129, 137], "input": [26, 27, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 152, 153, 161, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 321, 324, 326, 329, 331, 332, 335, 340, 344, 345, 354, 355, 364, 365, 366, 367, 369, 370, 373, 377, 383, 389, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 649, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 671, 673, 674, 676, 677, 678, 680, 681, 682, 683, 687, 690, 691, 697, 699, 702, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 717, 718, 719, 720, 721, 726, 731, 732, 733, 734, 735, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 848, 849, 850, 852, 853, 854, 855, 857, 858, 859, 860, 863, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 919, 920, 921, 922, 923, 926, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1077], "numer": [26, 27, 40, 41, 77, 78, 86, 87, 119, 139, 202, 237, 240, 273, 279, 282, 395, 396, 397, 398, 399, 400, 409, 410, 411, 412, 413, 459, 460, 461, 462, 472, 475, 489, 492, 493, 494, 495, 496, 497, 500, 509, 512, 513, 516, 517, 520, 521, 524, 553, 556, 557, 560, 567, 570, 572, 575, 576, 579, 584, 587, 588, 591, 596, 597, 598, 599, 600, 615, 618, 619, 623, 630, 633, 634, 669, 670, 692, 693, 700, 701, 771, 777, 779, 795, 798, 809, 811, 822, 824, 828, 830, 831, 833, 834, 836, 947, 958, 959, 960, 961, 996, 1001, 1004, 1013, 1016, 1021, 1024, 1053], "broadcast": [26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 77, 78, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 119, 121, 122, 124, 129, 130, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 284, 287, 289, 292, 345, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 646, 647, 649, 652, 656, 657, 658, 660, 663, 664, 665, 666, 667, 674, 687, 690, 691, 715, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 958, 959, 960, 961, 963, 964, 980, 984, 985, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "element": [26, 27, 34, 35, 40, 41, 42, 43, 54, 55, 75, 76, 77, 78, 86, 87, 88, 89, 100, 101, 121, 124, 135, 140, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 202, 203, 204, 225, 226, 227, 229, 255, 257, 259, 260, 262, 264, 345, 368, 372, 376, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 642, 643, 646, 647, 649, 652, 653, 660, 674, 705, 706, 707, 708, 709, 710, 715, 753, 754, 766, 771, 777, 779, 786, 788, 795, 798, 815, 817, 822, 824, 859, 860, 863, 877, 880, 885, 888, 893, 894, 895, 896, 897, 898, 899, 902, 923, 926, 947, 948, 959, 962, 963, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1062, 1070], "wise": [26, 27, 40, 41, 75, 76, 77, 78, 86, 87, 135, 140, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 198, 395, 396, 399, 401, 404, 409, 410, 411, 412, 413, 414, 417, 423, 426, 427, 430, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 472, 475, 477, 480, 481, 484, 497, 500, 501, 504, 505, 508, 521, 524, 525, 528, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 576, 579, 584, 587, 588, 591, 619, 623, 634, 660, 859, 860, 863], "sum": [26, 27, 40, 41, 66, 67, 75, 76, 77, 78, 86, 87, 112, 113, 125, 129, 130, 132, 135, 345, 374, 375, 376, 377, 389, 395, 409, 410, 411, 412, 413, 545, 548, 634, 653, 657, 690, 691, 754, 770, 771, 822, 824, 831, 833, 837, 839, 996, 997, 1000, 1017, 1020], "promot": [26, 27, 36, 37, 40, 41, 50, 51, 77, 78, 82, 83, 86, 87, 96, 97, 121, 125, 130, 194, 195, 196, 197, 273, 279, 282, 294, 295, 296, 297, 298, 331, 332, 335, 340, 395, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 431, 434, 435, 438, 443, 446, 447, 450, 451, 454, 455, 458, 463, 464, 465, 466, 467, 468, 471, 472, 475, 485, 488, 489, 492, 529, 532, 533, 536, 541, 544, 545, 548, 561, 564, 567, 570, 584, 587, 588, 591, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 624, 625, 626, 627, 628, 629, 771, 772, 773, 774, 775, 776, 777, 779, 792, 794, 795, 798, 803, 805, 809, 811, 812, 814, 819, 821, 834, 836, 837, 839, 859, 903, 906, 996, 1005, 1008], "z": [26, 27, 40, 41, 42, 43, 52, 53, 77, 78, 86, 87, 88, 89, 98, 99, 122, 126, 129, 135, 137, 345, 379, 395, 409, 410, 411, 412, 413, 435, 438, 455, 458, 505, 508, 525, 528, 565, 566, 634, 642, 643, 662, 663, 664, 665, 667, 697, 771, 777, 779, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 860, 863, 923, 926, 959, 960, 996, 997, 1000, 1001, 1004], "mix": [26, 27, 42, 43, 77, 78, 98, 99, 118, 122, 124, 135, 273, 332, 335, 345, 383, 395, 409, 412, 435, 438, 455, 458, 505, 508, 525, 528, 566, 576, 579, 634, 635, 636, 651, 659, 662, 663, 666, 704, 705, 709, 710, 754, 757, 760, 761, 764, 770, 771, 772, 775, 828, 830, 843, 844, 847, 848, 849, 853, 854, 857, 858, 859, 860, 863, 941, 942, 945, 959, 963, 996, 997, 1000, 1005, 1008], "__le__": [26, 27], "equal": [26, 27, 34, 35, 40, 41, 42, 43, 75, 76, 86, 87, 88, 89, 122, 129, 130, 202, 217, 218, 225, 226, 227, 229, 273, 279, 282, 395, 443, 446, 451, 454, 509, 512, 513, 516, 584, 587, 592, 595, 634, 635, 636, 637, 638, 639, 642, 643, 771, 783, 785, 803, 805, 812, 814, 859, 860, 863, 869, 872, 898, 915, 918, 947, 953, 955, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994, 996, 1005, 1008, 1017, 1020, 1021, 1024, 1025, 1028], "result": [26, 27, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 77, 78, 79, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 119, 120, 121, 122, 124, 128, 129, 130, 132, 138, 152, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 220, 221, 223, 225, 226, 227, 229, 231, 232, 234, 235, 247, 248, 250, 251, 253, 255, 257, 259, 260, 262, 264, 265, 267, 268, 270, 272, 273, 279, 282, 289, 292, 332, 335, 345, 354, 390, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 646, 647, 649, 652, 653, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 674, 687, 690, 691, 715, 749, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 923, 926, 936, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 958, 959, 960, 961, 963, 964, 965, 969, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1040], "bool": [26, 27, 29, 30, 31, 32, 33, 36, 37, 42, 43, 44, 45, 50, 51, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 116, 117, 122, 129, 130, 132, 133, 140, 194, 195, 197, 199, 200, 202, 225, 273, 279, 282, 294, 295, 296, 297, 298, 300, 301, 302, 303, 306, 320, 321, 322, 324, 326, 327, 329, 344, 345, 364, 365, 380, 389, 392, 395, 396, 398, 400, 409, 411, 413, 418, 420, 422, 435, 438, 439, 442, 447, 450, 455, 458, 459, 461, 463, 465, 467, 477, 480, 493, 495, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 549, 552, 553, 556, 557, 560, 576, 579, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 636, 637, 638, 639, 642, 643, 652, 655, 659, 661, 663, 665, 667, 671, 673, 678, 680, 681, 682, 683, 697, 698, 705, 706, 708, 713, 714, 715, 731, 732, 733, 734, 735, 749, 753, 771, 772, 773, 774, 775, 776, 799, 801, 822, 824, 837, 839, 859, 893, 895, 897, 898, 919, 920, 921, 922, 923, 924, 925, 929, 933, 934, 935, 947, 948, 959, 960, 961, 985, 986, 989, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "__radd__": [26, 27, 77, 78, 121, 122], "adam_upd": [26, 27, 90, 91, 139, 715], "function_nam": [26, 27], "variabl": [26, 27, 29, 30, 31, 32, 33, 44, 45, 75, 76, 77, 78, 90, 91, 120, 121, 124, 126, 129, 130, 132, 133, 138, 139, 140, 152, 634, 644, 676, 677, 678, 679, 680, 681, 683, 702, 715, 722, 724, 726, 727, 729, 731, 732, 733, 734, 735, 736, 738, 740, 742, 744, 746, 749, 752, 754, 769, 771, 819, 821, 919, 920, 921, 922, 941, 942, 945, 1040, 1051, 1052, 1053, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "arang": [26, 27, 77, 78, 130, 202, 231, 232, 234, 235, 996, 997, 1000, 1040], "arg_info": [26, 27, 77, 78, 634], "arg_nam": [26, 27, 77, 78, 634], "argmax": [26, 27, 77, 78, 959, 1040], "argmin": [26, 27, 77, 78, 959, 1040], "array_equ": [26, 27, 77, 78, 634], "arrays_equ": [26, 27, 75, 76, 77, 78, 634], "as_ivy_dev": [26, 27, 77, 78, 137, 345], "as_ivy_dtyp": [26, 27, 77, 78, 273], "as_native_dev": [26, 27, 77, 78, 345], "as_native_dtyp": [26, 27, 77, 78, 273], "assert_supports_inplac": [26, 27, 77, 78, 634], "cache_fn": [26, 27, 77, 78, 125, 634], "clear_mem_on_dev": [26, 27, 77, 78, 345], "clip_matrix_norm": [26, 27, 77, 78, 634], "clip_vector_norm": [26, 27, 88, 89, 634], "closest_valid_dtyp": [26, 27, 77, 78, 273], "container_typ": [26, 27, 77, 78, 634], "conv1d": [26, 27, 77, 78, 754, 1062], "conv1d_transpos": [26, 27, 77, 78, 754], "conv2d": [26, 27, 77, 78, 754, 1040, 1062], "conv2d_transpos": [26, 27, 77, 78, 754], "conv3d": [26, 27, 77, 78, 754, 1062], "conv3d_transpos": [26, 27, 77, 78, 754], "copy_arrai": [26, 27, 77, 78, 634], "cumprod": [26, 27, 77, 78, 140, 634], "cumsum": [26, 27, 77, 78, 634, 1040], "current_backend_str": [26, 27, 77, 78, 634], "default_devic": [26, 27, 77, 78, 131, 135, 345, 383, 386, 393], "default_dtyp": [26, 27, 77, 78, 125, 130, 273], "default_float_dtyp": [26, 27, 77, 78, 130, 273], "default_int_dtyp": [26, 27, 77, 78, 130, 273], "dev_clon": [26, 27, 75, 76, 345], "dev_clone_arrai": [26, 27, 77, 78, 345], "dev_clone_it": [26, 27, 77, 78, 345], "dev_clone_nest": [26, 27, 77, 78, 345], "dev_dist": [26, 27, 75, 76, 345], "dev_dist_arrai": [26, 27, 77, 78, 345], "dev_dist_it": [26, 27, 77, 78, 345], "dev_dist_nest": [26, 27, 77, 78, 345], "dev_unifi": [26, 27, 77, 78, 345], "dev_unify_arrai": [26, 27, 77, 78, 345], "dev_unify_it": [26, 27, 77, 78, 345], "dev_unify_nest": [26, 27, 77, 78, 345], "dev_util": [26, 27, 77, 78, 131, 345], "dropout": [26, 27, 77, 78, 138, 754, 1062, 1073], "dtype": [26, 27, 34, 35, 36, 37, 66, 67, 75, 76, 80, 81, 82, 83, 88, 89, 112, 113, 119, 122, 124, 125, 130, 131, 133, 137, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 283, 284, 287, 294, 295, 296, 297, 298, 299, 300, 301, 302, 307, 308, 311, 313, 314, 315, 318, 320, 321, 324, 326, 329, 331, 332, 333, 335, 337, 338, 339, 344, 345, 385, 395, 451, 454, 634, 642, 643, 687, 705, 706, 708, 709, 754, 766, 859, 873, 876, 947, 953, 955, 959, 960, 961, 985, 991, 994, 996, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1029, 1030, 1033, 1040, 1053, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1084, 1085], "dtype_bit": [26, 27, 77, 78, 273], "einops_rearrang": [26, 27, 75, 76, 634], "einops_reduc": [26, 27, 75, 76, 634], "einops_repeat": [26, 27, 75, 76, 634], "empti": [26, 27, 72, 75, 76, 77, 78, 128, 130, 131, 202, 203, 204, 715, 753, 996, 1017, 1020, 1021, 1024, 1029, 1030, 1033, 1035, 1038], "execute_with_gradi": [26, 27, 77, 78, 129, 138, 139, 140, 152, 715, 1040], "ey": [26, 27, 77, 78, 140, 202, 754, 757, 761, 764], "floormod": [26, 27, 77, 78, 634, 1040], "fourier_encod": [26, 27, 77, 78, 634], "function_supported_dtyp": [26, 27, 77, 78, 273], "function_unsupported_dtyp": [26, 27, 77, 78, 273], "gather": [26, 27, 42, 43, 75, 76, 88, 89, 634, 663, 664, 665, 666, 667], "get_all_arrays_in_memori": [26, 27, 77, 78, 634], "get_all_ivy_arrays_on_dev": [26, 27, 77, 78, 131, 345], "get_min_bas": [26, 27, 77, 78, 634], "get_min_denomin": [26, 27, 77, 78, 634], "get_num_dim": [26, 27, 77, 78, 634, 1040], "get_referrers_recurs": [26, 27, 77, 78, 634], "gpu_is_avail": [26, 27, 77, 78, 345], "gradient_descent_upd": [26, 27, 90, 91, 715, 919, 920, 921, 922, 1040], "handle_nest": [26, 27, 77, 78, 125, 129, 153], "handle_out_argu": [26, 27, 77, 78, 120, 127, 130, 131, 132, 153], "has_nan": [26, 27, 75, 76, 634], "indices_wher": [26, 27, 77, 78, 133, 634, 1040], "infer_devic": [26, 27, 77, 78, 120, 130, 131, 153], "infer_dtyp": [26, 27, 77, 78, 120, 130, 131, 153], "inplace_arrays_support": [26, 27, 77, 78, 634], "inplace_decr": [26, 27, 77, 78, 634], "inplace_incr": [26, 27, 77, 78, 634], "inplace_upd": [26, 27, 75, 76, 132, 634, 1051, 1052], "inplace_variables_support": [26, 27, 77, 78, 634], "inputs_to_native_arrai": [26, 27, 77, 78, 128, 153], "invalid_dtyp": [26, 27, 77, 78, 273], "is_arrai": [26, 27, 634], "is_ivy_arrai": [26, 27, 132, 137, 634], "is_ivy_contain": [26, 27, 77, 78, 634], "is_native_arrai": [26, 27, 137, 634], "is_vari": [26, 27, 44, 45, 90, 91, 132, 715, 735], "boolean": [26, 27, 42, 43, 44, 45, 75, 76, 88, 89, 90, 91, 124, 129, 202, 225, 273, 279, 282, 320, 344, 345, 380, 392, 395, 435, 438, 439, 442, 447, 450, 455, 458, 549, 552, 553, 556, 557, 560, 561, 564, 634, 635, 636, 637, 638, 639, 642, 643, 673, 674, 675, 679, 680, 681, 682, 683, 695, 702, 714, 715, 731, 732, 733, 734, 735, 753, 919, 920, 921, 923, 933, 996, 1009, 1012], "trainabl": [26, 27, 44, 45, 90, 91, 121, 136, 138, 139, 715, 731, 732, 733, 734, 735, 1051, 1052, 1074, 1075, 1084], "lamb_upd": [26, 27, 90, 91, 715], "lars_upd": [26, 27, 90, 91, 715], "linear": [26, 27, 77, 78, 121, 135, 138, 139, 140, 163, 164, 167, 169, 172, 174, 177, 634, 661, 754, 766, 819, 821, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "linspac": [26, 27, 77, 78, 135, 202, 203, 204, 1040], "logspac": [26, 27, 77, 78, 135, 202], "lstm_updat": [26, 27, 77, 78, 135, 754], "mt": [26, 27, 137], "match_kwarg": [26, 27, 77, 78, 634], "matrix_pow": [26, 27, 77, 78, 771], "maximum": [26, 27, 75, 76, 77, 78, 79, 122, 135, 138, 140, 345, 369, 373, 377, 389, 395, 634, 646, 647, 649, 661, 715, 736, 738, 859, 860, 863, 923, 935, 959, 960, 996, 1001, 1004, 1009, 1012, 1040], "minimum": [26, 27, 75, 76, 135, 140, 345, 395, 396, 399, 634, 669, 670, 692, 693, 700, 701, 859, 860, 863, 959, 961, 996, 1001, 1004, 1009, 1012, 1040], "multi_head_attent": [26, 27, 77, 78, 129, 132, 754], "multinomi": [26, 27, 77, 78, 947], "multiprocess": [26, 27, 75, 76, 77, 78, 79, 138, 152, 345, 354, 634], "ndim": [26, 27, 124, 137, 771, 815, 817, 822, 824], "dimens": [26, 27, 34, 35, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 77, 78, 79, 94, 95, 96, 97, 100, 101, 122, 124, 135, 138, 163, 184, 187, 202, 255, 257, 259, 260, 262, 264, 345, 376, 634, 656, 657, 658, 661, 671, 687, 713, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 812, 814, 815, 817, 819, 821, 822, 824, 825, 827, 831, 833, 834, 836, 837, 839, 843, 849, 850, 852, 854, 855, 857, 859, 865, 868, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 919, 920, 921, 922, 947, 958, 959, 960, 961, 962, 964, 965, 969, 970, 974, 980, 984, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073], "ax": [26, 27, 50, 51, 54, 55, 75, 76, 100, 101, 119, 122, 124, 130, 137, 345, 389, 634, 652, 771, 799, 801, 819, 821, 828, 829, 830, 837, 839, 859, 869, 872, 877, 880, 881, 882, 883, 884, 893, 894, 895, 896, 897, 899, 902, 907, 910, 915, 918, 959, 960, 961, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "nonzero": [26, 27, 77, 78, 395, 409, 412, 567, 570, 959], "num_arrays_in_memori": [26, 27, 77, 78, 634], "num_cpu_cor": [26, 27, 77, 78, 131, 345], "num_gpu": [26, 27, 77, 78, 124, 131, 345], "num_ivy_arrays_on_dev": [26, 27, 77, 78, 345], "one_hot": [26, 27, 77, 78, 140, 634, 1040], "ones": [26, 27, 34, 35, 75, 76, 77, 78, 124, 135, 137, 138, 202, 217, 218, 250, 251, 253, 268, 272, 395, 459, 462, 634, 687, 1040], "optimizer_upd": [26, 27, 90, 91, 715], "outputs_to_ivy_arrai": [26, 27, 77, 78, 120, 128, 130, 131, 153], "percent_used_mem_on_dev": [26, 27, 77, 78, 345], "print_all_arrays_in_memori": [26, 27, 77, 78, 634], "print_all_ivy_arrays_on_dev": [26, 27, 77, 78, 345], "promote_typ": [26, 27, 77, 78, 273], "queue_timeout": [26, 27, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 634], "randint": [26, 27, 48, 49, 77, 78, 94, 95, 104, 105, 761, 762, 763, 765, 947, 951, 1040], "random_norm": [26, 27, 48, 49, 77, 78, 94, 95, 124, 754, 757, 760, 761, 762, 763, 764, 765, 771, 822, 824, 947, 964, 965, 969], "random_uniform": [26, 27, 104, 105, 124, 131, 139, 947, 1040], "scaled_dot_product_attent": [26, 27, 77, 78, 754], "scatter_flat": [26, 27, 77, 78, 634], "scatter_nd": [26, 27, 77, 78, 137, 634, 1040], "seed": [26, 27, 75, 76, 77, 78, 947, 1040], "set_default_devic": [26, 27, 77, 78, 131, 345, 393], "set_default_dtyp": [26, 27, 77, 78, 125, 130, 273], "set_default_float_dtyp": [26, 27, 77, 78, 130, 273], "set_default_int_dtyp": [26, 27, 77, 78, 130, 273], "set_min_bas": [26, 27, 77, 78, 634], "set_min_denomin": [26, 27, 77, 78, 634], "set_queue_timeout": [26, 27, 77, 78, 634], "set_shape_array_mod": [26, 27, 77, 78, 634, 698, 712], "set_split_factor": [26, 27, 77, 78, 345], "set_tmp_dir": [26, 27, 77, 78, 634], "set_with_grad": [26, 27, 77, 78, 715, 753], "shape_array_mod": [26, 27, 77, 78, 634, 695, 712], "shape_to_tupl": [26, 27, 77, 78, 130, 634], "shuffl": [26, 27, 75, 76, 947, 1040], "product": [26, 27, 129, 395, 567, 570, 634, 652, 754, 769, 770, 771, 777, 779, 795, 798, 809, 811, 828, 830, 834, 836, 996, 997, 1000, 1013, 1016, 1062, 1073], "unknown": [26, 27], "model": [26, 27, 138, 139, 1040], "slogdet": [26, 27, 77, 78, 771], "split_factor": [26, 27, 77, 78, 345, 354], "split_func_cal": [26, 27, 77, 78, 345], "stable_divid": [26, 27, 77, 78, 125, 634], "stable_pow": [26, 27, 77, 78, 634], "stop_gradi": [26, 27, 75, 76, 77, 78, 90, 91, 139, 345, 389, 715, 722, 723, 724, 725, 727, 728, 729, 730, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 919, 920, 921, 922, 1040, 1078, 1079, 1080, 1081, 1082, 1083], "supports_inplac": [26, 27, 77, 78, 634], "tmp_dir": [26, 27, 77, 78, 634], "to_devic": [26, 27, 75, 76, 345, 364], "to_list": [26, 27, 75, 76, 634, 1040], "to_native_arrays_and_back": [26, 27, 77, 78, 120, 127, 153], "to_scalar": [26, 27, 77, 78, 634], "total_mem_on_dev": [26, 27, 77, 78, 131, 345], "tpu_is_avail": [26, 27, 77, 78, 345], "try_else_non": [26, 27, 77, 78, 634], "type_promote_arrai": [26, 27, 77, 78, 273], "unset_default_devic": [26, 27, 77, 78, 345], "unset_default_dtyp": [26, 27, 77, 78, 273], "unset_default_float_dtyp": [26, 27, 77, 78, 273], "unset_default_int_dtyp": [26, 27, 77, 78, 273], "unset_shape_array_mod": [26, 27, 77, 78, 634], "unset_with_grad": [26, 27, 77, 78, 715], "unstack": [26, 27, 75, 76, 135, 138, 634, 1040], "used_mem_on_dev": [26, 27, 77, 78, 345], "valid_dtyp": [26, 27, 77, 78, 273], "value_is_nan": [26, 27, 77, 78, 634], "variable_data": [26, 27, 77, 78, 715], "with_grad": [26, 27, 77, 78, 715, 748], "collect": [29, 75, 76, 124, 151, 163, 199, 345, 634, 715, 754, 843, 923, 936, 941, 947, 1048, 1062, 1076, 1078], "args_to_ivi": 29, "include_deriv": [29, 30, 31, 32, 33, 923, 925, 935], "keyword": [29, 30, 31, 72, 75, 76, 77, 78, 79, 119, 120, 124, 130, 131, 132, 138, 202, 237, 240, 345, 354, 355, 369, 373, 377, 634, 641, 684, 923, 929, 996, 1021, 1024, 1074, 1075], "nest": [29, 30, 31, 32, 33, 75, 76, 77, 78, 79, 119, 124, 125, 128, 129, 137, 138, 139, 152, 345, 369, 373, 377, 634, 704, 715, 753, 919, 920, 921, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083], "unchang": [29, 30, 31, 32, 33], "posit": [29, 30, 31, 40, 41, 50, 51, 54, 55, 86, 87, 96, 97, 100, 101, 120, 124, 138, 151, 201, 202, 217, 218, 273, 308, 311, 345, 369, 373, 377, 395, 396, 399, 509, 512, 513, 516, 567, 570, 588, 591, 634, 661, 771, 772, 773, 774, 775, 776, 859, 873, 876, 893, 894, 895, 896, 897, 947, 957, 959, 962, 1029, 1030, 1033, 1035, 1038, 1051, 1052], "deriv": [29, 30, 31, 32, 33, 34, 35, 44, 45, 90, 91, 130, 131, 137, 139, 202, 212, 213, 215, 226, 227, 229, 250, 251, 253, 268, 270, 272, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 923, 925, 935, 1074, 1078, 1082, 1084], "tupl": [29, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 54, 55, 72, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 119, 120, 124, 129, 130, 131, 133, 137, 138, 139, 152, 194, 195, 197, 202, 206, 207, 209, 242, 245, 273, 289, 292, 294, 296, 298, 313, 314, 340, 345, 364, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 637, 639, 661, 663, 665, 667, 699, 705, 706, 708, 731, 733, 735, 754, 757, 760, 761, 762, 763, 764, 765, 768, 771, 772, 774, 776, 803, 805, 812, 814, 822, 823, 824, 828, 830, 837, 839, 859, 865, 868, 869, 872, 877, 880, 881, 884, 893, 894, 895, 896, 897, 899, 902, 903, 906, 915, 918, 919, 920, 921, 922, 923, 925, 926, 928, 930, 931, 932, 934, 935, 937, 938, 939, 940, 959, 962, 964, 970, 974, 975, 979, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "kei": [29, 30, 31, 72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 124, 129, 133, 138, 194, 195, 197, 294, 296, 298, 345, 357, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 637, 639, 640, 650, 663, 665, 667, 705, 706, 708, 731, 733, 735, 754, 769, 770, 772, 774, 776, 893, 895, 897, 919, 920, 921, 923, 926, 932, 936, 1051, 1052, 1062, 1073, 1078, 1082], "word": [29, 30, 31, 202, 203, 204, 947, 953, 955, 1051, 1052], "args_to_n": [29, 132, 137], "to_ivi": [29, 75, 76, 137, 923, 936], "leaf": [29, 32, 33, 75, 76, 125, 129, 138, 923, 924, 933, 934], "union": [29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 119, 120, 122, 125, 128, 129, 130, 131, 132, 133, 135, 140, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 195, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 259, 260, 264, 265, 267, 268, 270, 272, 273, 277, 278, 279, 282, 284, 287, 289, 292, 294, 296, 298, 299, 300, 301, 302, 303, 306, 307, 308, 311, 315, 318, 320, 321, 324, 326, 329, 331, 332, 335, 337, 338, 339, 340, 344, 345, 361, 362, 363, 364, 365, 367, 370, 371, 372, 373, 378, 384, 386, 388, 389, 390, 391, 394, 395, 396, 398, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 420, 421, 422, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 461, 462, 463, 465, 466, 467, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 495, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 608, 609, 610, 611, 614, 615, 618, 619, 623, 624, 625, 627, 628, 629, 630, 633, 634, 635, 637, 638, 639, 642, 643, 646, 647, 649, 652, 653, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 671, 673, 674, 676, 677, 678, 687, 690, 691, 697, 699, 704, 705, 706, 708, 709, 710, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 731, 733, 734, 735, 736, 738, 740, 742, 744, 746, 749, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 770, 771, 772, 774, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 823, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 919, 920, 921, 922, 923, 924, 925, 926, 934, 935, 941, 942, 945, 947, 948, 949, 950, 952, 953, 955, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "nativearrai": [29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 119, 120, 122, 125, 128, 129, 132, 133, 135, 137, 140, 153, 161, 163, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 192, 194, 198, 202, 203, 204, 206, 209, 212, 215, 226, 229, 231, 232, 234, 235, 237, 240, 242, 243, 245, 250, 253, 255, 259, 260, 264, 268, 272, 273, 279, 282, 284, 287, 289, 292, 294, 297, 303, 306, 308, 311, 315, 318, 321, 324, 326, 329, 332, 335, 340, 345, 364, 365, 367, 383, 389, 390, 395, 396, 399, 400, 401, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 421, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 462, 463, 466, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 600, 601, 604, 606, 609, 611, 614, 615, 618, 619, 623, 624, 628, 629, 630, 633, 634, 635, 636, 638, 642, 643, 646, 647, 649, 651, 652, 653, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 671, 673, 674, 676, 677, 678, 687, 690, 691, 697, 699, 704, 705, 706, 709, 710, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 731, 734, 735, 736, 738, 740, 742, 744, 746, 749, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 770, 771, 772, 775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 859, 860, 863, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 889, 892, 893, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 923, 925, 926, 935, 941, 942, 945, 947, 948, 958, 959, 960, 961, 962, 963, 964, 965, 969, 970, 974, 975, 979, 980, 984, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "travers": [29, 32, 33, 75, 76, 129, 135, 137, 923, 935], "lowest": [29, 32, 33, 75, 76, 125, 152, 923, 935, 947, 949, 950], "leav": [29, 32, 33, 75, 76, 77, 78, 120, 121, 122, 124, 125, 129, 130, 132, 138, 139, 859, 903, 906, 923, 924, 925, 933, 934, 935], "to_n": [29, 75, 76], "item": [29, 33, 70, 71, 72, 75, 76, 130, 135, 137, 138, 140, 273, 300, 345, 354, 355, 357, 364, 366, 368, 370, 372, 376, 634, 650, 672, 700, 701, 923, 928, 929, 930, 931, 935, 939, 940, 1040, 1074, 1075], "asarrai": [34, 35, 80, 81, 124, 132, 202, 754, 755, 964, 970, 974], "nativedtyp": [34, 35, 119, 120, 130, 131, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 242, 243, 245, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 273, 278, 279, 282, 301, 302, 303, 306, 331, 344, 996, 1021, 1024], "datatyp": [34, 35, 75, 76, 82, 83, 202, 206, 207, 209, 242, 243, 245, 273, 299, 331], "nativedevic": [34, 35, 119, 120, 130, 131, 202, 203, 204, 206, 207, 209, 211, 212, 213, 215, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 242, 243, 245, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 345, 362, 363, 364, 378, 384, 386, 388, 390, 391, 394, 634, 687, 947, 948, 949, 950, 952, 953, 955], "interpret": [34, 35, 202, 206, 207, 209, 242, 243, 245], "empty_lik": [34, 35, 80, 81, 202], "uniniti": [34, 35, 202, 211, 212, 213, 215], "from_dlpack": [34, 35, 80, 81, 202], "full_lik": [34, 35, 80, 81, 202], "fill_valu": [34, 35, 80, 81, 130, 202, 225, 226, 227, 228, 229, 230, 395, 505, 508, 525, 528], "float": [34, 35, 40, 41, 44, 45, 50, 51, 52, 53, 86, 87, 90, 91, 96, 97, 120, 121, 124, 125, 129, 130, 132, 137, 139, 163, 169, 172, 194, 195, 196, 197, 201, 202, 203, 204, 211, 217, 218, 225, 226, 227, 229, 231, 232, 234, 235, 247, 248, 265, 267, 273, 279, 282, 301, 308, 311, 321, 324, 332, 335, 345, 378, 384, 388, 391, 394, 395, 396, 399, 400, 401, 404, 405, 408, 409, 412, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 455, 458, 459, 462, 463, 464, 465, 466, 467, 468, 471, 472, 475, 477, 480, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 521, 524, 529, 532, 533, 536, 541, 544, 545, 548, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 619, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 646, 647, 649, 661, 669, 670, 692, 693, 700, 701, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 757, 761, 764, 770, 771, 772, 773, 774, 775, 776, 780, 782, 786, 788, 789, 791, 792, 794, 803, 805, 812, 814, 815, 817, 819, 821, 822, 824, 837, 839, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 919, 920, 921, 922, 941, 942, 945, 947, 952, 953, 955, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028], "scalar": [34, 35, 130, 135, 140, 152, 202, 226, 227, 229, 634, 687, 710, 714, 771, 837, 839], "fill": [34, 35, 75, 76, 202, 211, 225, 226, 227, 229, 247, 248, 250, 251, 253, 265, 267, 268, 270, 272, 947, 949, 950], "meshgrid": [34, 35, 80, 81, 202], "xy": [34, 35, 80, 81, 202, 237, 238, 239, 240, 241], "ones_lik": [34, 35, 80, 81, 140, 202, 1040], "tril": [34, 35, 80, 81, 202], "k": [34, 35, 72, 80, 81, 118, 135, 202, 217, 218, 219, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 634, 642, 754, 770, 771, 795, 798, 815, 817, 819, 821, 822, 824, 825, 827, 831, 833, 947, 952, 953, 955, 959, 962], "n": [34, 35, 118, 124, 202, 237, 240, 255, 257, 259, 260, 262, 264, 634, 643, 754, 766, 771, 783, 785, 795, 798, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 822, 824, 825, 827, 831, 833, 834, 836, 837, 839, 840, 842, 859, 869, 872, 873, 876, 881, 884, 903, 906, 915, 918, 947, 952, 953, 955, 959, 962, 996, 1005, 1008, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "whose": [34, 35, 40, 41, 50, 51, 54, 55, 86, 87, 96, 97, 100, 101, 121, 124, 194, 195, 196, 197, 202, 255, 257, 259, 260, 262, 264, 395, 405, 408, 418, 419, 420, 421, 422, 431, 434, 463, 464, 465, 466, 467, 468, 471, 584, 587, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 624, 625, 626, 627, 628, 629, 634, 645, 771, 772, 773, 774, 775, 776, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 819, 821, 822, 824, 825, 827, 831, 833, 859, 877, 880, 893, 894, 895, 896, 897, 964, 965, 969, 970, 974, 996, 997, 1000], "innermost": [34, 35, 50, 51, 96, 97, 202, 255, 257, 259, 260, 262, 264, 771, 772, 773, 774, 775, 776, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 803, 805, 806, 808, 812, 814, 815, 817, 819, 821, 822, 824, 825, 827, 831, 833], "mxn": [34, 35, 202, 255, 257, 259, 260, 262, 264, 771, 783, 785, 803, 805, 806, 808, 812, 814, 815, 817, 825, 827, 831, 833], "matric": [34, 35, 50, 51, 96, 97, 151, 202, 237, 240, 255, 257, 259, 260, 262, 264, 754, 767, 771, 772, 773, 774, 775, 776, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 802, 803, 805, 806, 808, 812, 814, 815, 817, 819, 821, 822, 824, 825, 827, 831, 833], "int": [34, 35, 44, 45, 48, 49, 52, 53, 54, 55, 90, 91, 94, 95, 96, 97, 100, 101, 119, 120, 122, 125, 129, 130, 131, 132, 133, 140, 163, 184, 187, 199, 200, 202, 217, 218, 225, 226, 229, 231, 232, 234, 235, 255, 257, 259, 260, 262, 264, 273, 289, 292, 302, 307, 308, 311, 315, 318, 326, 329, 345, 367, 370, 371, 372, 373, 381, 382, 383, 389, 390, 395, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 634, 640, 652, 653, 656, 657, 658, 661, 662, 671, 687, 690, 699, 713, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 771, 772, 774, 776, 777, 779, 783, 785, 828, 830, 831, 833, 834, 836, 837, 839, 843, 849, 850, 852, 854, 855, 857, 859, 865, 868, 869, 872, 873, 876, 877, 880, 881, 884, 885, 888, 893, 894, 895, 896, 897, 898, 899, 902, 903, 906, 907, 910, 911, 914, 915, 918, 919, 920, 921, 922, 923, 926, 935, 941, 942, 945, 947, 948, 949, 950, 957, 959, 960, 961, 985, 986, 989, 991, 994, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "diagon": [34, 35, 50, 51, 77, 78, 202, 217, 218, 255, 257, 259, 260, 262, 264, 771, 831, 833], "triangular": [34, 35, 50, 51, 96, 97, 202, 255, 257, 259, 260, 262, 264, 771, 772, 773, 774, 775, 776, 815, 817], "triu": [34, 35, 80, 81, 202], "upper": [34, 35, 50, 51, 75, 76, 96, 97, 124, 202, 217, 218, 260, 262, 264, 771, 772, 773, 774, 775, 776, 815, 817, 947, 953, 955], "zeros_lik": [34, 35, 80, 81, 202, 754, 761, 764, 859, 860, 863, 1040], "creation": [35, 75, 76, 77, 78, 79, 81, 119, 124, 130, 131, 135, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 242, 245, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272], "data_typ": [36, 37, 82, 83, 119, 124, 130, 273, 277, 278, 279, 282, 284, 287, 289, 292, 294, 297, 299, 300, 301, 302, 303, 306, 307, 308, 311, 313, 314, 315, 318, 320, 321, 324, 326, 329, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344], "astyp": [36, 37, 48, 49, 82, 83, 94, 95, 130, 132, 273, 761, 762, 763, 765], "broadcast_arrai": [36, 37, 82, 83, 273], "broadcast_to": [36, 37, 82, 83, 130, 273], "can_cast": [36, 37, 82, 83, 125, 130, 273, 298], "cast": [36, 37, 82, 83, 125, 130, 273, 279, 282, 294, 295, 296, 297, 298, 859, 865, 868, 996, 1013, 1016, 1021, 1024, 1040], "occur": [36, 37, 82, 83, 273, 294, 295, 296, 297, 298, 959, 960, 961, 964, 965, 969, 970, 974, 980, 984], "rule": [36, 37, 50, 51, 82, 83, 96, 97, 122, 124, 125, 128, 129, 130, 133, 273, 279, 282, 294, 295, 296, 297, 298, 332, 335, 395, 431, 434, 451, 454, 472, 475, 567, 570, 588, 591, 771, 772, 773, 774, 775, 776, 777, 779, 809, 811, 819, 821], "float32": [36, 37, 48, 49, 82, 83, 88, 89, 94, 95, 122, 124, 130, 202, 268, 272, 273, 277, 278, 294, 295, 296, 298, 303, 306, 326, 329, 344, 634, 705, 706, 709, 761, 762, 763, 765], "float64": [36, 37, 124, 130, 273, 279, 282, 294, 295, 297, 326, 329, 344], "as_n": [36, 37, 82, 83, 130, 273, 300, 301, 302, 303, 304, 305, 306, 345, 364, 365, 386], "finfo": [36, 37, 82, 83, 273], "iinfo": [36, 37, 82, 83, 133, 273], "is_float_dtyp": [36, 37, 82, 83, 273], "is_int_dtyp": [36, 37, 82, 83, 273, 634, 710], "result_typ": [36, 37, 82, 83, 130, 273], "arrays_and_dtyp": [36, 37, 82, 83, 273, 332, 333, 334, 335, 336], "ab": [40, 41, 86, 87, 124, 127, 395, 400, 584, 587, 771, 837, 839, 1040], "aco": [40, 41, 86, 87, 395, 1040], "acosh": [40, 41, 86, 87, 273, 313, 314, 395, 1040], "x2": [40, 41, 42, 43, 50, 51, 75, 76, 86, 87, 88, 89, 96, 97, 120, 122, 202, 268, 272, 273, 340, 345, 383, 395, 409, 410, 411, 412, 413, 427, 428, 429, 430, 435, 436, 437, 438, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 472, 473, 474, 475, 476, 477, 478, 479, 480, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 521, 522, 523, 524, 525, 526, 527, 528, 545, 546, 547, 548, 549, 550, 551, 552, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 576, 577, 578, 579, 584, 585, 586, 587, 588, 589, 590, 591, 619, 620, 621, 622, 623, 634, 635, 636, 637, 638, 639, 754, 759, 771, 777, 778, 779, 795, 796, 797, 798, 809, 810, 811, 819, 820, 821, 828, 829, 830, 834, 835, 836, 959, 963], "asin": [40, 41, 86, 87, 395, 1040], "asinh": [40, 41, 86, 87, 395, 422, 1040], "hyperbol": [40, 41, 86, 87, 163, 194, 195, 196, 197, 198, 395, 405, 408, 418, 419, 420, 421, 422, 431, 434, 468, 471, 606, 607, 608, 609, 610, 629], "invers": [40, 41, 86, 87, 137, 151, 395, 401, 404, 405, 408, 414, 417, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 771, 792, 794, 812, 814], "sine": [40, 41, 86, 87, 395, 414, 417, 418, 419, 420, 421, 422, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610], "82": [40, 41, 418, 419], "atan": [40, 41, 86, 87, 395, 1040], "atan2": [40, 41, 86, 87, 395, 1040], "atanh": [40, 41, 86, 87, 395, 1040], "bitwise_and": [40, 41, 86, 87, 395], "bitwise_invert": [40, 41, 86, 87, 395], "bitwise_left_shift": [40, 41, 86, 87, 395], "bitwise_or": [40, 41, 86, 87, 395], "bitwise_right_shift": [40, 41, 86, 87, 395], "bitwise_xor": [40, 41, 86, 87, 395], "ceil": [40, 41, 86, 87, 202, 203, 204, 395, 1040], "express": [40, 41, 86, 87, 121, 133, 135, 140, 395, 401, 404, 414, 417, 423, 426, 427, 430, 463, 464, 465, 466, 467, 601, 602, 603, 604, 605, 624, 625, 626, 627, 628], "radian": [40, 41, 86, 87, 121, 395, 401, 404, 414, 417, 423, 426, 427, 430, 463, 464, 465, 466, 467, 601, 602, 603, 604, 605, 624, 625, 626, 627, 628], "cosin": [40, 41, 86, 87, 395, 401, 404, 405, 408, 463, 464, 465, 466, 467, 468, 471], "54": [40, 41, 86, 87, 102, 103, 122, 395, 463, 464, 465, 466, 467, 468, 471, 611, 614, 754, 770, 771, 809, 811, 942, 944, 946, 947, 952, 996, 997, 1000], "416": [40, 41, 395, 463, 464, 466], "99": [40, 41, 395, 418, 421, 463, 464, 996, 997, 1000], "cosh": [40, 41, 86, 87, 395, 1040], "divid": [40, 41, 75, 76, 86, 87, 122, 128, 395, 497, 500, 634, 700, 859, 898], "erf": [40, 41, 86, 87, 395], "exp": [40, 41, 86, 87, 395, 489, 492, 545, 548, 1040], "expm1": [40, 41, 86, 87, 395], "floor": [40, 41, 86, 87, 395, 451, 454, 634, 660, 1040], "floor_divid": [40, 41, 86, 87, 395], "greater": [40, 41, 75, 76, 86, 87, 395, 401, 404, 414, 417, 427, 430, 443, 446, 451, 454, 493, 496, 497, 500, 584, 587, 588, 591, 596, 599, 630, 633, 771, 777, 779, 859, 899, 902, 947, 953, 955], "greater_equ": [40, 41, 86, 87, 395], "isfinit": [40, 41, 86, 87, 124, 395], "isinf": [40, 41, 86, 87, 395], "isnan": [40, 41, 86, 87, 395], "less_equ": [40, 41, 86, 87, 395], "log10": [40, 41, 86, 87, 395], "log1p": [40, 41, 86, 87, 395], "log2": [40, 41, 86, 87, 395], "logaddexp": [40, 41, 86, 87, 395], "logical_and": [40, 41, 86, 87, 395, 1040], "logical_not": [40, 41, 86, 87, 395, 1040], "logical_or": [40, 41, 86, 87, 395, 1040], "logical_xor": [40, 41, 86, 87, 395], "multipli": [40, 41, 86, 87, 122, 126, 128, 395, 634, 652], "neg": [40, 41, 54, 55, 86, 87, 100, 101, 125, 129, 132, 163, 169, 172, 202, 203, 204, 217, 218, 395, 509, 512, 513, 516, 567, 570, 584, 587, 588, 591, 771, 822, 824, 834, 836, 837, 839, 859, 877, 880, 893, 894, 895, 896, 897, 1029, 1030, 1033, 1035, 1038], "not_equ": [40, 41, 86, 87, 395], "pow": [40, 41, 86, 87, 395], "remaind": [40, 41, 75, 76, 86, 87, 395, 634, 660, 859, 898], "evalu": [40, 41, 75, 76, 86, 87, 129, 395, 485, 488, 489, 492, 529, 532, 533, 536, 537, 540, 541, 544, 572, 575, 596, 597, 598, 599, 600, 615, 618, 923, 924, 933, 934, 1029, 1030, 1033, 1035, 1038], "94": [40, 41, 86, 87, 418, 422, 596, 597], "256": [40, 41, 596, 597, 754, 760], "0001": [40, 41, 596, 597, 1078, 1079, 1080], "36": [40, 41, 596, 597, 771, 809, 811, 996, 997, 1000], "67": [40, 41, 86, 87, 129, 395, 455, 458, 468, 471, 596, 597, 606, 608, 610], "45": [40, 41, 124, 596, 597, 715, 717, 720, 771, 809, 811, 859, 898, 941, 942, 945, 996, 997, 1000], "24": [40, 41, 102, 103, 395, 455, 458, 596, 597, 611, 614, 634, 652, 715, 717, 720, 771, 783, 785, 809, 811, 941, 942, 944, 945, 946, 996, 997, 1000], "678": [40, 41, 596, 597], "32": [40, 41, 44, 45, 124, 138, 163, 169, 172, 395, 455, 458, 596, 597, 717, 718, 754, 757, 760, 761, 764, 771, 809, 811, 959, 963, 996, 997, 1000], "sin": [40, 41, 86, 87, 128, 135, 395, 605, 634, 661, 1040], "841": [40, 41, 86, 87, 395, 601, 602, 603, 604, 605], "909": [40, 41, 86, 87, 395, 601, 602, 603, 604, 605], "141": [40, 41, 86, 87, 395, 601, 602, 603, 604, 605], "sinh": [40, 41, 86, 87, 395, 610, 1040], "angl": [40, 41, 86, 87, 151, 194, 195, 196, 197, 395, 427, 430, 468, 471, 606, 607, 608, 609, 610, 629], "18": [40, 41, 86, 87, 122, 129, 395, 455, 458, 606, 607, 608, 609, 610, 771, 783, 785, 809, 811, 996, 997, 1000], "63": [40, 41, 44, 45, 86, 87, 96, 97, 395, 606, 607, 608, 609, 610, 611, 614, 717, 718, 771, 772, 774, 775, 776, 809, 811, 996, 997, 1000], "23": [40, 41, 86, 87, 395, 455, 458, 596, 599, 606, 607, 608, 609, 610, 754, 760, 771, 783, 785, 959, 963], "232": [40, 41, 86, 87, 395, 606, 607, 608, 609, 610], "51": [40, 41, 395, 455, 458, 606, 607, 609], "sqrt": [40, 41, 86, 87, 395, 771, 837, 839], "squar": [40, 41, 50, 51, 86, 87, 96, 97, 124, 395, 611, 614, 754, 757, 771, 772, 773, 774, 775, 776, 780, 782, 786, 788, 789, 791, 792, 794, 802, 818, 819, 821, 822, 824], "subtract": [40, 41, 86, 87, 122, 128, 395], "tan": [40, 41, 86, 87, 120, 121, 125, 129, 132, 135, 395, 414, 417, 418, 421, 625, 771, 783, 785, 964, 965, 969, 985, 986, 989, 1040], "tangent": [40, 41, 86, 87, 121, 163, 194, 195, 196, 197, 198, 395, 423, 426, 427, 430, 431, 434, 624, 625, 626, 627, 628, 629], "56": [40, 41, 86, 87, 122, 395, 611, 614, 624, 625, 626, 627, 628, 715, 717, 720, 771, 809, 811, 996, 997, 1000], "19": [40, 41, 86, 87, 122, 395, 418, 420, 422, 455, 458, 624, 625, 626, 627, 628, 771, 783, 785], "real": [40, 41, 86, 87, 194, 195, 196, 197, 395, 629], "762": [40, 41, 86, 87, 163, 194, 196, 197, 198, 395, 629], "964": [40, 41, 86, 87, 163, 194, 196, 197, 198, 395, 629], "trunc": [40, 41, 86, 87, 395], "elementwis": [41, 75, 76, 87, 119, 125, 135, 140, 396, 399, 401, 404, 405, 408, 409, 412, 414, 417, 418, 421, 423, 426, 427, 430, 431, 434, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 462, 463, 466, 468, 471, 472, 475, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 524, 525, 528, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 570, 572, 575, 576, 579, 580, 583, 584, 587, 588, 591, 592, 595, 596, 599, 601, 604, 606, 609, 611, 614, 615, 618, 619, 623, 624, 628, 629, 630, 633], "all_equ": [42, 43, 88, 89, 634, 639], "equality_matrix": [42, 43, 88, 89, 634, 635, 636, 637, 638, 639], "compar": [42, 43, 75, 76, 88, 89, 124, 133, 138, 634, 635, 636, 637, 638, 639, 642, 643, 964, 965, 969, 970, 974, 980, 984, 985, 986, 989, 991, 994], "matrix": [42, 43, 50, 51, 75, 76, 88, 89, 96, 97, 202, 237, 240, 255, 259, 260, 264, 634, 635, 636, 637, 638, 639, 646, 754, 767, 771, 772, 773, 774, 775, 776, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 802, 803, 805, 806, 808, 812, 814, 815, 817, 819, 821, 822, 824, 825, 827, 831, 833, 840, 842, 1062, 1072], "x1": [42, 43, 86, 87, 88, 89, 120, 122, 202, 268, 272, 273, 303, 306, 340, 345, 383, 395, 409, 412, 413, 427, 430, 435, 438, 443, 446, 447, 450, 451, 454, 455, 458, 472, 475, 476, 477, 480, 497, 500, 501, 504, 505, 508, 521, 524, 525, 528, 545, 548, 549, 552, 557, 560, 561, 564, 565, 566, 567, 570, 571, 576, 579, 584, 587, 588, 591, 619, 620, 623, 634, 635, 636, 637, 638, 639, 642, 754, 759, 771, 777, 779, 795, 798, 809, 811, 819, 821, 828, 830, 834, 836, 959, 963], "gather_nd": [42, 43, 75, 76, 88, 89, 634, 667, 1040], "cuda": [42, 43, 75, 76, 88, 89, 135, 138, 152, 202, 231, 232, 234, 235, 345, 354, 361, 386, 634, 662, 663, 664, 665, 666, 667, 687, 690, 691, 947, 948, 949, 950, 953, 955, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1084, 1085], "to_numpi": [42, 43, 75, 76, 88, 89, 138, 634, 706, 1040], "adam_step": [44, 45, 90, 91, 715, 721], "mw": [44, 45, 90, 91, 139, 715, 717, 718, 719, 720, 721, 722, 724], "vw": [44, 45, 90, 91, 139, 715, 717, 718, 719, 720, 721, 722, 724], "beta1": [44, 45, 90, 91, 139, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 736, 737, 738, 739, 1078, 1079, 1080], "beta2": [44, 45, 90, 91, 139, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 736, 737, 738, 739, 1078, 1079, 1080], "999": [44, 45, 86, 87, 90, 91, 139, 194, 195, 197, 395, 629, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 736, 737, 738, 739, 1078, 1079, 1080], "epsilon": [44, 45, 52, 53, 56, 57, 90, 91, 98, 99, 102, 103, 125, 129, 132, 139, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 736, 737, 738, 739, 771, 803, 805, 812, 814, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 941, 942, 943, 944, 945, 946, 1076, 1077, 1078, 1079, 1080], "1e": [44, 45, 52, 53, 56, 57, 90, 91, 98, 99, 102, 103, 125, 129, 132, 139, 140, 634, 670, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 736, 737, 738, 739, 771, 822, 824, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 941, 942, 943, 944, 945, 946, 1040, 1078, 1079, 1080, 1081, 1083], "07": [44, 45, 52, 53, 90, 91, 98, 99, 139, 395, 596, 599, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 736, 737, 738, 739, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 1078, 1079, 1080], "cost": [44, 45, 90, 91, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 919, 920, 921, 922], "respect": [44, 45, 90, 91, 120, 122, 124, 128, 129, 130, 133, 202, 237, 240, 395, 396, 399, 409, 412, 427, 430, 435, 438, 443, 446, 447, 450, 451, 454, 455, 458, 472, 475, 477, 480, 497, 500, 501, 504, 505, 508, 521, 524, 525, 528, 545, 548, 549, 552, 557, 560, 561, 564, 567, 570, 576, 579, 588, 591, 619, 623, 715, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 736, 738, 740, 742, 744, 746, 771, 815, 817, 919, 920, 921, 922], "weight": [44, 45, 90, 91, 125, 129, 139, 140, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 754, 767, 768, 770, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1074, 1075, 1078, 1080, 1081], "ws": [44, 45, 90, 91, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746], "dc": [44, 45, 90, 91, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746], "dw": [44, 45, 90, 91, 715, 717, 718, 719, 720, 721, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746], "w": [44, 45, 48, 49, 75, 76, 90, 91, 94, 95, 135, 138, 139, 634, 643, 715, 717, 718, 719, 720, 721, 722, 724, 725, 727, 729, 730, 736, 738, 739, 740, 742, 743, 744, 746, 747, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765], "averag": [44, 45, 90, 91, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 919, 920, 921], "moment": [44, 45, 90, 91, 126, 152, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 1078, 1079, 1080], "forget": [44, 45, 90, 91, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 1078, 1079, 1080], "divisor": [44, 45, 90, 91, 395, 472, 475, 588, 591, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 996, 1017, 1020, 1025, 1028, 1078, 1079, 1080], "dure": [44, 45, 75, 76, 90, 91, 125, 129, 130, 131, 132, 152, 199, 200, 345, 390, 634, 711, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 771, 795, 798, 919, 920, 921, 922, 996, 1017, 1020, 1025, 1028, 1074, 1075, 1078, 1079, 1080, 1082], "adam": [44, 45, 90, 91, 138, 139, 140, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 1040, 1078, 1080], "divis": [44, 45, 90, 91, 125, 395, 451, 454, 472, 475, 497, 500, 588, 591, 634, 660, 670, 693, 700, 701, 715, 717, 718, 719, 720, 721, 722, 724, 736, 738, 1078, 1079, 1080], "delta": [44, 45, 90, 91, 715, 717, 718, 719, 720, 721], "dcdw": [44, 45, 90, 91, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 736, 737, 738, 739, 740, 741, 742, 743], "adam_step_delta": [44, 45, 90, 91, 715, 717, 718, 719, 720, 721], "639": [44, 45, 715, 717, 718, 720], "11": [44, 45, 77, 78, 86, 87, 104, 105, 122, 124, 129, 395, 409, 411, 412, 413, 435, 438, 592, 595, 634, 652, 662, 717, 718, 771, 783, 785, 809, 811, 843, 854, 857, 859, 877, 880, 885, 888, 947, 949, 950, 951, 959, 963, 964, 965, 969, 996, 997, 1000], "00121": [44, 45, 717, 718], "0102": [44, 45, 717, 718], "0397": [44, 45, 717, 718], "exclus": [44, 45, 75, 76, 90, 91, 124, 125, 129, 140, 202, 203, 204, 634, 652, 680, 681, 683, 715, 731, 732, 733, 734, 735, 947, 949, 950], "is_var": [44, 45, 90, 91, 715, 731, 732, 733, 734, 735], "gradient": [45, 75, 76, 91, 119, 129, 138, 139, 151, 152, 345, 389, 717, 718, 719, 720, 721, 722, 724, 726, 727, 729, 731, 734, 736, 738, 740, 742, 744, 746, 748, 749, 750, 751, 752, 753, 919, 920, 921, 922, 1040, 1078, 1079, 1080, 1081, 1082, 1083], "depthwise_conv2d": [48, 49, 94, 95, 754, 765, 1040], "stride": [48, 49, 94, 95, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "pad": [48, 49, 94, 95, 634, 661, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 859, 869, 872, 915, 918, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "data_format": [48, 49, 94, 95, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "nhwc": [48, 49, 94, 95, 754, 757, 758, 761, 762, 763, 764, 765, 1062, 1065, 1066, 1069], "dilat": [48, 49, 94, 95, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "batch_siz": [48, 49, 94, 95, 138, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 947, 948], "h": [48, 49, 94, 95, 118, 129, 754, 757, 758, 759, 760, 761, 762, 763, 764, 765, 923, 926], "convolut": [48, 49, 94, 95, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "fh": [48, 49, 94, 95, 754, 757, 758, 759, 760, 761, 762, 763, 764, 765], "fw": [48, 49, 94, 95, 124, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765], "d_in": [48, 49, 94, 95, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765], "slide": [48, 49, 94, 95, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "valid": [48, 49, 94, 95, 124, 130, 135, 273, 299, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 859, 903, 906, 1029, 1030, 1033, 1035, 1038, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "nchw": [48, 49, 94, 95, 754, 757, 758, 761, 762, 763, 764, 765, 1062, 1065, 1066, 1069], "255": [48, 49, 94, 95, 761, 762, 763, 765], "128": [48, 49, 94, 95, 754, 760, 761, 762, 763, 765, 771, 809, 811], "linear_algebra": [50, 51, 96, 97, 119, 137, 771, 772, 775, 777, 779, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 799, 801, 802, 803, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 827, 828, 830, 831, 833, 834, 836, 837, 839, 840, 842], "choleski": [50, 51, 96, 97, 771, 776], "symmetr": [50, 51, 96, 97, 771, 772, 773, 774, 775, 776, 786, 788, 789, 791, 840, 842], "u": [50, 51, 96, 97, 771, 772, 773, 774, 775, 776, 822, 824], "625": [50, 51, 771, 772, 773, 775], "25": [50, 51, 52, 53, 102, 103, 129, 395, 606, 609, 611, 614, 615, 618, 771, 772, 773, 775, 783, 785, 792, 794, 843, 849, 850, 852, 941, 942, 944, 945, 946, 996, 997, 1000], "cross": [50, 51, 52, 53, 77, 78, 771, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857, 1040], "det": [50, 51, 77, 78, 771], "offset": [50, 51, 56, 57, 102, 103, 771, 783, 784, 785, 831, 832, 833, 941, 942, 943, 944, 945, 946], "axis1": [50, 51, 54, 55, 100, 101, 771, 783, 784, 785, 859, 907, 908, 909, 910], "axis2": [50, 51, 771, 783, 784, 785], "eigh": [50, 51, 77, 78, 771], "namedtupl": [50, 51, 62, 63, 771, 786, 787, 788, 815, 816, 817, 822, 824, 964, 965, 967, 969, 970, 972, 974, 975, 977, 979], "eigvalsh": [50, 51, 77, 78, 771], "inv": [50, 51, 77, 78, 137, 771, 1040], "matmul": [50, 51, 96, 97, 119, 124, 126, 135, 771, 822, 824, 1040], "matrix_norm": [50, 51, 75, 76, 771], "ord": [50, 51, 75, 76, 771, 799, 800, 801, 837, 838, 839], "fro": [50, 51, 771, 799, 800, 801], "keepdim": [50, 51, 66, 67, 68, 69, 75, 76, 112, 113, 114, 115, 133, 634, 713, 771, 799, 800, 801, 837, 838, 839, 959, 960, 961, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039], "matrix_rank": [50, 51, 77, 78, 771], "rtol": [50, 51, 771, 803, 804, 805, 812, 813, 814], "matrix_transpos": [50, 51, 77, 78, 137, 771], "outer": [50, 51, 77, 78, 771, 919, 920, 921, 922], "pinv": [50, 51, 77, 78, 771, 1040], "qr": [50, 51, 77, 78, 771], "reduc": [50, 51, 75, 76, 137, 345, 389, 634, 657, 771, 815, 816, 817, 959, 960, 961, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "solv": [50, 51, 77, 78, 136, 151, 771], "svd": [50, 51, 77, 78, 771, 1040], "full_matric": [50, 51, 771, 822, 823, 824], "svdval": [50, 51, 77, 78, 771], "tensordot": [50, 51, 77, 78, 771], "trace": [50, 51, 75, 76, 77, 78, 135, 152, 634, 680, 681, 683, 771], "vecdot": [50, 51, 77, 78, 771], "vector_norm": [50, 51, 75, 76, 771], "vector_to_skew_symmetric_matrix": [50, 51, 77, 78, 771, 1040], "binary_cross_entropi": [52, 53, 98, 99, 843, 848], "pred": [52, 53, 98, 99, 125, 129, 132, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858], "predict": [52, 53, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857], "amount": [52, 53, 131, 345, 391, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857], "smooth": [52, 53, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857], "binari": [52, 53, 395, 435, 438, 447, 450, 455, 458, 561, 564, 843, 844, 845, 847], "entropi": [52, 53, 843, 844, 845, 847, 849, 850, 852, 854, 855, 857], "357": [52, 53, 98, 99, 843, 844, 845, 846, 847, 848, 854, 855, 857, 858], "223": [52, 53, 98, 99, 843, 844, 845, 846, 847, 848, 854, 855, 856, 858], "cross_entropi": [52, 53, 98, 99, 125, 129, 132, 843, 853, 854, 857], "along": [52, 53, 54, 55, 75, 76, 100, 101, 119, 132, 202, 231, 232, 234, 235, 345, 370, 371, 372, 373, 374, 375, 376, 377, 389, 634, 652, 653, 662, 713, 771, 799, 801, 831, 833, 834, 836, 837, 839, 843, 849, 850, 852, 854, 855, 857, 859, 865, 868, 877, 880, 885, 888, 893, 894, 895, 896, 897, 898, 903, 906, 911, 914, 919, 920, 921, 922, 947, 958, 959, 960, 961, 985, 986, 989, 991, 994, 996, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "3862944": [52, 53, 843, 849, 850, 852], "sparse_cross_entropi": [52, 53, 98, 99, 843, 858], "logit": [52, 53, 843, 854, 855, 857], "spars": [52, 53, 843, 854, 855, 857], "loss": [53, 99, 119, 125, 138, 139, 140, 844, 845, 847, 849, 850, 852, 854, 855, 857, 1040], "clip": [54, 55, 75, 76, 100, 101, 125, 129, 132, 135, 138, 140, 395, 565, 566, 634, 646, 647, 649, 859, 864, 1040], "x_min": [54, 55, 75, 76, 100, 101, 135, 140, 859, 860, 861, 862, 863, 864], "x_max": [54, 55, 75, 76, 100, 101, 135, 140, 859, 860, 861, 862, 863, 864], "roll": [54, 55, 100, 101, 120, 129, 859, 860, 861, 897], "concat": [54, 55, 75, 76, 100, 101, 345, 374, 375, 376, 377, 389, 634, 661, 859, 1040], "xs": [54, 55, 100, 101, 129, 345, 368, 372, 374, 375, 376, 634, 635, 638, 643, 715, 726, 859, 865, 866, 867, 868], "constant_pad": [54, 55, 100, 101, 859], "pad_width": [54, 55, 100, 101, 859, 869, 870, 871, 872, 915, 916, 917, 918], "expand_dim": [54, 55, 100, 101, 135, 138, 859, 1040], "flip": [54, 55, 100, 101, 137, 138, 140, 395, 439, 442, 859, 885, 888, 1040], "permute_dim": [54, 55, 100, 101, 859], "reshap": [54, 55, 75, 76, 100, 101, 124, 132, 135, 137, 140, 859, 1040], "shift": [54, 55, 100, 101, 120, 122, 395, 443, 446, 451, 454, 859, 893, 894, 895, 896, 897], "larger": [54, 55, 100, 101, 124, 135, 140, 273, 308, 311, 859, 860, 863, 893, 894, 895, 896, 897, 996, 1017, 1020, 1025, 1028], "flatten": [54, 55, 75, 76, 100, 101, 634, 661, 771, 809, 811, 837, 839, 859, 885, 888, 893, 894, 895, 896, 897, 959, 960, 961, 964, 965, 969, 970, 974, 980, 984], "restor": [54, 55, 100, 101, 859, 893, 894, 895, 896, 897], "squeez": [54, 55, 100, 101, 859, 1040], "stack": [54, 55, 75, 76, 100, 101, 135, 202, 255, 259, 260, 264, 771, 780, 782, 783, 785, 786, 788, 789, 791, 792, 794, 795, 798, 802, 803, 805, 806, 808, 812, 814, 815, 817, 822, 824, 825, 827, 831, 833, 859, 923, 924, 933, 934, 1040, 1062, 1071], "swapax": [54, 55, 100, 101, 859], "axis0": [54, 55, 100, 101, 859, 907, 908, 909, 910], "tile": [54, 55, 100, 101, 859, 1040], "rep": [54, 55, 100, 101, 859, 911, 912, 913, 914], "zero_pad": [54, 55, 100, 101, 859, 1040], "layer_norm": [56, 57, 102, 103, 941, 946], "normalized_idx": [56, 57, 102, 103, 941, 942, 943, 944, 945, 946], "05": [56, 57, 102, 103, 124, 345, 715, 717, 720, 941, 942, 943, 944, 945, 946], "scale": [56, 57, 102, 103, 129, 345, 387, 388, 715, 740, 742, 754, 766, 769, 770, 941, 942, 943, 944, 945, 946, 1062, 1070, 1073, 1078, 1081], "new_std": [56, 57, 102, 103, 941, 942, 943, 944, 945, 946, 1076, 1077], "0976": [56, 57, 941, 942, 943, 945], "3452": [56, 57, 941, 942, 943, 945], "2740": [56, 57, 941, 942, 943, 945], "1047": [56, 57, 941, 942, 943, 945], "5886": [56, 57, 941, 942, 943, 945], "2732": [56, 57, 941, 942, 943, 945], "7696": [56, 57, 941, 942, 943, 945], "7024": [56, 57, 941, 942, 943, 945], "2518": [56, 57, 941, 942, 943, 945], "001": [56, 57, 138, 139, 395, 596, 599, 715, 717, 720, 941, 942, 943, 945], "576": [56, 57, 941, 942, 943, 945], "292": [56, 57, 941, 942, 943, 945], "33": [56, 57, 86, 87, 418, 420, 771, 809, 811, 941, 942, 943, 945, 996, 997, 1000], "581": [56, 57, 715, 717, 720, 941, 942, 943, 945], "891": [56, 57, 163, 179, 182, 941, 942, 943, 945], "01": [56, 57, 140, 395, 592, 595, 596, 599, 941, 942, 943, 945], "579": [56, 57, 941, 942, 943, 945], "931": [56, 57, 941, 942, 943, 945], "norm": [57, 75, 76, 103, 119, 634, 646, 647, 649, 771, 799, 801, 837, 839, 942, 943, 944, 945, 946, 1040, 1077, 1078, 1080], "random": [59, 75, 76, 105, 119, 131, 140, 151, 948, 949, 950, 952, 953, 955, 957, 958, 1040], "unique_al": [62, 63, 108, 109, 964], "unique_count": [62, 63, 108, 109, 964, 971], "uc": [62, 63, 970, 972], "count": [62, 63, 122, 138, 345, 383, 771, 834, 836, 859, 877, 880, 964, 965, 969, 970, 972, 974, 1029, 1030, 1033, 1035, 1038], "unique_invers": [62, 63, 108, 109, 964], "unique_valu": [62, 63, 108, 109, 964], "argsort": [64, 65, 110, 111, 985], "descend": [64, 65, 110, 111, 771, 822, 824, 825, 827, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995], "sort": [65, 75, 76, 77, 78, 79, 111, 119, 771, 786, 788, 822, 824, 825, 827, 986, 989], "einsum": [66, 67, 112, 113, 996], "equat": [66, 67, 112, 113, 771, 819, 821, 996, 997, 998, 999, 1000], "max": [66, 67, 75, 76, 112, 113, 273, 308, 311, 315, 318, 395, 565, 634, 646, 647, 649, 657, 690, 691, 771, 803, 805, 812, 814, 996, 1078, 1080], "min": [66, 67, 75, 76, 112, 113, 273, 308, 311, 315, 318, 395, 566, 634, 657, 690, 691, 700, 771, 815, 817, 822, 824, 825, 827, 837, 839, 996], "prod": [66, 67, 75, 76, 112, 113, 122, 130, 634, 657, 996], "std": [66, 67, 112, 113, 122, 947, 952, 964, 965, 969, 996], "var": [66, 67, 112, 113, 116, 117, 122, 135, 919, 920, 921, 996], "statist": [67, 113, 116, 117, 119, 124, 130, 997, 1000, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028], "util": [69, 115, 119, 131, 345, 378, 1030, 1033, 1035, 1038], "add_ivy_array_instance_method": 70, "cl": [70, 71, 116, 117], "to_ignor": [70, 71, 116, 117, 923, 934], "loop": [70, 71, 116, 117, 126, 133, 152, 919, 920, 921, 922], "_wrap_funct": [70, 71, 116, 117, 125, 127], "toi": [70, 71, 116, 117], "arrayexampl": [70, 71], "hasattr": [70, 71, 116, 117, 137], "dictionari": [72, 75, 76, 77, 78, 79, 138, 152, 345, 388], "map": [72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 120, 124, 125, 129, 138, 151, 152, 194, 195, 197, 294, 296, 298, 345, 354, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 635, 637, 639, 663, 665, 667, 705, 706, 708, 731, 733, 735, 772, 774, 776, 893, 895, 897, 923, 930, 931, 935, 936, 1062, 1073], "pair": [72, 395, 427, 430, 754, 770, 771, 777, 779], "via": [72, 119, 129, 130, 131, 132, 135, 137, 138, 151, 923, 924, 933, 934], "__delitem__": 72, "__iter__": 72, "__len__": 72, "len": [72, 137, 140, 202, 237, 240], "__reversed__": 72, "fromkei": 72, "keyerror": 72, "popitem": 72, "lifo": 72, "setdefault": 72, "insert": [72, 859, 873, 876, 923, 928, 959, 960], "lack": 72, "containerwithactiv": [73, 77, 78], "dict_in": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "queue": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 138, 345, 354, 355, 634, 689, 694], "queue_load_s": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "container_combine_method": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "list_join": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_limit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "key_length_limit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_ind": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_line_spac": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "ivyh": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "default_key_color": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "keyword_color_dict": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "rebuild_child_contain": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "types_to_iteratively_nest": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "alphabetical_kei": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "containerbas": [73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 129], "key_chain": [73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 208, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 303, 305, 308, 310, 312, 315, 317, 319, 321, 323, 325, 326, 328, 330, 332, 334, 336, 396, 398, 400, 401, 403, 405, 407, 409, 411, 413, 414, 416, 418, 420, 422, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 459, 461, 463, 465, 467, 468, 470, 472, 474, 476, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 567, 569, 571, 572, 574, 576, 578, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 617, 619, 620, 622, 624, 625, 627, 630, 632, 635, 637, 639, 647, 648, 663, 665, 667, 705, 706, 708, 722, 723, 725, 727, 728, 730, 731, 733, 735, 736, 737, 739, 740, 741, 743, 744, 745, 747, 772, 774, 776, 795, 797, 844, 846, 848, 849, 851, 853, 854, 856, 858, 860, 862, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 899, 901, 903, 905, 907, 909, 911, 913, 915, 917, 923, 936, 942, 944, 946, 949, 951, 953, 954, 956, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 983, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1030, 1032, 1034, 1035, 1037, 1039], "to_appli": [73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 208, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 303, 305, 308, 310, 312, 315, 317, 319, 321, 323, 325, 326, 328, 330, 332, 334, 336, 396, 398, 400, 401, 403, 405, 407, 409, 411, 413, 414, 416, 418, 420, 422, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 459, 461, 463, 465, 467, 468, 470, 472, 474, 476, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 567, 569, 571, 572, 574, 576, 578, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 617, 619, 620, 622, 624, 625, 627, 630, 632, 635, 637, 639, 647, 648, 663, 665, 667, 705, 706, 708, 722, 723, 725, 727, 728, 730, 731, 733, 735, 736, 737, 739, 740, 741, 743, 744, 745, 747, 772, 774, 776, 795, 797, 844, 846, 848, 849, 851, 853, 854, 856, 858, 860, 862, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 899, 901, 903, 905, 907, 909, 911, 913, 915, 917, 923, 936, 942, 944, 946, 953, 954, 956, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 983, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1030, 1032, 1034, 1035, 1037, 1039], "prune_unappli": [73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 208, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 303, 305, 308, 310, 312, 315, 317, 319, 321, 323, 325, 326, 328, 330, 332, 334, 336, 396, 398, 400, 401, 403, 405, 407, 409, 411, 413, 414, 416, 418, 420, 422, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 459, 461, 463, 465, 467, 468, 470, 472, 474, 476, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 567, 569, 571, 572, 574, 576, 578, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 617, 619, 620, 622, 624, 625, 627, 630, 632, 635, 637, 639, 647, 648, 663, 665, 667, 705, 706, 708, 722, 723, 725, 727, 728, 730, 731, 733, 735, 736, 737, 739, 740, 741, 743, 744, 745, 747, 772, 774, 776, 795, 797, 844, 846, 848, 849, 851, 853, 854, 856, 858, 860, 862, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 899, 901, 903, 905, 907, 909, 911, 913, 915, 917, 923, 936, 942, 944, 946, 953, 954, 956, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 983, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1030, 1032, 1034, 1035, 1037, 1039], "map_sequ": [73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 208, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 303, 305, 308, 310, 312, 315, 317, 319, 321, 323, 325, 326, 328, 330, 332, 334, 336, 396, 398, 400, 401, 403, 405, 407, 409, 411, 413, 414, 416, 418, 420, 422, 423, 425, 431, 433, 439, 441, 459, 461, 463, 465, 467, 468, 470, 472, 474, 476, 481, 483, 485, 487, 489, 491, 493, 495, 509, 511, 513, 515, 517, 519, 529, 531, 533, 535, 537, 539, 541, 543, 553, 555, 567, 569, 571, 572, 574, 580, 582, 592, 594, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 617, 619, 620, 622, 624, 625, 627, 630, 632, 635, 637, 639, 647, 648, 663, 665, 667, 705, 706, 708, 722, 723, 725, 727, 728, 730, 731, 733, 735, 736, 737, 739, 740, 741, 743, 744, 745, 747, 772, 774, 776, 844, 846, 848, 849, 851, 853, 854, 856, 858, 860, 862, 864, 869, 871, 873, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 899, 901, 907, 909, 911, 913, 915, 917, 942, 944, 946, 953, 954, 956, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 983, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1030, 1032, 1034, 1035, 1037, 1039], "static_gelu": [73, 74, 164], "static_leaky_relu": [73, 74, 169], "static_relu": [73, 74, 174], "static_sigmoid": [73, 74, 179], "static_softmax": [73, 74, 184], "static_softplu": [73, 74, 189], "static_tanh": [73, 74, 86, 87, 194], "__getitem__": [75, 76, 129], "queri": [75, 76, 129, 130, 137, 345, 378, 388, 754, 769, 770, 1062, 1073], "slice": [75, 76, 634, 662, 663, 666, 923, 932], "chain": [75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 128, 129, 139, 140, 152, 194, 195, 197, 294, 296, 298, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 635, 637, 639, 663, 665, 667, 705, 706, 708, 731, 733, 735, 772, 774, 776, 893, 895, 897, 919, 920, 921, 923, 936, 1084, 1085], "represent": [75, 76, 77, 78, 79, 151, 201, 273, 277, 278, 308, 311, 315, 318, 345, 361, 362, 395, 396, 399, 409, 412, 435, 438, 447, 450, 455, 458, 561, 564, 567, 570, 634, 640, 699, 704], "sequenc": [75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 122, 124, 130, 133, 151, 194, 195, 197, 199, 200, 294, 296, 298, 345, 354, 355, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 634, 635, 637, 639, 643, 663, 665, 667, 684, 705, 706, 708, 731, 733, 735, 772, 774, 776, 859, 893, 895, 897, 898, 903, 906, 947, 949, 950, 996, 1001, 1004, 1029, 1030, 1033, 1035, 1038, 1062, 1071, 1076, 1077, 1084, 1085], "asynchron": [75, 76, 77, 78, 79], "arriv": [75, 76, 77, 78, 79], "timeout": [75, 76, 77, 78, 79, 345, 354, 355, 634, 689, 694], "length": [75, 76, 77, 78, 79, 124, 133, 138, 202, 203, 204, 237, 240, 771, 822, 824, 825, 827, 859, 889, 892], "whitespac": [75, 76, 77, 78, 79], "indent": [75, 76, 77, 78, 79, 138], "extra": [75, 76, 77, 78, 79, 122, 127, 128, 135, 715, 726], "newlin": [75, 76, 77, 78, 79, 121], "handl": [75, 76, 77, 78, 79, 118, 120, 124, 125, 127, 129, 130, 131, 132, 139, 152, 199, 200, 345, 361, 362, 363, 364, 365, 379, 383, 384, 391, 394, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 1078, 1079, 1080, 1081, 1082, 1083], "color": [75, 76, 77, 78, 79, 1087, 1088], "termcolor": [75, 76, 77, 78, 79], "rebuild": [75, 76, 77, 78, 79], "constructor": [75, 76, 77, 78, 79, 130, 131, 137, 634, 641, 1084, 1085], "param": [75, 76, 77, 78, 79, 88, 89, 135, 140, 634, 640, 662, 663, 666, 667], "alphabet": [75, 76, 77, 78, 79], "preserv": [75, 76, 77, 78, 79, 124, 140, 152, 715, 749, 859, 877, 880], "__setitem__": [75, 76, 128, 129, 137], "val": [75, 76, 132, 137, 634, 676, 677, 678, 692, 693], "after": [75, 76, 122, 124, 129, 130, 134, 273, 340, 345, 395, 611, 614, 715, 722, 724, 726, 727, 729, 736, 738, 740, 742, 744, 746, 941, 942, 945, 1078, 1079, 1080, 1081, 1082, 1083], "all_fals": [75, 76], "assert_is_bool": [75, 76], "entri": [75, 76, 202, 231, 232, 234, 235, 859, 898, 923, 936], "assert": [75, 76, 124, 133, 137, 138, 634, 644], "prune": [75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 194, 195, 197, 294, 296, 298, 396, 398, 400, 409, 411, 413, 418, 420, 422, 459, 461, 463, 465, 467, 493, 495, 596, 598, 600, 601, 603, 605, 606, 608, 610, 624, 625, 627, 635, 637, 639, 663, 665, 667, 705, 706, 708, 731, 733, 735, 772, 774, 776, 893, 895, 897, 923, 936, 937, 938], "all_key_chain": [75, 76], "include_empti": [75, 76], "all_tru": [75, 76, 129, 138], "arrays_as_list": [75, 76], "intermedi": [75, 76], "as_arrai": [75, 76, 634, 671, 697], "as_bool": [75, 76], "as_on": [75, 76], "as_random_uniform": [75, 76], "low": [75, 76, 104, 105, 135, 947, 949, 950, 951, 953, 954, 955, 956], "uniform": [75, 76, 139, 947, 948, 949, 950, 953, 955, 1053, 1055, 1056, 1059, 1060], "boundari": [75, 76, 947, 953, 955], "interv": [75, 76, 135, 140, 202, 203, 204, 231, 232, 234, 235, 771, 834, 836, 859, 860, 863, 903, 906, 947, 949, 950, 953, 955, 1029, 1030, 1033, 1035, 1038], "as_vari": [75, 76, 124], "as_zero": [75, 76], "assert_contains_sub_contain": [75, 76], "sub_cont": [75, 76], "except": [75, 76, 121, 128, 132, 133, 137, 152, 273, 289, 292, 634, 644, 655, 678, 711, 771, 812, 814, 859, 865, 868, 903, 906, 959, 962, 1029, 1030, 1033, 1035, 1038], "diff": [75, 76, 129, 138], "screen": [75, 76, 138], "assert_contains_sub_structur": [75, 76], "check_shap": [75, 76], "assert_ident": [75, 76], "check_typ": [75, 76], "same_arrai": [75, 76, 138], "assert_identical_structur": [75, 76], "at_key_chain": [75, 76], "ignore_key_error": [75, 76], "ignore_non": [75, 76], "at_kei": [75, 76], "ignor": [75, 76, 122, 124, 152, 202, 237, 240, 923, 934, 1078, 1082], "substr": [75, 76], "clip_min": [75, 76], "clip_max": [75, 76], "config": [75, 76, 138, 923, 936], "duplic": [75, 76, 121, 126, 127, 133, 137, 139], "container_rightmost": [75, 76], "common_key_chain": [75, 76, 129], "contains_sub_contain": [75, 76], "match": [75, 76, 129, 273, 279, 282, 395, 588, 591, 634, 684], "contains_sub_structur": [75, 76], "create_if_abs": [75, 76], "inplac": [75, 76, 90, 91, 118, 120, 122, 127, 128, 137, 139, 634, 644, 675, 678, 679, 702, 715, 722, 723, 724, 725, 727, 728, 729, 730, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 1051, 1052, 1078, 1079, 1080, 1081, 1082, 1083], "cutoff_at_depth": [75, 76], "depth_cutoff": [75, 76], "cutoff_at_height": [75, 76], "height_cutoff": [75, 76], "deep_copi": [75, 76, 138], "intern": [75, 76, 121, 124, 128, 129, 131, 132, 345, 715, 752, 923, 924, 933, 934, 1053, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1084, 1085], "belong": [75, 76, 139], "dev_str": [75, 76], "diff_kei": [75, 76], "detect_key_diff": [75, 76], "detect_value_diff": [75, 76], "detect_shape_diff": [75, 76], "treat": [75, 76, 124, 136, 140, 199, 200], "detect": [75, 76, 120, 124, 133, 138, 139, 923, 924, 934], "container0": [75, 76], "axes_length": [75, 76, 634, 656, 657, 658], "rearrang": [75, 76, 634, 656, 658], "reduct": [75, 76, 124, 130, 137, 634, 657, 690, 691, 1029, 1030, 1033, 1035, 1038, 1040], "One": [75, 76, 124, 130, 135, 137, 138, 634, 657, 859, 889, 892, 947, 949, 950], "callabl": [75, 76, 124, 129, 135, 153, 154, 155, 156, 157, 158, 159, 160, 161, 199, 200, 273, 313, 314, 345, 389, 634, 640, 645, 655, 657, 919, 920, 921, 922, 923, 929, 933, 934, 935], "find_sub_contain": [75, 76], "sub_cont_to_find": [75, 76], "exsit": [75, 76], "find_sub_structur": [75, 76], "sub_struc_to_find": [75, 76], "flatten_key_chain": [75, 76, 138, 1074, 1075], "__": [75, 76, 122, 138], "above_height": [75, 76, 138], "below_depth": [75, 76, 138], "format_key_chain": [75, 76], "format_fn": [75, 76], "string": [75, 76, 126, 130, 131, 133, 135, 138, 273, 277, 278, 303, 306, 320, 344, 345, 361, 362, 363, 364, 378, 384, 390, 391, 394, 634, 654], "from_disk_as_hdf5": [75, 76, 138], "h5_obj_or_filepath": [75, 76], "slice_obj": [75, 76], "load": [75, 76, 152], "disk": [75, 76, 138], "h5py": [75, 76], "hdf5": [75, 76, 138, 1074, 1075], "h5": [75, 76], "from_disk_as_json": [75, 76, 138], "json_filepath": [75, 76], "json": [75, 76, 138], "from_disk_as_pickl": [75, 76, 138], "pickle_filepath": [75, 76], "from_flat_list": [75, 76], "flat_list": [75, 76], "hierarchi": [75, 76, 138], "flat": [75, 76, 634, 690, 859, 885, 888], "popul": [75, 76, 124, 130, 131, 135, 947, 948, 996, 1017, 1020, 1025, 1028], "from_numpi": [75, 76, 138], "h5_file_s": [75, 76], "batch": [75, 76, 125, 129, 138, 345, 387, 388, 634, 661, 754, 767, 771, 837, 839, 919, 920, 921, 922, 941, 942, 945, 1076, 1077], "handle_inplac": [75, 76], "prime": [75, 76], "overwritten": [75, 76, 126, 128], "has_kei": [75, 76], "query_kei": [75, 76], "somewher": [75, 76], "has_key_chain": [75, 76], "include_inf": [75, 76, 634, 673, 714], "leafwis": [75, 76], "nan": [75, 76, 119, 121, 124, 201, 273, 279, 282, 395, 396, 399, 401, 404, 405, 408, 409, 412, 414, 417, 418, 421, 423, 426, 427, 430, 459, 462, 463, 466, 468, 471, 485, 488, 489, 492, 493, 496, 509, 512, 517, 520, 529, 532, 533, 536, 541, 544, 545, 548, 567, 570, 584, 587, 588, 591, 592, 595, 601, 604, 606, 609, 611, 614, 624, 628, 629, 630, 633, 634, 673, 714, 754, 770, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "well": [75, 76, 124, 132, 139, 140, 151, 634, 673, 771, 819, 821], "inf": [75, 76, 124, 201, 634, 673, 714, 771, 837, 839], "identical_array_shap": [75, 76], "identical_config": [75, 76], "identical_structur": [75, 76], "if_exist": [75, 76], "key_chains_contain": [75, 76], "sub_str": [75, 76], "join": [75, 76, 859, 865, 868, 903, 906, 1040], "list_stack": [75, 76, 138], "dim": [75, 76, 130, 634, 687, 1062, 1073], "func": [75, 76, 129, 199, 200, 345, 389, 634, 645, 715, 726, 923, 936], "map_cont": [75, 76], "include_self": [75, 76], "possibi": [75, 76], "integ": [75, 76, 124, 129, 130, 137, 202, 203, 204, 225, 273, 315, 318, 326, 329, 332, 335, 395, 396, 399, 435, 438, 439, 442, 443, 446, 447, 450, 451, 454, 455, 458, 459, 462, 493, 496, 497, 500, 561, 564, 584, 587, 588, 591, 592, 595, 630, 633, 771, 802, 834, 836, 837, 839, 859, 898, 947, 949, 950, 957, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "max_depth": [75, 76, 345, 349, 352, 359, 369, 373, 377, 634, 672, 923, 935], "multi_map": [75, 76, 129], "map_nest": [75, 76, 86, 87, 96, 97, 100, 101, 427, 429, 435, 437, 443, 445, 447, 449, 451, 453, 455, 457, 477, 479, 497, 499, 501, 503, 505, 507, 521, 523, 525, 527, 545, 547, 549, 551, 557, 559, 561, 563, 576, 578, 584, 586, 588, 590, 795, 797, 865, 867, 903, 905], "leftmost": [75, 76, 923, 936], "multi_map_in_static_method": [75, 76, 129], "fn_name": [75, 76], "num_arrai": [75, 76, 124], "overwrite_at_key_chain": [75, 76], "overwrit": [75, 76, 132, 135, 345, 389], "target_dict": [75, 76], "return_dict": [75, 76], "prune_empti": [75, 76], "keep_non": [75, 76], "prune_key_chain": [75, 76], "key1": [75, 76, 139], "key2": [75, 76], "key3": [75, 76], "prune_key_from_key_chain": [75, 76], "prune_kei": [75, 76], "prune_keys_from_key_chain": [75, 76], "remove_key_length_limit": [75, 76], "remove_print_limit": [75, 76], "reshape_lik": [75, 76], "leading_shap": [75, 76], "return_cont": [75, 76], "restructur": [75, 76], "keep_orig": [75, 76], "transpos": [75, 76, 137, 140, 345, 376, 754, 756, 758, 760, 771, 806, 808, 812, 814, 1040, 1062, 1064, 1066, 1068], "restructure_key_chain": [75, 76], "keychain_map": [75, 76], "set_at_key_chain": [75, 76], "set_at_kei": [75, 76], "set_framework": [75, 76, 135, 137, 138, 140], "set_ivy_backend": [75, 76], "ivy_backend": [75, 76], "attribut": [75, 76, 121, 129, 130, 136, 137, 138, 139, 273, 308, 311, 313, 314, 315, 318, 345, 385], "show_sub_contain": [75, 76], "sub_cont_or_keychain": [75, 76], "seed_valu": [75, 76, 947, 957], "shuffle_h5_fil": [75, 76], "dataset": [75, 76, 138, 150, 1040], "size_ordered_arrai": [75, 76], "keychain": [75, 76], "smallest": [75, 76, 273, 308, 311, 315, 318, 395, 459, 462], "largest": [75, 76, 151, 273, 308, 311, 315, 318, 771, 822, 824], "slice_kei": [75, 76], "key_slic": [75, 76], "all_depth": [75, 76], "slice_via_kei": [75, 76], "sort_by_kei": [75, 76], "num_or_size_split": [75, 76, 135, 859, 898], "with_remaind": [75, 76, 859, 898], "constitu": [75, 76, 140], "dimension": [75, 76, 202, 203, 204, 217, 218, 237, 240, 771, 777, 779, 780, 782, 795, 798, 803, 805, 809, 811, 812, 814, 834, 836, 837, 839, 859, 898, 959, 960, 961, 962, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "evenli": [75, 76, 202, 203, 204, 231, 232, 234, 235, 859, 898], "store": [75, 76, 121, 126, 128, 129, 135, 137, 138, 139, 202, 268, 272, 634, 661, 715, 752, 771, 831, 833, 859, 898, 1074, 1075], "preserve_typ": [75, 76, 715, 749], "stop": [75, 76, 80, 81, 135, 152, 202, 203, 204, 205, 231, 232, 233, 234, 235, 236, 345, 360, 389, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 749, 919, 920, 921, 922, 1078, 1079, 1080, 1081, 1082, 1083], "structural_diff": [75, 76], "target": [75, 76, 118, 134, 138, 139, 140, 345, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 1040], "to_dict": [75, 76], "to_disk_as_hdf5": [75, 76, 138], "starting_index": [75, 76], "max_batch_s": [75, 76], "later": [75, 76, 124, 634, 645], "to_disk_as_json": [75, 76, 138], "to_disk_as_pickl": [75, 76, 138], "to_flat_list": [75, 76], "to_iter": [75, 76, 129], "leaf_keys_onli": [75, 76], "to_iterator_kei": [75, 76], "to_iterator_valu": [75, 76], "to_json": [75, 76], "to_multi_dev": [75, 76], "multidevcontain": [75, 76, 77], "distributedarrai": [75, 76], "update_backend": [75, 76], "to_raw": [75, 76], "raw": [75, 76, 121], "trim_kei": [75, 76], "max_length": [75, 76], "try_kc": [75, 76], "tri": [75, 76], "arbitrari": [75, 76, 120, 124, 125, 129, 132, 139, 152, 202, 237, 240, 273, 284, 287, 332, 335, 345, 374, 375, 377], "concatten": [75, 76, 345, 374, 375, 376, 377, 389], "dim_siz": [75, 76, 345], "update_config": [75, 76], "global_norm": [75, 76, 88, 89, 647, 648], "vector": [75, 76, 151, 202, 237, 240, 634, 647, 649, 754, 767, 771, 777, 779, 786, 788, 795, 798, 809, 811, 822, 824, 825, 827, 834, 836, 837, 839, 840, 842, 1062, 1072], "with_default_key_color": [75, 76], "with_entries_as_list": [75, 76], "with_ivy_backend": [75, 76], "with_key_length_limit": [75, 76, 138], "with_print_ind": [75, 76, 138], "with_print_limit": [75, 76, 138], "with_print_line_spac": [75, 76], "containerwithcr": [77, 78, 80], "containerwithdatatyp": [77, 78, 82], "containerwithdevic": [77, 78, 84], "containerwithelementwis": [77, 78, 86, 129], "containerwithgener": [77, 78, 88], "containerwithgradi": [77, 78, 90], "containerwithimag": [77, 78, 92], "containerwithlay": [77, 78, 94], "containerwithlinearalgebra": [77, 78, 96], "containerwithloss": [77, 78, 98], "containerwithnorm": [77, 78, 102], "containerwithrandom": [77, 78, 104], "containerwithsearch": [77, 78, 106], "containerwithset": [77, 78, 108], "containerwithsort": [77, 78, 110], "containerwithstatist": [77, 78, 112], "containerwithutil": [77, 78, 114], "static_aco": [77, 78], "static_acosh": [77, 78], "static_arg_info": [77, 78], "static_arg_nam": [77, 78], "static_argmax": [77, 78], "static_argmin": [77, 78], "static_arrai": [77, 78], "static_array_equ": [77, 78], "static_arrays_equ": [77, 78], "static_as_ivy_dev": [77, 78], "static_as_ivy_dtyp": [77, 78], "static_as_native_dev": [77, 78], "static_as_native_dtyp": [77, 78], "static_asin": [77, 78], "static_assert_supports_inplac": [77, 78], "static_atan": [77, 78], "static_atan2": [77, 78], "static_atanh": [77, 78], "static_bitwise_and": [77, 78], "static_bitwise_invert": [77, 78], "static_bitwise_left_shift": [77, 78], "static_bitwise_or": [77, 78], "static_bitwise_right_shift": [77, 78], "static_bitwise_xor": [77, 78], "static_cache_fn": [77, 78], "static_ceil": [77, 78], "static_clear_mem_on_dev": [77, 78], "static_clip_matrix_norm": [77, 78], "static_clip_vector_norm": [77, 78], "static_closest_valid_dtyp": [77, 78], "static_concat": [77, 78], "static_constant_pad": [77, 78], "static_container_typ": [77, 78], "static_conv1d": [77, 78], "static_conv1d_transpos": [77, 78], "static_conv2d": [77, 78], "static_conv2d_transpos": [77, 78], "static_conv3d": [77, 78], "static_conv3d_transpos": [77, 78], "static_copy_arrai": [77, 78], "static_cosh": [77, 78], "static_cross": [77, 78], "static_cumprod": [77, 78], "static_cumsum": [77, 78], "static_current_backend": [77, 78], "static_current_backend_str": [77, 78], "static_default": [77, 78], "static_default_devic": [77, 78], "static_default_dtyp": [77, 78], "static_default_float_dtyp": [77, 78], "static_default_int_dtyp": [77, 78], "static_det": [77, 78], "static_dev": [77, 78], "static_dev_clon": [77, 78], "static_dev_clone_arrai": [77, 78], "static_dev_clone_it": [77, 78], "static_dev_clone_nest": [77, 78], "static_dev_dist": [77, 78], "static_dev_dist_arrai": [77, 78], "static_dev_dist_it": [77, 78], "static_dev_dist_nest": [77, 78], "static_dev_unifi": [77, 78], "static_dev_unify_arrai": [77, 78], "static_dev_unify_it": [77, 78], "static_dev_unify_nest": [77, 78], "static_dev_util": [77, 78], "static_diagon": [77, 78], "static_dropout": [77, 78], "static_dtyp": [77, 78], "static_dtype_bit": [77, 78], "static_eigh": [77, 78], "static_eigvalsh": [77, 78], "static_einops_rearrang": [77, 78], "static_einops_reduc": [77, 78], "static_einops_repeat": [77, 78], "static_einsum": [77, 78], "static_empti": [77, 78], "static_equ": [77, 78], "static_erf": [77, 78], "static_execute_with_gradi": [77, 78], "static_exist": [77, 78], "static_exp": [77, 78], "static_expand_dim": [77, 78], "static_expm1": [77, 78], "static_flip": [77, 78], "static_floor": [77, 78], "static_floor_divid": [77, 78], "static_floormod": [77, 78], "static_fourier_encod": [77, 78], "static_ful": [77, 78], "static_function_supported_dtyp": [77, 78], "static_function_unsupported_dtyp": [77, 78], "static_gath": [77, 78], "static_get_all_arrays_in_memori": [77, 78], "static_get_all_ivy_arrays_on_dev": [77, 78], "static_get_min_bas": [77, 78], "static_get_min_denomin": [77, 78], "static_get_num_dim": [77, 78], "static_get_referrers_recurs": [77, 78], "static_gpu_is_avail": [77, 78], "static_great": [77, 78], "static_greater_equ": [77, 78], "static_handle_nest": [77, 78], "static_handle_out_argu": [77, 78], "static_has_nan": [77, 78], "static_indices_wher": [77, 78], "static_infer_devic": [77, 78], "static_infer_dtyp": [77, 78], "static_inplace_arrays_support": [77, 78], "static_inplace_decr": [77, 78], "static_inplace_incr": [77, 78], "static_inplace_upd": [77, 78], "static_inplace_variables_support": [77, 78], "static_inputs_to_native_arrai": [77, 78], "static_inv": [77, 78], "static_invalid_dtyp": [77, 78], "static_is_arrai": [77, 78], "static_is_ivy_arrai": [77, 78], "static_is_ivy_contain": [77, 78], "static_is_native_arrai": [77, 78], "static_isfinit": [77, 78], "static_isinf": [77, 78], "static_isnan": [77, 78], "static_less": [77, 78], "static_less_equ": [77, 78], "static_linear": [77, 78], "static_log": [77, 78], "static_log10": [77, 78], "static_log1p": [77, 78], "static_log2": [77, 78], "static_logaddexp": [77, 78], "static_logical_and": [77, 78], "static_logical_not": [77, 78], "static_logical_or": [77, 78], "static_logical_xor": [77, 78], "static_lstm_upd": [77, 78], "static_match_kwarg": [77, 78], "static_matmul": [77, 78], "static_matrix_norm": [77, 78], "static_matrix_pow": [77, 78], "static_matrix_rank": [77, 78], "static_matrix_transpos": [77, 78], "static_max": [77, 78], "static_maximum": [77, 78], "static_mean": [77, 78], "static_min": [77, 78], "static_minimum": [77, 78], "static_multi_head_attent": [77, 78], "static_multinomi": [77, 78], "static_multiprocess": [77, 78], "static_neg": [77, 78], "static_nonzero": [77, 78], "static_not_equ": [77, 78], "static_num_arrays_in_memori": [77, 78], "static_num_cpu_cor": [77, 78], "static_num_gpu": [77, 78], "static_num_ivy_arrays_on_dev": [77, 78], "static_one_hot": [77, 78], "static_out": [77, 78], "static_outputs_to_ivy_arrai": [77, 78], "static_percent_used_mem_on_dev": [77, 78], "static_permute_dim": [77, 78], "static_pinv": [77, 78], "static_posit": [77, 78], "static_pow": [77, 78], "static_print_all_arrays_in_memori": [77, 78], "static_print_all_ivy_arrays_on_dev": [77, 78], "static_prod": [77, 78], "static_promote_typ": [77, 78], "static_qr": [77, 78], "static_queue_timeout": [77, 78], "static_random_norm": [77, 78], "static_remaind": [77, 78], "static_repeat": [77, 78], "static_reshap": [77, 78], "static_round": [77, 78], "static_scaled_dot_product_attent": [77, 78], "static_scatter_flat": [77, 78], "static_scatter_nd": [77, 78], "static_se": [77, 78], "static_set_default_devic": [77, 78], "static_set_default_dtyp": [77, 78], "static_set_default_float_dtyp": [77, 78], "static_set_default_int_dtyp": [77, 78], "static_set_min_bas": [77, 78], "static_set_min_denomin": [77, 78], "static_set_queue_timeout": [77, 78], "static_set_shape_array_mod": [77, 78], "static_set_split_factor": [77, 78], "static_set_tmp_dir": [77, 78], "static_set_with_grad": [77, 78], "static_shap": [77, 78], "static_shape_array_mod": [77, 78], "static_shape_to_tupl": [77, 78], "static_shuffl": [77, 78], "static_slogdet": [77, 78], "static_solv": [77, 78], "static_split": [77, 78], "static_split_factor": [77, 78], "static_split_func_cal": [77, 78], "static_sqrt": [77, 78], "static_squar": [77, 78], "static_squeez": [77, 78], "static_stable_divid": [77, 78], "static_stable_pow": [77, 78], "static_stack": [77, 78], "static_std": [77, 78], "static_stop_gradi": [77, 78], "static_sum": [77, 78], "static_supports_inplac": [77, 78], "static_svd": [77, 78], "static_svdv": [77, 78], "static_swapax": [77, 78], "static_tensordot": [77, 78], "static_til": [77, 78], "static_tmp_dir": [77, 78], "static_to_devic": [77, 78], "static_to_list": [77, 78], "static_to_native_arrays_and_back": [77, 78], "static_to_scalar": [77, 78], "static_total_mem_on_dev": [77, 78], "static_tpu_is_avail": [77, 78], "static_trac": [77, 78], "static_trunc": [77, 78], "static_try_else_non": [77, 78], "static_type_promote_arrai": [77, 78], "static_unset_default_devic": [77, 78], "static_unset_default_dtyp": [77, 78], "static_unset_default_float_dtyp": [77, 78], "static_unset_default_int_dtyp": [77, 78], "static_unset_shape_array_mod": [77, 78], "static_unset_with_grad": [77, 78], "static_unstack": [77, 78], "static_used_mem_on_dev": [77, 78], "static_valid_dtyp": [77, 78], "static_value_is_nan": [77, 78], "static_var": [77, 78], "static_vari": [77, 78], "static_variable_data": [77, 78], "static_vecdot": [77, 78], "static_vector_norm": [77, 78], "static_vector_to_skew_symmetric_matrix": [77, 78], "static_wher": [77, 78], "static_with_grad": [77, 78], "static_zero_pad": [77, 78], "at_dev": [77, 79, 345, 358, 359], "static_arang": [80, 81, 203], "static_asarrai": [80, 81, 206], "static_empty_lik": [80, 81, 212], "static_ey": [80, 81, 217], "n_row": [80, 81, 202, 217, 218, 219], "n_col": [80, 81, 202, 217, 218, 219], "static_from_dlpack": [80, 81, 220], "static_full_lik": [80, 81, 226], "static_linspac": [80, 81, 231], "num": [80, 81, 135, 202, 231, 232, 233, 234, 235, 236], "endpoint": [80, 81, 202, 231, 232, 233, 234, 236], "static_logspac": [80, 81, 234], "static_meshgrid": [80, 81, 237], "static_native_arrai": [80, 81, 242], "static_on": [80, 81, 247], "static_ones_lik": [80, 81, 250], "static_tril": [80, 81, 255], "static_triu": [80, 81, 260], "static_zero": [80, 81, 265], "static_zeros_lik": [80, 81, 268], "int32": [82, 83, 88, 89, 124, 130, 202, 268, 272, 273, 294, 296, 297, 298, 303, 306, 326, 329, 634, 705, 706, 708, 709, 859, 873, 876, 996, 1013, 1016, 1021, 1024], "int64": [82, 83, 124, 130, 273, 294, 296, 297, 298, 344, 395, 451, 454, 959, 960, 961, 996, 1013, 1016, 1021, 1024], "static_astyp": [82, 83, 279], "static_broadcast_arrai": [82, 83, 284], "static_broadcast_to": [82, 83, 289], "static_can_cast": [82, 83, 294], "from_": [82, 83, 273, 294, 297, 298], "static_finfo": [82, 83, 308], "static_iinfo": [82, 83, 315], "static_is_float_dtyp": [82, 83, 321], "dtype_in": [82, 83, 273, 277, 278, 307, 320, 321, 324, 325, 326, 329, 330, 344], "static_is_int_dtyp": [82, 83, 326], "static_result_typ": [82, 83, 332], "02": [86, 87, 418, 420, 715, 717, 720], "21": [86, 87, 395, 418, 420, 455, 458, 634, 652, 771, 783, 785, 809, 811, 843, 854, 857, 996, 997, 1000], "61": [86, 87, 98, 99, 395, 418, 420, 615, 618, 754, 761, 764, 843, 844, 846, 847, 848, 854, 856, 858], "96": [86, 87, 194, 195, 395, 463, 465, 466, 467, 624, 628, 715, 717, 720, 771, 809, 811, 996, 997, 1000], "757": [86, 87, 395, 601, 603, 604, 605], "959": [86, 87, 395, 601, 603, 604, 605], "279": [86, 87, 395, 601, 603, 604, 605], "76": [86, 87, 194, 195, 395, 468, 471, 606, 608, 610, 715, 717, 720, 771, 828, 830, 996, 997, 1000], "37": [86, 87, 104, 105, 395, 418, 421, 422, 606, 608, 610, 624, 628, 949, 951], "835": [86, 87, 606, 608, 610], "34": [86, 87, 395, 455, 458, 606, 608, 610, 611, 614], "98": [86, 87, 395, 455, 458, 606, 608, 610, 771, 809, 811, 959, 963, 996, 997, 1000], "347": [86, 87, 606, 608, 610], "721": [86, 87, 606, 608, 610], "static_ab": [86, 87, 396], "static_add": [86, 87, 121, 122, 129, 409], "static_asinh": [86, 87, 418], "97": [86, 87, 395, 418, 421, 422], "75": [86, 87, 395, 418, 421, 422, 771, 792, 794, 809, 811], "static_co": [86, 87, 463], "static_divid": [86, 87, 129, 472], "static_multipli": [86, 87, 129, 567], "static_sign": [86, 87, 596], "static_sin": [86, 87, 601], "static_sinh": [86, 87, 606], "static_subtract": [86, 87, 129, 619], "static_tan": [86, 87, 122, 129, 624], "143": [86, 87, 122, 395, 624, 625, 627, 628], "38": [86, 87, 122, 395, 624, 625, 627, 628], "995": [86, 87, 194, 195, 197, 395, 629], "9999": [86, 87, 194, 195], "static_all_equ": [88, 89, 635, 637], "max_norm": [88, 89, 634, 646, 647, 648, 649], "static_gather_nd": [88, 89, 663], "static_to_numpi": [88, 89, 705, 708], "lr": [90, 91, 138, 139, 715, 722, 723, 724, 725, 727, 728, 729, 730, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 1078, 1079, 1080, 1081, 1082, 1083], "mw_tm1": [90, 91, 715, 722, 723, 724, 725, 736, 737, 738, 739], "vw_tm1": [90, 91, 715, 722, 723, 724, 725, 736, 737, 738, 739], "max_trust_ratio": [90, 91, 715, 736, 737, 738, 739, 1078, 1080], "decay_lambda": [90, 91, 715, 736, 737, 738, 739, 740, 741, 742, 743, 1078, 1080, 1081], "effective_grad": [90, 91, 715, 744, 745, 746, 747], "static_adam_step": [90, 91, 717], "87": [90, 91, 104, 105, 715, 717, 720, 721, 949, 951], "976": [90, 91, 395, 629, 715, 717, 720, 721], "static_adam_upd": [90, 91, 722], "static_gradient_descent_upd": [90, 91, 727], "static_is_vari": [90, 91, 731], "static_lamb_upd": [90, 91, 736], "static_lars_upd": [90, 91, 740], "static_optimizer_upd": [90, 91, 744], "inp": [94, 95, 754, 761, 763, 764, 765], "static_depthwise_conv2d": [94, 95, 761], "73": [96, 97, 124, 395, 611, 614, 771, 772, 774, 775, 776, 941, 942, 945], "577": [96, 97, 771, 772, 774, 775, 776], "41": [96, 97, 137, 395, 455, 458, 611, 614, 771, 772, 774, 775, 776, 996, 1021, 1024], "707": [96, 97, 771, 772, 774, 775, 776], "static_choleski": [96, 97, 772], "static_rol": [96, 97, 100, 101, 122, 129, 772, 776, 860, 864, 893], "511": [98, 99, 843, 844, 846, 847, 848, 854, 856, 858], "5108256": [98, 99, 849, 851], "609438": [98, 99, 849, 851], "static_binary_cross_entropi": [98, 99, 844], "static_cross_entropi": [98, 99, 849], "20397282": [98, 99, 849, 853], "83258148": [98, 99, 849, 853], "60943794": [98, 99, 849, 853], "static_sparse_cross_entropi": [98, 99, 854], "static_clip": [100, 101, 860], "658": [102, 103, 941, 942, 944, 945, 946], "04": [102, 103, 754, 770, 941, 942, 944, 945, 946], "759": [102, 103, 941, 942, 944, 945, 946], "403": [102, 103, 942, 944, 946], "62": [102, 103, 104, 105, 395, 606, 609, 942, 944, 946, 949, 951], "static_layer_norm": [102, 103, 942], "static_randint": [104, 105, 949], "20": [104, 105, 137, 395, 455, 458, 485, 488, 592, 595, 611, 614, 771, 783, 785, 809, 811, 828, 830, 947, 949, 950, 951, 959, 962, 963, 996, 997, 1000], "40": [104, 105, 395, 468, 471, 611, 614, 771, 809, 811, 949, 951, 996, 997, 1000], "52": [104, 105, 715, 717, 720, 771, 809, 811, 949, 951, 964, 965, 969, 996, 997, 1000], "95": [104, 105, 395, 596, 599, 715, 717, 720, 949, 951], "13": [104, 105, 122, 124, 129, 395, 435, 438, 455, 458, 468, 471, 611, 614, 634, 652, 715, 717, 720, 754, 770, 771, 783, 785, 809, 811, 949, 951, 959, 963, 964, 965, 969, 996, 997, 1000], "static_random_uniform": [104, 105, 953], "static_unique_al": [108, 109, 965], "static_unique_count": [108, 109, 970], "classivi": [108, 109, 859, 898, 964, 970, 971, 973, 974], "static_unique_invers": [108, 109, 975], "static_unique_valu": [108, 109, 980], "static_argsort": [110, 111, 986], "static_sort": [110, 111, 991], "static_al": [114, 115, 1030], "static_ani": [114, 115, 1035], "add_ivy_container_instance_method": 116, "containerexampl": [116, 117], "who": [118, 134, 152], "mainli": [118, 136, 138], "under": [118, 121, 122, 123, 124, 125, 129, 134, 135, 138, 140], "hood": [118, 122, 124, 125, 129, 134, 135, 138, 140], "weed": [118, 134], "behind": [118, 124, 134, 136, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746], "tour": 118, "primari": [118, 124, 126, 132, 152], "composit": [118, 124, 126, 128, 129, 132, 135, 139, 140, 152], "nestabl": [118, 121, 122, 124, 132, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 395, 396, 399, 409, 412, 414, 417, 418, 421, 459, 462, 493, 496, 565, 576, 579, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 634, 662, 754, 757, 761, 764, 770, 771, 772, 775, 783, 785, 859, 893, 896, 941, 942, 945, 964, 970, 974, 996, 1001, 1004, 1029, 1030, 1033], "dynam": [118, 130, 131, 132, 135, 199, 200], "runtim": [118, 124, 345], "j": [118, 634, 642, 643, 771, 831, 833, 996, 997, 1000], "borrow": 118, "taken": [119, 133, 140, 771, 783, 785], "constant": [119, 125, 139, 140, 152, 345, 354, 355, 859, 869, 872, 923, 929, 941, 942, 945, 1053, 1054, 1058, 1061, 1074, 1075, 1076, 1077], "compil": [119, 129, 134, 136, 152, 1040, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083], "meta": [119, 128, 920, 921, 922], "overlap": 119, "sever": [119, 152, 771, 792, 794], "judgement": 119, "locat": [119, 124, 126, 131, 947, 948], "some_namespac": 119, "some_backend": 119, "another_backend": 119, "break": [119, 120, 133, 137, 152, 1040], "anyth": [119, 124, 1040], "refactor": 119, "ongo": 119, "subfold": [119, 124], "file_nam": [119, 124], "my_func": [119, 122], "my": 119, "cooler": 119, "produc": [119, 124, 345, 354, 355, 754, 770], "something_cool": 119, "category_nam": [120, 121, 125, 130, 131], "backend_nam": [120, 121, 125, 126, 127, 130, 131], "adress": 120, "conveni": [120, 130, 131, 136, 138, 139], "revisit": [120, 140], "dedic": [120, 137, 139, 715, 752, 1051, 1052], "four": [120, 122, 125, 130, 138], "tf": [120, 128, 130, 131, 132, 135, 140, 152, 1040], "jnp": [120, 130, 131, 132, 140, 1040], "jaxarrai": [120, 130, 131, 132], "wherea": [120, 122, 124, 125, 128, 130, 131, 140], "__sub__": [120, 122, 128, 129, 137], "__mul__": [120, 122, 128, 129, 137], "__div__": 120, "permit": [120, 124, 128], "dicat": 120, "addition": [120, 132], "omit": [120, 132, 964, 965, 969, 970, 974, 980, 984], "wrapper": [120, 127, 128, 129, 130, 132, 137], "contrast": [120, 121], "futher": 120, "absenc": 120, "pep": 120, "484": 120, "annot": [120, 133], "dictat": [120, 122, 128, 132], "brittl": 120, "intend": [120, 996, 1021, 1024], "subset": [120, 121, 124, 135], "freeli": 120, "consum": [120, 124, 129, 345], "inde": [120, 152], "flexibl": 120, "technic": [120, 129, 132, 152], "original_typ": 120, "cumbersom": 120, "readabl": [120, 128, 129, 137, 138], "account": 121, "instanti": 121, "firstli": [121, 122, 125, 128, 130, 132, 138], "templat": [121, 124, 1040], "spec": [121, 122], "api_specif": [121, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 414, 417, 418, 421, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 601, 604, 611, 614, 615, 618, 771, 783, 785, 859, 873, 876, 893, 896, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004], "array_api": 121, "preview": 121, "render": 121, "incorrectli": [121, 133], "onlin": [121, 1040], "domain": [121, 395, 401, 404, 405, 408, 414, 417, 418, 421, 423, 426, 427, 430, 463, 466, 468, 471, 485, 488, 489, 492, 529, 532, 533, 536, 541, 544, 601, 604, 606, 609, 611, 614, 624, 628, 629], "infin": [121, 201, 273, 279, 282, 395, 396, 399, 405, 408, 409, 412, 418, 421, 423, 426, 427, 430, 459, 462, 463, 466, 468, 471, 485, 488, 489, 492, 493, 496, 497, 500, 509, 512, 513, 516, 529, 532, 533, 536, 541, 544, 545, 548, 567, 570, 584, 587, 588, 591, 592, 595, 601, 604, 606, 609, 611, 614, 624, 628, 629, 630, 633, 771, 837, 839, 996, 1001, 1004, 1009, 1012, 1029, 1030, 1033, 1035, 1038], "codomain": [121, 395, 401, 404, 405, 408, 414, 417, 418, 421, 423, 426, 427, 430, 463, 466, 468, 471, 485, 488, 489, 492, 529, 532, 533, 536, 541, 544, 601, 604, 606, 609, 611, 614, 624, 628, 629], "x_i": [121, 395, 396, 399, 401, 404, 405, 408, 414, 417, 418, 421, 423, 426, 439, 442, 459, 462, 463, 466, 468, 471, 485, 488, 489, 492, 493, 496, 509, 512, 513, 516, 517, 520, 529, 532, 533, 536, 541, 544, 553, 556, 572, 575, 592, 595, 596, 599, 601, 604, 606, 609, 611, 614, 615, 618, 624, 628, 629, 630, 633, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1017, 1020, 1021, 1024, 1025, 1028], "assum": [121, 124, 126, 130, 137, 138, 152, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 463, 466, 468, 471, 493, 496, 565, 576, 579, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 634, 662, 754, 757, 761, 764, 770, 771, 772, 775, 780, 782, 783, 785, 859, 873, 876, 877, 880, 893, 896, 941, 942, 945, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1029, 1030, 1033], "operand": [121, 395, 401, 404, 405, 408, 409, 412, 414, 417, 418, 421, 423, 426, 427, 430, 455, 458, 459, 462, 463, 466, 468, 471, 485, 488, 489, 492, 493, 496, 529, 532, 533, 536, 541, 544, 545, 548, 567, 570, 584, 587, 588, 591, 592, 595, 601, 604, 606, 609, 611, 614, 624, 628, 629, 630, 633, 996, 997, 1000, 1001, 1004, 1009, 1012, 1021, 1024], "ref": [121, 395, 451, 454, 521, 524, 567, 570, 576, 579, 588, 591, 619, 623, 859, 903, 906], "But": [121, 129, 140], "needless": 121, "info": [121, 1040], "renam": 121, "conform": [121, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 489, 492, 493, 496, 525, 528, 565, 576, 579, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 771, 780, 782, 783, 785, 859, 873, 876, 877, 880, 893, 896, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1029, 1030, 1033], "org": [121, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 395, 396, 399, 414, 417, 418, 421, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 601, 604, 611, 614, 615, 618, 715, 717, 720, 722, 724, 771, 783, 785, 859, 873, 876, 893, 896, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004], "elementwise_funct": [121, 395, 396, 399, 414, 417, 418, 421, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 601, 604, 611, 614, 615, 618, 771, 783, 785, 859, 893, 896, 964, 965, 969, 985, 986, 989, 996, 1001, 1004], "descript": [121, 124, 129, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 634, 662, 754, 757, 761, 764, 770, 771, 772, 775, 780, 782, 783, 785, 837, 839, 859, 873, 876, 877, 880, 893, 896, 941, 942, 945, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004, 1029, 1030, 1033], "simplic": [121, 139, 151, 202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 234, 235, 237, 240, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272, 273, 294, 297, 326, 329, 395, 396, 399, 409, 412, 414, 417, 418, 421, 435, 438, 455, 458, 459, 462, 468, 471, 493, 496, 565, 576, 579, 592, 595, 596, 599, 601, 604, 611, 614, 615, 618, 624, 628, 629, 634, 662, 754, 757, 761, 764, 770, 771, 772, 775, 780, 782, 783, 785, 859, 873, 876, 877, 880, 893, 896, 941, 942, 945, 964, 965, 969, 970, 974, 985, 986, 989, 996, 1001, 1004], "judgment": 121, "beyond": [121, 859, 893, 896], "text": 121, "func_nam": [121, 122, 125], "pure": [121, 137, 140, 152], "themselv": [121, 125, 129, 130, 131, 139, 923, 924], "operator_nam": 121, "succinct": 121, "contstructor": 121, "though": [121, 125, 130, 138, 152], "forward": [121, 124, 140, 151, 152, 1074, 1075, 1078, 1082], "_forward": [121, 135, 138, 139, 1040], "former": 121, "explicitli": [121, 125, 126, 128, 129, 132, 135, 152, 771, 786, 788, 1062, 1071, 1073, 1074, 1075], "latter": [121, 126], "implicit": [121, 124, 129, 135], "docst": 121, "eight": 122, "static_": 122, "op_nam": 122, "__r": 122, "__truediv__": [122, 128, 129], "recap": [122, 129, 139], "independ": [122, 123, 127, 129, 135, 140, 771, 777, 779, 819, 821, 947, 948], "combinatorili": 122, "variat": [122, 124], "grid": [122, 124, 151, 202, 237, 240], "vari": [122, 124, 129, 137, 964, 965, 969, 970, 974, 980, 984], "simplest": [122, 124], "small": [122, 125, 135, 139, 152, 395, 567, 570, 771, 803, 805, 812, 814, 941, 942, 945, 1076, 1077], "unus": [122, 132, 133, 199, 200], "excess": [122, 126, 137], "okai": [122, 135], "showcas": [122, 151], "demonstr": [122, 137], "replic": [122, 130], "meant": 122, "imaginari": 122, "some_flag": 122, "another_flag": 122, "jointli": 122, "three": [122, 124, 129, 134, 202, 237, 240, 1040], "x0": [122, 634, 642], "procedur": 122, "sens": [122, 129, 137], "5574077": 122, "1850398": 122, "5463025": 122, "8422884": 122, "91601413": 122, "9647598": 122, "3738229": 122, "1597457": 122, "0963247": 122, "9955841": 122, "3278579": 122, "multi": [122, 129, 134, 152, 754, 769, 771, 777, 779, 1040, 1046, 1062, 1073], "seper": [122, 634, 661], "pars": [122, 152], "satisfi": [122, 771, 840, 842], "far": [122, 131, 136, 137, 923, 924, 934], "asid": [122, 151], "irrelev": [122, 130], "increasingli": 122, "complex": [122, 138, 139, 140, 152, 771, 786, 788, 822, 824], "14254655": 122, "1578213": 122, "380515": 122, "trivial": 122, "By": [122, 125, 129, 132, 139, 140, 634, 652, 653, 771, 834, 836, 859, 885, 888, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "non": [122, 129, 130, 135, 199, 200, 273, 279, 282, 320, 395, 553, 556, 557, 560, 754, 757, 771, 780, 782, 803, 805, 822, 824, 828, 830, 834, 836, 837, 839, 959, 960, 961, 962, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1025, 1028, 1029, 1030, 1033, 1035, 1038, 1074, 1075, 1078, 1082], "exlud": 122, "unit": [123, 124, 152, 163, 164, 167, 169, 172, 174, 177, 345], "thoroughli": 123, "ci": [123, 124, 152], "failur": 123, "On": [124, 133, 136, 140], "fixtur": 124, "300": [124, 395, 592, 595], "hit": [124, 135], "action": 124, "eleg": 124, "intellig": 124, "sampl": [124, 754, 766, 947, 948, 952, 953, 955, 996, 1017, 1020, 1025, 1028, 1062, 1070], "rang": [124, 138, 139, 140, 202, 203, 204, 231, 232, 234, 235, 964, 965, 969, 996, 1013, 1016, 1021, 1024, 1040], "unexplor": 124, "known": 124, "repeatedli": [124, 129, 923, 932], "upload": 124, "artifact": 124, "parametr": 124, "statement": [124, 133, 152], "plai": [124, 140], "varieti": [124, 130, 131], "wide": 124, "valid_int_dtyp": 124, "int8": [124, 130, 273, 326, 329, 344], "int16": [124, 130, 273, 294, 297, 326, 329, 996, 1013, 1016, 1021, 1024], "uint8": [124, 130, 273, 294, 297, 344], "uint16": [124, 130, 273, 314, 996, 1013, 1016, 1021, 1024], "uint32": [124, 130, 273, 314, 996, 1013, 1016, 1021, 1024], "uint64": [124, 130, 273, 314, 326, 329, 996, 1013, 1016, 1021, 1024], "custom_strategi": 124, "st": 124, "sampled_from": 124, "min_siz": 124, "max_siz": 124, "wherein": 124, "referenc": 124, "print_hypothesis_exampl": 124, "searchstrategi": 124, "randomis": 124, "simplist": 124, "intricaci": 124, "briefli": [124, 125, 138], "bound": [124, 135], "mechan": [124, 150, 152, 1040], "power": [124, 137, 138, 139, 395, 451, 454, 485, 488, 584, 587, 634, 669, 692, 701, 771, 802, 1053], "math": [124, 132, 140, 1040], "inclus": [124, 132, 202, 203, 204, 947, 949, 950], "width": 124, "losslessli": 124, "mostli": 124, "drawn": [124, 947, 948, 949, 950, 952, 953, 955], "one_of": 124, "datum": 124, "pipe": 124, "overload": 124, "shorthand": 124, "draw": [124, 947, 948, 952, 953, 955], "input_dtyp": 124, "reject": 124, "flatmap": 124, "suppos": 124, "dataobject": 124, "test_argsort": 124, "decor": [124, 125, 127, 129, 130, 131, 132], "initialis": [124, 345], "snippet": 124, "dtype_and_x": 124, "dtype_and_valu": 124, "valid_float_dtyp": 124, "list_of_length": 124, "num_positional_arg": 124, "instance_method": 124, "test_leaky_relu": 124, "float16": [124, 130, 273, 314, 344], "exhaust": 124, "num_posit": 124, "indirectli": 124, "advis": 124, "seri": 124, "9433925": 124, "401298464324817e": 124, "574352379": 124, "99999": 124, "2250738585072014e": 124, "308": 124, "103515625e": 124, "unpack": [124, 133, 634, 713], "seamlessli": 124, "edg": [124, 135, 140, 859, 860, 863, 869, 872, 915, 918, 1040], "encount": 124, "criterion": 124, "straight": [124, 137, 1040], "array_valu": 124, "valid_ax": 124, "hand": [124, 125, 133, 152], "craft": 124, "polici": [124, 151], "hoc": 124, "overview": [124, 134, 151], "array_dtyp": 124, "array_bool": 124, "na": 124, "test_concat": 124, "test_devic": 124, "array_shap": 124, "test_manipul": 124, "common_shap": 124, "test_lay": 124, "size_bound": 124, "precis": [124, 273, 308, 311, 395, 567, 570, 611, 614], "283405296074752": 124, "564049465049088": 124, "0417876997507982e": 124, "min_valu": 124, "max_valu": 124, "allow_inf": 124, "min_num_dim": 124, "wherev": 124, "reshape_shap": 124, "stand": 124, "alon": [124, 345, 384, 394], "fashion": 124, "some_sequ": 124, "06": [124, 715, 717, 720], "allow_subnorm": 124, "exclude_min": 124, "960464477539063e": 124, "08": [124, 395, 418, 421, 754, 770], "coverag": 124, "allow_nan": 124, "Such": 124, "kind": [124, 152, 273, 308, 311, 315, 318, 395, 584, 587, 996, 1013, 1016, 1021, 1024], "get_shap": 124, "allow_non": 124, "max_num_dim": 124, "min_dim_s": 124, "none_or_list_of_float": 124, "200": 124, "199": [124, 395, 418, 421], "99999999999997": 124, "000000000000002": 124, "125": 124, "43759670925832": 124, "get_mean_std": 124, "probabilist": 124, "811428143185347e": 124, "89": [124, 395, 455, 458, 771, 828, 830, 996, 1021, 1024], "none_or_list_float": 124, "get_bound": 124, "arrays_valu": 124, "put": [124, 152], "36418": 124, "213": 124, "21716926": 124, "get_prob": 124, "unnorm": [124, 947, 948], "099609375": 124, "get_axi": 124, "number_positional_argu": 124, "mind": [124, 128, 129], "bodi": 124, "test_valu": 124, "logic": [124, 127, 128, 130, 131, 137, 345, 381, 395, 549, 552, 553, 556, 557, 560, 1029, 1030, 1033, 1035, 1038, 1040], "enough": [124, 137, 138, 139], "autom": [124, 1040], "report": 124, "test_demo": 124, "falsifi": 124, "failing_test": 124, "traceback": 124, "123": [124, 634, 659], "assertionerror": [124, 715, 753], "shrink": 124, "prescrib": 124, "behavior": [124, 135, 152, 395, 584, 587, 588, 591, 964, 965, 969, 970, 974, 980, 984], "identifi": 124, "closest": [124, 273, 299, 395, 459, 462, 493, 496, 497, 500, 592, 595, 630, 633], "checkout": 124, "scratch": 124, "databas": 124, "therebi": 124, "debug": [124, 129, 138], "event": [124, 1040], "test_gelu": 124, "test_fil": 124, "brief": 124, "phase": [124, 152], "reus": 124, "notabl": 124, "displai": [124, 129, 138], "verbos": [124, 135, 1040, 1088], "newer": 124, "max_exampl": 124, "impact": [124, 139], "deadlin": 124, "weird": 124, "verifi": [124, 130, 131, 137, 1040, 1046], "truth": [124, 395, 477, 480, 501, 504, 505, 508, 521, 524, 525, 528, 576, 579], "opt": [124, 126, 132, 137], "defer": [124, 125, 128, 129, 130, 131, 132], "suffic": [124, 127], "catch": [124, 634, 655], "systemat": 124, "safeguard": 124, "inabl": 124, "fact": [124, 138], "categor": [125, 131], "mutual": [125, 129], "constitut": [125, 135, 996, 1017, 1020, 1025, 1028], "venn": 125, "diagram": 125, "light": [125, 152], "log_pr": [125, 129, 132], "array_arg": 125, "typic": 125, "whatsoev": [125, 129], "commonli": [125, 996, 1017, 1020, 1025, 1028], "outsid": [125, 131, 133, 135, 137, 140, 859, 860, 863, 903, 906], "denomin": [125, 152, 634, 660, 670, 693, 700, 701, 941, 942, 945, 1076, 1077], "deal": [125, 152], "concurr": [125, 129], "modif": 125, "group": [125, 129], "get_all_arrays_on_dev": 125, "nested_map": [125, 923], "index_nest": [125, 923], "implicit_backend": 126, "unless": [126, 131, 132, 152, 395, 567, 570, 634, 687], "__dict__": [126, 135, 137], "ivy_original_dict": [126, 135], "unmodifi": [126, 130], "fallback": 126, "freedom": [126, 996, 1017, 1020, 1025, 1028], "recommend": [126, 395, 553, 556, 557, 560, 588, 591, 996, 1005, 1008], "achiev": [127, 133, 138, 140], "topic": [127, 137], "_data": [128, 137], "organiz": [128, 129], "bear": [128, 129, 130], "necessarili": [128, 129], "although": [128, 129], "underpin": [128, 129, 135], "programmat": [128, 129], "backup": [128, 129], "accident": [128, 129], "absent": [128, 129], "perk": [128, 129], "auto": [128, 129, 138], "throw": [128, 137], "imposs": 128, "coupl": [128, 129, 137, 139], "anywai": 128, "secondli": [128, 130], "easier": 128, "five": [129, 138], "decis": [129, 135, 137], "arbitrarili": [129, 138], "__repr__": 129, "control": [129, 130, 132, 137, 138, 151], "__getattr__": 129, "underli": [129, 395, 435, 438, 447, 450, 455, 458, 561, 564], "__contains__": 129, "__getstate__": 129, "__setstate__": 129, "unpickl": 129, "expand": [129, 634, 661, 859, 873, 876], "children": 129, "shallowest": 129, "deepest": 129, "22": [129, 395, 455, 458, 771, 783, 785, 809, 811, 959, 963, 996, 997, 1000], "retain_grad": [129, 715, 726], "dy": [129, 715, 726], "dx": [129, 715, 726], "autograd": [129, 152], "grad": [129, 138, 139, 140, 1040, 1078, 1082], "redund": 129, "num_head": [129, 754, 769, 1062, 1073], "mask": [129, 754, 769, 770], "to_q_fn": [129, 754, 769], "to_kv_fn": [129, 754, 769], "to_out_fn": [129, 132, 754, 769], "to_q_v": [129, 754, 769], "to_kv_v": [129, 754, 769], "to_out_v": [129, 754, 769], "measur": [129, 754, 769, 1062, 1073], "dot": [129, 754, 769, 770, 771, 828, 830, 834, 836, 1062, 1073], "implicitli": 129, "intuit": [129, 138, 139], "chronolog": 129, "had": [129, 132], "sequenti": [129, 139], "flow": [129, 151], "implic": 129, "slightli": [129, 135, 139], "eager": [129, 152], "bfloat16": 130, "all_dtyp": 130, "all_numeric_dtyp": 130, "all_int_dtyp": 130, "all_float_dtyp": 130, "fall": [130, 134, 1040, 1074, 1075, 1078, 1082], "invalid": [130, 133, 771, 834, 836, 1029, 1030, 1033, 1035, 1038], "thirdli": 130, "native_float32": [130, 273, 344], "importantli": [130, 137, 140, 151], "arguabl": [130, 131], "compound": 130, "overflow": [130, 395, 409, 412, 996, 1021, 1024], "arr": [130, 131], "settabl": [130, 131], "mx": [130, 131, 132, 1040], "nd": [130, 131, 132, 135, 140, 1040], "deleg": 130, "idx": [131, 137, 634, 640], "tpu": [131, 345, 367, 392], "aliv": [131, 345, 379, 383, 385, 634, 668, 686, 688], "dual": 131, "thrown": [131, 152, 634, 678], "rare": [131, 152], "program": 132, "strictli": 132, "ration": 132, "speak": 132, "subtli": 132, "ensure_in_backend": [132, 634, 678], "x_nativ": 132, "val_n": 132, "assign": [132, 133, 137], "elif": 132, "irrespect": [132, 137, 273, 279, 282], "unspecifi": [132, 395, 584, 587, 588, 591, 771, 786, 788, 859, 903, 906], "predominantli": [132, 151], "presenc": 132, "altern": [132, 138], "_wrap_fn": 132, "maxim": [132, 135], "inner": [132, 137, 771, 786, 788, 795, 798, 919, 920, 921, 922], "third": [132, 152, 771, 822, 824, 964, 965, 969], "leverag": 132, "equival": [132, 138, 140, 202, 203, 204, 395, 451, 454, 553, 556, 557, 560, 588, 591, 771, 803, 805, 812, 814, 819, 821, 837, 839], "input_arrai": 132, "clean": [133, 135, 136, 138], "flake8": 133, "undefin": 133, "yield": [133, 959, 963], "handler": [133, 134, 136, 140, 1040], "liter": [133, 771, 837, 839], "carri": 133, "star": 133, "notimplementederror": 133, "unsuccess": 133, "exce": [133, 395, 566], "black": 133, "disobei": 133, "successfulli": 133, "accordingli": [133, 202, 237, 240, 395, 489, 492, 771, 837, 839, 959, 961, 964, 965, 969, 970, 974, 980, 984, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "comparison": 133, "sound": 134, "higher": [134, 135, 140, 152, 715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746], "fledg": [135, 136], "syntact": [135, 140], "clip_by_valu": [135, 140], "clamp": [135, 140], "fit": [135, 859, 885, 888], "construct": [135, 136, 139, 140, 859, 911, 914, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], "power_seq": 135, "resid": [135, 139], "ml_framework": [135, 140, 202, 203, 204], "current_framework": [135, 140], "furthermor": 135, "concaten": [135, 138, 345, 374, 634, 661, 859, 865, 868, 1040], "framework_handl": 135, "face": 135, "cprint": [135, 1087], "framework_stack": 135, "_determine_framework_from_arg": 135, "valueerror": [135, 859, 899, 902], "get_framework": 135, "neither": [135, 395, 409, 412, 567, 570, 715, 753], "illustr": [135, 151], "un": [135, 273, 320], "nn": [135, 140, 202, 237, 240, 1040], "init_h": [135, 754, 768], "init_c": [135, 754, 768], "kernel": [135, 152, 754, 768], "recurrent_kernel": [135, 754, 768], "bia": [135, 139, 754, 767, 768, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072], "recurrent_bia": [135, 754, 768], "x_shape": 135, "batch_shap": [135, 137, 140, 634, 687, 754, 768, 769, 770, 771, 840, 842, 947, 948, 1062, 1071], "timestep": [135, 754, 768, 1062, 1071], "input_channel": [135, 139, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1071, 1072], "x_flat": 135, "wi": 135, "wi_x": 135, "wii_x": 135, "wif_x": 135, "wig_x": 135, "wio_x": 135, "recurr": [135, 754, 768], "wh": 135, "lstm": [135, 754, 768, 1062], "ht": 135, "ct": 135, "hts_list": 135, "unrol": [135, 138, 754, 768], "wii_xt": 135, "wif_xt": 135, "wig_xt": 135, "wio_xt": 135, "zip": 135, "htm1": 135, "ctm1": 135, "wh_htm1": 135, "whi_htm1": 135, "whf_htm1": 135, "whg_htm1": 135, "who_htm1": 135, "ft": 135, "gt": 135, "ot": 135, "offici": 135, "reliabl": 135, "sacrific": 135, "hear": 135, "virtu": 135, "pure_ivi": 135, "reduce_mean": [135, 138, 139, 140, 1040], "reduce_sum": [135, 1040], "reduce_var": 135, "compile_graph": [135, 140], "pure_torch": 135, "cat": [135, 140], "backbon": [135, 138], "_layer": 135, "super": [135, 138, 139, 140], "random_unifrom": 135, "unclean": 135, "wx": 135, "temp": 135, "torchscript": 135, "fn": [135, 137, 153, 154, 155, 156, 157, 158, 159, 160, 161, 273, 313, 314, 345, 354, 355, 634, 640, 711, 923, 924, 929, 930, 931, 933, 934, 935, 1043, 1045], "example_input": [135, 199, 200], "static_argnum": [135, 199, 200], "static_argnam": [135, 199, 200], "jit": [135, 152], "frontend": 136, "primit": [136, 152], "hierarch": [136, 138, 139], "arraywithlinalg": 137, "arraywithlog": 137, "arraywithmath": 137, "arraywithmeta": 137, "arraywithreduct": 137, "_shape": 137, "_size": 137, "functool": 137, "mul": 137, "_dtype": 137, "_devic": 137, "_dev_str": 137, "_pre_repr": 137, "_post_repr": 137, "answer": [137, 152], "consol": 137, "typeerror": 137, "immut": 137, "behav": 137, "claim": 137, "truli": 137, "_native_wrapp": 137, "attributeerror": 137, "genuin": 137, "some_method": 137, "similarli": [137, 202, 237, 240], "rewritten": 137, "__pow__": 137, "strang": 137, "enforc": 137, "notic": 137, "appear": [137, 859, 873, 876], "_wrap_method": 137, "func_wrapp": [137, 153, 154, 155, 156, 157, 158, 159, 160, 161], "__name__": 137, "non_wrapped_method": 137, "_method_wrap": 137, "native_arg": 137, "native_kwarg": 137, "inner_fn": 137, "whist": 137, "unwrap": 137, "transit": 137, "needlessli": 137, "randn": 137, "_unwrap_method": 137, "method_wrap": 137, "compartment": 137, "public": [137, 634, 650], "newshap": 137, "new_shap": 137, "tidi": 137, "shorter": 137, "crystal": 137, "ton": 138, "ado": [138, 139], "incred": [138, 152], "hash": 138, "soup": 138, "walk": [138, 139], "dct": 138, "cnt": 138, "combo": [138, 1040, 1046], "hold": [138, 634, 690, 691], "1000": [138, 395, 611, 614], "uda": 138, "3333": 138, "6667": 138, "178": 138, "new_weight": 138, "0600": 138, "3100": 138, "2400": 138, "6900": 138, "delimit": 138, "autocomplet": 138, "midwai": 138, "agent": 138, "total_spe": 138, "total_height": 138, "total_width": 138, "ag": 138, "tot": 138, "total_": 138, "total_h": 138, "dir": 138, "cnt0": 138, "cnt1": 138, "diff_0": 138, "diff_1": 138, "config0": 138, "config1": 138, "Not": [138, 139, 152, 201], "decod": 138, "l0": 138, "l1": [138, 771, 837, 839], "depth": [138, 139, 140, 151, 345, 369, 373, 377, 634, 672, 687, 923, 935, 1074, 1075], "clearer": 138, "truncat": 138, "decoder__l0": 138, "decoder__l1": 138, "encoder__l0": 138, "encoder__l1": 138, "height": 138, "l0__b": 138, "l0__w": 138, "l1__b": 138, "l1__w": 138, "printabl": 138, "obviou": 138, "foresight": 138, "untidili": 138, "update_ag": 138, "normalize_img": 138, "img": 138, "img_max": 138, "reduce_max": [138, 1040], "img_min": 138, "reduce_min": [138, 1040], "img_rang": 138, "agent_posit": 138, "agent_veloc": 138, "agent_cam_front_rgb": 138, "agent_cam_front_depth": 138, "agent_cam_rear_rgb": 138, "agent_cam_rear_depth": 138, "agent_cam_lidar": 138, "cleaner": 138, "camera": 138, "front_rgb": 138, "front_depth": 138, "rear_rgb": 138, "rear_depth": 138, "lidar": 138, "rgb": 138, "rear": 138, "veloc": 138, "cam": 138, "cam_max": 138, "cam_min": 138, "cam_rang": 138, "Of": 138, "ideal": 138, "perman": 138, "afterward": 138, "thread": 138, "incorpor": 138, "pretti": 138, "straightforward": 138, "dataload": [138, 150, 1040], "_cnt": 138, "img_": 138, "_dataset_s": 138, "_batch_siz": 138, "_count": [138, 139], "__next__": 138, "filenam": 138, "img_fnam": 138, "fname": 138, "loaded_img": 138, "cv2": 138, "imread": 138, "loader": [138, 152], "batch_slic": 138, "mymodel": [138, 1040], "linear0": [138, 139, 1040], "linear1": [138, 139, 1040], "x_in": [138, 139, 140, 1040], "loss_fn": [138, 139, 140, 1040], "0145": 138, "grad_fn": 138, "addbackward0": 138, "_create_vari": 139, "output_channel": [139, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1071, 1072], "with_bia": [139, 1062, 1072], "_input_channel": 139, "_output_channel": 139, "_w_shape": 139, "_b_shape": 139, "_with_bia": 139, "8979": 139, "3198": 139, "0196": 139, "3126": 139, "3717": 139, "9687": 139, "6958": 139, "5122": 139, "3902": 139, "8800": 139, "5613": 139, "1982": 139, "nightmar": 139, "overcom": 139, "fc": 139, "9563": 139, "v0": 139, "v1": 139, "6440": 139, "key0": 139, "1823": 139, "8075": 139, "linear3": 139, "v2": 139, "2346": 139, "counter": 139, "hidden": [139, 754, 768, 1062, 1071], "fed": [139, 345, 389], "1300": 139, "decoupl": 139, "scheme": 139, "weight_initi": [139, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072], "glorotuniform": [139, 1053, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072], "bias_initi": [139, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072], "_w_init": 139, "_b_init": 139, "create_vari": [139, 1053], "var_shap": [139, 1053], "fan_out": [139, 1053], "fan_in": [139, 1053], "fan_mod": [139, 1053], "fan_sum": 139, "slight": 139, "misnom": 139, "saw": 139, "vanilla": [139, 919, 921], "descent": [139, 715, 727, 729, 1078, 1083], "lar": [139, 715, 736, 738, 740, 742, 1078], "lamb": [139, 715, 736, 738, 1078], "compile_on_next_step": [139, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083], "_beta1": 139, "_beta2": 139, "_epsilon": 139, "_mw": 139, "_vw": 139, "_first_pass": 139, "_should_compil": 139, "_step": [139, 1078, 1082], "new_v": 139, "_lr": 139, "isinst": [139, 140, 634, 704], "_inplac": 139, "_stop_gradi": 139, "set_stat": [139, 1078, 1079, 1080, 1081, 1082, 1083], "pre": [140, 152, 345], "captur": 140, "sparse_funct": 140, "num_class": [140, 947, 948], "num_dim": 140, "new_axi": 140, "_linear": 140, "to_backend": 140, "jax_graph": 140, "learnabl": [140, 941, 942, 945, 1076, 1077], "to_ivy_modul": [140, 1051], "thinli": 140, "whilst": 140, "to_haiku_modul": 140, "hk": 140, "loss_fn_t": 140, "transform": [140, 151, 754, 766, 767], "without_apply_rng": 140, "rng": 140, "prngkei": 140, "init": 140, "update_rul": 140, "tree_multimap": 140, "vision": [150, 1040], "robot": [150, 1040], "focus": 151, "field": [151, 771, 786, 788, 815, 817, 822, 824, 964, 965, 969, 970, 974], "perfect": 151, "3d": [151, 1062, 1067, 1068], "differenti": 151, "demo": [151, 1040], "orient": 151, "pose": 151, "euler": [151, 201], "quaternion": 151, "rotat": 151, "ivy_mech": 151, "target_facing_rotation_matrix": 151, "polar_to_cartesian_coord": 151, "ordin": [151, 771, 819, 821], "warp": 151, "optic": 151, "voxel": 151, "ivy_vis": 151, "coords_to_voxel_grid": 151, "render_pixel_coord": 151, "neural": [151, 754, 1040, 1048, 1062], "radianc": 151, "nerf": 151, "trajectori": 151, "motion": 151, "plan": [151, 1040], "mobil": 151, "ivy_robot": 151, "sample_spline_path": 151, "rigidmobil": 151, "sample_bodi": 151, "drone": 151, "sample_link": 151, "openai": 151, "swimmer": 151, "cumul": [151, 634, 652, 653], "reward": 151, "supervis": 151, "reinforc": 151, "door": [151, 152], "intersect": 151, "cartpol": 151, "mountain_car": 151, "pendulum": 151, "reacher": 151, "condit": [151, 199, 200, 923, 933, 934, 959, 963], "learnt": 151, "ture": 151, "ntm": 151, "egospher": 151, "spatial": 151, "esm": 151, "ivy_memori": 151, "egocentr": 151, "room": 151, "inspir": 151, "doubt": 152, "grate": 152, "probe": 152, "undergo": 152, "remark": 152, "surpris": 152, "backward": [152, 395, 588, 591, 771, 834, 836, 1029, 1030, 1033, 1035, 1038], "lock": 152, "contunu": 152, "minor": 152, "xla": 152, "buffer": 152, "gold": 152, "dex": 152, "lax": 152, "scan": 152, "tricki": 152, "predictor": 152, "tight": 152, "driver": 152, "schedul": 152, "dispatch": 152, "Will": 152, "ast": 152, "dynamic": 152, "cond": 152, "jacobian": 152, "checkpoint": 152, "autodiff": 152, "shine": 152, "merci": 152, "superset": 152, "cluster": 152, "compet": 152, "paradigm": 152, "parallelis": [152, 345, 354, 355], "spmd": 152, "mixtur": [152, 715, 717, 720], "expert": 152, "sophist": 152, "depart": 152, "routin": 152, "hundr": 152, "thousand": 152, "deepli": [152, 923, 925], "broadli": 152, "heavili": 152, "supplementari": 152, "Is": 152, "reusabl": 152, "fanci": 152, "fusion": 152, "lose": 152, "vmap": 152, "pmap": 152, "overhead": 152, "ineffici": 152, "eventu": 152, "supplement": 152, "backdoor": 152, "callback": 152, "record": 152, "metric": 152, "somewhat": 152, "outsourc": 152, "inputs_to_ivy_arrai": 153, "gaussian": [163, 164, 167], "leaki": [163, 164, 167, 169, 172], "rectifi": [163, 169, 172, 174, 177], "slope": [163, 169, 172], "48": [163, 169, 172, 395, 611, 614, 715, 717, 720, 771, 809, 811, 996, 997, 1000], "88": [163, 169, 172, 395, 455, 458, 771, 809, 811, 996, 997, 1000], "214": [163, 179, 182], "978": [163, 179, 182], "0768": [163, 184, 187], "231": [163, 184, 187], "693": [163, 184, 187, 395, 418, 421, 843, 854, 857], "49": [163, 184, 187, 395, 611, 614, 996, 997, 1000], "147": [163, 184, 187], "363": [163, 184, 187], "array_method": [164, 165, 169, 170, 174, 175, 179, 180, 184, 185, 189, 190, 194, 196, 206, 207, 212, 213, 220, 221, 226, 227, 237, 238, 242, 243, 250, 251, 255, 257, 260, 262, 268, 270, 279, 280, 284, 285, 289, 290, 294, 295, 303, 304, 308, 309, 315, 316, 321, 322, 326, 327, 332, 333, 396, 397, 401, 402, 405, 406, 409, 410, 414, 415, 418, 419, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 468, 469, 472, 473, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 537, 538, 541, 542, 545, 546, 549, 550, 553, 554, 557, 558, 561, 562, 567, 568, 572, 573, 576, 577, 580, 581, 584, 585, 588, 589, 592, 593, 596, 597, 601, 602, 606, 607, 611, 612, 615, 616, 619, 621, 624, 626, 630, 631, 635, 636, 663, 664, 705, 707, 717, 718, 731, 732, 761, 762, 772, 773, 777, 778, 780, 781, 783, 784, 786, 787, 789, 790, 792, 793, 795, 796, 799, 800, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 819, 820, 822, 823, 825, 826, 828, 829, 831, 832, 834, 835, 837, 838, 840, 841, 844, 845, 849, 850, 854, 855, 860, 861, 865, 866, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 899, 900, 903, 904, 907, 908, 911, 912, 915, 916, 942, 943, 965, 967, 970, 972, 975, 977, 980, 982, 986, 987, 991, 992, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1030, 1031, 1035, 1036], "container_method": [164, 166, 168, 169, 171, 173, 174, 176, 178, 179, 181, 183, 184, 186, 188, 189, 191, 193, 194, 195, 197, 203, 205, 206, 208, 210, 212, 214, 216, 217, 219, 220, 222, 224, 226, 228, 230, 231, 233, 234, 236, 237, 239, 241, 242, 244, 246, 247, 249, 250, 252, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 279, 281, 283, 284, 286, 288, 289, 291, 293, 294, 296, 298, 303, 305, 308, 310, 312, 315, 317, 319, 321, 323, 325, 326, 328, 330, 332, 334, 336, 396, 398, 400, 401, 403, 405, 407, 409, 411, 413, 414, 416, 418, 420, 422, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 459, 461, 463, 465, 467, 468, 470, 472, 474, 476, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 567, 569, 571, 572, 574, 576, 578, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 601, 603, 605, 606, 608, 610, 611, 613, 615, 617, 619, 620, 622, 624, 625, 627, 630, 632, 635, 637, 639, 647, 648, 663, 665, 667, 705, 706, 708, 717, 719, 721, 722, 723, 725, 727, 728, 730, 731, 733, 735, 736, 737, 739, 740, 741, 743, 744, 745, 747, 761, 763, 765, 772, 774, 776, 795, 797, 844, 846, 848, 849, 851, 853, 854, 856, 858, 860, 862, 864, 865, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 899, 901, 903, 905, 907, 909, 911, 913, 915, 917, 942, 944, 946, 949, 951, 953, 954, 956, 965, 966, 968, 970, 971, 973, 975, 976, 978, 980, 981, 983, 986, 988, 990, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1030, 1032, 1034, 1035, 1037, 1039], "faster": [199, 200], "invoc": [199, 200], "718281828459045": 201, "newaxi": 201, "alia": 201, "pi": 201, "141592653589793": 201, "mathemat": [201, 395, 409, 412, 427, 430, 489, 492, 567, 570, 771, 837, 839], "half": [202, 203, 204, 947, 949, 950, 953, 955], "chosen": [202, 203, 204, 395, 427, 430, 959, 963], "distanc": [202, 203, 204], "adjac": [202, 203, 204], "creation_funct": [202, 203, 204, 206, 209, 211, 212, 215, 217, 218, 220, 223, 225, 226, 229, 231, 232, 247, 248, 250, 253, 255, 259, 260, 264, 265, 267, 268, 272], "nativeshap": [202, 211, 225, 247, 248, 265, 267, 634, 691, 697, 699, 754, 756, 758, 760, 859, 889, 892, 947, 949, 950, 952, 953, 955], "elsewher": [202, 217, 218, 959, 963], "row": [202, 217, 218, 771, 819, 821, 822, 824, 947, 948, 959, 962], "column": [202, 217, 218, 771, 786, 788, 815, 817, 819, 821, 822, 824], "__dlpack__": [202, 220, 223, 345, 390], "interchang": [202, 220, 223, 859, 907, 910], "coordin": [202, 237, 240, 395, 427, 430], "cartesian": [202, 237, 240], "ij": [202, 237, 240, 996, 997, 1000], "rank": [202, 237, 240, 634, 713, 771, 777, 779, 803, 805, 815, 817, 819, 821, 831, 833, 834, 836, 837, 839, 859, 869, 872, 873, 876, 903, 906, 915, 918, 959, 962, 1029, 1030, 1033, 1035, 1038], "ni": [202, 237, 240], "xi": [202, 237, 240], "n1": [202, 237, 240], "n2": [202, 237, 240], "n3": [202, 237, 240], "xv": [202, 237, 240], "yv": [202, 237, 240], "y1": [202, 268, 272], "y2": [202, 268, 272], "x3": [202, 268, 272, 345, 383], "y3": [202, 268, 272], "intdtyp": [202, 268, 272, 273, 302], "defaultdtyp": [273, 274], "defaultfloatdtyp": [273, 275], "float_dtyp": [273, 301, 338], "defaultintdtyp": [273, 276], "incompat": [273, 289, 292], "data_type_funct": [273, 294, 297], "floatdtyp": [273, 301], "int_dtyp": [273, 302, 339], "followng": [273, 308, 311], "occupi": [273, 308, 311, 315, 318, 634, 690, 691], "ep": [273, 308, 311, 771, 803, 805, 812, 814], "smallest_norm": [273, 308, 311], "encapsul": [273, 315, 318], "type1": [273, 331], "type2": [273, 331], "ret1": [273, 340], "ret2": [273, 340], "native_bool": [273, 344], "native_float16": [273, 344], "native_float64": [273, 344], "native_int8": [273, 344], "native_int16": [273, 344], "native_int32": [273, 344], "native_int64": [273, 344], "native_uint8": [273, 344], "native_uint64": [273, 344], "noinspect": [274, 275, 276, 346, 716], "pyshadowingnam": [274, 275, 276, 346, 716], "defaultdevic": [345, 346], "__enter__": 345, "_dev": 345, "__exit__": 345, "exc_typ": 345, "exc_val": 345, "exc_tb": 345, "exit": 345, "devcloneditem": [345, 367], "multidevitem": [345, 347, 350], "devclonedit": 345, "multidevit": [345, 348, 351, 354, 355, 359], "devclonednest": 345, "multidevnest": [345, 349, 352], "devdistitem": 345, "devdistit": 345, "devdistnest": 345, "devmanag": [345, 353], "dev_mapp": 345, "da_dim_s": 345, "safety_factor": 345, "min_dev_dim_s": 345, "max_dev_dim_step_ratio": 345, "min_unit_dev_tune_step": 345, "min_sf_tune_step": 345, "starting_split_factor": 345, "max_split_factor_step_s": 345, "tune_dev_alloc": 345, "tune_dev_split": 345, "mapper": [345, 354, 355], "receivess": 345, "ratio": [345, 715, 736, 738, 1078, 1080], "safe": [345, 354], "oom": 345, "tune": 345, "da_tune_step": 345, "ds_tune_step": 345, "to_clon": 345, "to_distribut": 345, "multidevic": [345, 354], "parallel": [345, 354, 355], "mutlidevic": [345, 354], "repeated_config_check": 345, "tune_step": 345, "devmapp": [345, 355], "ret_fn": [345, 354, 355], "queue_class": [345, 354, 355], "worker_class": [345, 354, 355], "worker": [345, 354, 355], "used_dev": [345, 354], "sf": [345, 354], "devmappermultiproc": 345, "multidev": [345, 356, 357, 358, 377], "profil": 345, "save_dir": [345, 360], "deviceic": [345, 366], "spread": [345, 377], "139740789224448": [345, 379], "physic": [345, 381], "x4": [345, 383], "process_specif": [345, 384, 394], "percentag": [345, 384], "ram": [345, 384, 391, 394], "attr_onli": [345, 385], "chunk": [345, 387, 388, 389], "max_chunk_s": [345, 389], "chunk_siz": [345, 389], "input_ax": [345, 389], "output_ax": [345, 389], "feed": [345, 389], "fist": [345, 389], "stream": [345, 390], "caveat": [345, 390], "portabl": [345, 390, 1040], "gb": [345, 391, 394], "reset": [345, 393, 634, 712], "magnitud": [395, 396, 399, 409, 412, 567, 570, 771, 822, 824, 825, 827], "princip": [395, 401, 404, 414, 417, 423, 426], "x1_i": [395, 409, 412, 427, 430, 435, 438, 443, 446, 447, 450, 451, 454, 455, 458, 472, 475, 477, 480, 497, 500, 501, 504, 505, 508, 521, 524, 525, 528, 545, 548, 549, 552, 557, 560, 561, 564, 567, 570, 576, 579, 584, 587, 588, 591, 619, 623], "x2_i": [395, 409, 412, 427, 430, 435, 438, 443, 446, 447, 450, 451, 454, 455, 458, 472, 475, 477, 480, 497, 500, 501, 504, 505, 508, 521, 524, 525, 528, 545, 548, 549, 552, 557, 560, 561, 564, 567, 570, 576, 579, 584, 587, 588, 591, 619, 623], "finit": [395, 409, 412, 427, 430, 509, 512, 567, 570, 584, 587, 588, 591], "nor": [395, 409, 412, 567, 570, 715, 753], "nearest": [395, 409, 412, 567, 570, 592, 595], "2019": [395, 409, 412, 489, 492, 567, 570], "commut": [395, 409, 412], "57": [395, 414, 417, 418, 421, 455, 458, 468, 471], "524": [395, 414, 417], "644": [395, 414, 417], "201": [395, 414, 417, 592, 595], "305": [395, 414, 417], "412": [395, 414, 417], "44": [395, 418, 421, 592, 595, 611, 614, 615, 618, 771, 809, 811, 959, 963, 996, 997, 1000], "809": [395, 418, 421], "569": [395, 418, 421], "733": [395, 418, 421], "68": [395, 418, 421, 941, 942, 945], "quotient": [395, 427, 430], "notat": [395, 427, 430, 996, 997, 1000], "denot": [395, 427, 430, 715, 753], "quadrant": [395, 427, 430], "3\u03c0": [395, 427, 430], "549": [395, 431, 434], "bitwis": [395, 435, 438, 447, 450, 455, 458, 561, 564], "AND": [395, 435, 438, 549, 552, 1029, 1030, 1033], "invert": [395, 439, 442], "arithmet": [395, 451, 454, 996, 1005, 1008], "propag": [395, 451, 454, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1017, 1020, 1021, 1024, 1025, 1028], "thu": [395, 451, 454, 584, 587, 588, 591, 771, 786, 788], "lh": [395, 451, 454], "rh": [395, 451, 454], "xor": [395, 455, 458, 561, 564], "78": [395, 455, 458, 596, 599, 771, 809, 811, 996, 997, 1000], "91": [395, 455, 458, 771, 809, 811, 996, 997, 1000], "66": [395, 455, 458, 771, 809, 811, 996, 997, 1000], "77": [395, 455, 458, 771, 809, 811, 996, 997, 1000], "79": [395, 455, 458], "26": [395, 455, 458, 606, 609, 715, 717, 720, 754, 761, 764, 771, 783, 785, 809, 811, 828, 830, 996, 997, 1000], "27": [395, 455, 458, 468, 471, 606, 609, 611, 614, 754, 770, 771, 809, 811, 996, 997, 1000], "74": [395, 455, 458], "59": [395, 455, 458], "654": [395, 463, 466], "122": [395, 468, 471], "368": [395, 468, 471], "670": [395, 468, 471], "202": [395, 468, 471, 592, 595], "548": [395, 468, 471, 606, 609], "1490": [395, 468, 471], "dividend": [395, 472, 475, 588, 591], "gauss": [395, 481, 484], "exponenti": [395, 481, 484, 485, 488, 545, 548, 584, 587], "logarithm": [395, 485, 488, 529, 532, 533, 536, 537, 540, 541, 544, 545, 548, 771, 818], "72": [395, 485, 488, 715, 717, 720, 771, 809, 811, 996, 997, 1000], "fdlibm": [395, 489, 492], "compliant": [395, 489, 492, 553, 556, 557, 560, 996, 1001, 1004, 1005, 1008, 1009, 1012], "greatest": [395, 493, 496, 497, 500], "out_i": [395, 509, 512, 513, 516, 517, 520], "threshold": [395, 565, 566], "y_i": [395, 572, 575], "expon": [395, 584, 587, 634, 701], "versu": [395, 584, 587], "odd": [395, 584, 587], "modulu": [395, 588, 591], "primarili": [395, 588, 591], "5654": [395, 592, 595], "034": [395, 592, 595], "433": [395, 592, 595], "343": [395, 592, 595], "30": [395, 592, 595, 771, 809, 811, 996, 997, 1000, 1053, 1059], "81": [395, 592, 595, 615, 618, 996, 997, 1000], "527": [395, 592, 595], "301": [395, 592, 595], "124": [395, 596, 599], "46": [395, 596, 599], "932": [395, 601, 604], "746": [395, 601, 604], "443": [395, 601, 604], "657": [395, 601, 604], "253": [395, 606, 609], "indistinguish": [395, 611, 614], "infinit": [395, 611, 614], "83": [395, 611, 614], "32455532": [395, 611, 614], "89897949": [395, 611, 614], "50": [395, 611, 614, 771, 809, 811, 959, 962, 996, 997, 1000], "31": [395, 611, 614], "169": [395, 611, 614], "47": [395, 611, 614], "93": [395, 611, 614], "35": [395, 611, 614, 754, 770, 771, 777, 779, 959, 963, 996, 997, 1000], "09": [395, 615, 618, 754, 770], "546": [395, 624, 628], "842": [395, 624, 628], "916": [395, 624, 628, 843, 844, 847], "996": [395, 624, 628], "328": [395, 624, 628], "462": [395, 629], "604": [395, 629], "984": [395, 629], "997": [395, 629], "decim": [395, 630, 633], "inspect": [634, 640, 1044, 1045], "downscal": [634, 646, 647, 649], "60": [634, 652, 771, 809, 811, 996, 997, 1000], "default_v": [634, 655], "catch_except": [634, 655], "rev": [634, 655], "with_cal": [634, 655], "arrang": [634, 656], "mod": [634, 660], "max_freq": [634, 661], "num_band": [634, 661], "fourier": [634, 661], "band": [634, 661], "linearli": [634, 661, 771, 819, 821], "oppos": [634, 661], "geometr": [634, 661], "seen_set": [634, 672], "local_set": [634, 672], "decrement": [634, 676], "allow_dupl": [634, 684], "forkserv": [634, 685], "spawn": [634, 685], "hot": [634, 687], "scatter": [634, 687, 690, 691], "tmp_dr": [634, 696], "temporari": [634, 696], "min_denomin": [634, 700], "stabil": [634, 700, 701, 985, 986, 989, 991, 994], "_min_denomin": [634, 700], "min_bas": [634, 701], "_min_bas": [634, 701, 941, 942, 945, 1076, 1077], "100000023841858": [634, 704], "200000047683716": [634, 704], "299999952316284": [634, 704], "400000095367432": [634, 704], "599999904632568": [634, 704], "gradienttrack": [715, 716], "en": [715, 717, 720, 722, 724], "wikipedia": [715, 717, 720, 722, 724], "wiki": [715, 717, 720, 722, 724], "stochastic_gradient_desc": [715, 717, 720, 722, 724], "004": [715, 717, 720], "009": [715, 717, 720], "86": [715, 717, 720], "28": [715, 717, 720, 754, 757, 760, 761, 764, 771, 809, 811, 996, 997, 1000], "0125": [715, 717, 720], "601": [715, 717, 720], "025": [715, 717, 720], "992": [715, 717, 720], "209": [715, 717, 720, 964, 965, 969], "271": [715, 717, 720], "0717": [715, 717, 720], "142": [715, 717, 720], "182": [715, 717, 720], "624": [715, 717, 720, 947, 953, 955], "744": [715, 717, 720], "626": [715, 717, 720], "65": [715, 717, 720, 771, 809, 811, 996, 997, 1000], "024": [715, 717, 720], "096": [715, 717, 720], "216": [715, 717, 720], "384": [715, 717, 720], "rate": [715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 919, 920, 921, 922, 1062, 1073, 1078, 1079, 1080, 1081, 1082, 1083], "ws_new": [715, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746], "retain": [715, 726], "trust": [715, 736, 738, 1078, 1080], "decai": [715, 736, 738, 740, 742, 1078, 1080, 1081], "layerwis": [715, 740, 742, 1078, 1081], "with_grads_stack": [715, 753], "nwc": [754, 755, 756, 1062, 1063, 1064], "d_out": [754, 755, 756, 757, 758, 759, 760], "ncw": [754, 755, 756, 1062, 1063, 1064], "wio": [754, 755], "output_shap": [754, 756, 758, 760, 1062, 1064, 1066, 1068], "hwio": [754, 757], "unequ": [754, 757], "unsqueez": [754, 757, 761, 764], "ndhwc": [754, 759, 760, 1062, 1067, 1068], "volum": [754, 759], "fd": [754, 759, 760], "ncdhw": [754, 759, 760, 1062, 1067, 1068], "dhwio": [754, 759], "258": [754, 760], "depthwis": [754, 761, 764, 1062, 1069], "hwi": [754, 761, 764], "333": [754, 761, 764], "prob": [754, 766, 947, 948, 1062, 1070], "randomli": [754, 766, 1062, 1070], "bernoulli": [754, 766], "out_featur": [754, 766, 767], "incom": [754, 767], "outer_batch_shap": [754, 767], "inner_batch_shap": [754, 767], "in_featur": [754, 767], "cell": [754, 768, 1062, 1071], "num_queri": [754, 769, 770], "x_feat_dim": [754, 769], "num_kei": [754, 769, 770], "cont_feat_dim": [754, 769], "numhead": [754, 769], "feat_dim": [754, 769, 770], "out_feat_dim": [754, 769], "score": [754, 770], "03": [754, 770, 941, 942, 945], "decomposit": [771, 772, 775, 815, 817, 822, 824], "vif": [771, 777, 779], "92": [771, 780, 782], "293": [771, 780, 782], "46997": [771, 780, 782], "eigendecomposit": [771, 786, 788], "qlq\u1d40": [771, 786, 788], "orthogon": [771, 786, 788], "eig": [771, 786, 788], "eigenvalu": [771, 786, 788, 789, 791], "eigenvector": [771, 786, 788], "prepend": [771, 795, 798], "singular": [771, 803, 805, 812, 814, 822, 824, 825, 827], "toler": [771, 803, 805, 812, 814], "largest_singular_valu": [771, 803, 805, 812, 814], "array_lik": [771, 809, 811], "84": [771, 809, 811, 996, 997, 1000], "105": [771, 809, 811, 843, 844, 847], "112": [771, 809, 811, 996, 997, 1000], "104": [771, 809, 811, 996, 997, 1000], "120": [771, 809, 811], "moor": [771, 812, 814], "penros": [771, 812, 814], "pseudo": [771, 812, 814], "orthonorm": [771, 815, 817, 822, 824], "2d": [771, 818, 1062, 1065, 1066, 1069], "logdet": [771, 818], "coeffici": [771, 819, 821], "usvh": [771, 822, 824], "vh": [771, 822, 824], "hermitian": [771, 822, 824], "et": [771, 822, 824], "cetera": [771, 822, 824], "adjoint": [771, 822, 824], "reconstruct": [771, 822, 824, 964, 965, 969, 975, 979], "reconstructed_x": [771, 822, 824], "contract": [771, 828, 830, 996, 997, 1000], "doubl": [771, 828, 830], "singleton": [771, 837, 839, 859, 899, 902, 959, 961, 996, 1001, 1004, 1005, 1008, 1009, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1030, 1033, 1035, 1038], "manhattan": [771, 837, 839], "l2": [771, 837, 839], "euclidean": [771, 837, 839], "mathbf": [771, 840, 842], "mathbb": [771, 840, 842], "skew": [771, 840, 842], "discret": [843, 849, 852], "35667497": [843, 849, 852], "793291": [843, 854, 857], "512926": [843, 854, 857], "before_1": [859, 869, 872, 915, 918], "after_1": [859, 869, 872, 915, 918], "before_n": [859, 869, 872, 915, 918], "after_n": [859, 869, 872, 915, 918], "manipulation_funct": [859, 873, 876], "reorder": [859, 877, 880], "permut": [859, 881, 884, 907, 910], "repetit": [859, 885, 888, 911, 914], "famili": [859, 903, 906], "intxx": [859, 903, 906], "floatxx": [859, 903, 906], "fomaml_step": 919, "inner_cost_fn": [919, 920, 921], "outer_cost_fn": [919, 920, 921], "inner_grad_step": [919, 920, 921, 922], "inner_learning_r": [919, 920, 921, 922], "inner_optimization_step": [919, 920, 921, 922], "inner_batch_fn": [919, 920, 921], "outer_batch_fn": [919, 920, 921], "average_across_step": [919, 920, 921], "inner_v": [919, 920, 921], "keep_inner_v": [919, 920, 921], "outer_v": [919, 920, 921], "keep_outer_v": [919, 920, 921], "return_inner_v": [919, 920, 921, 922], "num_task": [919, 920, 921, 922], "maml": [919, 920, 921], "recev": [919, 920, 921], "0x7fbdea16fca0": [919, 920, 921, 922], "maml_step": 919, "rece": [919, 921], "reptile_step": 919, "cost_fn": [919, 922], "reptil": [919, 922], "receivng": [919, 922], "all_nested_indic": 923, "include_nest": [923, 924], "_index": [923, 924, 934], "_base": [923, 924, 933, 934], "copy_nest": 923, "to_mut": [923, 925, 935], "mutabl": [923, 925, 935], "insert_into_nest_at_index": 923, "insert_into_nest_at_indic": 923, "map_nest_at_index": 923, "map_nest_at_indic": 923, "multi_index_nest": 923, "nested_ani": 923, "check_nest": [923, 933, 934], "conditon": [923, 933, 934], "nested_indices_wher": 923, "stop_after_n_found": [923, 934], "_depth": [923, 935], "_tuple_check_fn": [923, 935], "_list_check_fn": [923, 935], "_dict_check_fn": [923, 935], "nested_multi_map": 923, "nest0": [923, 936], "ivy_arrai": [923, 936], "funciton": [923, 936], "prune_nest_at_index": 923, "prune_nest_at_indic": 923, "set_nest_at_index": 923, "set_nest_at_indic": 923, "mini": [941, 942, 945, 1076, 1077], "gamma": [941, 942, 945], "beta": [941, 942, 945], "894": [941, 942, 945], "772": [941, 942, 945], "796": [941, 942, 945], "population_s": [947, 948], "num_sampl": [947, 948], "home": [947, 948, 952], "uniformli": [947, 949, 950, 953, 955], "highest": [947, 949, 950], "parameter": [947, 952, 953, 955], "6444774682897879": [947, 952], "811": [947, 952], "508": [947, 952], "564": [947, 952], "7268672": [947, 952], "968": [947, 952], "175": [947, 952, 964, 965, 969], "064": [947, 952], "40935726": [947, 952], "556": [947, 952], "26431865": [947, 953, 955], "475": [947, 953, 955], "878": [947, 953, 955], "861": [947, 953, 955], "89150229": [947, 953, 955], "89629126": [947, 953, 955], "94198485": [947, 953, 955], "91405606": [947, 953, 955], "72848724": [947, 953, 955], "7550739": [947, 953, 955], "00109": [947, 953, 955], "occurr": [959, 960, 961, 964, 965, 969], "43": [959, 963], "x_j": [964, 965, 969, 970, 974, 980, 984], "impli": [964, 965, 969, 970, 974, 980, 984], "inverse_indic": [964, 965, 969, 975, 979], "aggreg": [964, 965, 969], "fourth": [964, 965, 969], "607": [964, 965, 969], "735": [964, 965, 969], "667": [964, 965, 969], "381": [964, 965, 969], "857": [964, 965, 969], "0396": [964, 965, 969], "166": [964, 965, 969], "58": [964, 965, 969], "828": [964, 965, 969], "144": [964, 965, 969], "40501155": [964, 965, 969], "77361575": [964, 965, 969], "97776199": [964, 965, 969], "36831157": [964, 965, 969], "89148434": [964, 965, 969], "9512272": [964, 965, 969], "67542176": [964, 965, 969], "41985657": [964, 965, 969], "23478023": [964, 965, 969], "1141": [964, 965, 969], "8101": [964, 965, 969], "9298": [964, 965, 969], "8460": [964, 965, 969], "2119": [964, 965, 969], "3519": [964, 965, 969], "6252": [964, 965, 969], "4033": [964, 965, 969], "7443": [964, 965, 969], "2577": [964, 965, 969], "3707": [964, 965, 969], "0545": [964, 965, 969], "3238": [964, 965, 969], "5944": [964, 965, 969], "0775": [964, 965, 969], "4327": [964, 965, 969], "176": [964, 965, 969], "889": [964, 965, 969], "763": [964, 965, 969], "071": [964, 965, 969], "262": [964, 965, 969], "456": [964, 965, 969], "114": [964, 965, 969], "349": [964, 965, 969], "615": [964, 965, 969], "594": [964, 965, 969], "335": [964, 965, 969], "212": [964, 965, 969], "457": [964, 965, 969], "827": [964, 965, 969], "set_funct": [964, 970, 974], "ascend": [985, 986, 989], "einstein": [996, 997, 1000], "summat": [996, 997, 1000], "seq": [996, 997, 1000], "jk": [996, 997, 1000], "ik": [996, 997, 1000], "126": [996, 997, 1000], "510": [996, 997, 1000], "108": [996, 997, 1000], "117": [996, 997, 1000], "sentinel": [996, 1001, 1004, 1009, 1012], "unsign": [996, 1013, 1016, 1021, 1024], "degre": [996, 1017, 1020, 1025, 1028], "bessel": [996, 1017, 1020, 1025, 1028], "8164966": [996, 1017, 1020], "varianc": [996, 1025, 1028], "unbias": [996, 1025, 1028], "simplicit": [1029, 1030, 1033], "grow": 1040, "ai": 1040, "got": 1040, "colab": 1040, "sharp": 1040, "weekli": 1040, "immedi": 1040, "favorit": 1040, "jax_concat": 1040, "tf_concat": 1040, "np_concat": 1040, "mx_concat": 1040, "torch_concat": 1040, "prompt": 1040, "get_devic": 1040, "reduce_prod": 1040, "gradient_imag": 1040, "linalg": 1040, "bilinear_resampl": 1040, "stack_imag": 1040, "neural_net": 1040, "ecosystem": [1040, 1046], "popular": [1040, 1046], "acceler": 1040, "articl": 1040, "lenton2021ivi": 1040, "inter": 1040, "lenton": 1040, "daniel": 1040, "pardo": 1040, "fabio": 1040, "falck": 1040, "fabian": 1040, "jame": 1040, "stephen": 1040, "clark": 1040, "ronald": 1040, "journal": 1040, "arxiv": 1040, "preprint": 1040, "2102": 1040, "02886": 1040, "2021": 1040, "add_array_spec": 1043, "fn_array_spec": 1043, "geglu": 1048, "native_modul": [1051, 1052], "native_module_class": [1051, 1052], "firstlayersiren": 1053, "kaimingnorm": [1053, 1057], "negative_slop": 1053, "Ones": 1053, "siren": 1053, "w0": [1053, 1059], "filter_s": [1062, 1063, 1064], "1d": [1062, 1063, 1064], "conv1dtranspos": 1062, "filter_shap": [1062, 1065, 1066, 1067, 1068, 1069], "conv2dtranspos": 1062, "conv3dtranspos": 1062, "depthwiseconv2d": 1062, "num_channel": [1062, 1069], "bernoul": [1062, 1070], "num_lay": [1062, 1071], "return_sequ": [1062, 1071], "return_st": [1062, 1071], "get_initial_st": [1062, 1071], "dens": [1062, 1072], "multiheadattent": 1062, "query_dim": [1062, 1073], "head_dim": [1062, 1073], "dropout_r": [1062, 1073], "context_dim": [1062, 1073], "with_to_q_fn": [1062, 1073], "with_to_kv_fn": [1062, 1073], "with_to_out_fn": [1062, 1073], "build_mod": [1062, 1073, 1074, 1075], "on_init": [1062, 1073, 1074, 1075], "__call__": [1062, 1073, 1074, 1075], "store_var": [1074, 1075], "arg_stateful_idx": [1074, 1075], "kwarg_stateful_idx": [1074, 1075], "fallback_to_non_compil": [1074, 1075, 1078, 1082], "with_partial_v": [1074, 1075], "initialz": [1074, 1075], "from_cal": [1074, 1075], "check_submod_ret": [1074, 1075], "get_mod_kei": [1074, 1075], "top_mod": [1074, 1075], "mod_depth": [1074, 1075], "mod_height": [1074, 1075], "mod_with_top_mod_key_chain": [1074, 1075], "save_weight": [1074, 1075], "weights_path": [1074, 1075], "show_mod_in_top_mod": [1074, 1075], "upper_depth": [1074, 1075], "lower_depth": [1074, 1075], "show_structur": [1074, 1075], "show_v_in_top_v": [1074, 1075], "sub_mod": [1074, 1075], "show_v": [1074, 1075], "track_submod_call_ord": [1074, 1075], "track_submod_ret": [1074, 1075], "v_with_top_v_key_chain": [1074, 1075], "layernorm": 1076, "normalized_shap": [1076, 1077], "elementwise_affin": [1076, 1077], "trail": [1076, 1077], "affin": [1076, 1077], "init_on_first_step": [1078, 1082], "ignore_miss": [1078, 1082], "overriden": [1078, 1082], "sgd": 1078, "stochast": [1078, 1083], "sub_modul": [1084, 1085]}, "objects": {"ivy": [[23, 0, 0, "-", "Array"], [72, 0, 0, "-", "Container"], [0, 0, 0, "-", "backend_handler"], [153, 0, 0, "-", "func_wrapper"], [1043, 0, 0, "-", "inspection"], [1047, 0, 0, "-", "stateful"], [1087, 0, 0, "-", "verbosity"]], "ivy.Array": [[23, 1, 1, "", "__delattr__"], [23, 1, 1, "", "__format__"], [23, 1, 1, "", "__getattribute__"], [23, 1, 1, "", "__init_subclass__"], [23, 1, 1, "", "__new__"], [23, 1, 1, "", "__reduce__"], [23, 1, 1, "", "__reduce_ex__"], [23, 1, 1, "", "__setattr__"], [23, 1, 1, "", "__sizeof__"], [23, 1, 1, "", "__str__"], [23, 1, 1, "", "__subclasshook__"]], "ivy.Container": [[72, 1, 1, "", "__delattr__"], [72, 1, 1, "", "__delitem__"], [72, 1, 1, "", "__format__"], [72, 1, 1, "", "__getattribute__"], [72, 1, 1, "", "__init_subclass__"], [72, 1, 1, "", "__iter__"], [72, 1, 1, "", "__len__"], [72, 1, 1, "", "__new__"], [72, 1, 1, "", "__reduce__"], [72, 1, 1, "", "__reduce_ex__"], [72, 1, 1, "", "__reversed__"], [72, 1, 1, "", "__sizeof__"], [72, 1, 1, "", "__str__"], [72, 1, 1, "", "__subclasshook__"], [72, 1, 1, "", "clear"], [72, 1, 1, "", "fromkeys"], [72, 1, 1, "", "get"], [72, 1, 1, "", "items"], [72, 1, 1, "", "keys"], [72, 1, 1, "", "pop"], [72, 1, 1, "", "popitem"], [72, 1, 1, "", "setdefault"], [72, 1, 1, "", "update"], [72, 1, 1, "", "values"]], "ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "array"], [29, 0, 0, "-", "conversions"], [34, 0, 0, "-", "creation"], [36, 0, 0, "-", "data_type"], [38, 0, 0, "-", "device"], [40, 0, 0, "-", "elementwise"], [42, 0, 0, "-", "general"], [44, 0, 0, "-", "gradients"], [46, 0, 0, "-", "image"], [48, 0, 0, "-", "layers"], [50, 0, 0, "-", "linear_algebra"], [52, 0, 0, "-", "losses"], [54, 0, 0, "-", "manipulation"], [56, 0, 0, "-", "norms"], [58, 0, 0, "-", "random"], [60, 0, 0, "-", "searching"], [62, 0, 0, "-", "set"], [64, 0, 0, "-", "sorting"], [66, 0, 0, "-", "statistical"], [68, 0, 0, "-", "utility"], [70, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 2, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 3, 1, "", "gelu"], [25, 3, 1, "", "leaky_relu"], [25, 3, 1, "", "relu"], [25, 3, 1, "", "sigmoid"], [25, 3, 1, "", "softmax"], [25, 3, 1, "", "softplus"], [25, 3, 1, "", "tanh"]], "ivy.array.array": [[27, 2, 1, "", "Array"], [28, 2, 1, "", "Variable"]], "ivy.array.array.Array": [[27, 4, 1, "", "T"], [27, 3, 1, "", "__add__"], [27, 3, 1, "", "__init__"], [27, 3, 1, "", "__le__"], [27, 3, 1, "", "__radd__"], [27, 3, 1, "", "adam_update"], [27, 3, 1, "", "arange"], [27, 3, 1, "", "arg_info"], [27, 3, 1, "", "arg_names"], [27, 3, 1, "", "argmax"], [27, 3, 1, "", "argmin"], [27, 3, 1, "", "array"], [27, 3, 1, "", "array_equal"], [27, 3, 1, "", "arrays_equal"], [27, 3, 1, "", "as_ivy_dev"], [27, 3, 1, "", "as_ivy_dtype"], [27, 3, 1, "", "as_native_dev"], [27, 3, 1, "", "as_native_dtype"], [27, 3, 1, "", "assert_supports_inplace"], [27, 3, 1, "", "cache_fn"], [27, 3, 1, "", "clear_mem_on_dev"], [27, 3, 1, "", "clip_matrix_norm"], [27, 3, 1, "", "clip_vector_norm"], [27, 3, 1, "", "closest_valid_dtype"], [27, 3, 1, "", "container_types"], [27, 3, 1, "", "conv1d"], [27, 3, 1, "", "conv1d_transpose"], [27, 3, 1, "", "conv2d"], [27, 3, 1, "", "conv2d_transpose"], [27, 3, 1, "", "conv3d"], [27, 3, 1, "", "conv3d_transpose"], [27, 3, 1, "", "copy_array"], [27, 3, 1, "", "cumprod"], [27, 3, 1, "", "cumsum"], [27, 3, 1, "", "current_backend"], [27, 3, 1, "", "current_backend_str"], [27, 4, 1, "", "data"], [27, 3, 1, "", "default"], [27, 3, 1, "", "default_device"], [27, 3, 1, "", "default_dtype"], [27, 3, 1, "", "default_float_dtype"], [27, 3, 1, "", "default_int_dtype"], [27, 3, 1, "", "dev"], [27, 3, 1, "", "dev_clone"], [27, 3, 1, "", "dev_clone_array"], [27, 3, 1, "", "dev_clone_iter"], [27, 3, 1, "", "dev_clone_nest"], [27, 3, 1, "", "dev_dist"], [27, 3, 1, "", "dev_dist_array"], [27, 3, 1, "", "dev_dist_iter"], [27, 3, 1, "", "dev_dist_nest"], [27, 3, 1, "", "dev_unify"], [27, 3, 1, "", "dev_unify_array"], [27, 3, 1, "", "dev_unify_iter"], [27, 3, 1, "", "dev_unify_nest"], [27, 3, 1, "", "dev_util"], [27, 4, 1, "", "device"], [27, 3, 1, "", "dropout"], [27, 4, 1, "", "dtype"], [27, 3, 1, "", "dtype_bits"], [27, 3, 1, "", "einops_rearrange"], [27, 3, 1, "", "einops_reduce"], [27, 3, 1, "", "einops_repeat"], [27, 3, 1, "", "empty"], [27, 3, 1, "", "execute_with_gradients"], [27, 3, 1, "", "exists"], [27, 3, 1, "", "eye"], [27, 3, 1, "", "floormod"], [27, 3, 1, "", "fourier_encode"], [27, 3, 1, "", "full"], [27, 3, 1, "", "function_supported_dtypes"], [27, 3, 1, "", "function_unsupported_dtypes"], [27, 3, 1, "", "gather"], [27, 3, 1, "", "get_all_arrays_in_memory"], [27, 3, 1, "", "get_all_ivy_arrays_on_dev"], [27, 3, 1, "", "get_min_base"], [27, 3, 1, "", "get_min_denominator"], [27, 3, 1, "", "get_num_dims"], [27, 3, 1, "", "get_referrers_recursive"], [27, 3, 1, "", "gpu_is_available"], [27, 3, 1, "", "gradient_descent_update"], [27, 3, 1, "", "handle_nestable"], [27, 3, 1, "", "handle_out_argument"], [27, 3, 1, "", "has_nans"], [27, 3, 1, "", "indices_where"], [27, 3, 1, "", "infer_device"], [27, 3, 1, "", "infer_dtype"], [27, 3, 1, "", "inplace_arrays_supported"], [27, 3, 1, "", "inplace_decrement"], [27, 3, 1, "", "inplace_increment"], [27, 3, 1, "", "inplace_update"], [27, 3, 1, "", "inplace_variables_supported"], [27, 3, 1, "", "inputs_to_native_arrays"], [27, 3, 1, "", "invalid_dtype"], [27, 3, 1, "", "is_array"], [27, 3, 1, "", "is_ivy_array"], [27, 3, 1, "", "is_ivy_container"], [27, 3, 1, "", "is_native_array"], [27, 4, 1, "", "is_variable"], [27, 3, 1, "", "lamb_update"], [27, 3, 1, "", "lars_update"], [27, 3, 1, "", "linear"], [27, 3, 1, "", "linspace"], [27, 3, 1, "", "logspace"], [27, 3, 1, "", "lstm_update"], [27, 4, 1, "", "mT"], [27, 3, 1, "", "match_kwargs"], [27, 3, 1, "", "matrix_power"], [27, 3, 1, "", "maximum"], [27, 3, 1, "", "minimum"], [27, 3, 1, "", "multi_head_attention"], [27, 3, 1, "", "multinomial"], [27, 3, 1, "", "multiprocessing"], [27, 4, 1, "", "ndim"], [27, 3, 1, "", "nonzero"], [27, 3, 1, "", "num_arrays_in_memory"], [27, 3, 1, "", "num_cpu_cores"], [27, 3, 1, "", "num_gpus"], [27, 3, 1, "", "num_ivy_arrays_on_dev"], [27, 3, 1, "", "one_hot"], [27, 3, 1, "", "ones"], [27, 3, 1, "", "optimizer_update"], [27, 3, 1, "", "outputs_to_ivy_arrays"], [27, 3, 1, "", "percent_used_mem_on_dev"], [27, 3, 1, "", "print_all_arrays_in_memory"], [27, 3, 1, "", "print_all_ivy_arrays_on_dev"], [27, 3, 1, "", "promote_types"], [27, 3, 1, "", "queue_timeout"], [27, 3, 1, "", "randint"], [27, 3, 1, "", "random_normal"], [27, 3, 1, "", "random_uniform"], [27, 3, 1, "", "scaled_dot_product_attention"], [27, 3, 1, "", "scatter_flat"], [27, 3, 1, "", "scatter_nd"], [27, 3, 1, "", "seed"], [27, 3, 1, "", "set_default_device"], [27, 3, 1, "", "set_default_dtype"], [27, 3, 1, "", "set_default_float_dtype"], [27, 3, 1, "", "set_default_int_dtype"], [27, 3, 1, "", "set_min_base"], [27, 3, 1, "", "set_min_denominator"], [27, 3, 1, "", "set_queue_timeout"], [27, 3, 1, "", "set_shape_array_mode"], [27, 3, 1, "", "set_split_factor"], [27, 3, 1, "", "set_tmp_dir"], [27, 3, 1, "", "set_with_grads"], [27, 4, 1, "", "shape"], [27, 3, 1, "", "shape_array_mode"], [27, 3, 1, "", "shape_to_tuple"], [27, 3, 1, "", "shuffle"], [27, 4, 1, "", "size"], [27, 3, 1, "", "slogdet"], [27, 3, 1, "", "split"], [27, 3, 1, "", "split_factor"], [27, 3, 1, "", "split_func_call"], [27, 3, 1, "", "stable_divide"], [27, 3, 1, "", "stable_pow"], [27, 3, 1, "", "stop_gradient"], [27, 3, 1, "", "supports_inplace"], [27, 3, 1, "", "tmp_dir"], [27, 3, 1, "", "to_device"], [27, 3, 1, "", "to_list"], [27, 3, 1, "", "to_native_arrays_and_back"], [27, 3, 1, "", "to_scalar"], [27, 3, 1, "", "total_mem_on_dev"], [27, 3, 1, "", "tpu_is_available"], [27, 3, 1, "", "try_else_none"], [27, 3, 1, "", "type_promote_arrays"], [27, 3, 1, "", "unset_default_device"], [27, 3, 1, "", "unset_default_dtype"], [27, 3, 1, "", "unset_default_float_dtype"], [27, 3, 1, "", "unset_default_int_dtype"], [27, 3, 1, "", "unset_shape_array_mode"], [27, 3, 1, "", "unset_with_grads"], [27, 3, 1, "", "unstack"], [27, 3, 1, "", "used_mem_on_dev"], [27, 3, 1, "", "valid_dtype"], [27, 3, 1, "", "value_is_nan"], [27, 3, 1, "", "variable"], [27, 3, 1, "", "variable_data"], [27, 3, 1, "", "where"], [27, 3, 1, "", "with_grads"], [27, 3, 1, "", "zeros"]], "ivy.array.array.Variable": [[28, 3, 1, "", "__init__"]], "ivy.array.array_methods": [[397, 1, 1, "", "abs"], [402, 1, 1, "", "acos"], [406, 1, 1, "", "acosh"], [718, 1, 1, "", "adam_step"], [410, 1, 1, "", "add"], [1031, 1, 1, "", "all"], [636, 1, 1, "", "all_equal"], [1036, 1, 1, "", "any"], [987, 1, 1, "", "argsort"], [207, 1, 1, "", "asarray"], [415, 1, 1, "", "asin"], [419, 1, 1, "", "asinh"], [280, 1, 1, "", "astype"], [424, 1, 1, "", "atan"], [428, 1, 1, "", "atan2"], [432, 1, 1, "", "atanh"], [845, 1, 1, "", "binary_cross_entropy"], [436, 1, 1, "", "bitwise_and"], [440, 1, 1, "", "bitwise_invert"], [444, 1, 1, "", "bitwise_left_shift"], [448, 1, 1, "", "bitwise_or"], [452, 1, 1, "", "bitwise_right_shift"], [456, 1, 1, "", "bitwise_xor"], [285, 1, 1, "", "broadcast_arrays"], [290, 1, 1, "", "broadcast_to"], [295, 1, 1, "", "can_cast"], [460, 1, 1, "", "ceil"], [773, 1, 1, "", "cholesky"], [861, 1, 1, "", "clip"], [866, 1, 1, "", "concat"], [870, 1, 1, "", "constant_pad"], [464, 1, 1, "", "cos"], [469, 1, 1, "", "cosh"], [778, 1, 1, "", "cross"], [850, 1, 1, "", "cross_entropy"], [762, 1, 1, "", "depthwise_conv2d"], [781, 1, 1, "", "det"], [784, 1, 1, "", "diagonal"], [473, 1, 1, "", "divide"], [304, 1, 1, "", "dtype"], [787, 1, 1, "", "eigh"], [790, 1, 1, "", "eigvalsh"], [998, 1, 1, "", "einsum"], [213, 1, 1, "", "empty_like"], [478, 1, 1, "", "equal"], [482, 1, 1, "", "erf"], [486, 1, 1, "", "exp"], [874, 1, 1, "", "expand_dims"], [490, 1, 1, "", "expm1"], [309, 1, 1, "", "finfo"], [878, 1, 1, "", "flip"], [494, 1, 1, "", "floor"], [498, 1, 1, "", "floor_divide"], [221, 1, 1, "", "from_dlpack"], [227, 1, 1, "", "full_like"], [664, 1, 1, "", "gather_nd"], [165, 1, 1, "", "gelu"], [502, 1, 1, "", "greater"], [506, 1, 1, "", "greater_equal"], [316, 1, 1, "", "iinfo"], [793, 1, 1, "", "inv"], [322, 1, 1, "", "is_float_dtype"], [327, 1, 1, "", "is_int_dtype"], [732, 1, 1, "", "is_variable"], [510, 1, 1, "", "isfinite"], [514, 1, 1, "", "isinf"], [518, 1, 1, "", "isnan"], [943, 1, 1, "", "layer_norm"], [170, 1, 1, "", "leaky_relu"], [522, 1, 1, "", "less"], [526, 1, 1, "", "less_equal"], [530, 1, 1, "", "log"], [534, 1, 1, "", "log10"], [538, 1, 1, "", "log1p"], [542, 1, 1, "", "log2"], [546, 1, 1, "", "logaddexp"], [550, 1, 1, "", "logical_and"], [554, 1, 1, "", "logical_not"], [558, 1, 1, "", "logical_or"], [562, 1, 1, "", "logical_xor"], [796, 1, 1, "", "matmul"], [800, 1, 1, "", "matrix_norm"], [804, 1, 1, "", "matrix_rank"], [807, 1, 1, "", "matrix_transpose"], [1002, 1, 1, "", "max"], [1006, 1, 1, "", "mean"], [238, 1, 1, "", "meshgrid"], [1010, 1, 1, "", "min"], [568, 1, 1, "", "multiply"], [243, 1, 1, "", "native_array"], [573, 1, 1, "", "negative"], [577, 1, 1, "", "not_equal"], [251, 1, 1, "", "ones_like"], [810, 1, 1, "", "outer"], [882, 1, 1, "", "permute_dims"], [813, 1, 1, "", "pinv"], [581, 1, 1, "", "positive"], [585, 1, 1, "", "pow"], [1014, 1, 1, "", "prod"], [816, 1, 1, "", "qr"], [175, 1, 1, "", "relu"], [589, 1, 1, "", "remainder"], [886, 1, 1, "", "repeat"], [890, 1, 1, "", "reshape"], [333, 1, 1, "", "result_type"], [894, 1, 1, "", "roll"], [593, 1, 1, "", "round"], [180, 1, 1, "", "sigmoid"], [597, 1, 1, "", "sign"], [602, 1, 1, "", "sin"], [607, 1, 1, "", "sinh"], [185, 1, 1, "", "softmax"], [190, 1, 1, "", "softplus"], [820, 1, 1, "", "solve"], [992, 1, 1, "", "sort"], [855, 1, 1, "", "sparse_cross_entropy"], [612, 1, 1, "", "sqrt"], [616, 1, 1, "", "square"], [900, 1, 1, "", "squeeze"], [904, 1, 1, "", "stack"], [1018, 1, 1, "", "std"], [621, 1, 1, "", "subtract"], [1022, 1, 1, "", "sum"], [823, 1, 1, "", "svd"], [826, 1, 1, "", "svdvals"], [908, 1, 1, "", "swapaxes"], [626, 1, 1, "", "tan"], [196, 1, 1, "", "tanh"], [829, 1, 1, "", "tensordot"], [912, 1, 1, "", "tile"], [707, 1, 1, "", "to_numpy"], [832, 1, 1, "", "trace"], [257, 1, 1, "", "tril"], [262, 1, 1, "", "triu"], [631, 1, 1, "", "trunc"], [967, 1, 1, "", "unique_all"], [972, 1, 1, "", "unique_counts"], [977, 1, 1, "", "unique_inverse"], [982, 1, 1, "", "unique_values"], [1026, 1, 1, "", "var"], [835, 1, 1, "", "vecdot"], [838, 1, 1, "", "vector_norm"], [841, 1, 1, "", "vector_to_skew_symmetric_matrix"], [916, 1, 1, "", "zero_pad"], [270, 1, 1, "", "zeros_like"]], "ivy.array.conversions": [[30, 1, 1, "", "args_to_ivy"], [31, 1, 1, "", "args_to_native"], [32, 1, 1, "", "to_ivy"], [33, 1, 1, "", "to_native"]], "ivy.array.creation": [[35, 2, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[35, 3, 1, "", "asarray"], [35, 3, 1, "", "empty_like"], [35, 3, 1, "", "from_dlpack"], [35, 3, 1, "", "full_like"], [35, 3, 1, "", "meshgrid"], [35, 3, 1, "", "native_array"], [35, 3, 1, "", "ones_like"], [35, 3, 1, "", "tril"], [35, 3, 1, "", "triu"], [35, 3, 1, "", "zeros_like"]], "ivy.array.data_type": [[37, 2, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[37, 3, 1, "", "astype"], [37, 3, 1, "", "broadcast_arrays"], [37, 3, 1, "", "broadcast_to"], [37, 3, 1, "", "can_cast"], [37, 3, 1, "", "dtype"], [37, 3, 1, "", "finfo"], [37, 3, 1, "", "iinfo"], [37, 3, 1, "", "is_float_dtype"], [37, 3, 1, "", "is_int_dtype"], [37, 3, 1, "", "result_type"]], "ivy.array.device": [[39, 2, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[41, 2, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[41, 3, 1, "", "abs"], [41, 3, 1, "", "acos"], [41, 3, 1, "", "acosh"], [41, 3, 1, "", "add"], [41, 3, 1, "", "asin"], [41, 3, 1, "", "asinh"], [41, 3, 1, "", "atan"], [41, 3, 1, "", "atan2"], [41, 3, 1, "", "atanh"], [41, 3, 1, "", "bitwise_and"], [41, 3, 1, "", "bitwise_invert"], [41, 3, 1, "", "bitwise_left_shift"], [41, 3, 1, "", "bitwise_or"], [41, 3, 1, "", "bitwise_right_shift"], [41, 3, 1, "", "bitwise_xor"], [41, 3, 1, "", "ceil"], [41, 3, 1, "", "cos"], [41, 3, 1, "", "cosh"], [41, 3, 1, "", "divide"], [41, 3, 1, "", "equal"], [41, 3, 1, "", "erf"], [41, 3, 1, "", "exp"], [41, 3, 1, "", "expm1"], [41, 3, 1, "", "floor"], [41, 3, 1, "", "floor_divide"], [41, 3, 1, "", "greater"], [41, 3, 1, "", "greater_equal"], [41, 3, 1, "", "isfinite"], [41, 3, 1, "", "isinf"], [41, 3, 1, "", "isnan"], [41, 3, 1, "", "less"], [41, 3, 1, "", "less_equal"], [41, 3, 1, "", "log"], [41, 3, 1, "", "log10"], [41, 3, 1, "", "log1p"], [41, 3, 1, "", "log2"], [41, 3, 1, "", "logaddexp"], [41, 3, 1, "", "logical_and"], [41, 3, 1, "", "logical_not"], [41, 3, 1, "", "logical_or"], [41, 3, 1, "", "logical_xor"], [41, 3, 1, "", "multiply"], [41, 3, 1, "", "negative"], [41, 3, 1, "", "not_equal"], [41, 3, 1, "", "positive"], [41, 3, 1, "", "pow"], [41, 3, 1, "", "remainder"], [41, 3, 1, "", "round"], [41, 3, 1, "", "sign"], [41, 3, 1, "", "sin"], [41, 3, 1, "", "sinh"], [41, 3, 1, "", "sqrt"], [41, 3, 1, "", "square"], [41, 3, 1, "", "subtract"], [41, 3, 1, "", "tan"], [41, 3, 1, "", "tanh"], [41, 3, 1, "", "trunc"]], "ivy.array.general": [[43, 2, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[43, 3, 1, "", "all_equal"], [43, 3, 1, "", "gather_nd"], [43, 3, 1, "", "to_numpy"]], "ivy.array.gradients": [[45, 2, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[45, 3, 1, "", "adam_step"], [45, 3, 1, "", "is_variable"]], "ivy.array.image": [[47, 2, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[49, 2, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[49, 3, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[51, 2, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[51, 3, 1, "", "cholesky"], [51, 3, 1, "", "cross"], [51, 3, 1, "", "det"], [51, 3, 1, "", "diagonal"], [51, 3, 1, "", "eigh"], [51, 3, 1, "", "eigvalsh"], [51, 3, 1, "", "inv"], [51, 3, 1, "", "matmul"], [51, 3, 1, "", "matrix_norm"], [51, 3, 1, "", "matrix_rank"], [51, 3, 1, "", "matrix_transpose"], [51, 3, 1, "", "outer"], [51, 3, 1, "", "pinv"], [51, 3, 1, "", "qr"], [51, 3, 1, "", "solve"], [51, 3, 1, "", "svd"], [51, 3, 1, "", "svdvals"], [51, 3, 1, "", "tensordot"], [51, 3, 1, "", "trace"], [51, 3, 1, "", "vecdot"], [51, 3, 1, "", "vector_norm"], [51, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[53, 2, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[53, 3, 1, "", "binary_cross_entropy"], [53, 3, 1, "", "cross_entropy"], [53, 3, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[55, 2, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[55, 3, 1, "", "clip"], [55, 3, 1, "", "concat"], [55, 3, 1, "", "constant_pad"], [55, 3, 1, "", "expand_dims"], [55, 3, 1, "", "flip"], [55, 3, 1, "", "permute_dims"], [55, 3, 1, "", "repeat"], [55, 3, 1, "", "reshape"], [55, 3, 1, "", "roll"], [55, 3, 1, "", "squeeze"], [55, 3, 1, "", "stack"], [55, 3, 1, "", "swapaxes"], [55, 3, 1, "", "tile"], [55, 3, 1, "", "zero_pad"]], "ivy.array.norms": [[57, 2, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[57, 3, 1, "", "layer_norm"]], "ivy.array.random": [[59, 2, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[61, 2, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[63, 2, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[63, 3, 1, "", "unique_all"], [63, 3, 1, "", "unique_counts"], [63, 3, 1, "", "unique_inverse"], [63, 3, 1, "", "unique_values"]], "ivy.array.sorting": [[65, 2, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[65, 3, 1, "", "argsort"], [65, 3, 1, "", "sort"]], "ivy.array.statistical": [[67, 2, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[67, 3, 1, "", "einsum"], [67, 3, 1, "", "max"], [67, 3, 1, "", "mean"], [67, 3, 1, "", "min"], [67, 3, 1, "", "prod"], [67, 3, 1, "", "std"], [67, 3, 1, "", "sum"], [67, 3, 1, "", "var"]], "ivy.array.utility": [[69, 2, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[69, 3, 1, "", "all"], [69, 3, 1, "", "any"]], "ivy.array.wrapping": [[71, 1, 1, "", "add_ivy_array_instance_methods"]], "ivy.backend_handler": [[0, 2, 1, "", "ContextManager"], [2, 1, 1, "", "choose_random_backend"], [3, 1, 1, "", "clear_backend_stack"], [4, 1, 1, "", "current_backend"], [5, 1, 1, "", "get_backend"], [6, 1, 1, "", "set_backend"], [7, 1, 1, "", "try_import_ivy_jax"], [8, 1, 1, "", "try_import_ivy_mxnet"], [9, 1, 1, "", "try_import_ivy_numpy"], [10, 1, 1, "", "try_import_ivy_tf"], [11, 1, 1, "", "try_import_ivy_torch"], [12, 1, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 3, 1, "", "__init__"]], "ivy.container": [[73, 0, 0, "-", "activations"], [75, 0, 0, "-", "base"], [77, 0, 0, "-", "container"], [80, 0, 0, "-", "creation"], [82, 0, 0, "-", "data_type"], [84, 0, 0, "-", "device"], [86, 0, 0, "-", "elementwise"], [88, 0, 0, "-", "general"], [90, 0, 0, "-", "gradients"], [92, 0, 0, "-", "image"], [94, 0, 0, "-", "layers"], [96, 0, 0, "-", "linear_algebra"], [98, 0, 0, "-", "losses"], [100, 0, 0, "-", "manipulation"], [102, 0, 0, "-", "norms"], [104, 0, 0, "-", "random"], [106, 0, 0, "-", "searching"], [108, 0, 0, "-", "set"], [110, 0, 0, "-", "sorting"], [112, 0, 0, "-", "statistical"], [114, 0, 0, "-", "utility"], [116, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[74, 2, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[74, 3, 1, "", "gelu"], [74, 3, 1, "", "leaky_relu"], [74, 3, 1, "", "relu"], [74, 3, 1, "", "sigmoid"], [74, 3, 1, "", "softmax"], [74, 3, 1, "", "softplus"], [74, 3, 1, "", "static_gelu"], [74, 3, 1, "", "static_leaky_relu"], [74, 3, 1, "", "static_relu"], [74, 3, 1, "", "static_sigmoid"], [74, 3, 1, "", "static_softmax"], [74, 3, 1, "", "static_softplus"], [74, 3, 1, "", "static_tanh"], [74, 3, 1, "", "tanh"]], "ivy.container.base": [[76, 2, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[76, 3, 1, "", "__getitem__"], [76, 3, 1, "", "__init__"], [76, 3, 1, "", "__setitem__"], [76, 3, 1, "", "all_false"], [76, 3, 1, "", "all_key_chains"], [76, 3, 1, "", "all_true"], [76, 3, 1, "", "arrays_as_lists"], [76, 3, 1, "", "as_arrays"], [76, 3, 1, "", "as_bools"], [76, 3, 1, "", "as_ones"], [76, 3, 1, "", "as_random_uniform"], [76, 3, 1, "", "as_variables"], [76, 3, 1, "", "as_zeros"], [76, 3, 1, "", "assert_contains_sub_container"], [76, 3, 1, "", "assert_contains_sub_structure"], [76, 3, 1, "", "assert_identical"], [76, 3, 1, "", "assert_identical_structure"], [76, 3, 1, "", "at_key_chain"], [76, 3, 1, "", "at_key_chains"], [76, 3, 1, "", "at_keys"], [76, 3, 1, "", "clip"], [76, 3, 1, "", "combine"], [76, 3, 1, "", "common_key_chains"], [76, 4, 1, "", "config"], [76, 3, 1, "", "contains_sub_container"], [76, 3, 1, "", "contains_sub_structure"], [76, 3, 1, "", "copy"], [76, 3, 1, "", "create_if_absent"], [76, 3, 1, "", "cutoff_at_depth"], [76, 3, 1, "", "cutoff_at_height"], [76, 3, 1, "", "deep_copy"], [76, 4, 1, "", "dev"], [76, 3, 1, "", "dev_clone"], [76, 3, 1, "", "dev_dist"], [76, 4, 1, "", "dev_str"], [76, 3, 1, "", "diff"], [76, 3, 1, "", "dtype"], [76, 3, 1, "", "einops_rearrange"], [76, 3, 1, "", "einops_reduce"], [76, 3, 1, "", "einops_repeat"], [76, 3, 1, "", "find_sub_container"], [76, 3, 1, "", "find_sub_structure"], [76, 3, 1, "", "flatten_key_chain"], [76, 3, 1, "", "flatten_key_chains"], [76, 3, 1, "", "format_key_chains"], [76, 3, 1, "", "from_disk_as_hdf5"], [76, 3, 1, "", "from_disk_as_json"], [76, 3, 1, "", "from_disk_as_pickled"], [76, 3, 1, "", "from_flat_list"], [76, 3, 1, "", "from_numpy"], [76, 3, 1, "", "gather"], [76, 3, 1, "", "gather_nd"], [76, 3, 1, "", "h5_file_size"], [76, 3, 1, "", "handle_inplace"], [76, 3, 1, "", "has_key"], [76, 3, 1, "", "has_key_chain"], [76, 3, 1, "", "has_nans"], [76, 3, 1, "", "identical"], [76, 3, 1, "", "identical_array_shapes"], [76, 3, 1, "", "identical_configs"], [76, 3, 1, "", "identical_structure"], [76, 3, 1, "", "if_exists"], [76, 3, 1, "", "inplace_update"], [76, 4, 1, "", "ivy"], [76, 3, 1, "", "key_chains_containing"], [76, 3, 1, "", "list_join"], [76, 3, 1, "", "list_stack"], [76, 3, 1, "", "map"], [76, 3, 1, "", "map_conts"], [76, 3, 1, "", "matrix_norm"], [76, 4, 1, "", "max_depth"], [76, 3, 1, "", "maximum"], [76, 3, 1, "", "minimum"], [76, 3, 1, "", "multi_map"], [76, 3, 1, "", "multi_map_in_static_method"], [76, 3, 1, "", "num_arrays"], [76, 3, 1, "", "overwrite_at_key_chain"], [76, 3, 1, "", "overwrite_at_key_chains"], [76, 3, 1, "", "prune_empty"], [76, 3, 1, "", "prune_key_chain"], [76, 3, 1, "", "prune_key_chains"], [76, 3, 1, "", "prune_key_from_key_chains"], [76, 3, 1, "", "prune_keys"], [76, 3, 1, "", "prune_keys_from_key_chains"], [76, 3, 1, "", "reduce"], [76, 3, 1, "", "remove_key_length_limit"], [76, 3, 1, "", "remove_print_limit"], [76, 3, 1, "", "reshape_like"], [76, 3, 1, "", "restructure"], [76, 3, 1, "", "restructure_key_chains"], [76, 3, 1, "", "set_at_key_chain"], [76, 3, 1, "", "set_at_key_chains"], [76, 3, 1, "", "set_at_keys"], [76, 3, 1, "", "set_framework"], [76, 3, 1, "", "set_ivy_backend"], [76, 4, 1, "", "shape"], [76, 4, 1, "", "shapes"], [76, 3, 1, "", "show"], [76, 3, 1, "", "show_sub_container"], [76, 3, 1, "", "shuffle"], [76, 3, 1, "", "shuffle_h5_file"], [76, 3, 1, "", "size_ordered_arrays"], [76, 3, 1, "", "slice_keys"], [76, 3, 1, "", "slice_via_key"], [76, 3, 1, "", "sort_by_key"], [76, 3, 1, "", "split"], [76, 3, 1, "", "stop_gradients"], [76, 3, 1, "", "structural_diff"], [76, 3, 1, "", "to_device"], [76, 3, 1, "", "to_dict"], [76, 3, 1, "", "to_disk_as_hdf5"], [76, 3, 1, "", "to_disk_as_json"], [76, 3, 1, "", "to_disk_as_pickled"], [76, 3, 1, "", "to_flat_list"], [76, 3, 1, "", "to_iterator"], [76, 3, 1, "", "to_iterator_keys"], [76, 3, 1, "", "to_iterator_values"], [76, 3, 1, "", "to_ivy"], [76, 3, 1, "", "to_jsonable"], [76, 3, 1, "", "to_list"], [76, 3, 1, "", "to_multi_dev"], [76, 3, 1, "", "to_native"], [76, 3, 1, "", "to_numpy"], [76, 3, 1, "", "to_raw"], [76, 3, 1, "", "trim_key"], [76, 3, 1, "", "try_kc"], [76, 3, 1, "", "unify"], [76, 3, 1, "", "unstack"], [76, 3, 1, "", "update_config"], [76, 3, 1, "", "vector_norm"], [76, 3, 1, "", "with_default_key_color"], [76, 3, 1, "", "with_entries_as_lists"], [76, 3, 1, "", "with_ivy_backend"], [76, 3, 1, "", "with_key_length_limit"], [76, 3, 1, "", "with_print_indent"], [76, 3, 1, "", "with_print_limit"], [76, 3, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[78, 2, 1, "", "Container"], [79, 2, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[78, 3, 1, "", "__add__"], [78, 3, 1, "", "__init__"], [78, 3, 1, "", "__radd__"], [78, 3, 1, "", "arange"], [78, 3, 1, "", "arg_info"], [78, 3, 1, "", "arg_names"], [78, 3, 1, "", "argmax"], [78, 3, 1, "", "argmin"], [78, 3, 1, "", "array"], [78, 3, 1, "", "array_equal"], [78, 3, 1, "", "arrays_equal"], [78, 3, 1, "", "as_ivy_dev"], [78, 3, 1, "", "as_ivy_dtype"], [78, 3, 1, "", "as_native_dev"], [78, 3, 1, "", "as_native_dtype"], [78, 3, 1, "", "assert_supports_inplace"], [78, 3, 1, "", "cache_fn"], [78, 3, 1, "", "clear_mem_on_dev"], [78, 3, 1, "", "clip_matrix_norm"], [78, 3, 1, "", "closest_valid_dtype"], [78, 3, 1, "", "container_types"], [78, 3, 1, "", "conv1d"], [78, 3, 1, "", "conv1d_transpose"], [78, 3, 1, "", "conv2d"], [78, 3, 1, "", "conv2d_transpose"], [78, 3, 1, "", "conv3d"], [78, 3, 1, "", "conv3d_transpose"], [78, 3, 1, "", "copy_array"], [78, 3, 1, "", "cross"], [78, 3, 1, "", "cumprod"], [78, 3, 1, "", "cumsum"], [78, 3, 1, "", "current_backend"], [78, 3, 1, "", "current_backend_str"], [78, 3, 1, "", "default"], [78, 3, 1, "", "default_device"], [78, 3, 1, "", "default_dtype"], [78, 3, 1, "", "default_float_dtype"], [78, 3, 1, "", "default_int_dtype"], [78, 3, 1, "", "det"], [78, 3, 1, "", "dev_clone_array"], [78, 3, 1, "", "dev_clone_iter"], [78, 3, 1, "", "dev_clone_nest"], [78, 3, 1, "", "dev_dist_array"], [78, 3, 1, "", "dev_dist_iter"], [78, 3, 1, "", "dev_dist_nest"], [78, 3, 1, "", "dev_unify"], [78, 3, 1, "", "dev_unify_array"], [78, 3, 1, "", "dev_unify_iter"], [78, 3, 1, "", "dev_unify_nest"], [78, 3, 1, "", "dev_util"], [78, 3, 1, "", "diagonal"], [78, 3, 1, "", "dropout"], [78, 3, 1, "", "dtype_bits"], [78, 3, 1, "", "eigh"], [78, 3, 1, "", "eigvalsh"], [78, 3, 1, "", "empty"], [78, 3, 1, "", "execute_with_gradients"], [78, 3, 1, "", "exists"], [78, 3, 1, "", "eye"], [78, 3, 1, "", "floormod"], [78, 3, 1, "", "fourier_encode"], [78, 3, 1, "", "full"], [78, 3, 1, "", "function_supported_dtypes"], [78, 3, 1, "", "function_unsupported_dtypes"], [78, 3, 1, "", "get_all_arrays_in_memory"], [78, 3, 1, "", "get_all_ivy_arrays_on_dev"], [78, 3, 1, "", "get_min_base"], [78, 3, 1, "", "get_min_denominator"], [78, 3, 1, "", "get_num_dims"], [78, 3, 1, "", "get_referrers_recursive"], [78, 3, 1, "", "gpu_is_available"], [78, 3, 1, "", "handle_nestable"], [78, 3, 1, "", "handle_out_argument"], [78, 3, 1, "", "indices_where"], [78, 3, 1, "", "infer_device"], [78, 3, 1, "", "infer_dtype"], [78, 3, 1, "", "inplace_arrays_supported"], [78, 3, 1, "", "inplace_decrement"], [78, 3, 1, "", "inplace_increment"], [78, 3, 1, "", "inplace_variables_supported"], [78, 3, 1, "", "inputs_to_native_arrays"], [78, 3, 1, "", "inv"], [78, 3, 1, "", "invalid_dtype"], [78, 3, 1, "", "is_ivy_container"], [78, 3, 1, "", "linear"], [78, 3, 1, "", "linspace"], [78, 3, 1, "", "logspace"], [78, 3, 1, "", "lstm_update"], [78, 3, 1, "", "match_kwargs"], [78, 3, 1, "", "matrix_power"], [78, 3, 1, "", "matrix_rank"], [78, 3, 1, "", "matrix_transpose"], [78, 3, 1, "", "multi_head_attention"], [78, 3, 1, "", "multinomial"], [78, 3, 1, "", "multiprocessing"], [78, 3, 1, "", "nonzero"], [78, 3, 1, "", "num_arrays_in_memory"], [78, 3, 1, "", "num_cpu_cores"], [78, 3, 1, "", "num_gpus"], [78, 3, 1, "", "num_ivy_arrays_on_dev"], [78, 3, 1, "", "one_hot"], [78, 3, 1, "", "ones"], [78, 3, 1, "", "outer"], [78, 3, 1, "", "outputs_to_ivy_arrays"], [78, 3, 1, "", "percent_used_mem_on_dev"], [78, 3, 1, "", "pinv"], [78, 3, 1, "", "print_all_arrays_in_memory"], [78, 3, 1, "", "print_all_ivy_arrays_on_dev"], [78, 3, 1, "", "promote_types"], [78, 3, 1, "", "qr"], [78, 3, 1, "", "queue_timeout"], [78, 3, 1, "", "randint"], [78, 3, 1, "", "random_normal"], [78, 3, 1, "", "scaled_dot_product_attention"], [78, 3, 1, "", "scatter_flat"], [78, 3, 1, "", "scatter_nd"], [78, 3, 1, "", "seed"], [78, 3, 1, "", "set_default_device"], [78, 3, 1, "", "set_default_dtype"], [78, 3, 1, "", "set_default_float_dtype"], [78, 3, 1, "", "set_default_int_dtype"], [78, 3, 1, "", "set_min_base"], [78, 3, 1, "", "set_min_denominator"], [78, 3, 1, "", "set_queue_timeout"], [78, 3, 1, "", "set_shape_array_mode"], [78, 3, 1, "", "set_split_factor"], [78, 3, 1, "", "set_tmp_dir"], [78, 3, 1, "", "set_with_grads"], [78, 3, 1, "", "shape_array_mode"], [78, 3, 1, "", "shape_to_tuple"], [78, 3, 1, "", "slogdet"], [78, 3, 1, "", "solve"], [78, 3, 1, "", "split_factor"], [78, 3, 1, "", "split_func_call"], [78, 3, 1, "", "stable_divide"], [78, 3, 1, "", "stable_pow"], [78, 3, 1, "", "static_acos"], [78, 3, 1, "", "static_acosh"], [78, 3, 1, "", "static_arg_info"], [78, 3, 1, "", "static_arg_names"], [78, 3, 1, "", "static_argmax"], [78, 3, 1, "", "static_argmin"], [78, 3, 1, "", "static_array"], [78, 3, 1, "", "static_array_equal"], [78, 3, 1, "", "static_arrays_equal"], [78, 3, 1, "", "static_as_ivy_dev"], [78, 3, 1, "", "static_as_ivy_dtype"], [78, 3, 1, "", "static_as_native_dev"], [78, 3, 1, "", "static_as_native_dtype"], [78, 3, 1, "", "static_asin"], [78, 3, 1, "", "static_assert_supports_inplace"], [78, 3, 1, "", "static_atan"], [78, 3, 1, "", "static_atan2"], [78, 3, 1, "", "static_atanh"], [78, 3, 1, "", "static_bitwise_and"], [78, 3, 1, "", "static_bitwise_invert"], [78, 3, 1, "", "static_bitwise_left_shift"], [78, 3, 1, "", "static_bitwise_or"], [78, 3, 1, "", "static_bitwise_right_shift"], [78, 3, 1, "", "static_bitwise_xor"], [78, 3, 1, "", "static_cache_fn"], [78, 3, 1, "", "static_ceil"], [78, 3, 1, "", "static_clear_mem_on_dev"], [78, 3, 1, "", "static_clip_matrix_norm"], [78, 3, 1, "", "static_clip_vector_norm"], [78, 3, 1, "", "static_closest_valid_dtype"], [78, 3, 1, "", "static_concat"], [78, 3, 1, "", "static_constant_pad"], [78, 3, 1, "", "static_container_types"], [78, 3, 1, "", "static_conv1d"], [78, 3, 1, "", "static_conv1d_transpose"], [78, 3, 1, "", "static_conv2d"], [78, 3, 1, "", "static_conv2d_transpose"], [78, 3, 1, "", "static_conv3d"], [78, 3, 1, "", "static_conv3d_transpose"], [78, 3, 1, "", "static_copy_array"], [78, 3, 1, "", "static_cosh"], [78, 3, 1, "", "static_cross"], [78, 3, 1, "", "static_cumprod"], [78, 3, 1, "", "static_cumsum"], [78, 3, 1, "", "static_current_backend"], [78, 3, 1, "", "static_current_backend_str"], [78, 3, 1, "", "static_default"], [78, 3, 1, "", "static_default_device"], [78, 3, 1, "", "static_default_dtype"], [78, 3, 1, "", "static_default_float_dtype"], [78, 3, 1, "", "static_default_int_dtype"], [78, 3, 1, "", "static_det"], [78, 3, 1, "", "static_dev"], [78, 3, 1, "", "static_dev_clone"], [78, 3, 1, "", "static_dev_clone_array"], [78, 3, 1, "", "static_dev_clone_iter"], [78, 3, 1, "", "static_dev_clone_nest"], [78, 3, 1, "", "static_dev_dist"], [78, 3, 1, "", "static_dev_dist_array"], [78, 3, 1, "", "static_dev_dist_iter"], [78, 3, 1, "", "static_dev_dist_nest"], [78, 3, 1, "", "static_dev_unify"], [78, 3, 1, "", "static_dev_unify_array"], [78, 3, 1, "", "static_dev_unify_iter"], [78, 3, 1, "", "static_dev_unify_nest"], [78, 3, 1, "", "static_dev_util"], [78, 3, 1, "", "static_diagonal"], [78, 3, 1, "", "static_dropout"], [78, 3, 1, "", "static_dtype"], [78, 3, 1, "", "static_dtype_bits"], [78, 3, 1, "", "static_eigh"], [78, 3, 1, "", "static_eigvalsh"], [78, 3, 1, "", "static_einops_rearrange"], [78, 3, 1, "", "static_einops_reduce"], [78, 3, 1, "", "static_einops_repeat"], [78, 3, 1, "", "static_einsum"], [78, 3, 1, "", "static_empty"], [78, 3, 1, "", "static_equal"], [78, 3, 1, "", "static_erf"], [78, 3, 1, "", "static_execute_with_gradients"], [78, 3, 1, "", "static_exists"], [78, 3, 1, "", "static_exp"], [78, 3, 1, "", "static_expand_dims"], [78, 3, 1, "", "static_expm1"], [78, 3, 1, "", "static_flip"], [78, 3, 1, "", "static_floor"], [78, 3, 1, "", "static_floor_divide"], [78, 3, 1, "", "static_floormod"], [78, 3, 1, "", "static_fourier_encode"], [78, 3, 1, "", "static_full"], [78, 3, 1, "", "static_function_supported_dtypes"], [78, 3, 1, "", "static_function_unsupported_dtypes"], [78, 3, 1, "", "static_gather"], [78, 3, 1, "", "static_get_all_arrays_in_memory"], [78, 3, 1, "", "static_get_all_ivy_arrays_on_dev"], [78, 3, 1, "", "static_get_min_base"], [78, 3, 1, "", "static_get_min_denominator"], [78, 3, 1, "", "static_get_num_dims"], [78, 3, 1, "", "static_get_referrers_recursive"], [78, 3, 1, "", "static_gpu_is_available"], [78, 3, 1, "", "static_greater"], [78, 3, 1, "", "static_greater_equal"], [78, 3, 1, "", "static_handle_nestable"], [78, 3, 1, "", "static_handle_out_argument"], [78, 3, 1, "", "static_has_nans"], [78, 3, 1, "", "static_indices_where"], [78, 3, 1, "", "static_infer_device"], [78, 3, 1, "", "static_infer_dtype"], [78, 3, 1, "", "static_inplace_arrays_supported"], [78, 3, 1, "", "static_inplace_decrement"], [78, 3, 1, "", "static_inplace_increment"], [78, 3, 1, "", "static_inplace_update"], [78, 3, 1, "", "static_inplace_variables_supported"], [78, 3, 1, "", "static_inputs_to_native_arrays"], [78, 3, 1, "", "static_inv"], [78, 3, 1, "", "static_invalid_dtype"], [78, 3, 1, "", "static_is_array"], [78, 3, 1, "", "static_is_ivy_array"], [78, 3, 1, "", "static_is_ivy_container"], [78, 3, 1, "", "static_is_native_array"], [78, 3, 1, "", "static_isfinite"], [78, 3, 1, "", "static_isinf"], [78, 3, 1, "", "static_isnan"], [78, 3, 1, "", "static_less"], [78, 3, 1, "", "static_less_equal"], [78, 3, 1, "", "static_linear"], [78, 3, 1, "", "static_log"], [78, 3, 1, "", "static_log10"], [78, 3, 1, "", "static_log1p"], [78, 3, 1, "", "static_log2"], [78, 3, 1, "", "static_logaddexp"], [78, 3, 1, "", "static_logical_and"], [78, 3, 1, "", "static_logical_not"], [78, 3, 1, "", "static_logical_or"], [78, 3, 1, "", "static_logical_xor"], [78, 3, 1, "", "static_lstm_update"], [78, 3, 1, "", "static_match_kwargs"], [78, 3, 1, "", "static_matmul"], [78, 3, 1, "", "static_matrix_norm"], [78, 3, 1, "", "static_matrix_power"], [78, 3, 1, "", "static_matrix_rank"], [78, 3, 1, "", "static_matrix_transpose"], [78, 3, 1, "", "static_max"], [78, 3, 1, "", "static_maximum"], [78, 3, 1, "", "static_mean"], [78, 3, 1, "", "static_min"], [78, 3, 1, "", "static_minimum"], [78, 3, 1, "", "static_multi_head_attention"], [78, 3, 1, "", "static_multinomial"], [78, 3, 1, "", "static_multiprocessing"], [78, 3, 1, "", "static_negative"], [78, 3, 1, "", "static_nonzero"], [78, 3, 1, "", "static_not_equal"], [78, 3, 1, "", "static_num_arrays_in_memory"], [78, 3, 1, "", "static_num_cpu_cores"], [78, 3, 1, "", "static_num_gpus"], [78, 3, 1, "", "static_num_ivy_arrays_on_dev"], [78, 3, 1, "", "static_one_hot"], [78, 3, 1, "", "static_outer"], [78, 3, 1, "", "static_outputs_to_ivy_arrays"], [78, 3, 1, "", "static_percent_used_mem_on_dev"], [78, 3, 1, "", "static_permute_dims"], [78, 3, 1, "", "static_pinv"], [78, 3, 1, "", "static_positive"], [78, 3, 1, "", "static_pow"], [78, 3, 1, "", "static_print_all_arrays_in_memory"], [78, 3, 1, "", "static_print_all_ivy_arrays_on_dev"], [78, 3, 1, "", "static_prod"], [78, 3, 1, "", "static_promote_types"], [78, 3, 1, "", "static_qr"], [78, 3, 1, "", "static_queue_timeout"], [78, 3, 1, "", "static_random_normal"], [78, 3, 1, "", "static_remainder"], [78, 3, 1, "", "static_repeat"], [78, 3, 1, "", "static_reshape"], [78, 3, 1, "", "static_round"], [78, 3, 1, "", "static_scaled_dot_product_attention"], [78, 3, 1, "", "static_scatter_flat"], [78, 3, 1, "", "static_scatter_nd"], [78, 3, 1, "", "static_seed"], [78, 3, 1, "", "static_set_default_device"], [78, 3, 1, "", "static_set_default_dtype"], [78, 3, 1, "", "static_set_default_float_dtype"], [78, 3, 1, "", "static_set_default_int_dtype"], [78, 3, 1, "", "static_set_min_base"], [78, 3, 1, "", "static_set_min_denominator"], [78, 3, 1, "", "static_set_queue_timeout"], [78, 3, 1, "", "static_set_shape_array_mode"], [78, 3, 1, "", "static_set_split_factor"], [78, 3, 1, "", "static_set_tmp_dir"], [78, 3, 1, "", "static_set_with_grads"], [78, 3, 1, "", "static_shape"], [78, 3, 1, "", "static_shape_array_mode"], [78, 3, 1, "", "static_shape_to_tuple"], [78, 3, 1, "", "static_shuffle"], [78, 3, 1, "", "static_slogdet"], [78, 3, 1, "", "static_solve"], [78, 3, 1, "", "static_split"], [78, 3, 1, "", "static_split_factor"], [78, 3, 1, "", "static_split_func_call"], [78, 3, 1, "", "static_sqrt"], [78, 3, 1, "", "static_square"], [78, 3, 1, "", "static_squeeze"], [78, 3, 1, "", "static_stable_divide"], [78, 3, 1, "", "static_stable_pow"], [78, 3, 1, "", "static_stack"], [78, 3, 1, "", "static_std"], [78, 3, 1, "", "static_stop_gradient"], [78, 3, 1, "", "static_sum"], [78, 3, 1, "", "static_supports_inplace"], [78, 3, 1, "", "static_svd"], [78, 3, 1, "", "static_svdvals"], [78, 3, 1, "", "static_swapaxes"], [78, 3, 1, "", "static_tensordot"], [78, 3, 1, "", "static_tile"], [78, 3, 1, "", "static_tmp_dir"], [78, 3, 1, "", "static_to_device"], [78, 3, 1, "", "static_to_list"], [78, 3, 1, "", "static_to_native_arrays_and_back"], [78, 3, 1, "", "static_to_scalar"], [78, 3, 1, "", "static_total_mem_on_dev"], [78, 3, 1, "", "static_tpu_is_available"], [78, 3, 1, "", "static_trace"], [78, 3, 1, "", "static_trunc"], [78, 3, 1, "", "static_try_else_none"], [78, 3, 1, "", "static_type_promote_arrays"], [78, 3, 1, "", "static_unset_default_device"], [78, 3, 1, "", "static_unset_default_dtype"], [78, 3, 1, "", "static_unset_default_float_dtype"], [78, 3, 1, "", "static_unset_default_int_dtype"], [78, 3, 1, "", "static_unset_shape_array_mode"], [78, 3, 1, "", "static_unset_with_grads"], [78, 3, 1, "", "static_unstack"], [78, 3, 1, "", "static_used_mem_on_dev"], [78, 3, 1, "", "static_valid_dtype"], [78, 3, 1, "", "static_value_is_nan"], [78, 3, 1, "", "static_var"], [78, 3, 1, "", "static_variable"], [78, 3, 1, "", "static_variable_data"], [78, 3, 1, "", "static_vecdot"], [78, 3, 1, "", "static_vector_norm"], [78, 3, 1, "", "static_vector_to_skew_symmetric_matrix"], [78, 3, 1, "", "static_where"], [78, 3, 1, "", "static_with_grads"], [78, 3, 1, "", "static_zero_pad"], [78, 3, 1, "", "stop_gradient"], [78, 3, 1, "", "supports_inplace"], [78, 3, 1, "", "svd"], [78, 3, 1, "", "svdvals"], [78, 3, 1, "", "tensordot"], [78, 3, 1, "", "tmp_dir"], [78, 3, 1, "", "to_native_arrays_and_back"], [78, 3, 1, "", "to_scalar"], [78, 3, 1, "", "total_mem_on_dev"], [78, 3, 1, "", "tpu_is_available"], [78, 3, 1, "", "trace"], [78, 3, 1, "", "try_else_none"], [78, 3, 1, "", "type_promote_arrays"], [78, 3, 1, "", "unset_default_device"], [78, 3, 1, "", "unset_default_dtype"], [78, 3, 1, "", "unset_default_float_dtype"], [78, 3, 1, "", "unset_default_int_dtype"], [78, 3, 1, "", "unset_shape_array_mode"], [78, 3, 1, "", "unset_with_grads"], [78, 3, 1, "", "used_mem_on_dev"], [78, 3, 1, "", "valid_dtype"], [78, 3, 1, "", "value_is_nan"], [78, 3, 1, "", "variable"], [78, 3, 1, "", "variable_data"], [78, 3, 1, "", "vecdot"], [78, 3, 1, "", "vector_to_skew_symmetric_matrix"], [78, 3, 1, "", "where"], [78, 3, 1, "", "with_grads"], [78, 3, 1, "", "zeros"]], "ivy.container.container.MultiDevContainer": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "at_dev"], [79, 3, 1, "", "at_devs"]], "ivy.container.container_methods": [[398, 1, 1, "", "abs"], [403, 1, 1, "", "acos"], [407, 1, 1, "", "acosh"], [719, 1, 1, "", "adam_step"], [723, 1, 1, "", "adam_update"], [411, 1, 1, "", "add"], [1032, 1, 1, "", "all"], [637, 1, 1, "", "all_equal"], [1037, 1, 1, "", "any"], [988, 1, 1, "", "argsort"], [208, 1, 1, "", "asarray"], [416, 1, 1, "", "asin"], [420, 1, 1, "", "asinh"], [281, 1, 1, "", "astype"], [425, 1, 1, "", "atan"], [429, 1, 1, "", "atan2"], [433, 1, 1, "", "atanh"], [846, 1, 1, "", "binary_cross_entropy"], [437, 1, 1, "", "bitwise_and"], [441, 1, 1, "", "bitwise_invert"], [445, 1, 1, "", "bitwise_left_shift"], [449, 1, 1, "", "bitwise_or"], [453, 1, 1, "", "bitwise_right_shift"], [457, 1, 1, "", "bitwise_xor"], [286, 1, 1, "", "broadcast_arrays"], [291, 1, 1, "", "broadcast_to"], [296, 1, 1, "", "can_cast"], [461, 1, 1, "", "ceil"], [774, 1, 1, "", "cholesky"], [862, 1, 1, "", "clip"], [648, 1, 1, "", "clip_vector_norm"], [867, 1, 1, "", "concat"], [871, 1, 1, "", "constant_pad"], [465, 1, 1, "", "cos"], [470, 1, 1, "", "cosh"], [851, 1, 1, "", "cross_entropy"], [763, 1, 1, "", "depthwise_conv2d"], [474, 1, 1, "", "divide"], [305, 1, 1, "", "dtype"], [999, 1, 1, "", "einsum"], [214, 1, 1, "", "empty_like"], [479, 1, 1, "", "equal"], [483, 1, 1, "", "erf"], [487, 1, 1, "", "exp"], [875, 1, 1, "", "expand_dims"], [491, 1, 1, "", "expm1"], [310, 1, 1, "", "finfo"], [879, 1, 1, "", "flip"], [495, 1, 1, "", "floor"], [499, 1, 1, "", "floor_divide"], [222, 1, 1, "", "from_dlpack"], [228, 1, 1, "", "full_like"], [665, 1, 1, "", "gather_nd"], [166, 1, 1, "", "gelu"], [728, 1, 1, "", "gradient_descent_update"], [503, 1, 1, "", "greater"], [507, 1, 1, "", "greater_equal"], [317, 1, 1, "", "iinfo"], [323, 1, 1, "", "is_float_dtype"], [328, 1, 1, "", "is_int_dtype"], [733, 1, 1, "", "is_variable"], [511, 1, 1, "", "isfinite"], [515, 1, 1, "", "isinf"], [519, 1, 1, "", "isnan"], [737, 1, 1, "", "lamb_update"], [741, 1, 1, "", "lars_update"], [944, 1, 1, "", "layer_norm"], [171, 1, 1, "", "leaky_relu"], [523, 1, 1, "", "less"], [527, 1, 1, "", "less_equal"], [531, 1, 1, "", "log"], [535, 1, 1, "", "log10"], [539, 1, 1, "", "log1p"], [543, 1, 1, "", "log2"], [547, 1, 1, "", "logaddexp"], [551, 1, 1, "", "logical_and"], [555, 1, 1, "", "logical_not"], [559, 1, 1, "", "logical_or"], [563, 1, 1, "", "logical_xor"], [797, 1, 1, "", "matmul"], [1003, 1, 1, "", "max"], [1007, 1, 1, "", "mean"], [239, 1, 1, "", "meshgrid"], [1011, 1, 1, "", "min"], [569, 1, 1, "", "multiply"], [244, 1, 1, "", "native_array"], [574, 1, 1, "", "negative"], [578, 1, 1, "", "not_equal"], [252, 1, 1, "", "ones_like"], [745, 1, 1, "", "optimizer_update"], [883, 1, 1, "", "permute_dims"], [582, 1, 1, "", "positive"], [586, 1, 1, "", "pow"], [1015, 1, 1, "", "prod"], [954, 1, 1, "", "random_uniform"], [176, 1, 1, "", "relu"], [590, 1, 1, "", "remainder"], [887, 1, 1, "", "repeat"], [891, 1, 1, "", "reshape"], [334, 1, 1, "", "result_type"], [895, 1, 1, "", "roll"], [594, 1, 1, "", "round"], [181, 1, 1, "", "sigmoid"], [598, 1, 1, "", "sign"], [603, 1, 1, "", "sin"], [608, 1, 1, "", "sinh"], [186, 1, 1, "", "softmax"], [191, 1, 1, "", "softplus"], [993, 1, 1, "", "sort"], [856, 1, 1, "", "sparse_cross_entropy"], [613, 1, 1, "", "sqrt"], [617, 1, 1, "", "square"], [901, 1, 1, "", "squeeze"], [905, 1, 1, "", "stack"], [400, 1, 1, "", "static_abs"], [721, 1, 1, "", "static_adam_step"], [725, 1, 1, "", "static_adam_update"], [413, 1, 1, "", "static_add"], [1034, 1, 1, "", "static_all"], [639, 1, 1, "", "static_all_equal"], [1039, 1, 1, "", "static_any"], [205, 1, 1, "", "static_arange"], [990, 1, 1, "", "static_argsort"], [210, 1, 1, "", "static_asarray"], [422, 1, 1, "", "static_asinh"], [283, 1, 1, "", "static_astype"], [848, 1, 1, "", "static_binary_cross_entropy"], [288, 1, 1, "", "static_broadcast_arrays"], [293, 1, 1, "", "static_broadcast_to"], [298, 1, 1, "", "static_can_cast"], [776, 1, 1, "", "static_cholesky"], [864, 1, 1, "", "static_clip"], [467, 1, 1, "", "static_cos"], [853, 1, 1, "", "static_cross_entropy"], [765, 1, 1, "", "static_depthwise_conv2d"], [476, 1, 1, "", "static_divide"], [216, 1, 1, "", "static_empty_like"], [219, 1, 1, "", "static_eye"], [312, 1, 1, "", "static_finfo"], [224, 1, 1, "", "static_from_dlpack"], [230, 1, 1, "", "static_full_like"], [667, 1, 1, "", "static_gather_nd"], [168, 1, 1, "", "static_gelu"], [730, 1, 1, "", "static_gradient_descent_update"], [319, 1, 1, "", "static_iinfo"], [325, 1, 1, "", "static_is_float_dtype"], [330, 1, 1, "", "static_is_int_dtype"], [735, 1, 1, "", "static_is_variable"], [739, 1, 1, "", "static_lamb_update"], [743, 1, 1, "", "static_lars_update"], [946, 1, 1, "", "static_layer_norm"], [173, 1, 1, "", "static_leaky_relu"], [233, 1, 1, "", "static_linspace"], [236, 1, 1, "", "static_logspace"], [241, 1, 1, "", "static_meshgrid"], [571, 1, 1, "", "static_multiply"], [246, 1, 1, "", "static_native_array"], [249, 1, 1, "", "static_ones"], [254, 1, 1, "", "static_ones_like"], [747, 1, 1, "", "static_optimizer_update"], [951, 1, 1, "", "static_randint"], [956, 1, 1, "", "static_random_uniform"], [178, 1, 1, "", "static_relu"], [336, 1, 1, "", "static_result_type"], [897, 1, 1, "", "static_roll"], [183, 1, 1, "", "static_sigmoid"], [600, 1, 1, "", "static_sign"], [605, 1, 1, "", "static_sin"], [610, 1, 1, "", "static_sinh"], [188, 1, 1, "", "static_softmax"], [193, 1, 1, "", "static_softplus"], [995, 1, 1, "", "static_sort"], [858, 1, 1, "", "static_sparse_cross_entropy"], [620, 1, 1, "", "static_subtract"], [625, 1, 1, "", "static_tan"], [195, 1, 1, "", "static_tanh"], [706, 1, 1, "", "static_to_numpy"], [256, 1, 1, "", "static_tril"], [261, 1, 1, "", "static_triu"], [966, 1, 1, "", "static_unique_all"], [971, 1, 1, "", "static_unique_counts"], [976, 1, 1, "", "static_unique_inverse"], [981, 1, 1, "", "static_unique_values"], [266, 1, 1, "", "static_zeros"], [269, 1, 1, "", "static_zeros_like"], [1019, 1, 1, "", "std"], [622, 1, 1, "", "subtract"], [1023, 1, 1, "", "sum"], [909, 1, 1, "", "swapaxes"], [627, 1, 1, "", "tan"], [197, 1, 1, "", "tanh"], [913, 1, 1, "", "tile"], [708, 1, 1, "", "to_numpy"], [258, 1, 1, "", "tril"], [263, 1, 1, "", "triu"], [632, 1, 1, "", "trunc"], [968, 1, 1, "", "unique_all"], [973, 1, 1, "", "unique_counts"], [978, 1, 1, "", "unique_inverse"], [983, 1, 1, "", "unique_values"], [1027, 1, 1, "", "var"], [917, 1, 1, "", "zero_pad"], [271, 1, 1, "", "zeros_like"]], "ivy.container.creation": [[81, 2, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[81, 3, 1, "", "asarray"], [81, 3, 1, "", "empty_like"], [81, 3, 1, "", "from_dlpack"], [81, 3, 1, "", "full_like"], [81, 3, 1, "", "meshgrid"], [81, 3, 1, "", "native_array"], [81, 3, 1, "", "ones_like"], [81, 3, 1, "", "static_arange"], [81, 3, 1, "", "static_asarray"], [81, 3, 1, "", "static_empty_like"], [81, 3, 1, "", "static_eye"], [81, 3, 1, "", "static_from_dlpack"], [81, 3, 1, "", "static_full_like"], [81, 3, 1, "", "static_linspace"], [81, 3, 1, "", "static_logspace"], [81, 3, 1, "", "static_meshgrid"], [81, 3, 1, "", "static_native_array"], [81, 3, 1, "", "static_ones"], [81, 3, 1, "", "static_ones_like"], [81, 3, 1, "", "static_tril"], [81, 3, 1, "", "static_triu"], [81, 3, 1, "", "static_zeros"], [81, 3, 1, "", "static_zeros_like"], [81, 3, 1, "", "tril"], [81, 3, 1, "", "triu"], [81, 3, 1, "", "zeros_like"]], "ivy.container.data_type": [[83, 2, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[83, 3, 1, "", "astype"], [83, 3, 1, "", "broadcast_arrays"], [83, 3, 1, "", "broadcast_to"], [83, 3, 1, "", "can_cast"], [83, 3, 1, "", "dtype"], [83, 3, 1, "", "finfo"], [83, 3, 1, "", "iinfo"], [83, 3, 1, "", "is_float_dtype"], [83, 3, 1, "", "is_int_dtype"], [83, 3, 1, "", "result_type"], [83, 3, 1, "", "static_astype"], [83, 3, 1, "", "static_broadcast_arrays"], [83, 3, 1, "", "static_broadcast_to"], [83, 3, 1, "", "static_can_cast"], [83, 3, 1, "", "static_finfo"], [83, 3, 1, "", "static_iinfo"], [83, 3, 1, "", "static_is_float_dtype"], [83, 3, 1, "", "static_is_int_dtype"], [83, 3, 1, "", "static_result_type"]], "ivy.container.device": [[85, 2, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[87, 2, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[87, 3, 1, "", "abs"], [87, 3, 1, "", "acos"], [87, 3, 1, "", "acosh"], [87, 3, 1, "", "add"], [87, 3, 1, "", "asin"], [87, 3, 1, "", "asinh"], [87, 3, 1, "", "atan"], [87, 3, 1, "", "atan2"], [87, 3, 1, "", "atanh"], [87, 3, 1, "", "bitwise_and"], [87, 3, 1, "", "bitwise_invert"], [87, 3, 1, "", "bitwise_left_shift"], [87, 3, 1, "", "bitwise_or"], [87, 3, 1, "", "bitwise_right_shift"], [87, 3, 1, "", "bitwise_xor"], [87, 3, 1, "", "ceil"], [87, 3, 1, "", "cos"], [87, 3, 1, "", "cosh"], [87, 3, 1, "", "divide"], [87, 3, 1, "", "equal"], [87, 3, 1, "", "erf"], [87, 3, 1, "", "exp"], [87, 3, 1, "", "expm1"], [87, 3, 1, "", "floor"], [87, 3, 1, "", "floor_divide"], [87, 3, 1, "", "greater"], [87, 3, 1, "", "greater_equal"], [87, 3, 1, "", "isfinite"], [87, 3, 1, "", "isinf"], [87, 3, 1, "", "isnan"], [87, 3, 1, "", "less"], [87, 3, 1, "", "less_equal"], [87, 3, 1, "", "log"], [87, 3, 1, "", "log10"], [87, 3, 1, "", "log1p"], [87, 3, 1, "", "log2"], [87, 3, 1, "", "logaddexp"], [87, 3, 1, "", "logical_and"], [87, 3, 1, "", "logical_not"], [87, 3, 1, "", "logical_or"], [87, 3, 1, "", "logical_xor"], [87, 3, 1, "", "multiply"], [87, 3, 1, "", "negative"], [87, 3, 1, "", "not_equal"], [87, 3, 1, "", "positive"], [87, 3, 1, "", "pow"], [87, 3, 1, "", "remainder"], [87, 3, 1, "", "round"], [87, 3, 1, "", "sign"], [87, 3, 1, "", "sin"], [87, 3, 1, "", "sinh"], [87, 3, 1, "", "sqrt"], [87, 3, 1, "", "square"], [87, 3, 1, "", "static_abs"], [87, 3, 1, "", "static_add"], [87, 3, 1, "", "static_asinh"], [87, 3, 1, "", "static_cos"], [87, 3, 1, "", "static_divide"], [87, 3, 1, "", "static_multiply"], [87, 3, 1, "", "static_sign"], [87, 3, 1, "", "static_sin"], [87, 3, 1, "", "static_sinh"], [87, 3, 1, "", "static_subtract"], [87, 3, 1, "", "static_tan"], [87, 3, 1, "", "static_tanh"], [87, 3, 1, "", "subtract"], [87, 3, 1, "", "tan"], [87, 3, 1, "", "tanh"], [87, 3, 1, "", "trunc"]], "ivy.container.general": [[89, 2, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[89, 3, 1, "", "all_equal"], [89, 3, 1, "", "clip_vector_norm"], [89, 3, 1, "", "gather_nd"], [89, 3, 1, "", "static_all_equal"], [89, 3, 1, "", "static_gather_nd"], [89, 3, 1, "", "static_to_numpy"], [89, 3, 1, "", "to_numpy"]], "ivy.container.gradients": [[91, 2, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[91, 3, 1, "", "adam_step"], [91, 3, 1, "", "adam_update"], [91, 3, 1, "", "gradient_descent_update"], [91, 3, 1, "", "is_variable"], [91, 3, 1, "", "lamb_update"], [91, 3, 1, "", "lars_update"], [91, 3, 1, "", "optimizer_update"], [91, 3, 1, "", "static_adam_step"], [91, 3, 1, "", "static_adam_update"], [91, 3, 1, "", "static_gradient_descent_update"], [91, 3, 1, "", "static_is_variable"], [91, 3, 1, "", "static_lamb_update"], [91, 3, 1, "", "static_lars_update"], [91, 3, 1, "", "static_optimizer_update"]], "ivy.container.image": [[93, 2, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[95, 2, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[95, 3, 1, "", "depthwise_conv2d"], [95, 3, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[97, 2, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[97, 3, 1, "", "cholesky"], [97, 3, 1, "", "matmul"], [97, 3, 1, "", "static_cholesky"]], "ivy.container.losses": [[99, 2, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[99, 3, 1, "", "binary_cross_entropy"], [99, 3, 1, "", "cross_entropy"], [99, 3, 1, "", "sparse_cross_entropy"], [99, 3, 1, "", "static_binary_cross_entropy"], [99, 3, 1, "", "static_cross_entropy"], [99, 3, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[101, 2, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[101, 3, 1, "", "clip"], [101, 3, 1, "", "concat"], [101, 3, 1, "", "constant_pad"], [101, 3, 1, "", "expand_dims"], [101, 3, 1, "", "flip"], [101, 3, 1, "", "permute_dims"], [101, 3, 1, "", "repeat"], [101, 3, 1, "", "reshape"], [101, 3, 1, "", "roll"], [101, 3, 1, "", "squeeze"], [101, 3, 1, "", "stack"], [101, 3, 1, "", "static_clip"], [101, 3, 1, "", "static_roll"], [101, 3, 1, "", "swapaxes"], [101, 3, 1, "", "tile"], [101, 3, 1, "", "zero_pad"]], "ivy.container.norms": [[103, 2, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[103, 3, 1, "", "layer_norm"], [103, 3, 1, "", "static_layer_norm"]], "ivy.container.random": [[105, 2, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[105, 3, 1, "", "random_uniform"], [105, 3, 1, "", "static_randint"], [105, 3, 1, "", "static_random_uniform"]], "ivy.container.searching": [[107, 2, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[109, 2, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[109, 3, 1, "", "static_unique_all"], [109, 3, 1, "", "static_unique_counts"], [109, 3, 1, "", "static_unique_inverse"], [109, 3, 1, "", "static_unique_values"], [109, 3, 1, "", "unique_all"], [109, 3, 1, "", "unique_counts"], [109, 3, 1, "", "unique_inverse"], [109, 3, 1, "", "unique_values"]], "ivy.container.sorting": [[111, 2, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[111, 3, 1, "", "argsort"], [111, 3, 1, "", "sort"], [111, 3, 1, "", "static_argsort"], [111, 3, 1, "", "static_sort"]], "ivy.container.statistical": [[113, 2, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[113, 3, 1, "", "einsum"], [113, 3, 1, "", "max"], [113, 3, 1, "", "mean"], [113, 3, 1, "", "min"], [113, 3, 1, "", "prod"], [113, 3, 1, "", "std"], [113, 3, 1, "", "sum"], [113, 3, 1, "", "var"]], "ivy.container.utility": [[115, 2, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[115, 3, 1, "", "all"], [115, 3, 1, "", "any"], [115, 3, 1, "", "static_all"], [115, 3, 1, "", "static_any"]], "ivy.container.wrapping": [[117, 1, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[154, 1, 1, "", "handle_nestable"], [155, 1, 1, "", "handle_out_argument"], [156, 1, 1, "", "infer_device"], [157, 1, 1, "", "infer_dtype"], [158, 1, 1, "", "inputs_to_ivy_arrays"], [159, 1, 1, "", "inputs_to_native_arrays"], [160, 1, 1, "", "outputs_to_ivy_arrays"], [161, 1, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[163, 0, 0, "-", "activations"], [199, 0, 0, "-", "compilation"], [201, 0, 0, "-", "constants"], [202, 0, 0, "-", "creation"], [273, 0, 0, "-", "data_type"], [345, 0, 0, "-", "device"], [395, 0, 0, "-", "elementwise"], [634, 0, 0, "-", "general"], [715, 0, 0, "-", "gradients"], [754, 0, 0, "-", "layers"], [771, 0, 0, "-", "linear_algebra"], [843, 0, 0, "-", "losses"], [859, 0, 0, "-", "manipulation"], [919, 0, 0, "-", "meta"], [923, 0, 0, "-", "nest"], [941, 0, 0, "-", "norms"], [947, 0, 0, "-", "random"], [959, 0, 0, "-", "searching"], [964, 0, 0, "-", "set"], [985, 0, 0, "-", "sorting"], [996, 0, 0, "-", "statistical"], [1029, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[167, 1, 1, "", "gelu"], [172, 1, 1, "", "leaky_relu"], [177, 1, 1, "", "relu"], [182, 1, 1, "", "sigmoid"], [187, 1, 1, "", "softmax"], [192, 1, 1, "", "softplus"], [198, 1, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[200, 1, 1, "", "compile"]], "ivy.functional.ivy.constants": [[201, 5, 1, "", "e"], [201, 5, 1, "", "inf"], [201, 5, 1, "", "nan"], [201, 5, 1, "", "newaxis"], [201, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[204, 1, 1, "", "arange"], [202, 1, 1, "", "array"], [209, 1, 1, "", "asarray"], [211, 1, 1, "", "empty"], [215, 1, 1, "", "empty_like"], [218, 1, 1, "", "eye"], [223, 1, 1, "", "from_dlpack"], [225, 1, 1, "", "full"], [229, 1, 1, "", "full_like"], [232, 1, 1, "", "linspace"], [235, 1, 1, "", "logspace"], [240, 1, 1, "", "meshgrid"], [245, 1, 1, "", "native_array"], [248, 1, 1, "", "ones"], [253, 1, 1, "", "ones_like"], [259, 1, 1, "", "tril"], [264, 1, 1, "", "triu"], [267, 1, 1, "", "zeros"], [272, 1, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[273, 2, 1, "", "DefaultDtype"], [273, 2, 1, "", "DefaultFloatDtype"], [273, 2, 1, "", "DefaultIntDtype"], [277, 1, 1, "", "as_ivy_dtype"], [278, 1, 1, "", "as_native_dtype"], [282, 1, 1, "", "astype"], [287, 1, 1, "", "broadcast_arrays"], [292, 1, 1, "", "broadcast_to"], [297, 1, 1, "", "can_cast"], [299, 1, 1, "", "closest_valid_dtype"], [300, 1, 1, "", "default_dtype"], [301, 1, 1, "", "default_float_dtype"], [302, 1, 1, "", "default_int_dtype"], [306, 1, 1, "", "dtype"], [307, 1, 1, "", "dtype_bits"], [311, 1, 1, "", "finfo"], [313, 1, 1, "", "function_supported_dtypes"], [314, 1, 1, "", "function_unsupported_dtypes"], [318, 1, 1, "", "iinfo"], [320, 1, 1, "", "invalid_dtype"], [324, 1, 1, "", "is_float_dtype"], [329, 1, 1, "", "is_int_dtype"], [331, 1, 1, "", "promote_types"], [335, 1, 1, "", "result_type"], [337, 1, 1, "", "set_default_dtype"], [338, 1, 1, "", "set_default_float_dtype"], [339, 1, 1, "", "set_default_int_dtype"], [340, 1, 1, "", "type_promote_arrays"], [341, 1, 1, "", "unset_default_dtype"], [342, 1, 1, "", "unset_default_float_dtype"], [343, 1, 1, "", "unset_default_int_dtype"], [344, 1, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[273, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[273, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[273, 3, 1, "", "__init__"]], "ivy.functional.ivy.device": [[345, 2, 1, "", "DefaultDevice"], [347, 2, 1, "", "DevClonedItem"], [348, 2, 1, "", "DevClonedIter"], [349, 2, 1, "", "DevClonedNest"], [350, 2, 1, "", "DevDistItem"], [351, 2, 1, "", "DevDistIter"], [352, 2, 1, "", "DevDistNest"], [345, 2, 1, "", "DevManager"], [354, 2, 1, "", "DevMapper"], [355, 2, 1, "", "DevMapperMultiProc"], [345, 2, 1, "", "MultiDev"], [357, 2, 1, "", "MultiDevItem"], [358, 2, 1, "", "MultiDevIter"], [359, 2, 1, "", "MultiDevNest"], [360, 2, 1, "", "Profiler"], [361, 1, 1, "", "as_ivy_dev"], [362, 1, 1, "", "as_native_dev"], [363, 1, 1, "", "clear_mem_on_dev"], [364, 1, 1, "", "default_device"], [365, 1, 1, "", "dev"], [366, 1, 1, "", "dev_clone"], [367, 1, 1, "", "dev_clone_array"], [368, 1, 1, "", "dev_clone_iter"], [369, 1, 1, "", "dev_clone_nest"], [370, 1, 1, "", "dev_dist"], [371, 1, 1, "", "dev_dist_array"], [372, 1, 1, "", "dev_dist_iter"], [373, 1, 1, "", "dev_dist_nest"], [374, 1, 1, "", "dev_unify"], [375, 1, 1, "", "dev_unify_array"], [376, 1, 1, "", "dev_unify_iter"], [377, 1, 1, "", "dev_unify_nest"], [378, 1, 1, "", "dev_util"], [379, 1, 1, "", "get_all_ivy_arrays_on_dev"], [380, 1, 1, "", "gpu_is_available"], [381, 1, 1, "", "num_cpu_cores"], [382, 1, 1, "", "num_gpus"], [383, 1, 1, "", "num_ivy_arrays_on_dev"], [384, 1, 1, "", "percent_used_mem_on_dev"], [385, 1, 1, "", "print_all_ivy_arrays_on_dev"], [386, 1, 1, "", "set_default_device"], [387, 1, 1, "", "set_split_factor"], [388, 1, 1, "", "split_factor"], [389, 1, 1, "", "split_func_call"], [390, 1, 1, "", "to_device"], [391, 1, 1, "", "total_mem_on_dev"], [392, 1, 1, "", "tpu_is_available"], [393, 1, 1, "", "unset_default_device"], [394, 1, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[345, 3, 1, "", "__enter__"], [345, 3, 1, "", "__exit__"], [345, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[345, 3, 1, "", "__init__"], [345, 3, 1, "", "da_tune_step"], [345, 4, 1, "", "dim_size"], [345, 3, 1, "", "ds_tune_step"], [345, 3, 1, "", "map"], [345, 3, 1, "", "repeated_config_check"], [345, 4, 1, "", "tune_step"], [345, 4, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[354, 3, 1, "", "__init__"], [354, 3, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[355, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[345, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[357, 3, 1, "", "__init__"], [357, 3, 1, "", "items"], [357, 3, 1, "", "keys"], [357, 4, 1, "", "shape"], [357, 3, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[358, 3, 1, "", "__init__"], [358, 3, 1, "", "at_dev"], [358, 3, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[359, 3, 1, "", "__init__"], [359, 3, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[360, 3, 1, "", "__init__"], [360, 3, 1, "", "start"], [360, 3, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[399, 1, 1, "", "abs"], [404, 1, 1, "", "acos"], [408, 1, 1, "", "acosh"], [412, 1, 1, "", "add"], [417, 1, 1, "", "asin"], [421, 1, 1, "", "asinh"], [426, 1, 1, "", "atan"], [430, 1, 1, "", "atan2"], [434, 1, 1, "", "atanh"], [438, 1, 1, "", "bitwise_and"], [442, 1, 1, "", "bitwise_invert"], [446, 1, 1, "", "bitwise_left_shift"], [450, 1, 1, "", "bitwise_or"], [454, 1, 1, "", "bitwise_right_shift"], [458, 1, 1, "", "bitwise_xor"], [462, 1, 1, "", "ceil"], [466, 1, 1, "", "cos"], [471, 1, 1, "", "cosh"], [475, 1, 1, "", "divide"], [480, 1, 1, "", "equal"], [484, 1, 1, "", "erf"], [488, 1, 1, "", "exp"], [492, 1, 1, "", "expm1"], [496, 1, 1, "", "floor"], [500, 1, 1, "", "floor_divide"], [504, 1, 1, "", "greater"], [508, 1, 1, "", "greater_equal"], [512, 1, 1, "", "isfinite"], [516, 1, 1, "", "isinf"], [520, 1, 1, "", "isnan"], [524, 1, 1, "", "less"], [528, 1, 1, "", "less_equal"], [532, 1, 1, "", "log"], [536, 1, 1, "", "log10"], [540, 1, 1, "", "log1p"], [544, 1, 1, "", "log2"], [548, 1, 1, "", "logaddexp"], [552, 1, 1, "", "logical_and"], [556, 1, 1, "", "logical_not"], [560, 1, 1, "", "logical_or"], [564, 1, 1, "", "logical_xor"], [565, 1, 1, "", "maximum"], [566, 1, 1, "", "minimum"], [570, 1, 1, "", "multiply"], [575, 1, 1, "", "negative"], [579, 1, 1, "", "not_equal"], [583, 1, 1, "", "positive"], [587, 1, 1, "", "pow"], [591, 1, 1, "", "remainder"], [595, 1, 1, "", "round"], [599, 1, 1, "", "sign"], [604, 1, 1, "", "sin"], [609, 1, 1, "", "sinh"], [614, 1, 1, "", "sqrt"], [618, 1, 1, "", "square"], [623, 1, 1, "", "subtract"], [628, 1, 1, "", "tan"], [629, 1, 1, "", "tanh"], [633, 1, 1, "", "trunc"]], "ivy.functional.ivy.general": [[638, 1, 1, "", "all_equal"], [640, 1, 1, "", "arg_info"], [641, 1, 1, "", "arg_names"], [642, 1, 1, "", "array_equal"], [643, 1, 1, "", "arrays_equal"], [644, 1, 1, "", "assert_supports_inplace"], [645, 1, 1, "", "cache_fn"], [646, 1, 1, "", "clip_matrix_norm"], [649, 1, 1, "", "clip_vector_norm"], [650, 1, 1, "", "container_types"], [651, 1, 1, "", "copy_array"], [652, 1, 1, "", "cumprod"], [653, 1, 1, "", "cumsum"], [654, 1, 1, "", "current_backend_str"], [655, 1, 1, "", "default"], [656, 1, 1, "", "einops_rearrange"], [657, 1, 1, "", "einops_reduce"], [658, 1, 1, "", "einops_repeat"], [659, 1, 1, "", "exists"], [660, 1, 1, "", "floormod"], [661, 1, 1, "", "fourier_encode"], [662, 1, 1, "", "gather"], [666, 1, 1, "", "gather_nd"], [668, 1, 1, "", "get_all_arrays_in_memory"], [669, 1, 1, "", "get_min_base"], [670, 1, 1, "", "get_min_denominator"], [671, 1, 1, "", "get_num_dims"], [672, 1, 1, "", "get_referrers_recursive"], [673, 1, 1, "", "has_nans"], [674, 1, 1, "", "indices_where"], [675, 1, 1, "", "inplace_arrays_supported"], [676, 1, 1, "", "inplace_decrement"], [677, 1, 1, "", "inplace_increment"], [678, 1, 1, "", "inplace_update"], [679, 1, 1, "", "inplace_variables_supported"], [680, 1, 1, "", "is_array"], [681, 1, 1, "", "is_ivy_array"], [682, 1, 1, "", "is_ivy_container"], [683, 1, 1, "", "is_native_array"], [684, 1, 1, "", "match_kwargs"], [685, 1, 1, "", "multiprocessing"], [686, 1, 1, "", "num_arrays_in_memory"], [687, 1, 1, "", "one_hot"], [688, 1, 1, "", "print_all_arrays_in_memory"], [689, 1, 1, "", "queue_timeout"], [690, 1, 1, "", "scatter_flat"], [691, 1, 1, "", "scatter_nd"], [692, 1, 1, "", "set_min_base"], [693, 1, 1, "", "set_min_denominator"], [694, 1, 1, "", "set_queue_timeout"], [695, 1, 1, "", "set_shape_array_mode"], [696, 1, 1, "", "set_tmp_dir"], [697, 1, 1, "", "shape"], [698, 1, 1, "", "shape_array_mode"], [699, 1, 1, "", "shape_to_tuple"], [700, 1, 1, "", "stable_divide"], [701, 1, 1, "", "stable_pow"], [702, 1, 1, "", "supports_inplace"], [703, 1, 1, "", "tmp_dir"], [704, 1, 1, "", "to_list"], [709, 1, 1, "", "to_numpy"], [710, 1, 1, "", "to_scalar"], [711, 1, 1, "", "try_else_none"], [712, 1, 1, "", "unset_shape_array_mode"], [713, 1, 1, "", "unstack"], [714, 1, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[715, 2, 1, "", "GradientTracking"], [720, 1, 1, "", "adam_step"], [724, 1, 1, "", "adam_update"], [726, 1, 1, "", "execute_with_gradients"], [729, 1, 1, "", "gradient_descent_update"], [734, 1, 1, "", "is_variable"], [738, 1, 1, "", "lamb_update"], [742, 1, 1, "", "lars_update"], [746, 1, 1, "", "optimizer_update"], [748, 1, 1, "", "set_with_grads"], [749, 1, 1, "", "stop_gradient"], [750, 1, 1, "", "unset_with_grads"], [751, 1, 1, "", "variable"], [752, 1, 1, "", "variable_data"], [753, 1, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[715, 3, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[755, 1, 1, "", "conv1d"], [756, 1, 1, "", "conv1d_transpose"], [757, 1, 1, "", "conv2d"], [758, 1, 1, "", "conv2d_transpose"], [759, 1, 1, "", "conv3d"], [760, 1, 1, "", "conv3d_transpose"], [764, 1, 1, "", "depthwise_conv2d"], [766, 1, 1, "", "dropout"], [767, 1, 1, "", "linear"], [768, 1, 1, "", "lstm_update"], [769, 1, 1, "", "multi_head_attention"], [770, 1, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[775, 1, 1, "", "cholesky"], [779, 1, 1, "", "cross"], [782, 1, 1, "", "det"], [785, 1, 1, "", "diagonal"], [788, 1, 1, "", "eigh"], [791, 1, 1, "", "eigvalsh"], [794, 1, 1, "", "inv"], [798, 1, 1, "", "matmul"], [801, 1, 1, "", "matrix_norm"], [802, 1, 1, "", "matrix_power"], [805, 1, 1, "", "matrix_rank"], [808, 1, 1, "", "matrix_transpose"], [811, 1, 1, "", "outer"], [814, 1, 1, "", "pinv"], [817, 1, 1, "", "qr"], [818, 1, 1, "", "slogdet"], [821, 1, 1, "", "solve"], [824, 1, 1, "", "svd"], [827, 1, 1, "", "svdvals"], [830, 1, 1, "", "tensordot"], [833, 1, 1, "", "trace"], [836, 1, 1, "", "vecdot"], [839, 1, 1, "", "vector_norm"], [842, 1, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[847, 1, 1, "", "binary_cross_entropy"], [852, 1, 1, "", "cross_entropy"], [857, 1, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[863, 1, 1, "", "clip"], [868, 1, 1, "", "concat"], [872, 1, 1, "", "constant_pad"], [876, 1, 1, "", "expand_dims"], [880, 1, 1, "", "flip"], [884, 1, 1, "", "permute_dims"], [888, 1, 1, "", "repeat"], [892, 1, 1, "", "reshape"], [896, 1, 1, "", "roll"], [898, 1, 1, "", "split"], [902, 1, 1, "", "squeeze"], [906, 1, 1, "", "stack"], [910, 1, 1, "", "swapaxes"], [914, 1, 1, "", "tile"], [918, 1, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[920, 1, 1, "", "fomaml_step"], [921, 1, 1, "", "maml_step"], [922, 1, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[924, 1, 1, "", "all_nested_indices"], [925, 1, 1, "", "copy_nest"], [926, 1, 1, "", "index_nest"], [927, 1, 1, "", "insert_into_nest_at_index"], [928, 1, 1, "", "insert_into_nest_at_indices"], [929, 1, 1, "", "map"], [930, 1, 1, "", "map_nest_at_index"], [931, 1, 1, "", "map_nest_at_indices"], [932, 1, 1, "", "multi_index_nest"], [933, 1, 1, "", "nested_any"], [934, 1, 1, "", "nested_indices_where"], [935, 1, 1, "", "nested_map"], [936, 1, 1, "", "nested_multi_map"], [937, 1, 1, "", "prune_nest_at_index"], [938, 1, 1, "", "prune_nest_at_indices"], [939, 1, 1, "", "set_nest_at_index"], [940, 1, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[945, 1, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[948, 1, 1, "", "multinomial"], [950, 1, 1, "", "randint"], [952, 1, 1, "", "random_normal"], [955, 1, 1, "", "random_uniform"], [957, 1, 1, "", "seed"], [958, 1, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[960, 1, 1, "", "argmax"], [961, 1, 1, "", "argmin"], [962, 1, 1, "", "nonzero"], [963, 1, 1, "", "where"]], "ivy.functional.ivy.set": [[969, 1, 1, "", "unique_all"], [974, 1, 1, "", "unique_counts"], [979, 1, 1, "", "unique_inverse"], [984, 1, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[989, 1, 1, "", "argsort"], [994, 1, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1000, 1, 1, "", "einsum"], [1004, 1, 1, "", "max"], [1008, 1, 1, "", "mean"], [1012, 1, 1, "", "min"], [1016, 1, 1, "", "prod"], [1020, 1, 1, "", "std"], [1024, 1, 1, "", "sum"], [1028, 1, 1, "", "var"]], "ivy.functional.ivy.utility": [[1033, 1, 1, "", "all"], [1038, 1, 1, "", "any"]], "ivy.inspection": [[1044, 1, 1, "", "add_array_specs"], [1045, 1, 1, "", "fn_array_spec"]], "ivy.stateful": [[1048, 0, 0, "-", "activations"], [1051, 0, 0, "-", "converters"], [1053, 0, 0, "-", "initializers"], [1062, 0, 0, "-", "layers"], [1074, 0, 0, "-", "module"], [1076, 0, 0, "-", "norms"], [1078, 0, 0, "-", "optimizers"], [1084, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1049, 2, 1, "", "GEGLU"], [1050, 2, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1049, 3, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1050, 3, 1, "", "__init__"]], "ivy.stateful.converters": [[1052, 1, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1053, 2, 1, "", "Constant"], [1055, 2, 1, "", "FirstLayerSiren"], [1056, 2, 1, "", "GlorotUniform"], [1053, 2, 1, "", "KaimingNormal"], [1058, 2, 1, "", "Ones"], [1059, 2, 1, "", "Siren"], [1053, 2, 1, "", "Uniform"], [1061, 2, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1053, 3, 1, "", "__init__"], [1053, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1055, 3, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1056, 3, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1053, 3, 1, "", "__init__"], [1053, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1058, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1059, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1053, 3, 1, "", "__init__"], [1053, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1061, 3, 1, "", "__init__"]], "ivy.stateful.layers": [[1063, 2, 1, "", "Conv1D"], [1064, 2, 1, "", "Conv1DTranspose"], [1065, 2, 1, "", "Conv2D"], [1066, 2, 1, "", "Conv2DTranspose"], [1067, 2, 1, "", "Conv3D"], [1068, 2, 1, "", "Conv3DTranspose"], [1069, 2, 1, "", "DepthwiseConv2D"], [1070, 2, 1, "", "Dropout"], [1071, 2, 1, "", "LSTM"], [1072, 2, 1, "", "Linear"], [1073, 2, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1063, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1064, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1065, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1066, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1067, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1068, 3, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1069, 3, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1070, 3, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1071, 3, 1, "", "__init__"], [1071, 3, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1072, 3, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1073, 3, 1, "", "__init__"]], "ivy.stateful.module": [[1075, 2, 1, "", "Module"]], "ivy.stateful.module.Module": [[1075, 3, 1, "", "__init__"], [1075, 3, 1, "", "build"], [1075, 4, 1, "", "build_mode"], [1075, 4, 1, "", "built"], [1075, 3, 1, "", "check_submod_rets"], [1075, 3, 1, "", "get_mod_key"], [1075, 3, 1, "", "mod_depth"], [1075, 3, 1, "", "mod_height"], [1075, 3, 1, "", "mod_with_top_mod_key_chain"], [1075, 3, 1, "", "save_weights"], [1075, 3, 1, "", "show_mod_in_top_mod"], [1075, 3, 1, "", "show_structure"], [1075, 3, 1, "", "show_v_in_top_v"], [1075, 3, 1, "", "sub_mods"], [1075, 3, 1, "", "track_submod_call_order"], [1075, 3, 1, "", "track_submod_rets"], [1075, 3, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1077, 2, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1077, 3, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1079, 2, 1, "", "Adam"], [1080, 2, 1, "", "LAMB"], [1081, 2, 1, "", "LARS"], [1082, 2, 1, "", "Optimizer"], [1083, 2, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1079, 3, 1, "", "__init__"], [1079, 3, 1, "", "set_state"], [1079, 4, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1080, 3, 1, "", "__init__"], [1080, 3, 1, "", "set_state"], [1080, 4, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1081, 3, 1, "", "__init__"], [1081, 3, 1, "", "set_state"], [1081, 4, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1082, 3, 1, "", "__init__"], [1082, 3, 1, "", "set_state"], [1082, 3, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1083, 3, 1, "", "__init__"], [1083, 3, 1, "", "set_state"], [1083, 4, 1, "", "state"]], "ivy.stateful.sequential": [[1085, 2, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1085, 3, 1, "", "__init__"]], "ivy.verbosity": [[1088, 1, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 119, 126, 135, 152], "handler": [0, 135], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 1040], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 152], "competit": 15, "do": [15, 124], "work": [15, 21], "The": [15, 19, 137, 152], "arrai": [15, 23, 26, 27, 120, 123, 128, 137, 165, 170, 175, 180, 185, 190, 196, 207, 213, 221, 227, 238, 243, 251, 257, 262, 270, 280, 285, 290, 295, 304, 309, 316, 322, 327, 333, 397, 402, 406, 410, 415, 419, 424, 428, 432, 436, 440, 444, 448, 452, 456, 460, 464, 469, 473, 478, 482, 486, 490, 494, 498, 502, 506, 510, 514, 518, 522, 526, 530, 534, 538, 542, 546, 550, 554, 558, 562, 568, 573, 577, 581, 585, 589, 593, 597, 602, 607, 612, 616, 621, 626, 631, 636, 664, 707, 718, 732, 762, 773, 778, 781, 784, 787, 790, 793, 796, 800, 804, 807, 810, 813, 816, 820, 823, 826, 829, 832, 835, 838, 841, 845, 850, 855, 861, 866, 870, 874, 878, 882, 886, 890, 894, 900, 904, 908, 912, 916, 943, 967, 972, 977, 982, 987, 992, 998, 1002, 1006, 1010, 1014, 1018, 1022, 1026, 1031, 1036], "api": [15, 20, 119, 123, 129, 135, 137, 139, 140], "why": [16, 124], "unifi": [16, 137], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 1040], "set": [18, 62, 108, 126, 964], "up": 18, "clone": 18, "ivi": [18, 119, 122, 124, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 204, 205, 207, 208, 209, 210, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 304, 305, 306, 309, 310, 311, 312, 316, 317, 318, 319, 322, 323, 324, 325, 327, 328, 329, 330, 333, 334, 335, 336, 397, 398, 399, 400, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 482, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 498, 499, 500, 502, 503, 504, 506, 507, 508, 510, 511, 512, 514, 515, 516, 518, 519, 520, 522, 523, 524, 526, 527, 528, 530, 531, 532, 534, 535, 536, 538, 539, 540, 542, 543, 544, 546, 547, 548, 550, 551, 552, 554, 555, 556, 558, 559, 560, 562, 563, 564, 568, 569, 570, 571, 573, 574, 575, 577, 578, 579, 581, 582, 583, 585, 586, 587, 589, 590, 591, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 631, 632, 633, 636, 637, 638, 639, 648, 649, 664, 665, 666, 667, 706, 707, 708, 709, 718, 719, 720, 721, 723, 724, 725, 728, 729, 730, 732, 733, 734, 735, 737, 738, 739, 741, 742, 743, 745, 746, 747, 762, 763, 764, 765, 773, 774, 775, 776, 778, 779, 781, 782, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 798, 800, 801, 804, 805, 807, 808, 810, 811, 813, 814, 816, 817, 820, 821, 823, 824, 826, 827, 829, 830, 832, 833, 835, 836, 838, 839, 841, 842, 845, 846, 847, 848, 850, 851, 852, 853, 855, 856, 857, 858, 861, 862, 863, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 884, 886, 887, 888, 890, 891, 892, 894, 895, 896, 897, 900, 901, 902, 904, 905, 906, 908, 909, 910, 912, 913, 914, 916, 917, 918, 943, 944, 945, 946, 950, 951, 954, 955, 956, 966, 967, 968, 969, 971, 972, 973, 974, 976, 977, 978, 979, 981, 982, 983, 984, 987, 988, 989, 990, 992, 993, 994, 995, 998, 999, 1000, 1002, 1003, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1014, 1015, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 138], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": [18, 133], "commit": [18, 19, 133], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 123, 124], "local": 19, "open": 20, "task": 20, "function": [20, 120, 124, 125, 127, 129, 130, 131, 135, 140, 152], "format": [20, 133], "frontend": [20, 140], "build": [21, 135], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 152], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 36, 82, 124, 130, 138, 152, 273, 964, 965, 969, 970, 974, 980, 984], "class": [22, 137, 1047], "activ": [24, 73, 163, 1048], "arraywithactiv": 25, "variabl": [28, 751], "convers": 29, "args_to_ivi": 30, "args_to_n": 31, "to_ivi": 32, "to_n": 33, "creation": [34, 80, 202], "arraywithcr": 35, "type": [36, 82, 125, 130, 152, 273], "arraywithdatatyp": 37, "devic": [38, 84, 120, 131, 345], "arraywithdevic": 39, "elementwis": [40, 86, 395], "arraywithelementwis": 41, "gener": [42, 88, 124, 634], "arraywithgener": 43, "gradient": [44, 90, 715], "arraywithgradi": 45, "imag": [46, 92], "arraywithimag": 47, "layer": [48, 94, 754, 1062], "arraywithlay": 49, "linear": [50, 96, 767, 771, 1072], "algebra": [50, 96, 771], "arraywithlinearalgebra": 51, "loss": [52, 98, 843], "arraywithloss": 53, "manipul": [54, 100, 859], "arraywithmanipul": 55, "norm": [56, 102, 941, 1076], "arraywithnorm": 57, "random": [58, 104, 947], "arraywithrandom": 59, "search": [60, 106, 959], "arraywithsearch": 61, "arraywithset": 63, "sort": [64, 110, 985, 991, 992, 993, 994], "arraywithsort": 65, "statist": [66, 112, 996], "arraywithstatist": 67, "util": [68, 114, 1029], "arraywithutil": 69, "wrap": [70, 116, 127], "add_ivy_array_instance_method": 71, "contain": [72, 77, 78, 129, 138, 166, 168, 171, 173, 176, 178, 181, 183, 186, 188, 191, 193, 195, 197, 205, 208, 210, 214, 216, 219, 222, 224, 228, 230, 233, 236, 239, 241, 244, 246, 249, 252, 254, 256, 258, 261, 263, 266, 269, 271, 281, 283, 286, 288, 291, 293, 296, 298, 305, 310, 312, 317, 319, 323, 325, 328, 330, 334, 336, 398, 400, 403, 407, 411, 413, 416, 420, 422, 425, 429, 433, 437, 441, 445, 449, 453, 457, 461, 465, 467, 470, 474, 476, 479, 483, 487, 491, 495, 499, 503, 507, 511, 515, 519, 523, 527, 531, 535, 539, 543, 547, 551, 555, 559, 563, 569, 571, 574, 578, 582, 586, 590, 594, 598, 600, 603, 605, 608, 610, 613, 617, 620, 622, 625, 627, 632, 637, 639, 648, 665, 667, 706, 708, 719, 721, 723, 725, 728, 730, 733, 735, 737, 739, 741, 743, 745, 747, 763, 765, 774, 776, 797, 846, 848, 851, 853, 856, 858, 862, 864, 867, 871, 875, 879, 883, 887, 891, 895, 897, 901, 905, 909, 913, 917, 944, 946, 951, 954, 956, 966, 968, 971, 973, 976, 978, 981, 983, 988, 990, 993, 995, 999, 1003, 1007, 1011, 1015, 1019, 1023, 1027, 1032, 1034, 1037, 1039], "containerwithactiv": 74, "base": 75, "containerbas": 76, "multidevcontain": 79, "containerwithcr": 81, "containerwithdatatyp": 83, "containerwithdevic": 85, "containerwithelementwis": 87, "containerwithgener": 89, "containerwithgradi": 91, "containerwithimag": 93, "containerwithlay": 95, "containerwithlinearalgebra": 97, "containerwithloss": 99, "containerwithmanipul": 101, "containerwithnorm": 103, "containerwithrandom": 105, "containerwithsearch": 107, "containerwithset": 109, "containerwithsort": 111, "containerwithstatist": 113, "containerwithutil": 115, "add_ivy_container_instance_method": 117, "deep": 118, "dive": 118, "navig": 119, "code": 119, "categor": 119, "submodul": 119, "design": [119, 134, 1040], "argument": [120, 130, 131, 132], "exampl": [120, 122, 133], "out": [120, 132], "dtype": [120, 303, 304, 305, 306], "number": 120, "oper": [120, 137, 152], "integ": 120, "sequenc": 120, "nestabl": [120, 125, 129], "docstr": [121, 122], "tan": [122, 624, 626, 627, 628], "roll": [122, 893, 894, 895, 896], "add": [122, 409, 410, 411, 412], "hypothesi": 124, "import": 124, "strategi": 124, "integr": 124, "we": 124, "need": 124, "helper": 124, "how": 124, "write": 124, "effect": 124, "bonu": 124, "extend": 124, "featur": 124, "self": 124, "consist": 124, "explicit": 124, "test_array_funct": 124, "primari": 125, "composit": 125, "mix": 125, "standalon": 125, "conveni": 125, "nativ": 128, "handl": 128, "instanc": [129, 137], "method": [129, 137, 138], "static": 129, "special": 129, "modul": [130, 131, 139, 1074, 1075], "other": [130, 131], "inplac": 132, "updat": 132, "copi": 132, "lint": 133, "check": [133, 152], "hook": 133, "automat": 133, "reformat": 133, "befor": 133, "block": 135, "framework": [135, 136, 1047], "graph": [135, 140], "compil": [135, 140, 199, 200], "monkei": 137, "patch": 137, "construct": 138, "represent": 138, "recurs": 138, "built": 138, "ins": 138, "access": 138, "save": 138, "load": 138, "comparison": 138, "custom": [138, 152], "case": 138, "compartment": 138, "configur": 138, "network": [138, 140], "weight": 138, "state": [139, 152], "initi": [139, 1053], "optim": [139, 1078, 1082], "transpil": 140, "role": 140, "convert": [140, 1051], "model": [140, 147, 152], "builder": 142, "ecosystem": 143, "gym": [144, 151], "mech": 145, "memori": [146, 151], "robot": [148, 151], "vision": [149, 151], "extens": [150, 1040], "appli": 151, "librari": 151, "mechan": 151, "faq": 152, "maintain": 152, "version": 152, "dynam": 152, "size": 152, "shape": [152, 697, 964, 965, 969, 970, 974, 980, 984], "control": 152, "flow": 152, "auto": 152, "differenti": 152, "replica": 152, "parallel": 152, "support": 152, "altern": 152, "structur": 152, "func": 153, "wrapper": 153, "handle_nest": 154, "handle_out_argu": 155, "infer_devic": 156, "infer_dtyp": 157, "inputs_to_ivy_arrai": 158, "inputs_to_native_arrai": 159, "outputs_to_ivy_arrai": 160, "to_native_arrays_and_back": 161, "gelu": [164, 165, 166, 167, 1050], "static_gelu": 168, "leaky_relu": [169, 170, 171, 172], "static_leaky_relu": 173, "relu": [174, 175, 176, 177], "static_relu": 178, "sigmoid": [179, 180, 181, 182], "static_sigmoid": 183, "softmax": [184, 185, 186, 187], "static_softmax": 188, "softplu": [189, 190, 191, 192], "static_softplu": 193, "tanh": [194, 196, 197, 198, 629], "static_tanh": 195, "constant": 201, "note": [202, 220, 223], "arang": [203, 204], "static_arang": 205, "asarrai": [206, 207, 208, 209], "static_asarrai": 210, "empti": 211, "empty_lik": [212, 213, 214, 215], "static_empty_lik": 216, "ey": [217, 218], "static_ey": 219, "from_dlpack": [220, 221, 222, 223], "static_from_dlpack": 224, "full": 225, "full_lik": [226, 227, 228, 229], "static_full_lik": 230, "linspac": [231, 232], "static_linspac": 233, "logspac": [234, 235], "static_logspac": 236, "meshgrid": [237, 238, 239, 240], "static_meshgrid": 241, "native_arrai": [242, 243, 244, 245], "static_native_arrai": 246, "ones": [247, 248], "static_on": 249, "ones_lik": [250, 251, 252, 253], "static_ones_lik": 254, "tril": [255, 257, 258, 259], "static_tril": 256, "triu": [260, 262, 263, 264], "static_triu": 261, "zero": [265, 267, 1061], "static_zero": 266, "zeros_lik": [268, 270, 271, 272], "static_zeros_lik": 269, "as_ivy_dtyp": 277, "as_native_dtyp": 278, "astyp": [279, 280, 281, 282], "static_astyp": 283, "broadcast_arrai": [284, 285, 286, 287], "static_broadcast_arrai": 288, "broadcast_to": [289, 290, 291, 292], "static_broadcast_to": 293, "can_cast": [294, 295, 296, 297], "static_can_cast": 298, "closest_valid_dtyp": 299, "default_dtyp": 300, "default_float_dtyp": 301, "default_int_dtyp": 302, "dtype_bit": 307, "finfo": [308, 309, 310, 311], "static_finfo": 312, "function_supported_dtyp": 313, "function_unsupported_dtyp": 314, "iinfo": [315, 316, 317, 318], "static_iinfo": 319, "invalid_dtyp": 320, "is_float_dtyp": [321, 322, 323, 324], "static_is_float_dtyp": 325, "is_int_dtyp": [326, 327, 328, 329], "static_is_int_dtyp": 330, "promote_typ": 331, "result_typ": [332, 333, 334, 335], "static_result_typ": 336, "set_default_dtyp": 337, "set_default_float_dtyp": 338, "set_default_int_dtyp": 339, "type_promote_arrai": 340, "unset_default_dtyp": 341, "unset_default_float_dtyp": 342, "unset_default_int_dtyp": 343, "valid_dtyp": 344, "devcloneditem": 347, "devclonedit": 348, "devclonednest": 349, "devdistitem": 350, "devdistit": 351, "devdistnest": 352, "devmapp": 354, "devmappermultiproc": 355, "multidevitem": 357, "multidevit": 358, "multidevnest": 359, "profil": 360, "as_ivy_dev": 361, "as_native_dev": 362, "clear_mem_on_dev": 363, "default_devic": 364, "dev": 365, "dev_clon": 366, "dev_clone_arrai": 367, "dev_clone_it": 368, "dev_clone_nest": 369, "dev_dist": 370, "dev_dist_arrai": 371, "dev_dist_it": 372, "dev_dist_nest": 373, "dev_unifi": 374, "dev_unify_arrai": 375, "dev_unify_it": 376, "dev_unify_nest": 377, "dev_util": 378, "get_all_ivy_arrays_on_dev": 379, "gpu_is_avail": 380, "num_cpu_cor": 381, "num_gpu": 382, "num_ivy_arrays_on_dev": 383, "percent_used_mem_on_dev": 384, "print_all_ivy_arrays_on_dev": 385, "set_default_devic": 386, "set_split_factor": 387, "split_factor": 388, "split_func_cal": 389, "to_devic": 390, "total_mem_on_dev": 391, "tpu_is_avail": 392, "unset_default_devic": 393, "used_mem_on_dev": 394, "ab": [396, 397, 398, 399], "static_ab": 400, "aco": [401, 402, 403, 404], "acosh": [405, 406, 407, 408], "static_add": 413, "asin": [414, 415, 416, 417], "asinh": [418, 419, 420, 421], "static_asinh": 422, "atan": [423, 424, 425, 426], "atan2": [427, 428, 429, 430], "atanh": [431, 432, 433, 434], "bitwise_and": [435, 436, 437, 438], "bitwise_invert": [439, 440, 441, 442], "bitwise_left_shift": [443, 444, 445, 446], "bitwise_or": [447, 448, 449, 450], "bitwise_right_shift": [451, 452, 453, 454], "bitwise_xor": [455, 456, 457, 458], "ceil": [459, 460, 461, 462], "co": [463, 464, 465, 466], "static_co": 467, "cosh": [468, 469, 470, 471], "divid": [472, 473, 474, 475], "static_divid": 476, "equal": [477, 478, 479, 480], "erf": [481, 482, 483, 484], "exp": [485, 486, 487, 488], "expm1": [489, 490, 491, 492], "floor": [493, 494, 495, 496], "floor_divid": [497, 498, 499, 500], "greater": [501, 502, 503, 504], "greater_equ": [505, 506, 507, 508], "isfinit": [509, 510, 511, 512], "isinf": [513, 514, 515, 516], "isnan": [517, 518, 519, 520], "less": [521, 522, 523, 524], "less_equ": [525, 526, 527, 528], "log": [529, 530, 531, 532], "log10": [533, 534, 535, 536], "log1p": [537, 538, 539, 540], "log2": [541, 542, 543, 544], "logaddexp": [545, 546, 547, 548], "logical_and": [549, 550, 551, 552], "logical_not": [553, 554, 555, 556], "logical_or": [557, 558, 559, 560], "logical_xor": [561, 562, 563, 564], "maximum": 565, "minimum": 566, "multipli": [567, 568, 569, 570], "static_multipli": 571, "neg": [572, 573, 574, 575], "not_equ": [576, 577, 578, 579], "posit": [580, 581, 582, 583], "pow": [584, 585, 586, 587], "remaind": [588, 589, 590, 591], "round": [592, 593, 594, 595], "sign": [596, 597, 598, 599], "static_sign": 600, "sin": [601, 602, 603, 604], "static_sin": 605, "sinh": [606, 607, 608, 609], "static_sinh": 610, "sqrt": [611, 612, 613, 614], "squar": [615, 616, 617, 618], "subtract": [619, 621, 622, 623], "static_subtract": 620, "static_tan": 625, "trunc": [630, 631, 632, 633], "all_equ": [635, 636, 637, 638], "static_all_equ": 639, "arg_info": 640, "arg_nam": 641, "array_equ": 642, "arrays_equ": 643, "assert_supports_inplac": 644, "cache_fn": 645, "clip_matrix_norm": 646, "clip_vector_norm": [647, 648, 649], "container_typ": 650, "copy_arrai": 651, "cumprod": 652, "cumsum": 653, "current_backend_str": 654, "default": 655, "einops_rearrang": 656, "einops_reduc": 657, "einops_repeat": 658, "exist": 659, "floormod": 660, "fourier_encod": 661, "gather": 662, "gather_nd": [663, 664, 665, 666], "static_gather_nd": 667, "get_all_arrays_in_memori": 668, "get_min_bas": 669, "get_min_denomin": 670, "get_num_dim": 671, "get_referrers_recurs": 672, "has_nan": 673, "indices_wher": 674, "inplace_arrays_support": 675, "inplace_decr": 676, "inplace_incr": 677, "inplace_upd": 678, "inplace_variables_support": 679, "is_arrai": 680, "is_ivy_arrai": 681, "is_ivy_contain": 682, "is_native_arrai": 683, "match_kwarg": 684, "multiprocess": 685, "num_arrays_in_memori": 686, "one_hot": 687, "print_all_arrays_in_memori": 688, "queue_timeout": 689, "scatter_flat": 690, "scatter_nd": 691, "set_min_bas": 692, "set_min_denomin": 693, "set_queue_timeout": 694, "set_shape_array_mod": 695, "set_tmp_dir": 696, "shape_array_mod": 698, "shape_to_tupl": 699, "stable_divid": 700, "stable_pow": 701, "supports_inplac": 702, "tmp_dir": 703, "to_list": 704, "to_numpi": [705, 707, 708, 709], "static_to_numpi": 706, "to_scalar": 710, "try_else_non": 711, "unset_shape_array_mod": 712, "unstack": 713, "value_is_nan": 714, "adam_step": [717, 718, 719, 720], "static_adam_step": 721, "adam_upd": [722, 723, 724], "static_adam_upd": 725, "execute_with_gradi": 726, "gradient_descent_upd": [727, 728, 729], "static_gradient_descent_upd": 730, "is_vari": [731, 732, 733, 734], "static_is_vari": 735, "lamb_upd": [736, 737, 738], "static_lamb_upd": 739, "lars_upd": [740, 741, 742], "static_lars_upd": 743, "optimizer_upd": [744, 745, 746], "static_optimizer_upd": 747, "set_with_grad": 748, "stop_gradi": 749, "unset_with_grad": 750, "variable_data": 752, "with_grad": 753, "conv1d": [755, 1063], "conv1d_transpos": 756, "conv2d": [757, 1065], "conv2d_transpos": 758, "conv3d": [759, 1067], "conv3d_transpos": 760, "depthwise_conv2d": [761, 762, 763, 764], "static_depthwise_conv2d": 765, "dropout": [766, 1070], "lstm_updat": 768, "multi_head_attent": 769, "scaled_dot_product_attent": 770, "choleski": [772, 773, 774, 775], "static_choleski": 776, "cross": [777, 778, 779], "det": [780, 781, 782], "diagon": [783, 784, 785], "eigh": [786, 787, 788], "eigvalsh": [789, 790, 791], "inv": [792, 793, 794], "matmul": [795, 796, 797, 798], "matrix_norm": [799, 800, 801], "matrix_pow": 802, "matrix_rank": [803, 804, 805], "matrix_transpos": [806, 807, 808], "outer": [809, 810, 811], "pinv": [812, 813, 814], "qr": [815, 816, 817], "slogdet": 818, "solv": [819, 820, 821], "svd": [822, 823, 824], "svdval": [825, 826, 827], "tensordot": [828, 829, 830], "trace": [831, 832, 833], "vecdot": [834, 835, 836], "vector_norm": [837, 838, 839], "vector_to_skew_symmetric_matrix": [840, 841, 842], "binary_cross_entropi": [844, 845, 846, 847], "static_binary_cross_entropi": 848, "cross_entropi": [849, 850, 851, 852], "static_cross_entropi": 853, "sparse_cross_entropi": [854, 855, 856, 857], "static_sparse_cross_entropi": 858, "clip": [860, 861, 862, 863], "static_clip": 864, "concat": [865, 866, 867, 868], "constant_pad": [869, 870, 871, 872], "expand_dim": [873, 874, 875, 876], "flip": [877, 878, 879, 880], "permute_dim": [881, 882, 883, 884], "repeat": [885, 886, 887, 888], "reshap": [889, 890, 891, 892], "static_rol": 897, "split": 898, "squeez": [899, 900, 901, 902], "stack": [903, 904, 905, 906], "swapax": [907, 908, 909, 910], "tile": [911, 912, 913, 914], "zero_pad": [915, 916, 917, 918], "meta": 919, "fomaml_step": 920, "maml_step": 921, "reptile_step": 922, "nest": 923, "all_nested_indic": 924, "copy_nest": 925, "index_nest": 926, "insert_into_nest_at_index": 927, "insert_into_nest_at_indic": 928, "map": 929, "map_nest_at_index": 930, "map_nest_at_indic": 931, "multi_index_nest": 932, "nested_ani": 933, "nested_indices_wher": 934, "nested_map": 935, "nested_multi_map": 936, "prune_nest_at_index": 937, "prune_nest_at_indic": 938, "set_nest_at_index": 939, "set_nest_at_indic": 940, "layer_norm": [942, 943, 944, 945], "static_layer_norm": 946, "multinomi": 948, "randint": [949, 950], "static_randint": 951, "random_norm": 952, "random_uniform": [953, 954, 955], "static_random_uniform": 956, "seed": 957, "shuffl": 958, "argmax": 960, "argmin": 961, "nonzero": 962, "where": 963, "depend": [964, 965, 969, 970, 974, 980, 984], "output": [964, 965, 969, 970, 974, 980, 984], "unique_al": [965, 967, 968, 969], "static_unique_al": 966, "unique_count": [970, 972, 973, 974], "static_unique_count": 971, "unique_invers": [975, 977, 978, 979], "static_unique_invers": 976, "unique_valu": [980, 982, 983, 984], "static_unique_valu": 981, "argsort": [986, 987, 988, 989], "static_argsort": 990, "static_sort": 995, "einsum": [997, 998, 999, 1000], "max": [1001, 1002, 1003, 1004], "mean": [1005, 1006, 1007, 1008], "min": [1009, 1010, 1011, 1012], "prod": [1013, 1014, 1015, 1016], "std": [1017, 1018, 1019, 1020], "sum": [1021, 1022, 1023, 1024], "var": [1025, 1026, 1027, 1028], "all": [1030, 1031, 1032, 1033], "static_al": 1034, "ani": [1035, 1036, 1037, 1038], "static_ani": 1039, "content": 1040, "overview": 1040, "quick": 1040, "start": 1040, "roadmap": [1040, 1046], "citat": 1040, "inspect": 1043, "add_array_spec": 1044, "fn_array_spec": 1045, "geglu": 1049, "to_ivy_modul": 1052, "firstlayersiren": 1055, "glorotuniform": 1056, "Ones": 1058, "siren": 1059, "conv1dtranspos": 1064, "conv2dtranspos": 1066, "conv3dtranspos": 1068, "depthwiseconv2d": 1069, "lstm": 1071, "multiheadattent": 1073, "layernorm": 1077, "adam": 1079, "lamb": 1080, "lar": 1081, "sgd": 1083, "sequenti": [1084, 1085], "verbos": 1087, "cprint": 1088}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})