Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[778,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[369,0,0,"-"],creation_functions:[370,0,0,"-"],data_type_functions:[372,0,0,"-"],data_types:[376,0,0,"-"],elementwise_functions:[377,0,0,"-"],function_and_method_signatures:[379,0,0,"-"],linear_algebra_extension:[380,0,0,"-"],linear_algebra_functions:[381,0,0,"-"],manipulation_functions:[382,0,0,"-"],searching_functions:[383,0,0,"-"],set_functions:[384,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{zeros:[371,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[372,1,1,""],finfo:[374,2,1,""],iinfo:[375,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[372,3,1,""],bits:[372,3,1,""],eps:[372,3,1,""],max:[372,3,1,""],min:[372,3,1,""],smallest_normal:[372,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[378,2,1,""]},"ivy.functional.backends.numpy.core":{device:[401,0,0,"-"],general:[403,0,0,"-"],gradients:[439,0,0,"-"],image:[444,0,0,"-"],linalg:[448,0,0,"-"],logic:[451,0,0,"-"],math:[452,0,0,"-"],random:[454,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[402,1,1,""],clear_mem_on_dev:[401,2,1,""],dev:[401,2,1,""],dev_from_str:[401,2,1,""],dev_to_str:[401,2,1,""],gpu_is_available:[401,2,1,""],num_gpus:[401,2,1,""],to_dev:[401,2,1,""],tpu_is_available:[401,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[402,3,1,""],start:[402,3,1,""],stop:[402,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[403,2,1,""],arange:[404,2,1,""],argmax:[405,2,1,""],argmin:[406,2,1,""],array:[407,2,1,""],asarray:[403,2,1,""],astype:[403,2,1,""],cast:[408,2,1,""],ceil:[403,2,1,""],clip:[403,2,1,""],compile:[409,2,1,""],concatenate:[410,2,1,""],constant_pad:[403,2,1,""],container_types:[403,2,1,""],copy_array:[403,2,1,""],cumprod:[411,2,1,""],current_framework_str:[403,2,1,""],dtype:[412,2,1,""],dtype_bits:[413,2,1,""],dtype_from_str:[414,2,1,""],dtype_to_str:[415,2,1,""],equal:[403,2,1,""],flip:[416,2,1,""],floor:[403,2,1,""],floormod:[403,2,1,""],full:[417,2,1,""],gather:[418,2,1,""],gather_nd:[419,2,1,""],get_num_dims:[403,2,1,""],identity:[420,2,1,""],indices_where:[421,2,1,""],inplace_arrays_supported:[403,2,1,""],inplace_decrement:[422,2,1,""],inplace_increment:[423,2,1,""],inplace_update:[424,2,1,""],inplace_variables_supported:[403,2,1,""],is_array:[425,2,1,""],linear_resample:[426,2,1,""],linspace:[427,2,1,""],logspace:[428,2,1,""],matmul:[403,2,1,""],meshgrid:[403,2,1,""],multiprocessing:[403,2,1,""],one_hot:[429,2,1,""],ones:[430,2,1,""],ones_like:[431,2,1,""],round:[403,2,1,""],scatter_flat:[432,2,1,""],scatter_nd:[433,2,1,""],shape:[403,2,1,""],split:[434,2,1,""],squeeze:[435,2,1,""],to_list:[403,2,1,""],to_numpy:[403,2,1,""],to_scalar:[403,2,1,""],transpose:[436,2,1,""],unstack:[437,2,1,""],where:[403,2,1,""],zero_pad:[403,2,1,""],zeros_like:[438,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[440,2,1,""],is_variable:[441,2,1,""],stop_gradient:[442,2,1,""],variable:[443,2,1,""],variable_data:[439,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[445,2,1,""],gradient_image:[446,2,1,""],stack_images:[447,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[449,2,1,""],vector_to_skew_symmetric_matrix:[450,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[453,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[455,2,1,""],randint:[454,2,1,""],random_normal:[454,2,1,""],random_uniform:[454,2,1,""],seed:[454,2,1,""],shuffle:[454,2,1,""]},"ivy.functional.ivy":{array_api:[779,0,0,"-"],core:[801,0,0,"-"],nn:[1146,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[780,0,0,"-"],creation_functions:[781,0,0,"-"],data_type_functions:[783,0,0,"-"],data_types:[786,0,0,"-"],elementwise_functions:[787,0,0,"-"],function_and_method_signatures:[789,0,0,"-"],linear_algebra_extension:[790,0,0,"-"],linear_algebra_functions:[791,0,0,"-"],manipulation_functions:[792,0,0,"-"],searching_functions:[793,0,0,"-"],set_functions:[794,0,0,"-"],sorting_functions:[795,0,0,"-"],statistical_functions:[797,0,0,"-"],utility_functions:[798,0,0,"-"]},"ivy.functional.ivy.array_api.creation_functions":{zeros:[782,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[784,2,1,""],iinfo:[785,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[788,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[796,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[799,2,1,""],any:[800,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[802,0,0,"-"],compilation:[841,0,0,"-"],device:[843,0,0,"-"],dtype:[893,0,0,"-"],general:[917,0,0,"-"],gradients:[1017,0,0,"-"],image:[1033,0,0,"-"],linalg:[1040,0,0,"-"],logic:[1048,0,0,"-"],math:[1052,0,0,"-"],meta:[1070,0,0,"-"],multi_node:[1074,0,0,"-"],nest:[1118,0,0,"-"],random:[1130,0,0,"-"],reductions:[1137,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[803,2,1,""],builtin_add:[804,2,1,""],builtin_and:[805,2,1,""],builtin_bool:[806,2,1,""],builtin_contains:[807,2,1,""],builtin_deepcopy:[808,2,1,""],builtin_dir:[809,2,1,""],builtin_eq:[810,2,1,""],builtin_float:[811,2,1,""],builtin_floordiv:[812,2,1,""],builtin_ge:[813,2,1,""],builtin_getattr:[814,2,1,""],builtin_getattribute:[815,2,1,""],builtin_getitem:[816,2,1,""],builtin_gt:[817,2,1,""],builtin_int:[818,2,1,""],builtin_invert:[819,2,1,""],builtin_le:[820,2,1,""],builtin_lt:[821,2,1,""],builtin_mul:[822,2,1,""],builtin_ne:[823,2,1,""],builtin_neg:[824,2,1,""],builtin_or:[825,2,1,""],builtin_pos:[826,2,1,""],builtin_pow:[827,2,1,""],builtin_radd:[828,2,1,""],builtin_rand:[829,2,1,""],builtin_rfloordiv:[830,2,1,""],builtin_rmul:[831,2,1,""],builtin_ror:[832,2,1,""],builtin_rpow:[833,2,1,""],builtin_rsub:[834,2,1,""],builtin_rtruediv:[835,2,1,""],builtin_rxor:[836,2,1,""],builtin_setitem:[837,2,1,""],builtin_sub:[838,2,1,""],builtin_truediv:[839,2,1,""],builtin_xor:[840,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[842,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[843,1,1,""],DevClonedItem:[845,1,1,""],DevClonedIter:[846,1,1,""],DevClonedNest:[847,1,1,""],DevDistItem:[848,1,1,""],DevDistIter:[849,1,1,""],DevDistNest:[850,1,1,""],DevManager:[843,1,1,""],DevMapper:[852,1,1,""],DevMapperMultiProc:[853,1,1,""],MultiDev:[843,1,1,""],MultiDevItem:[855,1,1,""],MultiDevIter:[856,1,1,""],MultiDevNest:[857,1,1,""],Profiler:[858,1,1,""],clear_mem_on_dev:[859,2,1,""],default_device:[860,2,1,""],dev:[861,2,1,""],dev_clone:[862,2,1,""],dev_clone_array:[863,2,1,""],dev_clone_iter:[864,2,1,""],dev_clone_nest:[865,2,1,""],dev_dist:[866,2,1,""],dev_dist_array:[867,2,1,""],dev_dist_iter:[868,2,1,""],dev_dist_nest:[869,2,1,""],dev_from_str:[870,2,1,""],dev_to_str:[871,2,1,""],dev_unify:[872,2,1,""],dev_unify_array:[873,2,1,""],dev_unify_iter:[874,2,1,""],dev_unify_nest:[875,2,1,""],dev_util:[876,2,1,""],get_all_arrays_on_dev:[877,2,1,""],gpu_is_available:[878,2,1,""],num_arrays_on_dev:[879,2,1,""],num_cpu_cores:[880,2,1,""],num_gpus:[881,2,1,""],percent_used_mem_on_dev:[882,2,1,""],print_all_arrays_on_dev:[883,2,1,""],set_default_device:[884,2,1,""],set_split_factor:[885,2,1,""],split_factor:[886,2,1,""],split_func_call:[887,2,1,""],to_dev:[888,2,1,""],total_mem_on_dev:[889,2,1,""],tpu_is_available:[890,2,1,""],unset_default_device:[891,2,1,""],used_mem_on_dev:[892,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[843,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[843,3,1,""],da_tune_step:[843,3,1,""],dim_size:[843,3,1,""],ds_tune_step:[843,3,1,""],map:[843,3,1,""],repeated_config_check:[843,3,1,""],tune_step:[843,3,1,""],tuned:[843,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[852,3,1,""],map:[852,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[853,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[843,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[855,3,1,""],items:[855,3,1,""],keys:[855,3,1,""],shape:[855,3,1,""],values:[855,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[856,3,1,""],at_dev:[856,3,1,""],at_devs:[856,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[857,3,1,""],at_dev:[857,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[858,3,1,""],start:[858,3,1,""],stop:[858,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[893,1,1,""],DefaultFloatDtype:[893,1,1,""],DefaultIntDtype:[893,1,1,""],astype:[893,2,1,""],cast:[897,2,1,""],closest_valid_dtype:[898,2,1,""],convert_dtype:[899,2,1,""],default_dtype:[900,2,1,""],default_float_dtype:[901,2,1,""],default_int_dtype:[902,2,1,""],dtype:[903,2,1,""],dtype_bits:[904,2,1,""],dtype_from_str:[905,2,1,""],dtype_to_str:[906,2,1,""],invalid_dtype:[907,2,1,""],is_float_dtype:[908,2,1,""],is_int_dtype:[909,2,1,""],set_default_dtype:[910,2,1,""],set_default_float_dtype:[911,2,1,""],set_default_int_dtype:[912,2,1,""],unset_default_dtype:[913,2,1,""],unset_default_float_dtype:[914,2,1,""],unset_default_int_dtype:[915,2,1,""],valid_dtype:[916,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[893,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[893,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[893,3,1,""]},"ivy.functional.ivy.core.general":{"default":[942,2,1,""],abs:[918,2,1,""],all_equal:[919,2,1,""],arange:[920,2,1,""],arg_names:[921,2,1,""],argmax:[922,2,1,""],argmin:[923,2,1,""],array:[924,2,1,""],array_equal:[925,2,1,""],arrays_equal:[926,2,1,""],asarray:[917,2,1,""],assert_supports_inplace:[927,2,1,""],broadcast_to:[928,2,1,""],cache_fn:[929,2,1,""],ceil:[930,2,1,""],clip:[931,2,1,""],clip_matrix_norm:[932,2,1,""],clip_vector_norm:[933,2,1,""],concatenate:[934,2,1,""],constant_pad:[935,2,1,""],container_types:[936,2,1,""],copy_array:[937,2,1,""],cross:[938,2,1,""],cumprod:[939,2,1,""],cumsum:[940,2,1,""],current_framework_str:[941,2,1,""],einops_rearrange:[943,2,1,""],einops_reduce:[944,2,1,""],einops_repeat:[945,2,1,""],equal:[946,2,1,""],exists:[947,2,1,""],expand_dims:[948,2,1,""],flip:[949,2,1,""],floor:[950,2,1,""],floormod:[951,2,1,""],fourier_encode:[952,2,1,""],full:[953,2,1,""],gather:[954,2,1,""],gather_nd:[955,2,1,""],get_all_arrays_in_memory:[956,2,1,""],get_min_base:[957,2,1,""],get_min_denominator:[958,2,1,""],get_num_dims:[959,2,1,""],get_referrers_recursive:[960,2,1,""],has_nans:[961,2,1,""],identity:[962,2,1,""],indices_where:[963,2,1,""],inplace_arrays_supported:[964,2,1,""],inplace_decrement:[965,2,1,""],inplace_increment:[966,2,1,""],inplace_update:[967,2,1,""],inplace_variables_supported:[968,2,1,""],is_array:[969,2,1,""],isinf:[970,2,1,""],isnan:[971,2,1,""],linear_resample:[972,2,1,""],linspace:[973,2,1,""],logspace:[974,2,1,""],match_kwargs:[975,2,1,""],matmul:[976,2,1,""],maximum:[977,2,1,""],meshgrid:[978,2,1,""],minimum:[979,2,1,""],multiprocessing:[980,2,1,""],num_arrays_in_memory:[981,2,1,""],one_hot:[982,2,1,""],ones:[983,2,1,""],ones_like:[984,2,1,""],print_all_arrays_in_memory:[985,2,1,""],queue_timeout:[986,2,1,""],repeat:[987,2,1,""],reshape:[988,2,1,""],round:[989,2,1,""],scatter_flat:[990,2,1,""],scatter_nd:[991,2,1,""],set_min_base:[992,2,1,""],set_min_denominator:[993,2,1,""],set_queue_timeout:[994,2,1,""],set_tmp_dir:[995,2,1,""],shape:[996,2,1,""],shape_to_tuple:[997,2,1,""],split:[998,2,1,""],squeeze:[999,2,1,""],stable_divide:[1000,2,1,""],stable_pow:[1001,2,1,""],stack:[1002,2,1,""],supports_inplace:[1003,2,1,""],swapaxes:[1004,2,1,""],tile:[1005,2,1,""],tmp_dir:[1006,2,1,""],to_list:[1007,2,1,""],to_numpy:[1008,2,1,""],to_scalar:[1009,2,1,""],transpose:[1010,2,1,""],try_else_none:[1011,2,1,""],unstack:[1012,2,1,""],value_is_nan:[1013,2,1,""],where:[1014,2,1,""],zero_pad:[1015,2,1,""],zeros_like:[1016,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1017,1,1,""],adam_step:[1019,2,1,""],adam_update:[1020,2,1,""],execute_with_gradients:[1021,2,1,""],gradient_descent_update:[1022,2,1,""],is_variable:[1023,2,1,""],lamb_update:[1024,2,1,""],lars_update:[1025,2,1,""],optimizer_update:[1026,2,1,""],set_with_grads:[1027,2,1,""],stop_gradient:[1028,2,1,""],unset_with_grads:[1029,2,1,""],variable:[1030,2,1,""],variable_data:[1031,2,1,""],with_grads:[1032,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1017,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1034,2,1,""],float_img_to_uint8_img:[1035,2,1,""],gradient_image:[1036,2,1,""],random_crop:[1037,2,1,""],stack_images:[1038,2,1,""],uint8_img_to_float_img:[1039,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1041,2,1,""],inv:[1042,2,1,""],matrix_norm:[1043,2,1,""],pinv:[1044,2,1,""],svd:[1045,2,1,""],vector_norm:[1046,2,1,""],vector_to_skew_symmetric_matrix:[1047,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1049,2,1,""],logical_not:[1050,2,1,""],logical_or:[1051,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1053,2,1,""],acosh:[1054,2,1,""],asin:[1055,2,1,""],asinh:[1056,2,1,""],atan2:[1058,2,1,""],atan:[1057,2,1,""],atanh:[1059,2,1,""],cos:[1060,2,1,""],cosh:[1061,2,1,""],divide:[1062,2,1,""],erf:[1063,2,1,""],exp:[1064,2,1,""],log:[1065,2,1,""],sin:[1066,2,1,""],sinh:[1067,2,1,""],tan:[1068,2,1,""],tanh:[1069,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1071,2,1,""],maml_step:[1072,2,1,""],reptile_step:[1073,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1074,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1119,2,1,""],copy_nest:[1120,2,1,""],index_nest:[1121,2,1,""],map:[1122,2,1,""],map_nest_at_index:[1123,2,1,""],map_nest_at_indices:[1124,2,1,""],multi_index_nest:[1125,2,1,""],nested_indices_where:[1126,2,1,""],nested_map:[1127,2,1,""],set_nest_at_index:[1128,2,1,""],set_nest_at_indices:[1129,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1131,2,1,""],randint:[1132,2,1,""],random_normal:[1133,2,1,""],random_uniform:[1134,2,1,""],seed:[1135,2,1,""],shuffle:[1136,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1138,2,1,""],reduce_max:[1139,2,1,""],reduce_mean:[1140,2,1,""],reduce_min:[1141,2,1,""],reduce_prod:[1142,2,1,""],reduce_std:[1143,2,1,""],reduce_sum:[1144,2,1,""],reduce_var:[1145,2,1,""]},"ivy.functional.ivy.nn":{activations:[1147,0,0,"-"],layers:[1155,0,0,"-"],losses:[1168,0,0,"-"],norms:[1172,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1148,2,1,""],leaky_relu:[1149,2,1,""],relu:[1150,2,1,""],sigmoid:[1151,2,1,""],softmax:[1152,2,1,""],softplus:[1153,2,1,""],tanh:[1154,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1156,2,1,""],conv1d_transpose:[1157,2,1,""],conv2d:[1158,2,1,""],conv2d_transpose:[1159,2,1,""],conv3d:[1160,2,1,""],conv3d_transpose:[1161,2,1,""],depthwise_conv2d:[1162,2,1,""],dropout:[1163,2,1,""],linear:[1164,2,1,""],lstm_update:[1165,2,1,""],multi_head_attention:[1166,2,1,""],scaled_dot_product_attention:[1167,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1169,2,1,""],cross_entropy:[1170,2,1,""],sparse_cross_entropy:[1171,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1173,2,1,""]},"ivy.graph_compiler":{compiler:[1174,0,0,"-"],globals:[1177,0,0,"-"],graph:[1180,0,0,"-"],helpers:[1182,0,0,"-"],op_logging:[1183,0,0,"-"],param:[1184,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1175,2,1,""],show_graph:[1176,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1178,2,1,""],log_global_inference_rel_times:[1179,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1180,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1180,3,1,""],add_fn_to_dict:[1180,3,1,""],add_param:[1180,3,1,""],compiled:[1180,3,1,""],connect:[1180,3,1,""],debug_info:[1180,3,1,""],get_param:[1180,3,1,""],get_param_recursive:[1180,3,1,""],include_generators:[1180,3,1,""],increment_param_count:[1180,3,1,""],log_all_ops:[1180,3,1,""],params_all_empty:[1180,3,1,""],save_debug_info:[1180,3,1,""],set_param:[1180,3,1,""],show:[1180,3,1,""],show_debug_info:[1180,3,1,""],update_inference_times:[1180,3,1,""],with_array_caching:[1180,3,1,""]},"ivy.graph_compiler.param":{Param:[1184,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1184,3,1,""],count:[1184,3,1,""],depth:[1184,3,1,""],get:[1184,3,1,""],is_var:[1184,3,1,""],ptype:[1184,3,1,""],set:[1184,3,1,""],set_count:[1184,3,1,""],shape:[1184,3,1,""]},"ivy.stateful":{activations:[1189,0,0,"-"],converters:[1192,0,0,"-"],initializers:[1194,0,0,"-"],layers:[1203,0,0,"-"],module:[1215,0,0,"-"],norms:[1217,0,0,"-"],optimizers:[1219,0,0,"-"],sequential:[1225,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1190,1,1,""],GELU:[1191,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1190,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1191,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1193,2,1,""]},"ivy.stateful.initializers":{Constant:[1194,1,1,""],FirstLayerSiren:[1196,1,1,""],GlorotUniform:[1197,1,1,""],KaimingNormal:[1194,1,1,""],Ones:[1199,1,1,""],Siren:[1200,1,1,""],Uniform:[1194,1,1,""],Zeros:[1202,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1194,3,1,""],create_variables:[1194,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1196,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1197,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1194,3,1,""],create_variables:[1194,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1199,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1200,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1194,3,1,""],create_variables:[1194,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1202,3,1,""]},"ivy.stateful.layers":{Conv1D:[1204,1,1,""],Conv1DTranspose:[1205,1,1,""],Conv2D:[1206,1,1,""],Conv2DTranspose:[1207,1,1,""],Conv3D:[1208,1,1,""],Conv3DTranspose:[1209,1,1,""],DepthwiseConv2D:[1210,1,1,""],Dropout:[1211,1,1,""],LSTM:[1212,1,1,""],Linear:[1213,1,1,""],MultiHeadAttention:[1214,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1204,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1205,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1206,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1207,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1208,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1209,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1210,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1211,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1212,3,1,""],get_initial_state:[1212,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1213,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1214,3,1,""]},"ivy.stateful.module":{Module:[1216,1,1,""]},"ivy.stateful.module.Module":{__init__:[1216,3,1,""],build:[1216,3,1,""],build_mode:[1216,3,1,""],built:[1216,3,1,""],check_submod_rets:[1216,3,1,""],compile_graph:[1216,3,1,""],compile_on_next_step:[1216,3,1,""],get_mod_key:[1216,3,1,""],mod_depth:[1216,3,1,""],mod_height:[1216,3,1,""],mod_with_top_mod_key_chain:[1216,3,1,""],save_weights:[1216,3,1,""],show_graph:[1216,3,1,""],show_mod_in_top_mod:[1216,3,1,""],show_structure:[1216,3,1,""],show_v_in_top_v:[1216,3,1,""],sub_mods:[1216,3,1,""],track_submod_call_order:[1216,3,1,""],track_submod_rets:[1216,3,1,""],v_with_top_v_key_chains:[1216,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1218,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1218,3,1,""]},"ivy.stateful.optimizers":{Adam:[1220,1,1,""],LAMB:[1221,1,1,""],LARS:[1222,1,1,""],Optimizer:[1223,1,1,""],SGD:[1224,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1220,3,1,""],set_state:[1220,3,1,""],state:[1220,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1221,3,1,""],set_state:[1221,3,1,""],state:[1221,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1222,3,1,""],set_state:[1222,3,1,""],state:[1222,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1223,3,1,""],compile_graph:[1223,3,1,""],compile_on_next_step:[1223,3,1,""],set_state:[1223,3,1,""],show_graph:[1223,3,1,""],step:[1223,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1224,3,1,""],set_state:[1224,3,1,""],state:[1224,3,1,""]},"ivy.stateful.sequential":{Sequential:[1226,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1226,3,1,""]},"ivy.verbosity":{cprint:[1231,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1230,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1219,1220,1221],"02886":1186,"100":[1074,1186,1228],"2021":1186,"2102":1186,"360":[1052,1060,1066,1068],"754":[783,784],"999":[1017,1019,1020,1024,1219,1220,1221],"abstract":[843,858,1186,1219,1223],"boolean":[40,41,843,878,890,893,907,916,917,919,925,926,961,963,964,968,969,970,971,1003,1013,1017,1023,1048,1049,1050,1051,1070,1071,1072,1074],"break":43,"case":[15,18,19,40,41,42,43,843,882,889,892,917,920,988,990,991,1040,1043,1046,1074,1118,1121,1125,1186,1203,1214,1215,1216,1219,1223,1232],"catch":[917,942],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,372,401,402,783,785,843,845,846,847,848,849,850,852,853,855,856,857,858,870,871,893,917,921,975,983,1017,1031,1074,1118,1120,1127,1168,1170,1171,1180,1184,1186,1189,1190,1191,1192,1193,1194,1196,1197,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1232],"default":[15,18,19,40,41,42,43,781,782,795,796,798,799,800,841,842,843,852,853,860,861,865,866,867,868,869,872,873,874,875,882,885,886,887,892,893,900,901,902,903,917,919,920,922,923,932,933,934,935,938,939,940,949,952,953,954,959,961,962,972,974,975,978,980,983,986,987,990,991,994,996,998,1000,1001,1010,1012,1013,1017,1020,1022,1023,1024,1025,1026,1028,1032,1040,1043,1046,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1130,1131,1133,1134,1137,1139,1140,1141,1142,1143,1144,1145,1147,1148,1152,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226],"final":[40,41,917,952,973,974,1074,1203,1214,1229],"float":[40,41,42,43,781,782,783,784,802,827,843,852,853,876,882,885,889,892,893,901,908,917,920,932,933,935,952,953,957,958,974,992,993,994,1000,1001,1017,1019,1020,1022,1024,1025,1026,1033,1035,1039,1052,1062,1070,1071,1072,1073,1074,1130,1133,1134,1147,1149,1155,1163,1166,1167,1168,1169,1170,1171,1172,1173,1203,1211,1214,1217,1218,1219,1220,1221,1222,1223,1224],"function":[15,40,41,43,371,374,375,378,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,782,784,785,788,796,799,800,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,845,846,847,848,849,850,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1186,1189,1190,1191,1219,1222,1223,1224,1228,1229,1232],"import":[43,1186,1229,1232],"int":[40,41,42,43,370,371,454,781,782,783,784,785,795,796,798,799,800,802,827,841,842,843,865,866,867,868,869,872,873,874,875,880,881,887,893,902,904,909,917,922,923,928,934,935,939,940,943,944,945,948,949,952,953,954,959,962,972,973,974,982,983,987,988,990,991,996,997,998,999,1002,1004,1005,1010,1012,1015,1017,1019,1020,1024,1033,1037,1038,1040,1043,1046,1070,1071,1072,1073,1074,1118,1127,1130,1131,1132,1134,1135,1137,1139,1140,1141,1142,1143,1144,1145,1147,1152,1155,1156,1157,1158,1159,1160,1161,1162,1166,1168,1170,1171,1172,1173,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1217,1218],"long":[1155,1165],"new":[40,41,43,454,781,782,893,897,917,918,928,943,944,945,948,952,953,954,955,983,988,990,991,992,993,1000,1001,1002,1017,1020,1022,1024,1025,1026,1033,1035,1037,1039,1052,1054,1056,1059,1061,1067,1069,1074,1118,1128,1129,1130,1131,1172,1173,1186,1192,1193,1203,1213,1217,1218,1219,1220,1221,1222,1223,1224,1229,1232],"public":[917,936],"return":[15,16,17,18,19,40,41,42,43,454,781,782,783,784,785,787,788,795,796,798,799,800,802,827,841,842,843,852,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,878,879,881,882,886,887,888,889,890,892,893,897,898,899,900,901,902,903,904,905,906,907,908,909,916,917,918,919,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,987,988,989,990,991,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1028,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1186,1192,1193,1203,1212,1213,1219,1223,1228,1229,1232],"short":[1155,1165,1186,1232],"static":[40,41,841,842],"super":1074,"true":[40,41,42,403,409,439,442,454,455,787,788,795,796,798,799,800,841,842,843,917,919,927,929,947,952,961,963,1013,1014,1017,1020,1022,1023,1024,1025,1026,1028,1040,1043,1046,1070,1071,1072,1073,1074,1118,1119,1126,1130,1131,1137,1139,1140,1141,1142,1143,1144,1145,1147,1148,1155,1163,1168,1169,1170,1171,1174,1175,1176,1180,1203,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224],"try":[40,41,917,1011,1074],"var":[40,41,1070,1071,1072,1232],"while":[40,41,42,1074],AND:[798,799,1048,1049],But:1232,For:[43,917,920,931,1002,1017,1023,1031,1052,1053,1186,1192,1193,1229,1232],Its:[1052,1057],NOT:[1048,1050],One:[40,41,917,944,988,1130,1132,1232],Ones:[1186,1194],Such:[917,936],That:1229,The:[15,16,17,18,19,40,41,42,43,787,788,795,796,798,799,800,802,827,841,842,843,852,853,859,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,882,885,886,887,888,889,892,893,897,898,899,904,905,906,907,916,917,920,924,925,928,929,932,933,934,935,937,938,941,942,946,949,952,954,955,962,965,966,967,969,972,974,976,978,980,983,984,987,988,990,991,992,993,994,997,998,999,1000,1001,1002,1005,1013,1016,1017,1019,1020,1022,1024,1025,1026,1028,1031,1033,1035,1037,1039,1040,1043,1045,1052,1053,1055,1057,1060,1062,1063,1064,1065,1066,1068,1070,1071,1072,1073,1074,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1186,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1229,1232],There:[43,1186,1229],These:[43,1186],Used:[1118,1119,1126,1215,1216],Using:[1186,1187,1232],With:[40,41,1040,1043,1046,1137,1139,1140,1141,1142,1143,1144,1145,1186,1228,1232],__array__:[917,924],__call__:[1203,1214,1215,1216],__del__:1074,__dict__:[1074,1229],__enter__:1074,__exit__:1074,__getitem__:1074,__getstate__:1074,__init__:[40,41,42,43,59,60,80,197,372,373,401,402,482,598,843,844,851,852,853,854,855,856,857,858,893,894,895,896,1017,1018,1074,1078,1085,1180,1181,1184,1185,1186,1189,1190,1191,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1232],__iter__:1074,__len__:1074,__next__:1074,__pow__:43,__repr__:1074,_assign_vari:1228,_axi:1074,_base:[1118,1119,1126],_compute_node_da_ratio:1074,_compute_node_strs_da:1074,_concat_unify_arrai:1074,_counter:1074,_cur_framework:[43,1074],_da_direct:1074,_da_directions_flip:1074,_da_step_tim:1074,_da_tim:1074,_da_tune_count:1074,_data:1074,_delta_da_dim_s:1074,_delta_sf:1074,_dict:1074,_dim_siz:1074,_first_da_tune_step:1074,_first_ns_tune_step:1074,_fn:1074,_forward:[1186,1228],_get_kalman_param:1232,_get_prior:1232,_get_some_model:1232,_handle_flat_arrays_in_out:43,_index:[1118,1119,1126],_input_queu:1074,_length:1074,_max_depth:1074,_max_node_dim_step_ratio:1074,_max_node_dim_step_s:1074,_max_split_factor_step_s:1074,_mean_unify_arrai:1074,_min_bas:[917,1001,1172,1173,1217,1218],_min_denomin:[917,1000],_min_node_dim_s:1074,_min_sf_tune_step:1074,_min_unit_node_tune_step:1074,_model:1232,_native_wrapp:43,_node_mapp:1074,_node_percent_mem:1074,_node_str:1074,_node_str_da_ratio:1074,_node_strs_da:1074,_node_strs_kei:1074,_node_strs_n:1074,_node_util:1074,_ns_step_tim:1074,_ns_time:1074,_ns_tune_count:1074,_num_nod:1074,_num_work:1074,_observed_config:1074,_output_queu:1074,_paramet:1228,_percent_mem_inc_per_sf:1074,_percent_mem_inc_per_unit_da_dim:1074,_percent_util_inc_per_unit_da_dim:1074,_ret_fn:1074,_safety_factor:1074,_save_dir:1074,_shift_da_split:1074,_shift_n:1074,_slice:1074,_step:[1219,1223],_sum_unify_arrai:1074,_timeout:1074,_tune:1074,_tune_da:1074,_tune_n:1074,_tune_step:1074,_unit_da_tune_count:1074,_unroll_step:1232,_with_node_mappig:1074,_worker:1074,_worker_class:1074,_worker_fn:1074,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,843,852,858,1074,1215,1216,1219,1223],abil:1186,abl:[40,41],about:[783,784,785],abov:[43,1130,1132],above_height:[40,41],abs:[270,403,517,634,917,1074],absolut:[40,41,917,918],abstractmethod:1074,accept:[15,43,1186],access:[40,41,1229],accord:[40,41,783,784,917,935,954,990,991,1010,1015],accordingli:[798,799,800],accur:[59,372,401,402,843,855,856,857,858,893,1017,1180,1184,1194,1196,1197,1199,1200,1202],aco:[726,1052],acosh:[726,1052],across:[40,41,843,852,853,862,863,865,866,867,868,869,875,885,886,917,922,923,925,926,1074,1118,1122],activ:[1148,1149,1150,1151,1152,1153,1154,1186,1190,1191],actual:1229,adam:[1017,1019,1020,1024,1186,1219,1221,1228],adam_step:1017,adam_upd:1017,adapt:[1017,1025,1219,1222],add:[40,41,43,1074,1168,1169,1170,1171,1172,1173,1186,1217,1218,1229],add_fn_to_dict:1180,add_param:1180,added:[43,917,1000,1001,1225,1226],adding:[917,928],addit:[40,41,43,917,943,944,945,1172,1173,1203,1213],adher:43,adjac:[917,920],adopt:[917,936],affect:[917,920],affin:[1217,1218],after:[917,972,1017,1020,1021,1022,1024,1025,1026,1033,1034,1172,1173,1219,1220,1221,1222,1223,1224,1232],after_1:[917,935,1015],after_n:[917,935,1015],again:43,against:[40,41,1040,1043,1046,1137,1139,1140,1141,1142,1143,1144,1145],agnost:[43,1186,1228,1229],aim:1232,algebra:[448,1040],algorithm:[1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210,1232],align:[40,41,43,917,928],aliv:[843,877,879,883,917,956,981,985],all:[15,16,17,18,19,40,41,43,95,212,388,497,613,798,841,842,843,852,877,883,917,918,919,925,926,936,949,956,962,985,999,1070,1071,1072,1073,1074,1118,1119,1120,1126,1127,1130,1131,1134,1137,1139,1140,1141,1142,1143,1144,1145,1155,1165,1186,1229,1232],all_depth:[40,41],all_equ:917,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1118,all_tru:[40,41],alloc:[843,1074],allow:[917,973,974,975,1215,1216],allow_dupl:[917,975],alon:[843,882,892,1074,1186],along:[40,41,43,454,795,796,798,799,800,843,866,867,868,869,872,873,874,875,887,917,934,939,940,949,954,972,973,974,987,998,1002,1005,1012,1040,1043,1046,1070,1071,1072,1073,1074,1130,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145],alongsid:[1228,1229],alpha:[1147,1149],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,843,1074],also:[40,41,43,917,920,1017,1020,1070,1071,1072,1073,1118,1119,1120,1126,1127,1155,1164,1203,1213,1228],altern:1228,alwai:[40,41,43,1017,1023,1028],among:[40,41],amount:[843,889,1074,1186],angl:[1052,1053,1058],ani:[15,16,17,18,19,40,41,43,95,212,388,497,613,798,841,842,843,845,848,852,853,855,864,865,868,869,874,917,919,920,924,942,943,944,945,946,947,961,969,975,1000,1001,1017,1021,1074,1118,1119,1122,1126,1127,1128,1129,1130,1134,1186,1192,1193,1215,1216,1228,1229,1232],anoth:[40,41,893,899,1186],another_backend:43,anyth:[43,1232],anywai:43,apart:43,api:[1186,1187],appear:[917,948],append:[40,41,1074],appli:[15,18,19,40,41,917,943,944,945,1017,1024,1025,1040,1045,1048,1049,1050,1051,1070,1071,1072,1118,1122,1125,1127,1147,1148,1149,1150,1151,1152,1153,1154,1155,1164,1166,1167,1172,1173,1186,1189,1190,1191,1217,1218],applic:[1118,1122,1127,1155,1166,1167,1186,1232],approxim:[43,802,827,1147,1148],arang:[115,270,403,454,517,634,917,973,974],arbitrari:[40,41,843,872,873,875,1074],arc:[1052,1058],arcco:[1052,1053],arctan:[1052,1057],area:1186,arg:[15,16,17,40,41,43,59,63,843,852,865,869,875,887,917,943,944,945,991,1074,1174,1175,1176,1180,1192,1193,1215,1216],arg_nam:917,arg_stateful_idx:[1174,1175,1176,1180,1215,1216],argmax:[115,403,517,634,917],argmin:[115,403,517,634,917],args_clon:1074,args_dist:1074,args_to_ivi:[15,1186],args_to_n:[15,1186],args_uni:1074,argsort:[92,209,385,494,610,795],argument:[15,16,17,18,19,40,41,42,43,59,63,841,842,843,852,853,865,869,875,917,920,921,929,942,975,991,1052,1053,1074,1118,1122,1192,1193,1215,1216],aris:[1186,1232],arithmet:[43,1137,1140,1143,1145],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:454,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,115,270,403,454,517,634,781,782,783,784,785,787,788,795,796,798,799,800,827,843,861,862,863,866,867,868,869,872,873,874,875,877,879,883,887,888,893,897,903,908,909,917,918,919,920,922,923,925,926,927,928,930,931,932,933,934,935,937,938,939,940,943,944,945,946,948,949,950,951,952,953,954,955,956,959,961,962,963,964,965,966,967,969,970,971,972,973,974,976,977,978,979,981,982,983,984,985,987,988,989,990,991,996,998,999,1002,1003,1004,1005,1007,1008,1009,1010,1012,1013,1014,1015,1016,1017,1019,1020,1023,1024,1028,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1074,1118,1120,1127,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1186,1187,1203,1211,1212,1214,1219,1223,1228,1229],arrang:[917,943],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,370,371,372,374,375,377,378,781,782,783,784,785,787,788,795,796,798,799,800],array_builtin:[43,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840],array_equ:[270,634,917],array_lik:[454,917,924],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,917],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1186],arraywithgener:[22,1186],arraywithgradi:[24,1186],arraywithimag:[26,1186],arraywithlinalg:[28,1186],arraywithlog:[30,1186],arraywithmath:[32,1186],arraywithmeta:[34,1186],arraywithrandom:[36,1186],arraywithreduct:[38,1186],arriv:[40,41,42],articl:1186,arxiv:1186,as_arrai:[40,41,917,959,996],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[401,403,412,843,861,893,900,901,902,903],as_tensor:403,as_vari:[40,41],as_zero:[40,41],asarrai:[403,917],asin:[726,1052],asinh:[726,1052],aspect:[1033,1038],assert:[40,41,917,927,1074],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:917,associ:[43,1040,1047],assum:[1229,1232],astyp:[403,893],asynchron:[40,41,42],at_dev:[40,42,843,856,857],at_kei:[40,41],at_key_chain:[40,41],at_nod:1074,atan2:[726,1052],atan:[726,1052],atanh:[726,1052],attent:[1155,1166,1167,1203,1214],attribut:[0,6,40,41,783,784,785,917,984,1016],audienc:[1186,1229],author:1186,avail:[40,41,843,878,880,881,890,917,944,1074],averag:[1017,1019,1020,1024,1070,1071,1072,1137,1140],average_across_step:[1070,1071,1072],avoid:[843,1074,1229],axes:[40,41,43,403,436,448,449,798,799,800,843,887,917,922,923,935,948,949,1004,1010,1015,1040,1043,1046,1074,1137,1139,1140,1141,1142,1143,1144,1145],axes_length:[40,41,917,943,944,945],axi:[40,41,403,405,406,410,411,416,418,426,427,428,434,435,437,795,796,798,799,800,843,845,848,855,866,867,868,869,872,873,874,875,887,917,922,923,934,935,938,939,940,948,949,954,972,973,974,987,998,999,1002,1004,1005,1012,1015,1040,1046,1074,1130,1136,1137,1139,1140,1141,1142,1143,1144,1145,1147,1152,1168,1170,1171],axis0:[40,41,917,1004],axis1:[40,41,917,1004],back:[1215,1216,1219,1223],backend:[15,17,19,40,41,370,371,372,374,375,377,378,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,452,453,454,455,843,878,881,890,893,899,907,916,917,964,968,1017,1020,1022,1024,1025,1026,1031,1074,1186,1187,1192,1193,1219,1220,1221,1222,1223,1224,1228,1229,1232],background:[1186,1229],backprop:1232,backward:[798,799,800,1228],band:[917,952],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,372,401,402,403,428,802,827,843,845,846,847,848,849,850,852,853,855,856,857,858,893,917,957,974,992,1001,1017,1074,1137,1138,1180,1184,1186,1189,1190,1191,1194,1196,1197,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1232],batch:[40,41,843,885,886,917,949,952,962,1033,1037,1040,1045,1070,1071,1072,1073,1074,1155,1164,1172,1173,1217,1218],batch_shap:[403,416,420,917,949,962,982,1033,1034,1035,1036,1037,1038,1039,1040,1047,1130,1131,1155,1165,1166,1167,1203,1212],batch_siz:[454,455,1074,1130,1131,1155,1156,1157,1158,1159,1160,1161,1162],bayesian:1232,becaus:[43,917,920],becom:[917,931,1052,1058,1232],been:[917,943,944,945,1130,1131],befor:[40,41,43,843,887,1070,1071,1072,1074,1118,1127,1137,1139,1140,1141,1142,1143,1144,1145,1155,1166,1167,1232],before_1:[917,935,1015],before_n:[917,935,1015],begin:[1118,1119,1126,1229],behaviour:[43,1232],behind:[1017,1020,1022,1024,1025,1026,1186],being:[40,41,43,917,920,986,994,1074],belong:[40,41],below:[43,1186,1229,1232],below_depth:[40,41],benefit:1186,bernoul:[1155,1163,1203,1211],best:[917,975,1186],beta1:[1017,1019,1020,1024,1219,1220,1221],beta2:[1017,1019,1020,1024,1219,1220,1221],beta:[1172,1173],between:[40,41,42,783,784,917,920,1118,1122,1130,1132,1168,1170,1171,1219,1221],bia:[1155,1164,1165,1203,1204,1205,1206,1207,1208,1209,1210,1213],bias_initi:[1203,1204,1205,1206,1207,1208,1209,1210,1213],bilinear:[1033,1034],bilinear_resampl:[153,328,444,563,711,1033],bilinearli:[1033,1034],binari:[1168,1169],binary_cross_entropi:1168,bit:[372,783,784,785,893,904,1033,1035,1039,1186],bitwise_oper:[0,7,8],block:[1186,1229],bool:[15,18,19,40,41,42,43,787,788,795,796,798,799,800,841,842,843,861,874,878,882,887,890,892,893,903,917,919,925,926,939,942,946,947,952,959,961,969,975,996,998,1012,1013,1014,1017,1020,1021,1022,1023,1024,1025,1026,1028,1040,1043,1046,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1130,1131,1137,1139,1140,1141,1142,1143,1144,1145,1147,1148,1155,1163,1192,1193,1203,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224],both:[43,917,938],bottom:1186,boundari:[40,41,1130,1134],branch:[841,842],brittl:43,broadcast:[40,41,43,798,799,800,802,827,917,928,946,977,978,979,987,1040,1043,1046,1052,1058,1062,1137,1139,1140,1141,1142,1143,1144,1145],broadcast_to:[270,634,917],build:[1074,1186,1203,1214,1215,1216],build_mod:[1203,1214,1215,1216],builder:1186,built:[843,917,920,1074,1203,1214,1215,1216],builtin:43,builtin_ab:[225,802],builtin_add:[225,802],builtin_and:[225,802],builtin_bool:[225,802],builtin_contain:[225,802],builtin_deepcopi:[225,802],builtin_dir:[225,802],builtin_eq:[225,802],builtin_float:[225,802],builtin_floordiv:[225,802],builtin_g:[225,802],builtin_getattr:[225,802],builtin_getattribut:[225,802],builtin_getitem:[225,802],builtin_gt:[225,802],builtin_int:[225,802],builtin_invert:[225,802],builtin_l:[225,802],builtin_lt:[225,802],builtin_mul:[225,802],builtin_n:[225,802],builtin_neg:[225,802],builtin_or:[225,802],builtin_po:[225,802],builtin_pow:[43,225,802],builtin_radd:[225,802],builtin_rand:[225,802],builtin_rfloordiv:[225,802],builtin_rmul:[225,802],builtin_ror:[225,802],builtin_rpow:[225,802],builtin_rsub:[225,802],builtin_rtruediv:[225,802],builtin_rxor:[225,802],builtin_setitem:[225,802],builtin_some_op:43,builtin_sub:[225,802],builtin_truediv:[225,802],builtin_xor:[225,802],bypass:1229,cach:[843,859,917,929],cache_fn:917,calcul:[40,41,42,43,802,827,1052,1062],call:[43,843,887,917,986,994,1011,1017,1021,1074,1118,1119,1122,1126,1203,1214,1215,1216,1219,1223,1229,1232],callabl:[40,41,841,842,843,852,853,887,917,929,942,944,975,1011,1070,1071,1072,1073,1074,1118,1122,1123,1124,1126,1127,1155,1166],can:[43,843,885,886,887,917,988,1033,1035,1074,1186,1228,1229,1232],cancel_join_thread:1074,captur:1186,cast:[40,41,115,270,403,517,634,893,917,934,1033,1035,1039],catch_except:[917,942],categori:43,ceil:[270,403,634,917,920],cell:[1155,1165,1203,1212],certain:[40,41,917,920,973,974],chain:[40,41,1070,1071,1072,1225,1226],chang:[843,917,988,1074,1118,1120,1127,1186,1228],channel:[917,952,1033,1035,1036,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213],check:[15,16,17,18,19,40,41,843,882,892,893,898,907,916,917,927,947,961,969,1003,1013,1017,1023,1074,1118,1119,1126,1186,1229],check_nest:[1118,1126],check_shap:[40,41],check_submod_ret:[1215,1216],check_typ:[40,41],choic:[1186,1229],choleski:[715,1040],choos:[917,1014,1052,1058,1186],choose_random_framework:59,chosen:[40,41,917,920,1014],chunk:[843,885,886,887,1074],chunk_siz:[843,887,1074],circl:[1052,1053,1055],clark:1186,clear:[843,859,1074],clear_framework_stack:59,clear_mem_on_dev:[401,626,843],click:1186,clip:[40,41,270,403,634,917,932,933,977,979,1186],clip_matrix_norm:917,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,917],clipped_delta:1074,clone:[40,41,843,862,863,864,865,1074],clone_arrai:1074,clone_it:1074,clone_nest:1074,clonedit:1074,cloneditem:1074,clonednest:1074,close:[43,1033,1038,1052,1055,1074,1232],closest:[893,898],closest_valid_dtyp:893,code:[40,41,42,43,454,1186,1187,1228,1229],codebas:[843,885,886,1074,1186,1229,1232],collect:[15,40,41,401,403,439,444,448,451,452,454,802,841,843,893,917,1017,1033,1040,1048,1052,1074,1118,1130,1137,1147,1155,1168,1172,1189,1203,1217,1219],color:[40,41,42,1230,1231],column:[917,962],combin:[40,41,42,1033,1038,1186,1232],combined_batch_s:1074,come:1229,command:1186,commit:1232,common:[40,41,1052,1058],common_key_chain:[40,41],commun:[1186,1229],compar:[40,41,917,919,925,926],comparison_oper:[0,9,10],compat:[43,798,799,800,802,827,917,946,988,1052,1062,1186,1232],compil:[270,403,634,1175,1176,1180,1186,1215,1216,1219,1220,1221,1222,1223,1224],compile_graph:[1174,1186,1215,1216,1219,1223],compile_on_next_step:[1215,1216,1219,1220,1221,1222,1223,1224],complet:[40,41,1074],complex:[1229,1232],compon:[917,938],composit:43,comput:[40,41,843,887,917,932,933,939,940,946,976,1017,1019,1020,1021,1022,1024,1025,1026,1028,1030,1033,1036,1040,1041,1042,1043,1044,1046,1048,1049,1050,1051,1052,1053,1055,1057,1058,1060,1063,1064,1065,1066,1068,1118,1122,1137,1138,1139,1140,1141,1142,1143,1144,1145,1155,1156,1157,1158,1159,1160,1161,1162,1164,1166,1168,1169,1170,1171],concat:[40,41,843,872,873,874,875,887,917,952,1074],concaten:[40,41,115,270,403,517,634,917,952,1074,1186],concatten:[40,41,843,872,873,874,875,887,1074],condit:[403,841,842,917,1014,1118,1126],conditon:[1118,1126],config:[40,41,1074],config_list:1074,configur:[40,41],conjunct:1229,connect:[1180,1203,1213,1214],consid:[40,41,1040,1046,1228,1232],consist:[40,41,843,875,1074,1137,1138,1215,1216,1229],constant:[843,852,853,917,935,1074,1118,1122,1168,1169,1170,1171,1172,1173,1194,1195,1199,1202,1215,1216,1217,1218,1229],constant_kwarg:1074,constant_pad:[270,403,517,634,917],constitu:[40,41],construct:[917,1005,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228],constructor:[40,41,42,917,921,1225,1226],consum:[843,1074],cont_feat_dim:[1155,1166],contaienr:[40,41],contain:[15,18,19,42,43,781,782,787,788,795,796,798,799,800,802,827,843,862,866,887,893,897,917,918,922,923,931,932,933,936,946,961,977,979,989,1000,1001,1017,1019,1020,1022,1024,1025,1026,1052,1062,1070,1071,1072,1073,1074,1130,1131,1137,1139,1140,1141,1143,1145,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[403,634,917],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[403,917,980,1155,1166,1203,1214],context_dim:[1203,1214],contextmanag:[59,60],continu:[43,1074,1229],contract:[40,41,1137,1138],contribut:[1186,1187],contributor:1186,control:1186,conv1d:[183,359,468,770,1155,1186,1203],conv1d_transpos:[183,359,468,770,1155],conv1dtranspos:[1186,1203],conv2d:[183,359,468,588,770,1155,1186,1203],conv2d_transpos:[183,359,468,770,1155],conv2dtranspos:[1186,1203],conv3d:[183,359,468,588,770,1155,1186,1203],conv3d_transpos:[183,359,468,770,1155],conv3dtranspos:[1186,1203],convent:[40,41,1137,1138],conver:[843,859,870,882,889,892,1074],convers:[16,17,18,19,40,41,1074,1186],convert:[15,16,17,18,19,40,41,43,843,870,871,893,899,905,906,917,997,1008,1009,1033,1035,1039,1040,1047,1074,1118,1120,1127,1186,1193],convert_dtyp:893,convolut:[1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210],cool:43,cooler:43,coordin:[917,978,1052,1053,1055,1058],copi:[40,41,454,917,937,1074,1118,1120],copy_arrai:[403,634,917],copy_nest:1118,core:[401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,452,453,454,455,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,845,846,847,848,849,850,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1186],correct:[43,1186,1229],correctli:[40,41,1040,1043,1046,1052,1058,1137,1139,1140,1141,1142,1143,1144,1145],correspond:[40,41,43,802,827,917,934,1130,1131],cos:[726,917,952,1052,1053,1068,1229],cosh:[726,1052],cosin:[1052,1053,1054,1060,1061],cost:[1017,1019,1020,1022,1024,1025,1026,1070,1071,1072,1073],cost_fn:[1070,1073],could:1232,count:[40,41,798,799,800,1074,1137,1142,1144,1184],cprint:1230,cpu:[40,41,43,843,880,882,888,889,892,917,920,924,954,955,962,973,974,982,983,984,990,991,1016,1074,1130,1131,1132,1133,1134,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1225,1226,1228,1229],creat:[40,41,781,782,843,852,853,917,920,924,953,954,955,962,973,974,982,983,984,990,991,1007,1016,1017,1030,1074,1130,1131,1132,1133,1134,1186,1192,1193,1194,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1232],create_if_abs:[40,41],create_vari:1194,creation:[40,41,42,43],creation_funct:[370,371,781,782],crop:[1033,1037],crop_siz:[1033,1037],cross:[270,634,917,1168,1169,1170,1171],cross_entropi:1168,cuda:[40,41,843,852,871,888,917,920,924,954,955,962,973,974,982,983,984,990,991,1016,1074,1130,1131,1132,1133,1134,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1225,1226],cumprod:[115,270,403,634,917],cumsum:[634,917],cumul:[917,939,940],current:[40,41,42,43,843,852,876,877,879,883,893,899,907,916,917,941,956,964,968,981,985,1074,1118,1119,1126,1186,1232],current_framework:59,current_framework_str:[403,634,917,1074],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1180,d_in:[1155,1156,1157,1158,1159,1160,1161],d_out:[1155,1156,1157,1158,1159,1160,1161],da_can_termin:1074,da_dim_s:[843,1074],da_direct:1074,da_tune_step:[843,1074],dai:1232,daniel:1186,data:[40,41,42,43,781,782,784,785,787,788,798,799,800,802,827,843,845,846,847,848,849,850,855,856,857,871,893,897,898,899,903,904,905,906,907,908,909,916,917,920,924,946,953,962,969,983,984,988,999,1003,1016,1017,1023,1031,1052,1062,1074,1155,1164,1186],data_format:[1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210],data_type_funct:[372,374,375,783,784,785],dataset:[40,41],datatyp:[40,41,893,898,908,909],dcdw:[1017,1019,1020,1022,1024,1025],debug_info:1180,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1017,1024,1025,1219,1221,1222],decay_lambda:[1017,1024,1025,1219,1221,1222],decid:[40,41,1232],decompos:[1040,1041],decomposit:[1040,1041,1045],decor:43,decrement:[917,965],dedic:[1017,1031,1192,1193],deep:[40,41,1186],deep_copi:[40,41],deeper:[843,865,869,875,1074,1118,1127,1186],deepli:[1118,1120],def:[43,60,80,197,373,482,598,844,851,854,894,895,896,1018,1074,1078,1085,1181,1185,1186,1195,1198,1201,1228,1229,1232],default_dev:43,default_devic:843,default_dtyp:[43,893],default_float_dtyp:893,default_int_dtyp:893,default_key_color:[40,41,42],default_nod:1074,default_rng:454,default_v:[917,942],defaultdevic:[843,844],defaultdtyp:[893,894],defaultfloatdtyp:[893,895],defaultintdtyp:[893,896],defer:43,defin:[43,917,938,982,984,1016,1130,1132],degre:[1052,1060,1066,1068],del:1074,delta:[1017,1019,1074,1180],delta_dim_s:1074,delta_percent_mem:1074,delta_sf:1074,delta_util:1074,demo:1186,denomin:[917,951,958,993,1000,1001,1172,1173,1217,1218],dens:[1203,1213],depend:[43,802,827,917,1014,1040,1045,1186],depth:[40,41,403,429,843,865,869,875,917,960,982,1074,1118,1127,1180,1184,1215,1216],depth_cutoff:[40,41],depthwis:[1155,1162,1203,1210],depthwise_conv2d:[183,359,468,588,770,1155],depthwiseconv2d:[1186,1203],deriv:[1017,1019,1020,1022,1024,1025,1026,1118,1120,1127,1186,1215,1219,1223,1225],descend:[795,796,1040,1045],descent:[1017,1022,1219,1224],describ:[40,41,1137,1138],design:[1186,1187],desir:[40,41,843,888,893,897,917,920,924,962,963,983,984,1016,1033,1038,1074,1137,1139,1140,1141,1143,1145],desired_aspect_ratio:[444,447,1033,1038],desired_percent_increas:1074,detail:1232,detect:[40,41,1118,1119,1126],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,787,788,798,799,800,802,827,843,878,880,881,890,893,897,898,904,907,908,909,916,917,919,920,924,925,926,961,964,968,969,1003,1013,1017,1023,1052,1062,1070,1071,1072,1073,1074,1155,1166],dev:[40,41,42,43,108,264,401,403,404,407,418,419,420,427,428,429,430,431,432,433,438,454,455,510,626,843,846,847,849,850,852,853,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,879,882,883,884,885,886,887,888,889,892,917,920,924,954,955,962,973,974,982,983,984,990,991,1016,1017,1032,1130,1131,1132,1133,1134,1192,1193,1194,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1225,1226],dev_clon:[40,41,843],dev_clone_arrai:843,dev_clone_it:843,dev_clone_nest:843,dev_dist:[40,41,843],dev_dist_arrai:843,dev_dist_it:843,dev_dist_nest:843,dev_from_str:[43,108,264,401,510,626,843],dev_mapp:843,dev_str:[40,41],dev_to_str:[108,264,401,510,626,843],dev_unifi:843,dev_unify_arrai:843,dev_unify_it:843,dev_unify_nest:843,dev_util:843,devclonedit:843,devcloneditem:843,devclonednest:843,devdistit:843,devdistitem:843,devdistnest:843,develop:[1186,1229,1232],deviat:[40,41,1130,1133,1137,1143,1172,1173,1217,1218],devic:[21,40,41,43,370,371,402,403,417,781,782,845,846,847,848,849,850,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,917,920,924,953,954,955,962,973,974,982,983,984,990,991,1016,1017,1032,1130,1131,1132,1133,1134,1186,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1225,1226],devmanag:[843,851],devmapp:[843,853],devmappermultiproc:843,diag:[1040,1045],diagon:[917,962],dict:[15,16,17,18,19,40,41,42,843,845,848,852,853,855,865,866,867,868,869,917,943,944,945,975,1070,1071,1072,1074,1118,1120,1121,1122,1125,1127,1192,1193],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,783,784,843,862,863,866,867,1074,1155,1164,1186,1229,1232],differenti:[1186,1229],dilat:[1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210],dim:[40,41,43,917,982,1033,1034,1038,1040,1045,1074,1203,1214],dim_siz:[40,41,843,1074],dimens:[40,41,42,798,799,800,843,874,917,928,934,938,943,944,945,948,952,959,972,982,987,988,998,999,1002,1010,1012,1033,1037,1040,1043,1045,1046,1070,1071,1072,1073,1074,1130,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1152,1155,1156,1157,1158,1159,1160,1161,1162,1165,1168,1170,1171,1203,1204,1205,1206,1207,1208,1209,1210,1213,1214],dimension:[40,41,454,798,799,800,917,998,999,1040,1045],direct:1074,directli:[43,1118,1127,1229,1232],directori:[917,995,1006],discret:[1168,1170],disk:[40,41,1033,1035],distanc:[917,920],distribut:[40,41,843,862,866,867,868,869,1074,1130,1131,1132,1133,1134,1155,1163,1203,1211,1215,1216],distribute_nest:1074,distributedarrai:[40,41],distrubt:[1168,1170],dive:[1186,1229],divid:[40,41,917,998,1000,1052],dividend:[1052,1062],divis:[917,951,958,993,1000,1001,1017,1019,1020,1024,1052,1062,1219,1220,1221],divisor:[1017,1019,1020,1024,1052,1062,1219,1220,1221],doc:1186,docstr:43,doe:[40,41,43,917,920,998,1228],doesn:1186,doing:43,domain:[1052,1053],don:1186,door:1232,dot:[1040,1042,1155,1166,1167,1203,1214],down:1228,downscal:[917,932,933],drag:[1186,1232],draw:[1130,1131,1133,1134],drawn:[1130,1131,1132,1133,1134],drop:[1186,1232],dropout:[1155,1186,1203,1214],dropout_r:[1203,1214],ds_tune_step:843,dtype:[40,41,43,115,270,370,371,372,374,375,403,404,407,408,417,420,430,431,438,517,634,781,782,783,784,785,897,898,899,900,901,902,904,905,906,907,908,909,910,911,912,913,914,915,916,917,920,924,953,962,982,983,984,1016],dtype_bit:[115,270,403,517,634,893],dtype_from_str:[43,115,270,403,517,634,893],dtype_in:[403,413,414,415,893,899,904,905,906,907,908,909,916],dtype_to_str:[115,270,403,517,634,893],duplic:[40,41],dure:[40,41,43,841,842,917,1011,1017,1019,1020,1024,1070,1071,1072,1073,1215,1216,1219,1220,1221,1223],dynam:[403,409,841,842],each:[40,41,42,43,787,788,795,796,802,827,843,852,853,862,863,864,865,866,867,868,874,886,887,917,918,919,935,946,987,998,1002,1005,1015,1017,1020,1022,1024,1025,1026,1033,1036,1040,1045,1052,1055,1062,1064,1065,1074,1118,1122,1130,1131,1137,1138,1155,1156,1157,1158,1159,1160,1161,1162,1163,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1229],eager:1229,easi:1232,easili:1186,econom:1232,ecosystem:1186,edg:[917,931,935,1015],effect:[1017,1026],effective_grad:[1017,1026],effici:1232,einop:[40,41,917,943,944,945],einops_rearrang:[40,41,917],einops_reduc:[40,41,917],einops_repeat:[40,41,917],einstein:[40,41,1137,1138],einsum:[40,41,169,347,456,578,750,1137],either:[40,41,917,942,975,978,980,1070,1071,1072,1073,1074,1203,1214,1215,1216,1229],eleg:1074,element:[40,41,43,454,787,788,795,796,798,799,800,802,827,843,864,868,874,893,897,917,918,920,922,923,925,926,930,931,932,933,939,940,946,949,950,951,962,963,977,979,987,989,998,1009,1014,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1074,1137,1138,1140,1142,1144,1147,1148,1149,1150,1151,1152,1153,1154,1155,1163,1203,1211],elementwis:[40,41],elementwise_affin:[1217,1218],elementwise_funct:[377,378,787,788],elemtn:[1130,1131],elif:1074,els:[917,927,942,947,1074],elsewher:[917,1014],emphas:1186,empti:[40,41,1074],enabl:[40,41,42,1186],encapsul:[783,785],encod:[917,952,1033,1035],end:[917,920,1186,1229],ensur:43,entir:[40,41,798,799,800,843,887,1074,1186,1203,1212],entri:[40,41,917,949,973,974,998,999],entropi:[1168,1169,1170,1171],enumer:1074,environ:1186,eps:[372,783,784],epsilon:[1017,1019,1020,1024,1168,1169,1170,1171,1172,1173,1217,1218,1219,1220,1221],equal:[40,41,403,517,634,787,788,917,919,925,926,935,998,1015,1052,1060,1066,1068,1130,1134],equality_matrix:[917,919],equat:[40,41,1137,1138],equival:[917,920,1052,1068],erf:[452,726,1052],error:[40,41,843,917,999,1052,1063,1074,1147,1148,1215,1216,1219,1223],essenti:43,etc:[40,41,43,843,888,917,920,924,954,955,962,973,974,982,983,984,990,991,1016,1074,1130,1131,1132,1133,1134,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1225,1226,1232],evalu:[40,41,798,799,800,917,978,1118,1119,1126],even:1232,evenli:[40,41,917,920,973,974,998],everi:[917,919,1232],exact:[40,41],exampl:[43,841,842,917,931,1002,1186,1228,1229,1232],example_input:[403,409,841,842],exc_tb:1074,exc_typ:1074,exc_val:1074,exce:[917,979],except:[40,41,44,47,798,799,800,917,920,927,934,942,1011,1074],excess_s:1074,excit:[1186,1229],exclud:[59,61,917,920,1130,1134],exclus:[40,41,403,411,425,439,441,917,939,969,1017,1023,1130,1132],execut:[43,917,1011,1229],execute_with_gradi:[150,323,439,558,705,1017,1186,1228],exist:[40,41,917,942,1074,1186,1219,1223,1232],exp:[726,1052],expand:[40,41,917,948,952],expand_dim:[40,41,270,634,917,1074],expect:[917,921],explain:1229,explicitli:[1203,1212,1214,1215,1216,1229],expon:[43,802,827,917,1001],exponenti:[43,802,827,1052,1063,1064],expos:[917,924,936],express:[917,978],exsit:[40,41],extend:43,extra:[40,41,42,1017,1021],eye:[1040,1042],fabian:1186,fabio:1186,factor:[843,852,885,886,887,1017,1019,1020,1024,1025,1040,1045,1074,1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210,1219,1220,1221,1222],falck:1186,fall:[1215,1216,1219,1223],fallback_to_non_compil:[1215,1216,1219,1223],fals:[15,18,19,40,41,42,59,66,67,68,69,70,401,403,411,412,425,434,437,439,440,441,448,449,787,788,795,796,798,799,800,843,861,874,882,887,892,893,900,901,902,903,917,919,939,942,947,952,959,969,975,996,998,1012,1014,1017,1020,1021,1022,1023,1024,1025,1026,1040,1043,1046,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1137,1139,1140,1141,1142,1143,1144,1145,1174,1175,1176,1180,1184,1192,1193,1215,1216,1219,1220,1221,1222,1223,1224],fan_in:1194,fan_mod:1194,fan_out:1194,far:[1118,1119,1126,1228],faster:[841,842],favourit:[1186,1228],feasibl:1232,feat_dim:[1155,1166,1167],fed:[843,887,1074],feed:[843,887,1074],field:1232,file:[40,41,43,917,995,1006,1215,1216],filepath:[40,41],fill:[40,41,781,782,917,953,983,1130,1132],fill_valu:[403,417,917,953],filter:[1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210,1232],filter_s:[1203,1204,1205],filter_shap:[1203,1206,1207,1208,1209,1210],find:[40,41,1232],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[79,80,196,197,372,373,481,482,597,598,783],finish:[1186,1232],finit:[787,788],first:[40,41,454,841,842,843,874,917,925,934,938,946,973,974,1002,1004,1017,1021,1040,1045,1070,1071,1072,1073,1074,1118,1119,1126,1130,1136,1137,1142,1144,1203,1214,1215,1216,1219,1223,1229,1232],firstlayersiren:[1186,1194],firstli:[1229,1232],fist:[843,887,1074],fit:[40,41,401,403,439,444,448,451,452,454,917,987,1033,1038],fkt:1232,flag:[40,41,1017,1023],flat:[40,41,43,917,987,990],flat_list:[40,41],flatten:[40,41,917,952,987,1040,1046,1137,1139,1140,1141,1143,1145],flatten_key_chain:[40,41,1215,1216],flexibl:[1186,1229],flip:[40,41,115,270,403,517,634,917],float32:[43,403,420,893,897,905,906,917,920,924,962,983,984,1016],float_dtyp:[893,901,911],float_img_to_uint8_img:1033,floor:[270,403,634,917,951,1074],floormod:[270,403,634,917],fluid:1232,fname:[1174,1176,1180,1215,1216],folder:[43,1186],follow:[40,41,43,783,785,843,887,917,965,966,967,1000,1001,1017,1020,1022,1024,1025,1026,1074,1118,1122,1127,1155,1166,1167,1186,1203,1213,1219,1223],followng:[783,784],fomaml_step:1070,forget:[1017,1019,1020,1024,1219,1220,1221],fork:[917,980],forkserv:[917,980,1074],form:[15,16,17,18,19,40,41,917,924,1017,1020,1022,1024,1025,1026,1118,1120,1127,1155],format:[40,41,43,843,861,893,897,899,903,917,920,924,962,983,984,1016,1074,1137,1138,1186,1228,1229],format_fn:[40,41],format_key_chain:[40,41],forward:[1215,1216,1219,1223,1228],found:[40,41,42],fourier:[917,952],fourier_encod:917,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,80,81,82,85,93,96,97,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,155,156,158,159,163,164,165,166,167,168,170,171,172,173,174,175,176,179,181,182,184,185,186,187,188,189,190,195,197,198,199,202,210,213,214,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,329,330,331,333,334,335,336,338,339,340,343,344,345,346,348,349,350,351,352,353,354,355,358,360,361,362,363,364,365,366,371,373,374,375,378,386,389,390,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,445,446,447,449,450,453,455,457,458,459,460,461,462,463,466,467,469,470,471,472,473,474,475,480,482,483,484,487,495,498,499,511,512,513,514,515,516,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,559,560,561,562,564,565,566,568,569,570,574,575,576,577,579,580,581,582,583,584,585,589,590,591,596,598,599,600,603,611,614,615,627,628,629,630,631,632,633,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,706,707,708,709,710,712,713,714,716,717,718,719,720,721,723,724,725,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,744,745,746,747,748,749,751,752,753,754,755,756,757,760,761,762,763,764,765,766,768,769,771,772,773,774,775,776,777,782,784,785,788,795,796,799,800,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1148,1149,1150,1151,1152,1153,1154,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1173,1175,1176,1178,1179,1181,1185,1186,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1231,1232],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1074,framewrk:[917,980],freeli:43,frequenc:[917,952],from:[40,41,42,43,795,796,798,799,800,843,852,853,887,893,899,917,942,949,954,955,962,988,999,1007,1014,1017,1020,1024,1033,1037,1070,1071,1072,1073,1074,1118,1120,1127,1130,1131,1132,1133,1134,1137,1142,1144,1155,1163,1166,1186,1192,1193,1203,1211,1214,1219,1223,1228,1229],from_cal:[1215,1216],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[115,270,403,517,634,783,784,917,1186],full_matric:[1040,1045],fulli:[43,1186,1203,1213,1214,1228],func:[40,41,403,409,439,440,841,842,843,887,917,929,1017,1021,1074],further:1232,furthermor:1232,futur:1232,gain:1194,gamma:[1172,1173],gather:[40,41,115,270,403,517,634,917,955],gather_nd:[40,41,115,270,403,517,634,917],gauss:[1052,1063],gaussian:[1147,1148],geglu:[1186,1189],gelu:[357,465,759,1147,1186,1189],gener:[23,40,41,43,401,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,454,841,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1023,1130,1132,1134,1135,1186,1219,1223],geometr:[917,952],get:[40,41,783,784,785,843,852,853,861,876,877,882,886,889,892,893,903,904,917,921,956,957,958,986,1074,1184,1186,1203,1212,1232],get_all_arrays_in_memori:917,get_all_arrays_on_dev:843,get_framework:59,get_initial_st:[1203,1212],get_min_bas:917,get_min_denomin:917,get_mod_kei:[1215,1216],get_num_dim:[403,634,917],get_param:1180,get_param_recurs:1180,get_referrers_recurs:917,getfullargspec:1074,gist:1186,give:[795,796,917,988,1229],given:[40,41,43,781,782,795,796,843,876,882,885,886,887,889,892,893,897,917,920,924,931,939,940,949,955,973,974,983,984,987,990,991,998,1005,1010,1012,1016,1017,1019,1020,1022,1024,1025,1026,1040,1042,1047,1052,1053,1074,1118,1123,1124,1130,1133,1134,1136,1137,1140,1142,1143,1144,1145,1155,1156,1157,1158,1159,1160,1161,1162,1192,1193,1232],global:[40,41,42,843,852,853,860,885,886,887,893,900,901,902,917,941,957,958,986,992,993,994,1000,1001,1017,1032,1074,1172,1173,1178,1179,1186,1217,1218],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1186,1194,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213],got:1186,gpu0:43,gpu2:43,gpu:[843,878,881,1074],gpu_is_avail:[401,843,1074],grad:[1186,1219,1223,1228],gradient:[25,40,41,440,441,442,443,843,887,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1036,1070,1071,1072,1073,1186,1219,1220,1221,1222,1223,1224,1228,1232],gradient_descent_upd:[1017,1070,1071,1072,1073],gradient_imag:[153,328,444,563,711,1033],gradienttrack:[1017,1018],graph:[1017,1020,1022,1024,1025,1026,1174,1175,1176,1181,1186,1215,1216],graph_compil:[1174,1175,1176,1177,1178,1179,1180,1184],greater:[40,41,917,920,950,999,1130,1134],green:[40,41,42,1230,1231],grid:[917,978],group:[1033,1038],guid:[1186,1187,1232],gym:1186,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1232,half:[917,920,1074,1130,1134],hand:1186,handl:[40,41,42,43,841,842,843,859,861,870,871,882,889,892,1017,1020,1022,1024,1025,1026,1074,1219,1220,1221,1222,1223,1224],has:[40,41,43,917,1002,1052,1057],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,917],hasattr:1074,have:[40,41,43,783,784,787,788,798,799,800,802,827,917,934,938,943,944,945,946,953,1002,1017,1023,1031,1040,1045,1052,1062,1074,1186,1228,1229],hdf5:[40,41,1215,1216],head:[1155,1166,1203,1214],head_dim:[1203,1214],height:[1033,1038],height_cutoff:[40,41],help:[59,372,401,402,843,855,856,857,858,893,1017,1180,1184,1186,1194,1196,1197,1199,1200,1202],helper:1186,here:[43,1186],hidden:[1155,1165,1203,1212],hierarch:[917,936],hierarchi:[40,41],high:[40,41,454,1130,1132,1134],higher:[1017,1020,1022,1024,1025,1026,1040,1045],highest:[1130,1132],highest_util:1074,highest_util_nod:1074,highli:1186,highlight:1232,highlight_subgraph:[1174,1176,1180],hint:43,hkt:1232,hold:[893,897,917,920,924,990,991],host:1186,hot:[917,982],how:[1186,1203,1214,1215,1216,1229,1232],howev:[43,1229],http:1232,hyperbol:[1052,1054,1056,1059,1061,1067,1069,1147,1154],hypothet:1232,icon:1186,idea:1186,ident:[40,41,43,115,270,403,517,634,917],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[783,784],if_exist:[40,41],ignor:[40,41,1219,1223],ignore_key_error:[40,41],ignore_miss:[1219,1223],ignore_non:[40,41],iinfo:[79,196,372,481,597,783],imag:[27,445,446,447,917,972,1034,1035,1036,1037,1038,1039,1155,1156,1157,1158,1159,1161,1162,1186,1232],image_dim:[1033,1037],imkkhk:1232,immedi:[1186,1229,1232],implement:[43,802,827,1186,1229,1232],in_featur:[1155,1164],includ:[40,41,43,798,799,800,917,920,961,1000,1001,1013,1118,1119,1130,1134,1203,1213,1214,1217,1218,1228],include_deriv:[1118,1120,1127],include_empti:[40,41],include_gener:[1174,1175,1176,1180,1215,1216],include_inf:[40,41,917,961,1013],include_nest:[1118,1119],include_self:[40,41],inclus:[1130,1132],incom:[1155,1164],increas:[843,865,869,875,917,935,948,1015,1074,1118,1127],increasingli:1232,increment:[917,966,1074],increment_param_count:1180,inde:1186,indent:[40,41,42],independ:[1130,1131],index:[40,41,403,454,917,922,923,954,955,978,999,1002,1118,1121,1123,1124,1125,1128],index_nest:1118,indic:[40,41,403,418,419,429,432,433,795,796,917,922,923,954,955,963,982,990,991,1118,1119,1121,1123,1124,1125,1126,1128,1129,1130,1131,1147,1152,1155,1156,1157,1158,1159,1160,1161,1162,1172,1173,1203,1204,1205,1206,1207,1208,1209,1210,1215,1216],indices_wher:[115,270,403,634,917],inevit:1232,inf:[40,41,917,961,970,1013,1052,1057],infer:[795,796,841,842,917,949,959,962,988,996,1033,1037,1229,1232],infin:[787,788,917,970],inform:[783,784,785,1017,1028],init_c:[1155,1165],init_h:[1155,1165],init_on_first_step:[1219,1223],initi:[40,41,42,59,372,401,402,843,855,856,857,858,893,1017,1074,1155,1165,1180,1184,1186,1196,1197,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1219,1223],initialz:[1215,1216],inner:[1070,1071,1072,1073],inner_batch_fn:[1070,1071,1072],inner_batch_shap:[1155,1164],inner_cost_fn:[1070,1071,1072],inner_grad_step:[1070,1071,1072,1073],inner_learning_r:[1070,1071,1072,1073],inner_optimization_step:[1070,1071,1072,1073],inner_v:[1070,1071,1072],inp:1074,inplac:[40,41,917,927,964,968,1003,1017,1020,1022,1024,1025,1026,1192,1193,1219,1220,1221,1222,1223,1224],inplace_arrays_support:[403,917],inplace_decr:[115,270,403,517,634,917],inplace_incr:[115,270,403,517,634,917],inplace_oper:[0,11,12],inplace_upd:[40,41,115,270,403,517,634,917,1192,1193],inplace_variables_support:[403,917],input:[15,18,19,40,41,42,43,787,788,795,796,798,799,800,841,842,843,852,853,860,861,862,865,866,869,875,887,888,893,897,898,900,901,902,903,904,908,909,917,918,919,922,923,925,926,927,928,930,931,932,933,934,935,937,939,940,942,943,944,945,946,947,948,949,950,951,952,959,961,962,963,965,966,967,969,970,971,972,976,977,978,979,987,989,996,997,999,1002,1003,1004,1005,1007,1008,1009,1010,1012,1013,1015,1017,1021,1023,1028,1032,1033,1034,1035,1036,1037,1039,1040,1043,1045,1046,1048,1049,1050,1051,1052,1054,1056,1057,1059,1060,1061,1062,1066,1067,1068,1069,1070,1071,1072,1073,1074,1130,1131,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1172,1173,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1217,1218,1229],input_ax:[843,887,1074],input_channel:[1203,1204,1205,1206,1207,1208,1209,1212,1213],input_queu:1074,inputs_split:1074,insert:[917,948],insid:43,inspect:1074,inspir:1232,instal:1186,instanc:[15,16,17,18,19,40,41,43,454,802,827,843,852,1074,1192,1193,1225,1226],instead:[40,41,454,1137,1139,1140,1141,1142,1143,1144,1145,1232],int32:43,int64:[893,897,917,920,924,962,983,984,1016],int_dtyp:[893,902,912],integ:[40,41,454,783,785,798,799,800,893,909,917,920,930,950,989,998,1040,1046,1130,1132,1135],integr:1186,intend:43,inter:1186,interchang:[40,41,917,1004],interest:1186,interfac:[917,924,1229],intermedi:[40,41],intern:[40,41,843,1017,1031,1074,1118,1119,1126,1127,1194,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1225,1226],interpol:[917,972],intersect:[1052,1053],interv:[40,41,798,799,800,917,920,931,973,974,1052,1055,1130,1134],introduc:1232,inv:[715,1040,1232],invalid:[798,799,800],invalid_dtyp:893,invers:[1040,1042,1044,1052,1053,1054,1055,1056,1057,1059,1232],invert:[1040,1042,1044],invest:1232,invoc:[841,842],irrespect:1186,is_al:1074,is_arrai:[115,270,403,517,634,917,1074],is_float_dtyp:893,is_int_dtyp:893,is_mean:1074,is_sum:1074,is_var:[1180,1184],is_vari:[150,323,439,558,705,1017],isfinit:[84,201,377,486,602,787],isinf:[270,517,634,917],isinst:1074,isnan:[270,517,634,917],isnumer:1074,item:[15,19,40,41,802,814,815,843,852,853,855,862,864,866,868,874,893,900,917,936,960,1000,1001,1074,1118,1122,1123,1124,1127,1128,1129,1186,1215,1216,1228],iter:[15,16,17,18,19,40,41,42,841,842,843,846,847,849,850,852,853,856,857,864,866,867,868,869,874,887,917,919,928,934,935,949,962,978,983,987,988,991,996,998,1002,1005,1010,1015,1074,1118,1119,1120,1122,1126,1127],iterbal:[843,864,868,874,1074],its:[454,795,796,843,887,917,962,988,1004,1010,1074,1186],itself:[43,1118,1127],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,370,371,372,374,375,377,378,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,781,782,783,784,785,787,788,795,796,798,799,800,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,845,846,847,848,849,850,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1184,1186,1187,1189,1190,1191,1192,1193,1194,1196,1197,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1230,1231],ivy_backend:[40,41],ivy_bay:1232,ivyfcmodel:1228,ivyh:[40,41,42],ivymodul:[180,767],jame:1186,jax:[1017,1023,1186,1232],jax_concat:1186,jnp:1186,join:[40,41,917,934,1002,1074],journal:1186,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1186,1203,1212,1232],kaimingnorm:[1194,1198],kalman:1232,kalman_filt:1232,kalman_filter_step:1232,kalman_filter_upd:1232,keep:[40,41,843,888,917,1012,1074,1186,1232],keep_inner_v:[1070,1071,1072],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1070,1071,1072],keepdim:[40,41,403,437,448,449,798,799,800,917,1012,1040,1043,1046,1137,1139,1140,1141,1142,1143,1144,1145],kei:[15,16,17,40,41,42,802,807,843,855,917,936,1070,1071,1072,1074,1118,1121,1125,1155,1166,1167,1186,1192,1193,1203,1214,1219,1223],kept:[40,41,42,1070,1071,1072],kera:1232,kernel:[1155,1165],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,843,852,853,865,869,875,917,921,943,944,945,975,1074,1118,1122,1215,1216],keyword_color_dict:[40,41,42],kind:[783,784,785,1232],kwarg:[15,16,17,40,41,42,59,63,843,852,865,869,875,917,975,1074,1174,1175,1176,1180,1192,1193,1215,1216],kwarg_stateful_idx:[1174,1175,1176,1180,1215,1216],kwargs_clon:1074,kwargs_dist:1074,kwargs_uni:1074,label:[1168,1169,1170,1171],lamb:[1017,1024,1186,1219],lamb_upd:1017,lambda:[1074,1219,1222,1224,1228],lar:[1017,1024,1025,1186,1219],larger:[783,784,917,931],largest:[40,41,783,784,785,917,922,950],lars_upd:1017,last:[40,41,798,799,800,917,920,938,972,998,1002,1040,1043,1045,1137,1142,1144,1147,1152,1155,1165,1203,1213],later:[40,41,917,929],latest:[1203,1212],layer:[1017,1020,1022,1024,1026,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1172,1173,1186,1194,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1225,1226,1232],layer_norm:1172,layernorm:[1186,1217],layerwis:[1017,1025,1219,1222],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1118,1119,1126],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1147,1148,1149],leaky_relu:[759,1147],learn:[795,796,1017,1020,1022,1024,1025,1026,1070,1071,1072,1073,1130,1136,1186,1219,1220,1221,1222,1223,1224,1229,1232],learnabl:[1172,1173,1217,1218],leav:[15,18,19,40,41,1118,1119,1120,1126,1127],left:[40,41,1040,1043,1046,1137,1139,1140,1141,1142,1143,1144,1145,1186],leftmost:[40,41],len:1074,length:[40,41,42,917,920,988,999,1010],lenton2021ivi:1186,lenton:1186,less:[40,41,43,917,930,1074,1130,1134],less_util_node_str:1074,let:[1229,1232],level:1186,librari:[1186,1228,1232],lightweight:1186,like:[43,1017,1023,1130,1134,1186,1228,1229,1232],limit:[40,41,42,783,784,785,917,931,932,933],linalg:[29,449,450,1041,1042,1043,1044,1045,1046,1047,1186],linear0:[1186,1228],linear1:1186,linear2:1228,linear:[448,917,952,972,1040,1147,1148,1149,1150,1155,1163,1186,1203,1204,1205,1206,1207,1208,1209,1210,1228],linear_resampl:[115,270,403,517,634,917],linearli:[917,952],link:1186,linspac:[115,270,403,517,634,917,920],list:[15,18,19,40,41,43,798,799,800,843,852,853,862,863,865,866,867,869,872,873,887,917,920,924,926,978,997,998,1007,1012,1070,1071,1072,1074,1118,1119,1120,1122,1126,1127,1155,1156,1157,1158,1159,1160,1161,1162,1186,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210],list_join:[40,41,42],list_stack:[40,41],littl:1229,load:[40,41],loaded_kwarg:1074,loader:1186,local_set:[917,960],locat:[43,917,970,971,1130,1131],log:[726,917,974,1052,1074,1168,1169,1170,1171,1186],log_all_op:1180,log_global_inference_abs_tim:[1177,1186],log_global_inference_rel_tim:[1177,1186],logarithm:[1052,1065],logic:[31,798,799,800,1049,1050,1051,1186],logical_and:[337,722,1048],logical_not:[337,722,1048],logical_or:[337,722,1048],logit:[1168,1171],logspac:[115,270,403,517,634,917],look:[43,1229,1232],loop:[1070,1071,1072,1073],loss:[1169,1170,1171,1186,1228],loss_fn:[1186,1228],lot:1229,low:[40,41,454,1130,1132,1134],lower:[40,41,917,977,1130,1134],lower_depth:[1215,1216],lowest:[15,18,19,40,41,1118,1127,1130,1132],lstm:[1155,1165,1186,1203],lstm_updat:[43,1155],machin:[783,784,785,795,796,1130,1136,1186,1229,1232],mai:[917,920,942,946,1186,1229,1232],main:[917,962,1186],mainli:1186,make:[43,454,843,1074,1186,1229],maml:[1070,1071,1072],maml_step:1070,manag:[843,1074],mani:[40,41,43,917,998,1186],manner:[15,18,19,40,41,43,1118,1127],manual:[1118,1119,1126,1232],map:[40,41,42,843,852,917,970,971,1074,1118,1123,1124,1127,1203,1214,1228],map_cont:[40,41],map_nest_at_index:1118,map_nest_at_indic:1118,map_sequ:[40,41],mapper:[843,852,853,1074],mask:[1155,1166,1167],match:[40,41,917,975],match_kwarg:917,math:[33,453,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1074,1186],mathbb:[1040,1047],mathbf:[1040,1047],matmul:[43,270,403,517,634,917,1232],matplotlib:1229,matric:[1155,1164],matrix:[40,41,917,919,932,976,1040,1041,1042,1043,1044,1047,1155,1164,1203,1213],matrix_norm:[40,41,157,332,448,567,715,1040],matter:1186,max:[40,41,372,783,784,785,917,932,933,944,977,990,991,1074,1137,1139,1219,1221],max_batch_s:[40,41],max_chunk_s:[843,887,1074],max_depth:[40,41,843,847,850,857,865,869,875,917,960,1074,1118,1127],max_dev_dim_step_ratio:843,max_freq:[917,952],max_length:[40,41],max_node_dim_step_ratio:1074,max_norm:[40,41,917,932,933],max_split_factor_step_s:[843,1074],max_trust_ratio:[1017,1024,1219,1221],maxim:[1186,1229,1232],maximis:1186,maximum:[40,41,42,634,843,865,869,875,887,917,922,931,932,933,952,1017,1024,1074,1118,1127,1137,1139],mayb:[15,18,19],mdi:1074,mean:[40,41,454,843,872,873,874,875,887,917,944,1070,1071,1072,1073,1074,1118,1122,1130,1133,1137,1140,1143,1145,1194,1228,1232],measur:[1155,1166,1203,1214],mech:1186,mechan:[1186,1232],medic:1232,memori:[843,859,882,887,889,892,1074,1155,1165,1186],meshgrid:[270,403,634,917],messag:[1230,1231],meta:[35,1071,1072,1073,1186],method:[40,41,42,43,454,917,924,936,978,990,991,1017,1024,1025,1074,1118,1119,1126,1127,1186,1203,1214,1215,1216,1229],might:[917,942,1232],min:[40,41,372,783,784,785,917,944,979,990,991,1000,1074,1137,1141],min_bas:[917,1001],min_denomin:[917,1000],min_dev_dim_s:843,min_node_dim_s:1074,min_sf_tune_step:[843,1074],min_unit_dev_tune_step:843,min_unit_node_tune_step:1074,mind:1186,mini:[1172,1173,1217,1218],minimum:[40,41,634,843,893,897,917,920,923,924,931,957,958,992,993,1000,1001,1074,1137,1141],miss:[1219,1223],ml_framework:[795,796,917,920],mod:[917,951],mod_depth:[1215,1216],mod_height:[1215,1216],mod_with_top_mod_key_chain:[1215,1216],mode:[40,41,841,842,843,872,873,874,875,887,1040,1045,1074,1229],model:[1186,1228],modul:[40,41,42,59,917,980,1074,1186,1187,1189,1190,1191,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1217,1218,1225,1226,1232],moment:[1017,1019,1020,1024,1219,1220,1221],more:[43,917,1002,1074,1186,1229,1232],more_util_node_str:1074,most:[40,41,43,1186,1232],move:[40,41,43,843,888,1074],much:[1186,1232],multi:[454,917,980,1155,1166,1203,1214],multi_head_attent:1155,multi_index_nest:1118,multi_map:[40,41],multi_nod:1074,multidev:[843,854,855,856,875],multidevcontain:[40,41],multidevic:[843,852],multidevit:[843,846,849,852,853,857],multidevitem:[843,845,848],multidevnest:[843,847,850],multiheadattent:[1186,1203],multinod:[1074,1078],multinodecontain:1074,multinodeit:1074,multinodeitem:1074,multinodenest:1074,multinomi:[162,342,454,573,743,1130],multipl:[40,41,798,799,800,917,975,998,1040,1042,1137,1139,1140,1141,1142,1143,1145,1172,1173,1203,1213,1229],multipli:[40,41,917,939,1137,1142],multiprocess:[40,41,42,403,634,843,852,917,1074],must:[40,41,42,43,781,782,787,788,798,799,800,802,827,843,872,873,874,875,887,917,920,934,936,938,946,977,979,991,1002,1052,1058,1062,1074,1130,1135,1219,1223],mutabl:[1118,1120,1127],mutlidevic:[843,852],mutlinod:1074,mw_tm1:[1017,1020,1024],mx_concat:1186,mxnet:[43,1186,1232],my_func:43,mymodel:1186,name:[841,842,1174,1175,1176,1180,1228],namespac:[43,1229],nan:[40,41,787,788,917,961,971,1013],nativ:[15,17,18,19,40,41,43,843,859,861,870,871,882,889,892,893,898,905,906,1074,1186,1187,1192,1193],native_modul:[1192,1193],native_module_class:[1192,1193],nativearrai:[15,18,19,43,781,782,783,784,785,787,788,795,796,798,799,800,802,827,843,861,887,888,893,897,903,908,909,917,918,919,920,922,923,924,925,926,928,930,931,932,933,934,935,937,938,939,940,943,944,945,946,948,949,950,951,952,954,955,959,961,962,963,970,971,972,973,974,976,977,978,979,982,983,984,987,988,989,990,991,996,998,999,1002,1004,1005,1007,1008,1009,1010,1012,1013,1014,1015,1016,1074,1118,1120,1127],natur:[1052,1065,1232],ncdhw:[1155,1160,1161,1203,1208,1209],nchw:[1155,1158,1159,1162,1203,1206,1207,1210],ncw:[1155,1156,1157,1203,1204,1205],ndarrai:[43,370,371,372,374,375,377,378,454,917,1008],ndhwc:[1155,1160,1161,1203,1208,1209],nearest:[917,989],need:[43,917,932,933,1155,1157,1159,1161,1186,1203,1205,1207,1209,1232],neg:[40,41,787,788,798,799,800,1137,1142,1144,1147,1149],negative_slop:1194,neither:1074,nest:[15,16,17,18,19,40,41,42,843,865,869,875,917,924,1007,1070,1071,1072,1074,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1215,1216,1219,1220,1221,1222,1223,1224],nested_indices_wher:1118,nested_map:[1074,1118],network:[1155,1164,1186,1187,1189,1203,1215,1216,1232],neural:[1155,1186,1189,1203,1228],new_node_percent_mem:1074,new_node_util:1074,new_node_utils_kei:1074,new_std:[1172,1173,1217,1218],newli:[841,842,917,928,929],newlin:[40,41,42],newshap:[917,928,988],next:[783,784,1074,1215,1216,1219,1220,1221,1222,1223,1224],nhwc:[1155,1158,1159,1162,1203,1206,1207,1210],node:[40,41,1118,1119,1126],node_clon:1074,node_dist:1074,node_dist_arrai:1074,node_dist_it:1074,node_in:1074,node_mapp:1074,node_str:1074,node_to_str:1074,node_util:1074,nodedistit:1074,nodedistitem:1074,nodedistnest:1074,nodemanag:[1074,1085],nodemapp:1074,nodemappermultiproc:1074,noinspect:[43,844,894,895,896,1018,1074,1181],non:[40,41,798,799,800,841,842,893,907,1215,1216,1219,1223,1229],none:[40,41,42,43,59,61,64,370,371,401,403,404,407,409,416,417,418,419,420,427,428,429,430,431,432,433,434,435,436,438,448,449,454,455,781,782,783,784,785,795,796,798,799,800,841,842,843,852,853,859,860,885,886,887,888,893,900,901,902,917,920,924,941,942,947,949,953,954,955,960,962,964,965,966,967,968,973,974,980,982,983,984,987,990,991,992,993,998,999,1000,1001,1010,1011,1016,1017,1020,1022,1024,1025,1026,1032,1033,1037,1040,1043,1046,1070,1071,1072,1073,1074,1118,1119,1122,1126,1127,1130,1131,1132,1133,1134,1137,1139,1140,1141,1142,1143,1144,1145,1155,1157,1159,1161,1164,1165,1166,1167,1172,1173,1174,1175,1176,1180,1184,1192,1193,1194,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226],norm:[40,41,917,932,933,1040,1043,1046,1173,1186,1218,1219,1221],normal:[1130,1133,1172,1173,1217,1218],normalized_idx:[1172,1173],normalized_shap:[1217,1218],notat:[40,41,1137,1138],note:43,noth:[40,41,1229],notimplementederror:1074,now:[40,41,843,888,917,918,1074,1186,1203,1214,1215,1216,1228,1229,1232],np_concat:1186,np_finfo:372,ns_tune_step:1074,num:[403,427,428,917,973,974],num_arrai:[40,41],num_arrays_in_memori:917,num_arrays_on_dev:843,num_band:[917,952],num_channel:[1203,1210],num_chunk:1074,num_chunks_floor:1074,num_class:[1130,1131],num_cpu_cor:843,num_gpu:[108,401,843,1074],num_head:[1155,1166,1203,1214],num_kei:[1155,1166,1167],num_lay:[1203,1212],num_or_size_split:[40,41,403,434,917,998],num_output:1074,num_queri:[1155,1166,1167],num_sampl:[403,426,454,455,917,972,1033,1034,1130,1131],num_task:[1070,1071,1072,1073],number:[40,41,42,783,784,785,798,799,800,841,842,843,879,880,881,893,904,908,909,917,920,931,935,948,952,959,962,971,972,973,974,977,981,987,998,1005,1009,1013,1015,1040,1045,1070,1071,1072,1073,1074,1130,1131,1135,1137,1139,1140,1141,1143,1145,1155,1166,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1229,1232],numer:[43,787,788,802,827,917,957,958,992,993,1000,1001,1052,1062,1194],numhead:[1155,1166],numpi:[40,41,370,371,372,374,375,377,378,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,917,1008,1040,1045,1137,1138,1186,1228,1229,1232],nwc:[1155,1156,1157,1203,1204,1205],obj:[40,41],object:[40,41,42,59,372,783,784,785,843,893,897,917,920,924,1017,1118,1121,1123,1124,1125,1128,1129,1130,1136,1180,1184,1194,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1215,1216],object_in:[403,407,917,924],observ:1074,occupi:[783,784,785,917,990,991],off:[917,920],offer:1186,offset:[1172,1173],often:1229,old:[40,41],on_init:[1203,1214,1215,1216],onc:[843,887,1074,1130,1131,1186],one:[40,41,43,843,872,873,874,875,887,893,899,917,962,975,982,990,991,999,1002,1040,1043,1046,1074,1137,1138,1139,1140,1141,1142,1143,1144,1145,1186,1229,1232],one_hot:[115,403,517,634,917],onearrai:[917,948],ones:[40,41,115,270,403,517,634,917,962,982,984,1186],ones_lik:[115,270,403,517,634,917],ongo:43,onli:[40,41,43,454,843,1074,1118,1119,1120,1126,1219,1220,1221,1222,1223,1224,1228,1229],onlin:1186,onto:[843,872,873,888,1074,1118,1122,1127],oom:[843,1074],open:[917,920,1130,1134,1186,1232],opencv:1229,oper:[40,41,917,927,943,944,945,973,974,1003,1017,1020,1022,1024,1025,1026,1048,1049,1050,1051,1155,1156,1157,1158,1159,1160,1161,1162,1164,1186,1187],operand:[40,41,1137,1138],oppos:[917,952],optim:[843,1017,1020,1022,1024,1025,1026,1070,1071,1072,1073,1074,1186,1220,1221,1222,1224,1228,1232],optimizer_upd:1017,option:[15,18,19,40,41,42,43,370,371,781,782,795,796,798,799,800,841,842,843,852,853,861,865,866,867,868,869,872,873,874,875,882,885,886,887,888,892,893,898,903,907,916,917,919,920,922,923,924,932,933,934,939,941,942,949,952,953,954,955,959,961,962,969,972,973,974,975,978,980,982,983,984,987,990,991,994,996,998,999,1000,1001,1002,1010,1012,1013,1016,1017,1020,1022,1023,1024,1025,1026,1028,1033,1037,1040,1043,1046,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1130,1131,1137,1139,1140,1141,1142,1143,1144,1145,1147,1148,1152,1155,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1229],ord:[917,949,1040,1045],order:[40,41,42,43,795,796,1017,1020,1022,1024,1025,1026,1040,1043,1046,1070,1071,1072,1225,1226],ordered_node_util_kei:1074,org:1232,organ:43,origin:[40,41,42,917,984,988,1016,1040,1043,1046],other:[40,41,43,802,804,805,810,812,813,817,819,820,821,822,823,825,827,828,829,830,831,832,834,835,836,838,839,840,841,842,917,919,920,962,1017,1021,1130,1134,1186,1228,1229,1232],other_i:[43,802,827],otherwis:[15,16,17,18,19,40,41,787,788,798,799,800,843,860,893,900,901,902,917,927,1010,1011,1014,1017,1023,1028,1032,1070,1071,1072,1074,1137,1139,1140,1141,1143,1145],our:[1186,1232],out:[454,917,920,1052,1057,1155,1163,1165,1186,1203,1211],out_feat_dim:[1155,1166],out_featur:[1155,1163,1164],out_i:[787,788],outdat:1232,outer:[1070,1071,1072,1073],outer_batch_fn:[1070,1071,1072],outer_batch_shap:[1155,1164],outer_cost_fn:[1070,1071,1072],outer_v:[1070,1071,1072],outlin:1229,output:[40,41,43,781,782,843,852,853,887,917,920,929,953,962,987,1005,1017,1021,1052,1058,1074,1130,1132,1133,1134,1155,1157,1159,1161,1163,1165,1166,1167,1186,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214],output_ax:[843,887,1074],output_axi:1074,output_channel:[1203,1204,1205,1206,1207,1208,1209,1212,1213],output_connected_onli:[1174,1176,1180,1215,1216],output_queu:1074,output_shap:[1155,1157,1159,1161,1203,1205,1207,1209],outsid:[917,931],over:[40,41,798,799,800,917,949,1040,1043,1046,1130,1134,1137,1139,1140,1141,1143,1145,1172,1173,1217,1218],overal:1229,overflow:[917,920],overhead:1229,overrid:[917,982,984,1016],overriden:[1219,1223],overwrit:[40,41,843,887,1074],overwrite_at_key_chain:[40,41],own:[1186,1229,1232],packag:[43,1229],pad:[917,935,952,1015,1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210],pad_width:[403,917,935,1015],page:1186,pair:[1155,1167],parallel:[843,852,853,1074],parallelis:[843,852,853,1074],param:[40,41,42,43,403,418,419,798,800,843,887,917,918,954,955,982,983,1074,1185,1186,1215,1216,1228],paramet:[15,16,17,18,19,40,41,42,781,782,783,784,785,787,788,795,796,798,799,802,827,841,842,843,852,853,859,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,882,885,886,887,888,889,892,893,897,898,899,903,904,905,906,907,908,909,916,917,919,920,922,923,924,925,926,927,928,929,930,931,932,933,934,935,937,938,939,940,942,943,944,945,946,947,948,949,950,951,952,953,954,955,959,961,962,963,965,966,967,969,970,971,972,973,974,975,976,977,978,979,980,983,984,987,988,989,990,991,992,993,994,996,997,998,999,1000,1001,1002,1003,1004,1005,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1028,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228],parameter:[1130,1133,1134],params_all_empti:1180,pardo:1186,pars:[917,936],part:[1017,1020,1022,1024,1025,1026,1052,1057,1186,1215,1216,1229],partial:[40,41,1215,1216],particl:1232,particular:1232,pass:[40,41,42,843,852,887,893,898,917,929,1017,1031,1070,1071,1072,1074,1192,1193,1215,1216,1219,1223,1225,1226],pattern:[40,41,917,943,944,945],per:[843,1074,1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210],percent_used_mem_on_dev:843,percent_used_mem_on_nod:1074,percentag:[843,882,1074],perf_count:1074,perform:[40,41,43,795,796,798,799,800,843,917,922,923,939,943,944,945,965,966,967,972,973,974,1017,1020,1022,1024,1025,1026,1033,1034,1070,1071,1072,1073,1074,1118,1123,1124,1137,1139,1140,1141,1142,1143,1144,1145,1147,1152,1155,1163,1165],permissable_step:1074,permit:43,permut:[454,917,1004,1010],perpendicular:[917,938],person:1186,physci:1232,pickl:[40,41,1074],pickle_filepath:[40,41],pid:1180,pinv:[332,715,1040],pip:1186,pipelin:1228,pkk:1232,pkkm1:1232,pkm1km1:1232,place:[40,41,43,781,782,843,888,917,948,953,965,966,967,1074,1219,1220,1221,1222,1223,1224],placehold:[1118,1127],pleas:454,point:[781,782,783,784,893,908,917,920,1052,1062],popul:[40,41,1130,1131],popular:1232,population_s:[454,455,1130,1131],portabl:[1186,1187],posit:[15,16,17,783,784,787,788,843,865,869,875,917,918,920,948,952,1074,1130,1135,1192,1193],possibi:[40,41],possibl:[917,975,1007,1033,1038,1232],post:[1172,1173],post_shap:[40,41],power:[43,802,827,833,917,957,992,1001,1194],practic:1186,pre:[843,1074,1186],pre_shap:[40,41],precis:[783,784],pred:[1168,1169,1170,1171],predict:[1168,1169,1170,1171,1232],preprint:1186,present:[40,41],preserv:[40,41,42,917,949,1017,1028],preserve_typ:[40,41,439,442,1017,1028],press:1186,prevent:[43,1017,1019,1020,1024,1074,1219,1220,1221],previou:[1017,1020,1024],previous:[917,929],prime:1186,print:[40,41,42,843,883,917,985,1186,1228],print_all_arrays_in_memori:917,print_all_arrays_on_dev:843,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1219,1223],prob:[454,455,1130,1131,1155,1163,1203,1211],probabl:[1130,1131,1155,1163,1203,1211],problem:[43,1232],process:[43,843,852,853,882,892,917,980,1074],process_specif:[843,882,892,1074],prod:[40,41,917,944],produc:[843,852,853,1074],product:[40,41,917,938,939,976,1137,1138,1155,1166,1167,1203,1214],profil:[108,264,401,510,626,843,1074],project:[1186,1228,1229,1232],promot:[43,802,827,1052,1062],prompt:1186,properli:43,properti:[40,41,372,843,855,1074,1180,1184,1215,1216,1219,1220,1221,1222,1224],provid:[40,41,43,798,799,800,841,842,843,860,893,900,901,902,907,916,917,942,982,984,991,1016,1017,1020,1022,1024,1025,1026,1032,1074,1186,1203,1212,1219,1220,1221,1222,1223,1224,1229],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1040,1044],ptype:[1180,1184],pure:[40,41,1186,1232],purpos:1232,put:1074,pybroadexcept:1074,pyprotectedmemb:[1074,1181],pyshadowingbuiltin:43,pyshadowingnam:[844,894,895,896,1018,1074],python:[40,41,843,882,892,917,920,1074,1186],pytorch:[1017,1020,1022,1024,1025,1026,1186,1219,1220,1221,1222,1223,1224,1228,1229,1232],pyunresolvedrefer:1074,quadrant:[1052,1058],queri:[40,41,802,816,837,843,876,886,1074,1155,1166,1167,1203,1214],query_dim:[1203,1214],query_kei:[40,41],queue:[40,41,42,843,852,853,917,986,994,1074],queue_class:[843,852,853,1074],queue_load_s:[40,41,42],queue_timeout:[40,41,42,917,1074],quick:[454,1186],quickli:1228,radian:[1052,1053,1055,1058,1060,1066,1068],rai:[1052,1053],rais:[40,41,43,798,799,800,802,827,917,927,957,992,999,1001,1011,1074,1215,1216,1219,1223],ram:[843,882,889,892,1074],randint:[162,342,454,573,743,1130],random:[37,40,41,455,1131,1132,1133,1134,1135,1136,1186],random_crop:1033,random_norm:[162,342,454,573,743,1130],random_uniform:[162,342,454,573,743,1130],randomli:[454,1033,1037,1155,1163,1203,1211],randomness_factor:[1174,1176,1180,1215,1216],rang:[454,917,920,973,974,1052,1058,1074,1186,1228,1232],rank:[798,799,800,917,935,1012,1015],rate:[1017,1020,1022,1024,1025,1026,1070,1071,1072,1073,1203,1214,1219,1220,1221,1222,1223,1224],rather:[40,41,843,887,917,920,969,1017,1023,1074],ratio:[843,1017,1024,1033,1038,1074,1219,1221],raw:[40,41],raw_delta:1074,reach:[843,865,869,875,1074,1118,1127],read:[40,41],readi:[1074,1228],real:[1052,1053,1057],realiti:1229,rearrang:[40,41,917,943,945],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1070,1072],receiv:[843,852,853,917,921,975,1074,1203,1213],receivess:[843,1074],receiving_fn:1180,receivng:[1070,1073],recev:[1070,1071,1072],recognit:1232,recommend:1186,rectifi:[1147,1149,1150],recurr:[1155,1165],recurrent_bia:[1155,1165],recurrent_kernel:[1155,1165],recurs:[40,41,1118,1119,1120,1126,1127],redefin:43,reduc:[40,41,798,799,800,843,887,917,944,1074,1137,1139,1140,1141,1142,1143,1144,1145],reduce_max:[40,41,169,347,456,578,750,1137],reduce_mean:[40,41,169,347,456,578,750,1137,1186,1228],reduce_min:[40,41,169,347,456,578,750,1137],reduce_prod:[40,41,169,347,456,578,750,1137],reduce_std:[40,41,347,1137],reduce_sum:[40,41,169,347,456,578,750,1074,1137],reduce_var:[40,41,169,347,456,578,750,1137],reduct:[39,40,41,403,432,433,798,799,800,917,944,990,991,1138,1139,1140,1141,1142,1143,1144,1145,1186],refactor:43,refer:[798,799,800,1017,1019,1020,1040,1047,1203,1213,1232],reflected_oper:[0,13,14],regard:[843,1074],regardless:[40,41,841,842],register_paramet:1228,reimplement:1232,rel:[1017,1020,1022,1024,1025,1026],rel_slice_obj:1074,relev:[1219,1220,1221,1222,1223,1224],relu:[759,1147,1148,1149,1186,1228],remain:[43,917,988,1118,1122],remaind:[40,41,917,951,998],remov:[40,41,917,999,1070,1071,1072],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,917,949],rep:[917,1005],repeat:[40,41,270,634,917,945,1005,1074,1229],repeated_config_check:[843,1074],repeatedli:[1118,1125],repetit:[40,41,917,987,1005],replac:[40,41,43,454,455,917,931,990,991,1130,1131],repo:1186,repres:[43,893,899,904,1155,1164],represent:[40,41,42,43,783,784,785,843,870,871,893,899,905,906,917,997,1007,1074],reptil:[1070,1073],reptile_step:1070,requir:[43,841,842,893,897,917,920,924,1192,1193],resampl:[917,972],reshap:[40,41,43,454,634,917],reshape_lik:[40,41],respect:[917,946,1017,1019,1020,1021,1022,1024,1025,1026,1052,1062,1070,1071,1072,1073],respons:1074,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,787,788,798,799,800,802,827,843,852,917,920,946,990,991,1002,1040,1043,1046,1048,1049,1050,1051,1052,1062,1074,1137,1139,1140,1141,1142,1143,1144,1145,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1186],ret:1074,ret_dict:1074,ret_fn:[843,852,853,1074],retain:[1017,1021],retain_grad:[439,440,1017,1021],retreiv:1074,retrn:[917,997],return_cont:[40,41],return_dict:[40,41],return_graph:[1174,1175,1176],return_inner_v:[1070,1071,1072,1073],return_sequ:[1203,1212],return_st:[1203,1212],rev:[917,942],revers:[40,41,917,942,949,1010],right:[40,41],rk_e:1232,robot:1186,ronald:1186,round:[270,403,634,917,920,1074],row:[917,962,1130,1131],rule:[43,802,827,917,920,1052,1062],run:[843,852,1017,1019,1020,1024,1070,1071,1072,1073,1074,1186,1187,1203,1214,1215,1216],safe:[843,852,1074],safety_factor:[843,1074],same:[15,16,17,40,41,43,843,852,853,887,888,893,897,917,918,930,934,950,951,954,955,982,984,989,990,991,1002,1016,1017,1023,1028,1040,1045,1052,1057,1070,1071,1072,1074,1137,1138,1155,1156,1157,1158,1159,1160,1161,1162,1186,1203,1204,1205,1206,1207,1208,1209,1210,1228,1232],same_arrai:[40,41],sampl:[917,972,1033,1034,1130,1131,1133,1134,1155,1163,1186,1203,1211],satisfi:[917,924,1040,1042,1047],save:[40,41,917,995,1006,1033,1035,1215,1216],save_debug_info:1180,save_dir:[401,402,843,858,1074],save_to_disk:[1174,1176,1180,1215,1216],save_weight:[1215,1216],scalar:[917,931,982,1009,1013],scale:[843,885,886,1017,1025,1074,1155,1163,1166,1167,1172,1173,1203,1211,1214,1219,1222],scaled_dot_product_attent:1155,scatter:[917,982,990,991],scatter_flat:[115,270,403,517,634,917],scatter_nd:[115,270,403,517,634,917],scene:[1017,1020,1022,1024,1025,1026],schemat:1186,screen:[40,41],search:[15,18,19,40,41],second:[40,41,843,874,917,925,938,946,986,994,1004,1017,1019,1020,1024,1070,1072,1074,1219,1220,1221],secondli:1232,see:[43,59,372,401,402,454,798,799,800,802,827,843,855,856,857,858,893,917,920,973,974,1017,1052,1062,1180,1184,1186,1194,1196,1197,1199,1200,1202],seed:[40,41,162,454,743,1130],seed_valu:[40,41,454,1130,1135],seem:1186,seen_set:[917,960],select:[917,924,999,1229,1232],self:[40,41,43,59,372,401,402,802,827,843,855,856,857,858,893,1017,1074,1180,1184,1186,1194,1196,1197,1199,1200,1202,1219,1223,1228,1232],sent:1074,seper:[917,952],seq:[40,41,42,1137,1138,1215,1216],sequenc:[15,16,17,40,41,42,43,454,841,842,843,852,853,862,863,864,865,866,867,868,869,872,873,887,893,897,917,920,924,926,928,934,935,949,962,975,978,983,987,988,991,998,1002,1005,1010,1015,1017,1021,1033,1037,1038,1040,1043,1046,1074,1118,1129,1130,1132,1134,1137,1139,1140,1141,1142,1143,1144,1145,1155,1156,1157,1158,1159,1160,1161,1162,1172,1173,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1212,1215,1216,1217,1218,1219,1223,1225,1226],sequenti:1186,set:[15,18,19,40,41,843,872,873,885,886,887,917,919,941,962,992,993,994,995,1017,1020,1022,1023,1024,1025,1026,1040,1043,1046,1074,1118,1119,1126,1128,1129,1130,1131,1135,1137,1139,1140,1141,1142,1143,1144,1145,1184,1186,1203,1212,1219,1220,1221,1222,1223,1224,1229,1232],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1184,set_debug_mod:44,set_default_devic:843,set_default_dtyp:893,set_default_float_dtyp:893,set_default_int_dtyp:893,set_default_nod:1074,set_exception_debug_mod:44,set_framework:[40,41,59,1074,1186,1228,1229,1232],set_ivy_backend:[40,41],set_min_bas:917,set_min_denomin:917,set_nest_at_index:1118,set_nest_at_indic:1118,set_param:1180,set_queue_timeout:917,set_split_factor:[843,1074],set_stat:[1219,1220,1221,1222,1223,1224],set_tmp_dir:917,set_with_grad:1017,setter:1074,sever:1232,sgd:[1186,1219],shape0:1074,shape:[40,41,43,370,371,403,417,430,433,454,634,781,782,843,855,893,897,917,918,928,930,934,935,948,949,950,951,953,955,959,962,982,983,984,987,988,989,990,991,997,999,1002,1015,1016,1033,1037,1040,1042,1052,1057,1058,1074,1130,1132,1133,1134,1137,1138,1155,1157,1159,1161,1180,1184,1203,1205,1206,1207,1208,1209,1210,1217,1218],shape_slic:[40,41],shape_to_tupl:917,share:[40,41,1186,1229],shift:1074,should:[40,41,42,43,454,787,788,802,827,841,842,843,917,928,929,936,982,988,1017,1020,1022,1024,1025,1026,1052,1062,1074,1137,1138,1186],show:[40,41,1180,1186,1232],show_debug_info:1180,show_graph:[1174,1186,1215,1216,1219,1223],show_mod_in_top_mod:[1215,1216],show_structur:[1215,1216],show_sub_contain:[40,41],show_v:[1215,1216],show_v_in_top_v:[1215,1216],shown:[40,41],shp:1074,shuffl:[40,41,162,454,743,1130],shuffle_h5_fil:[40,41],sigmoid:[759,1147,1186,1228],signatur:[43,59,372,401,402,403,439,444,448,451,452,454,843,855,856,857,858,893,1017,1180,1184,1194,1196,1197,1199,1200,1202],signific:1232,similar:[43,1155,1166,1203,1214],simpl:[43,917,947,1186,1229,1232],simplest:1229,simpli:[40,41,43,1186,1229,1232],simultan:1186,sin:[726,917,952,1052,1068,1229],sinco:1229,sine:[1052,1055,1056,1066,1067],singl:[40,41,841,842,843,852,853,872,873,874,875,917,999,1009,1013,1033,1038,1074,1130,1133,1134,1137,1139,1140,1141,1142,1143,1144,1145,1186,1229,1232],singleton:[798,799,800],singular:[1040,1045],sinh:[726,1052],siren:[1186,1194],size:[40,41,42,403,432,843,866,867,868,869,885,886,887,917,920,928,973,974,990,998,1033,1037,1040,1043,1045,1046,1074,1130,1131,1133,1134,1137,1139,1140,1141,1142,1143,1144,1145,1203,1204,1205],size_ordered_arrai:[40,41],skew:[1040,1047],skinv:1232,skip:[40,41],slice:[40,41,795,796,917,954,955,1074,1118,1125],slice_kei:[40,41],slice_obj:[40,41,1074],slice_via_kei:[40,41],slide:[1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210],slope:[1147,1149],small:[1168,1169,1170,1171,1172,1173,1186,1217,1218,1229],smaller:[917,931],smallest:[40,41,783,784,785,917,923,930],smallest_norm:[372,783,784],softmax:[178,465,759,1147,1155,1166,1167],softplu:[759,1147],solv:1232,some:[40,41,43,917,920,1017,1019,1020,1022,1024,1025,1026,1031,1155,1163,1186,1203,1211,1229,1232],some_backend:43,some_namespac:43,someth:[43,1232],something_cool:43,somewher:[40,41],sort:[40,41,42,796,1040,1045,1074],sort_by_kei:[40,41],sorting_funct:[795,796],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,370,371,372,374,375,377,378,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,452,453,454,455,781,782,783,784,785,787,788,795,796,798,799,800,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,845,846,847,848,849,850,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1184,1189,1190,1191,1192,1193,1194,1196,1197,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1230,1231,1232],space:[917,920,952,973,974],spars:[1168,1171],sparse_cross_entropi:1168,spawn:[917,980],specif:[40,41,43,843,885,917,936,943,944,945,980,1070,1071,1072,1073,1074,1130,1136,1186,1215,1216,1228,1229],specifc:[1130,1131],specifi:[40,41,43,798,799,800,843,862,863,864,865,866,867,868,869,872,873,877,879,883,886,887,888,893,897,899,917,920,922,923,924,931,934,935,953,954,955,961,973,974,1002,1012,1015,1040,1043,1046,1074,1118,1123,1124,1128,1129,1137,1138,1139,1140,1141,1142,1143,1144,1145],split:[40,41,115,270,403,517,634,843,852,866,867,868,869,885,886,887,917,975,1074],split_arg:1074,split_factor:[843,852,1074],split_func_cal:[843,1074],split_siz:1074,spread:[843,875,1074],squar:[917,962,1040,1042],squeez:[115,270,403,517,634,917],stabil:[795,796,917,1000,1001],stabl:[795,796,917,957,958,992,993,1000,1001],stable_divid:917,stable_pow:917,stack:[40,41,270,634,917,1033,1038,1118,1119,1126,1203,1212],stack_imag:[153,328,444,563,711,1033],stacked_dim_s:1074,stage:43,standard:[40,41,43,783,784,1130,1133,1137,1143,1172,1173,1217,1218],start:[40,41,401,402,403,404,427,428,454,843,858,917,920,973,974,1074,1186,1229],starting_index:[40,41],starting_split_factor:[843,1074],state:[1074,1155,1165,1174,1175,1176,1180,1186,1189,1190,1191,1192,1193,1194,1196,1197,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228],statement:1229,static_argnam:[403,409,841,842],static_argnum:[403,409,841,842],std:[454,1130,1133],step:[40,41,403,404,843,917,920,973,974,1017,1019,1020,1022,1024,1025,1026,1070,1071,1072,1073,1074,1186,1219,1220,1221,1222,1223,1224,1228,1232],stephen:1186,stick:1186,still:[40,41],stochast:[1219,1224],stop:[40,41,401,402,403,404,427,428,843,858,887,917,920,973,974,1017,1020,1022,1024,1025,1026,1028,1070,1071,1072,1073,1074,1219,1220,1221,1222,1223,1224],stop_gradi:[40,41,323,439,558,705,843,887,1017,1020,1022,1024,1025,1026,1070,1071,1072,1073,1074,1219,1220,1221,1222,1223,1224],stopiter:1074,store:[40,41,917,952,998,1017,1031,1215,1216],store_var:[1215,1216],str:[15,16,17,40,41,42,43,370,371,372,374,375,783,784,785,841,842,843,852,853,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,887,893,898,899,904,905,906,907,908,909,916,917,924,941,943,944,945,978,980,983,990,991,1040,1043,1046,1070,1071,1072,1073,1074,1118,1122,1137,1138,1192,1193,1203,1214,1215,1216],str_to_nod:1074,straight:1229,strength:[1186,1232],stride:[1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210],string:[40,41,43,843,859,861,870,871,876,882,888,889,892,893,897,903,905,906,907,916,917,920,924,941,962,983,984,1016,1074,1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210,1215,1216],structur:[40,41,42,43,917,936],structural_diff:[40,41],sub:[40,41,843,866,867,872,873,874,875,917,998,1070,1071,1072,1073,1074],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1074,sub_mod:[1215,1216],sub_modul:[1225,1226],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1186,1187,1217,1218,1225,1226],subsequ:43,subset:43,substr:[40,41],suggest:1186,suitabl:[1033,1038],sum:[40,41,403,432,433,843,872,873,874,875,887,917,940,944,990,991,1074,1137,1138,1144],summat:[40,41,1137,1138],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,80,81,82,85,93,96,97,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,155,156,158,159,163,164,165,166,167,168,170,171,172,173,174,175,176,179,181,182,184,185,186,187,188,189,190,195,197,198,199,202,210,213,214,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,329,330,331,333,334,335,336,338,339,340,343,344,345,346,348,349,350,351,352,353,354,355,358,360,361,362,363,364,365,366,371,373,374,375,378,386,389,390,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,445,446,447,449,450,453,455,457,458,459,460,461,462,463,466,467,469,470,471,472,473,474,475,480,482,483,484,487,495,498,499,511,512,513,514,515,516,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,559,560,561,562,564,565,566,568,569,570,574,575,576,577,579,580,581,582,583,584,585,589,590,591,596,598,599,600,603,611,614,615,627,628,629,630,631,632,633,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,706,707,708,709,710,712,713,714,716,717,718,719,720,721,723,724,725,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,744,745,746,747,748,749,751,752,753,754,755,756,757,760,761,762,763,764,765,766,768,769,771,772,773,774,775,776,777,782,784,785,788,796,799,800,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,842,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1173,1175,1176,1178,1179,1181,1185,1186,1190,1191,1193,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1231,1232],supports_inplac:917,suppos:1232,svd:[332,567,715,1040],swap:[40,41,917,1004],swapax:[40,41,517,634,917,1232],symmetr:[1040,1047],syntax:[401,403,439,444,448,451,452,454],tab:1186,take:[917,972],taken:[1137,1139,1140,1141,1143,1145],tan:[726,1052,1057],tangent:[1052,1057,1058,1059,1068,1069,1147,1154],tanh:[726,759,1052,1147],target:[40,41,843,859,862,863,864,865,866,867,868,869,872,873,874,875,888,1074,1186],target_dict:[40,41],task:[1070,1071,1072,1073],team:1232,templat:1186,temporari:[917,995,1006],tensor:[40,41,43,403,432,433,795,796,843,861,893,903,917,920,922,923,928,973,974,977,979,982,983,984,988,990,991,998,1016,1074,1130,1131,1132,1155,1163,1165,1186,1203,1211,1213,1219,1220,1221,1222,1223,1224,1228,1229],tensorflow:[1155,1157,1159,1161,1186,1203,1205,1207,1209,1229,1232],term:[40,41,1155,1165,1186,1203,1213],termcolor:[40,41,42],termin:[40,41,42,1074],test:[787,788,798,799,800,893,908,909],tf_concat:1186,than:[40,41,783,784,843,887,917,920,930,931,950,969,977,999,1002,1017,1023,1074,1130,1134,1186,1229],thei:[40,41,43,1052,1058,1070,1071,1072,1130,1131,1186,1225,1226,1229],them:[1186,1232],themselv:[1118,1119],therefor:43,thi:[40,41,42,43,843,865,869,875,882,887,892,917,920,952,986,988,994,1017,1020,1022,1023,1024,1025,1026,1031,1040,1043,1046,1074,1118,1122,1127,1137,1139,1140,1141,1142,1143,1144,1145,1155,1164,1186,1215,1216,1219,1220,1221,1222,1223,1224,1228,1229,1232],thing:[43,1186],those:[40,41,917,931,1017,1031,1040,1045,1074],though:43,threshold:[917,977,979],through:[40,41],tile:[270,517,634,917],time:[917,1005,1017,1020,1024,1070,1071,1072,1073,1074,1130,1131,1155,1165,1203,1214,1215,1216,1232],time_chronolog:[1174,1175,1180],time_infer:[1174,1175],timeout:[40,41,42,843,852,853,917,986,994,1074],timestep:[1155,1165,1203,1212],timing_fnam:[1174,1175],titl:1186,tmp_dir:917,tmp_dr:[917,995],to_appli:[40,41],to_clon:[843,1074],to_dev:[40,41,108,264,401,510,626,843],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[843,1074],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1186],to_ivy_modul:[180,767,1186,1192],to_json:[40,41],to_kv_fn:[1155,1166],to_kv_v:[1155,1166],to_list:[40,41,403,634,917],to_multi_dev:[40,41],to_mut:[1118,1120,1127],to_n:[15,40,41,1186],to_nod:1074,to_numpi:[40,41,403,634,917,1186,1228],to_out_fn:[1155,1166],to_out_v:[1155,1166],to_q_fn:[1155,1166],to_q_v:[1155,1166],to_raw:[40,41],to_scalar:[403,634,917],todo:1074,togeth:[40,41,1225,1226],tool:[1186,1229],top_mod:[1215,1216],topic:1232,torch:[43,841,842,1186,1228,1229,1232],torch_concat:1186,torchfcmodel:1228,total:[40,41,42,843,889,1074],total_mem_on_dev:843,total_mem_on_nod:1074,tpu:[843,890,1074],tpu_is_avail:[401,510,626,843,1074],tpye:[893,904],trace:[40,41,917,969],track:[843,1074,1118,1127,1215,1216],track_submod_call_ord:[1215,1216],track_submod_ret:[1215,1216],trail:[1217,1218],train:[1017,1019,1020,1024,1186,1187],trainabl:[1017,1023,1186,1187,1192,1193,1215,1216,1225],trainer:1186,tran:1232,transform:[1155,1163,1164],transpos:[40,41,115,270,403,634,843,874,917,1074,1155,1157,1159,1161,1203,1205,1207,1209],travers:[15,18,19,40,41,1118,1127],treat:[40,41,841,842],tree_depth:1184,tree_height:1180,tri:[40,41],trigonometr:[1052,1053,1057,1060,1066],trim_kei:[40,41],trust:[1017,1024,1219,1221],truth:[917,946,1048,1049,1050,1051],try_else_non:917,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[843,1074],tune_dev_alloc:843,tune_dev_split:843,tune_node_alloc:1074,tune_node_split:1074,tune_step:[843,1074],tupl:[15,16,17,18,19,40,41,43,370,371,781,782,798,799,800,841,842,917,935,952,953,997,1015,1074,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1132,1137,1139,1140,1141,1142,1143,1144,1145],two:[40,41,917,920,925,938,976,1004,1040,1043,1045],type:[15,18,40,41,42,43,59,374,375,401,402,781,782,784,785,787,788,798,799,800,802,827,843,855,856,857,858,870,871,875,887,893,897,898,899,903,904,905,906,907,908,909,916,917,918,920,924,930,934,936,946,950,951,953,962,969,982,983,984,989,1003,1013,1016,1017,1023,1028,1052,1062,1074,1180,1184,1186,1194,1196,1197,1199,1200,1202,1215,1216,1229],types_to_iteratively_nest:[40,41,42],uint8:[1033,1035,1039],uint8_img_to_float_img:1033,unchang:[15,16,17,18,19],unif:1074,unifi:[40,41,843,872,873,874,875,887,1074,1186],uniform:[40,41,1130,1131,1133,1134,1194,1196,1197,1200,1201],uniformli:[1130,1132,1134],unify_arrai:1074,unify_it:1074,unify_nest:1074,union:[15,18,19,40,41,43,370,371,372,374,375,781,782,783,784,785,787,788,795,796,798,799,800,802,827,841,842,843,861,866,867,868,869,887,888,893,897,898,899,903,904,905,906,907,908,909,916,917,918,919,920,922,923,924,925,926,928,930,931,932,933,934,935,937,938,939,940,943,944,945,946,948,949,950,951,952,953,954,955,959,961,962,963,970,971,972,973,974,976,977,978,979,982,983,984,987,988,989,990,991,996,997,998,999,1002,1004,1005,1007,1008,1009,1010,1012,1013,1014,1015,1016,1074,1118,1119,1120,1126,1127],uniqu:[843,852,853,1070,1071,1072,1073,1074,1118,1122],unique_kwarg:1074,unit:[843,1052,1053,1055,1074,1147,1148,1149,1150],unitari:[1040,1045],unless:[917,982,984,1016],unlik:[843,1074],unnorm:[1130,1131],unpack:[917,1012],unrol:[1155,1165],unset:1229,unset_debug_mod:44,unset_default_devic:843,unset_default_dtyp:893,unset_default_float_dtyp:893,unset_default_int_dtyp:893,unset_framework:[59,1229],unset_with_grad:1017,unstack:[40,41,115,270,403,517,634,917],unus:[841,842],updat:[40,41,403,432,433,843,852,917,967,990,991,1017,1019,1020,1022,1024,1025,1026,1070,1071,1072,1074,1118,1123,1124,1128,1129,1155,1165,1192,1193,1219,1220,1221,1222,1223,1224,1229,1232],update_backend:[40,41],update_config:[40,41],update_inference_tim:1180,upper:[40,41,1130,1134],upper_depth:[1215,1216],usabl:[1186,1232],usag:[843,887,1074],use:[40,41,42,43,454,843,852,853,878,890,917,987,1000,1001,1074,1155,1166,1172,1173,1186,1217,1218,1229,1232],used:[40,41,43,454,843,852,882,885,886,892,893,904,917,957,958,975,984,990,991,992,993,1016,1017,1024,1025,1040,1043,1070,1071,1072,1073,1074,1118,1127,1203,1214,1219,1221,1222,1228,1229],used_dev:[843,852],used_mem_on_dev:843,used_mem_on_nod:1074,used_node_str:1074,used_node_strs_dict:1074,useful:[40,41,843,887,1074,1155,1164,1186,1229],user:[1186,1203,1214,1215,1216,1229,1232],uses:1186,using:[40,41,1017,1019,1020,1118,1121,1125,1137,1138,1155,1163,1167,1186,1203,1211,1228,1229,1232],util:[843,876,1074],utility_funct:[798,799,800],v_with_top_v_key_chain:[1215,1216],val:[40,41,403,422,423,424,802,837,917,965,966,967,992,993,1184],valid:[798,799,800,893,898,917,1000,1001,1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210],valid_dtyp:893,valu:[40,41,403,795,796,843,855,886,887,917,918,920,922,923,931,932,933,935,936,942,946,952,953,954,955,970,971,973,974,977,979,986,987,988,989,990,991,992,993,994,1010,1013,1014,1015,1017,1021,1024,1033,1039,1040,1045,1048,1049,1050,1051,1052,1063,1064,1065,1070,1071,1072,1074,1118,1122,1123,1124,1128,1129,1130,1133,1134,1137,1139,1141,1155,1166,1167,1172,1173,1180,1203,1214,1217,1218,1219,1221],value_is_nan:917,vanilla:[1070,1072],var_shap:1194,variabl:[15,16,17,18,19,40,41,323,439,558,705,917,927,965,966,967,968,969,1003,1017,1020,1021,1022,1023,1024,1025,1026,1028,1031,1070,1071,1072,1073,1155,1166,1172,1173,1192,1193,1194,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226],variable_data:[439,705,1017],varianc:[40,41,1137,1145,1232],varieti:1229,variou:[43,1186],vector:[40,41,448,450,917,933,938,1040,1045,1046,1047,1155,1164,1203,1213],vector_norm:[40,41,1040],vector_to_skew_symmetric_matrix:[157,332,448,567,715,1040],verbos:1231,veri:[43,1186],version:43,via:[1118,1119,1126,1229],view:[1033,1038],vision:1186,visual:1229,volum:[1155,1160],vw_tm1:[1017,1020,1024],wai:[1229,1232],wait:[40,41,42],want:[1186,1229,1232],warn:[59,66,67,68,69,70],warp:[444,445,1033,1034],watch:1228,weight:[1017,1019,1020,1022,1024,1025,1026,1155,1164,1165,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1215,1216,1219,1221,1222],weight_initi:[1203,1204,1205,1206,1207,1208,1209,1210,1212,1213],weights_path:[1215,1216],well:[40,41,917,961],were:[40,41,1074],what:1186,when:[40,41,42,43,843,917,929,1001,1014,1040,1045,1074,1186,1215,1216,1229,1232],where:[40,41,43,270,403,634,798,799,800,802,827,917,920,928,931,935,948,963,970,971,982,1015,1040,1045,1118,1119,1126,1130,1131],wherea:43,wherebi:[1118,1127],whether:[15,18,19,40,41,42,798,799,800,841,842,843,861,874,878,882,887,890,892,893,903,907,908,909,916,917,919,925,926,939,942,947,952,959,961,964,968,969,975,996,1003,1012,1013,1017,1020,1021,1022,1023,1024,1025,1026,1028,1070,1071,1072,1073,1074,1118,1119,1120,1122,1126,1127,1130,1131,1147,1148,1155,1163,1186,1192,1193,1203,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224],which:[40,41,42,43,454,781,782,783,784,785,798,799,800,841,842,843,852,853,861,866,867,868,869,872,873,874,875,877,879,883,885,886,887,893,898,903,907,916,917,920,924,934,936,938,939,940,942,949,953,954,955,956,962,963,972,973,974,981,982,983,984,985,987,990,991,998,1002,1012,1014,1016,1017,1020,1021,1022,1024,1025,1026,1028,1030,1031,1033,1035,1040,1043,1046,1052,1058,1074,1118,1122,1123,1124,1128,1129,1130,1131,1132,1133,1134,1137,1139,1140,1141,1142,1143,1144,1145,1147,1152,1155,1166,1167,1186,1192,1193,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1225,1226,1228,1229],whitespac:[40,41,42],whose:[43,802,827,917,924,929,1137,1138,1139,1140,1141,1143,1145],why:[1186,1187],width:[1033,1038],wiki:1232,wikipedia:1232,window:[1033,1038,1155,1156,1157,1158,1159,1160,1161,1162,1203,1204,1205,1206,1207,1208,1209,1210],wise:[40,41,43,802,827,917,930,931,946,950,951,977,979,989,1017,1020,1022,1024,1026,1048,1049,1050,1051,1052,1053,1055,1057,1058,1060,1062,1063,1064,1065,1066,1068,1147,1148,1149,1150,1151,1152,1153,1154],wish:1229,with_arg_label:[1174,1176,1180,1215,1216],with_array_cach:[1174,1175,1176,1180],with_bia:[1203,1213],with_cal:[917,942],with_default_key_color:[40,41],with_edge_label:[1174,1176,1180,1215,1216],with_entries_as_list:[40,41],with_grad:[1017,1027,1215,1216],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1074,with_output_label:[1174,1176,1180,1215,1216],with_partial_v:[1215,1216],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,403,434,917,998,1074],with_to_kv_fn:[1203,1214],with_to_out_fn:[1203,1214],with_to_q_fn:[1203,1214],within:[15,18,19,917,920,1040,1045,1130,1134],without:[40,41,43,917,986,988,994,1118,1120,1229],wonder:1186,word:[15,16,17,917,920,1130,1134,1192,1193],work:[43,1228],worker:[843,852,853,1074],worker_class:[843,852,853,1074],worker_kwarg:1074,would:[43,795,796,1147,1152,1186,1229,1232],wrap:[15,40,41,42,43,401,403,439,444,448,451,452,454,917,929,1017,1031,1186],wrapper:43,write:[40,41,43,1186,1187,1232],written:[43,1186,1232],ws_new:[1017,1020,1022,1024,1025,1026],x1_i:[917,946,1052,1062],x2_i:[917,946,1052,1062],x_feat_dim:[1155,1166],x_i:[787,788],x_in:[1186,1228],x_inv:[1040,1042],x_max:[403,917,931],x_min:[403,917,931],x_sub:1074,xkk:1232,xkkm1:1232,xkm1km1:1232,xs0:1074,xs_t:1074,year:[1186,1232],yet:[1118,1127,1232],yield:[917,1014],you:[1186,1228,1229,1232],your:[1186,1228,1229,1232],your_awesome_project:1229,yourself:1186,zero:[40,41,77,194,370,479,595,781,798,799,800,917,935,982,984,990,991,1015,1016,1017,1019,1020,1024,1025,1155,1163,1186,1194,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1219,1220,1221,1222],zero_pad:[270,403,517,634,917],zeros_lik:[115,270,403,517,634,917],zip:1074,zk_e:1232},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":942,"function":[77,79,84,86,88,89,90,91,92,94,95,194,196,201,203,205,206,207,208,209,211,212,370,372,377,379,381,382,383,384,385,387,388,479,481,486,488,490,491,492,493,494,496,497,595,597,602,604,606,607,608,609,610,612,613,781,783,787,789,791,792,793,794,795,797,798],Ones:1199,Using:1229,abs:[271,518,635,918],aco:[727,1053],acosh:[728,1054],activ:[178,357,465,587,759,1147,1189],adam:1220,adam_step:1019,adam_upd:1020,algebra:[87,88,204,205,380,381,489,490,605,606,790,791],all:[96,213,389,498,614,799],all_equ:919,all_nested_indic:1119,ani:[97,214,390,499,615,800],api:[0,43,75,99,192,216,368,392,477,501,593,617,779],arang:[116,272,404,519,636,920],arg_nam:921,argmax:[117,405,520,637,922],argmin:[118,406,521,638,923],args_to_ivi:16,args_to_n:17,argsort:[93,210,386,495,611,796],arithmet:[1,100,217,393,502,618],arrai:[0,3,43,75,98,99,101,119,192,215,216,218,225,273,368,391,392,394,407,477,500,501,503,522,593,616,617,619,639,779,802,924],array_equ:[274,640,925],arrays_equ:926,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[729,1055],asinh:[730,1056],assert_supports_inplac:927,atan2:[732,1058],atan:[731,1057],atanh:[733,1059],attribut:[5,102,219,395,504,620],backend:[43,73],bilinear_resampl:[154,329,445,564,712,1034],binary_cross_entropi:1169,bitwis:[7,103,220,396,505,621],broadcast_to:[275,641,928],builder:51,builtin:[98,215,225,391,500,616,802],builtin_ab:[226,803],builtin_add:[227,804],builtin_and:[228,805],builtin_bool:[229,806],builtin_contain:[230,807],builtin_deepcopi:[231,808],builtin_dir:[232,809],builtin_eq:[233,810],builtin_float:[234,811],builtin_floordiv:[235,812],builtin_g:[236,813],builtin_getattr:[237,814],builtin_getattribut:[238,815],builtin_getitem:[239,816],builtin_gt:[240,817],builtin_int:[241,818],builtin_invert:[242,819],builtin_l:[243,820],builtin_lt:[244,821],builtin_mul:[245,822],builtin_n:[246,823],builtin_neg:[247,824],builtin_or:[248,825],builtin_po:[249,826],builtin_pow:[250,827],builtin_radd:[251,828],builtin_rand:[252,829],builtin_rfloordiv:[253,830],builtin_rmul:[254,831],builtin_ror:[255,832],builtin_rpow:[256,833],builtin_rsub:[257,834],builtin_rtruediv:[258,835],builtin_rxor:[259,836],builtin_setitem:[260,837],builtin_sub:[261,838],builtin_truediv:[262,839],builtin_xor:[263,840],cache_fn:929,cast:[120,276,408,523,642,897],ceil:[277,643,930],choleski:[716,1041],choose_random_framework:61,citat:1186,clear_framework_stack:62,clear_mem_on_dev:[628,859],clip:[278,644,931],clip_matrix_norm:932,clip_vector_norm:933,clone:1089,clone_arrai:1090,clone_it:1091,clone_nest:1092,clonedit:1076,cloneditem:1075,clonednest:1077,closest_valid_dtyp:898,code:1232,comparison:[9,104,221,397,506,622],compil:[279,409,645,841,842,1174],compile_graph:1175,concaten:[121,280,410,524,646,934],constant:[76,193,369,478,594,780],constant_pad:[281,525,647,935],contain:[40,41],container_typ:[648,936],content:1186,contribut:43,conv1d:[184,360,469,771,1156,1204],conv1d_transpos:[185,361,470,772,1157],conv1dtranspos:1205,conv2d:[186,362,471,589,773,1158,1206],conv2d_transpos:[187,363,472,774,1159],conv2dtranspos:1207,conv3d:[188,364,473,590,775,1160,1208],conv3d_transpos:[189,365,474,776,1161],conv3dtranspos:1209,convers:15,convert:[180,767,1192],convert_dtyp:899,copy_arrai:[649,937],copy_nest:1120,core:[107,224,400,509,625,801],cos:[734,1060],cosh:[735,1061],cprint:1231,creation:[77,194,370,479,595,781],cross:[282,650,938],cross_entropi:1170,cumprod:[122,283,411,651,939],cumsum:[652,940],current_framework:63,current_framework_str:[653,941],data:[79,83,196,200,372,376,481,485,597,601,783,786],debug_mod:45,debugg:44,default_devic:860,default_dtyp:900,default_float_dtyp:901,default_int_dtyp:902,default_nod:1093,depthwise_conv2d:[190,366,475,591,777,1162],depthwiseconv2d:1210,design:43,dev:[110,266,512,629,861],dev_clon:862,dev_clone_arrai:863,dev_clone_it:864,dev_clone_nest:865,dev_dist:866,dev_dist_arrai:867,dev_dist_it:868,dev_dist_nest:869,dev_from_str:[111,267,513,630,870],dev_to_str:[112,268,514,631,871],dev_unifi:872,dev_unify_arrai:873,dev_unify_it:874,dev_unify_nest:875,dev_util:876,devclonedit:846,devcloneditem:845,devclonednest:847,devdistit:849,devdistitem:848,devdistnest:850,devic:[20,108,264,401,510,626,843],devmapp:852,devmappermultiproc:853,distribute_nest:1094,divid:1062,document:1186,dropout:[1163,1211],dtype:[123,284,412,526,654,893,903],dtype_bit:[124,285,413,527,655,904],dtype_from_str:[125,286,414,528,656,905],dtype_to_str:[126,287,415,529,657,906],ecosystem:52,einops_rearrang:943,einops_reduc:944,einops_repeat:945,einsum:[170,348,457,579,751,1138],elementwis:[84,201,377,486,602,787],equal:[530,658,946],erf:[453,736,1063],execute_with_gradi:[151,324,440,559,706,1021],exist:947,exp:[737,1064],expand_dim:[288,659,948],extens:[87,204,380,489,605,790],finfo:[81,198,374,483,599,784],firstlayersiren:1196,flip:[127,289,416,531,660,949],float_img_to_uint8_img:1035,floor:[290,661,950],floormod:[291,662,951],fomaml_step:1071,fourier_encod:952,framework:59,full:[128,292,417,532,663,953],func:72,gather:[129,293,418,533,664,954],gather_nd:[130,294,419,534,665,955],geglu:1190,gelu:[358,466,760,1148,1191],gener:[22,115,270,403,517,634,917],get_all_arrays_in_memori:956,get_all_arrays_on_dev:877,get_framework:64,get_min_bas:957,get_min_denomin:958,get_num_dim:[666,959],get_referrers_recurs:960,global:1177,glorotuniform:1197,gpu_is_avail:[878,1095],gradient:[24,150,323,439,558,705,1017],gradient_descent_upd:1022,gradient_imag:[155,330,446,565,713,1036],graph:1180,gym:53,handler:59,has_nan:961,helper:1182,ident:[131,295,420,535,667,962],iinfo:[82,199,375,484,600,785],imag:[26,153,328,444,563,711,1033],index_nest:1121,indices_wher:[132,296,421,668,963],initi:1194,inplac:[11,105,222,398,507,623],inplace_arrays_support:964,inplace_decr:[133,297,422,536,669,965],inplace_incr:[134,298,423,537,670,966],inplace_upd:[135,299,424,538,671,967],inplace_variables_support:968,inv:[717,1042],invalid_dtyp:907,is_arrai:[136,300,425,539,672,969],is_float_dtyp:908,is_int_dtyp:909,is_vari:[152,325,441,560,707,1023],isfinit:[85,202,378,487,603,788],isinf:[301,540,673,970],isnan:[302,541,674,971],ivi:[43,50,51,52,53,54,55,56,57,58,778,1228,1229,1232],ivymodul:[181,768],jax:74,lamb:1221,lamb_upd:1024,lar:1222,lars_upd:1025,layer:[183,359,468,588,770,1155,1203],layer_norm:1173,layernorm:1218,leaky_relu:[761,1149],linalg:[28,157,332,448,567,715,1040],linear:[87,88,204,205,380,381,489,490,605,606,790,791,1164,1213],linear_resampl:[137,303,426,542,675,972],linspac:[138,304,427,543,676,973],log:[738,1065,1183],log_global_inference_abs_tim:1178,log_global_inference_rel_tim:1179,logic:[30,160,337,451,571,722,1048],logical_and:[338,723,1049],logical_not:[339,724,1050],logical_or:[340,725,1051],logspac:[139,305,428,544,677,974],loss:1168,lstm:1212,lstm_updat:1165,maml_step:1072,manipul:[89,206,382,491,607,792],map:1122,map_nest_at_index:1123,map_nest_at_indic:1124,match_kwarg:975,math:[32,161,341,452,572,726,1052],matmul:[306,545,678,976],matrix_norm:[158,333,449,568,718,1043],maximum:[679,977],mech:54,memori:55,meshgrid:[307,680,978],meta:[34,1070],method:[86,203,379,488,604,789],minimum:[681,979],model:56,modul:[1215,1216,1228],multi:1074,multi_head_attent:1166,multi_index_nest:1125,multidevcontain:42,multidevit:856,multidevitem:855,multidevnest:857,multiheadattent:1214,multinodeit:1080,multinodeitem:1079,multinodenest:1081,multinomi:[163,343,455,574,744,1131],multiprocess:[682,980],mxnet:191,nativ:1228,nest:1118,nested_indices_wher:1126,nested_map:1127,network:1228,next:1186,node:[1074,1096],node_dist:1097,node_dist_arrai:1098,node_dist_it:1099,node_str:1100,node_to_str:1101,node_util:1102,nodedistit:1083,nodedistitem:1082,nodedistnest:1084,nodemapp:1086,nodemappermultiproc:1087,norm:[1172,1217],num_arrays_in_memori:981,num_arrays_on_dev:879,num_cpu_cor:880,num_gpu:[113,881,1103],numpi:367,nutshel:1186,one_hot:[140,429,546,683,982],ones:[141,308,430,547,684,983],ones_lik:[142,309,431,548,685,984],oper:[1,3,7,9,11,13,43,100,101,103,104,105,106,217,218,220,221,222,223,393,394,396,397,398,399,502,503,505,506,507,508,618,619,621,622,623,624],optim:[1219,1223],optimizer_upd:1026,overview:1186,param:1184,percent_used_mem_on_dev:882,percent_used_mem_on_nod:1104,pinv:[334,719,1044],portabl:1232,print_all_arrays_in_memori:985,print_all_arrays_on_dev:883,profil:[109,265,402,511,627,858,1088],queue_timeout:986,randint:[164,344,575,745,1132],random:[36,162,342,454,573,743,1130],random_crop:1037,random_norm:[165,345,576,746,1133],random_uniform:[166,346,577,747,1134],reduce_max:[171,349,458,580,752,1139],reduce_mean:[172,350,459,581,753,1140],reduce_min:[173,351,460,582,754,1141],reduce_prod:[174,352,461,583,755,1142],reduce_std:[353,1143],reduce_sum:[175,354,462,584,756,1144],reduce_var:[176,355,463,585,757,1145],reduct:[38,169,347,456,578,750,1137],reflect:[13,106,223,399,508,624],relu:[762,1150],repeat:[310,686,987],reptile_step:1073,reshap:[687,988],robot:57,round:[311,688,989],run:1229,scaled_dot_product_attent:1167,scatter_flat:[143,312,432,549,689,990],scatter_nd:[144,313,433,550,690,991],search:[90,207,383,492,608,793],seed:[167,748,1135],sequenti:[1225,1226],set:[91,208,384,493,609,794],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:884,set_default_dtyp:910,set_default_float_dtyp:911,set_default_int_dtyp:912,set_default_nod:1105,set_exception_debug_mod:48,set_framework:65,set_min_bas:992,set_min_denomin:993,set_nest_at_index:1128,set_nest_at_indic:1129,set_queue_timeout:994,set_split_factor:[885,1106],set_tmp_dir:995,set_with_grad:1027,sgd:1224,shape:[691,996],shape_to_tupl:997,show_graph:1176,shuffl:[168,749,1136],sigmoid:[763,1151],signatur:[86,203,379,488,604,789],sin:[739,1066],sinh:[740,1067],siren:1200,softmax:[179,467,764,1152],softplu:[765,1153],sort:[92,209,385,494,610,795],sparse_cross_entropi:1171,split:[145,314,434,551,692,998],split_factor:[886,1107],split_func_cal:[887,1108],squeez:[146,315,435,552,693,999],stable_divid:1000,stable_pow:1001,stack:[316,694,1002],stack_imag:[156,331,447,566,714,1038],statist:[94,211,387,496,612,797],stop_gradi:[326,442,561,708,1028],str_to_nod:1109,submodul:43,supports_inplac:1003,svd:[335,569,720,1045],swapax:[553,695,1004],tan:[741,1068],tanh:[742,766,1069,1154],tensorflow:476,tile:[317,554,696,1005],tmp_dir:1006,to_dev:[114,269,515,632,888],to_ivi:18,to_ivy_modul:[182,769,1193],to_list:[697,1007],to_n:19,to_nod:1110,to_numpi:[698,1008],to_scalar:[699,1009],torch:592,total_mem_on_dev:889,total_mem_on_nod:1111,tpu_is_avail:[516,633,890,1112],train:1228,trainabl:1228,transpos:[147,318,436,700,1010],tree:1186,try_else_non:1011,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[79,83,196,200,372,376,481,485,597,601,783,786],uint8_img_to_float_img:1039,unifi:1113,unify_arrai:1114,unify_it:1115,unify_nest:1116,unset_debug_mod:49,unset_default_devic:891,unset_default_dtyp:913,unset_default_float_dtyp:914,unset_default_int_dtyp:915,unset_framework:71,unset_with_grad:1029,unstack:[148,319,437,555,701,1012],used_mem_on_dev:892,used_mem_on_nod:1117,util:[95,212,388,497,613,798],valid_dtyp:916,value_is_nan:1013,variabl:[327,443,562,709,1030],variable_data:[710,1031],vector_norm:1046,vector_to_skew_symmetric_matrix:[159,336,450,570,721,1047],verbos:1230,vision:58,where:[320,702,1014,1186],why:1232,with_grad:1032,wrapper:72,write:1229,zero:[78,195,371,480,596,782,1202],zero_pad:[321,556,703,1015],zeros_lik:[149,322,438,557,704,1016]}})