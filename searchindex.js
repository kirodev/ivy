Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/container/MultiDevContainer", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_container", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/container/MultiDevContainer.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_container.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "Container", "MultiDevContainer", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.Container.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 124, 125, 126, 127, 129, 131, 132, 134, 135, 136, 146, 147, 148, 269, 292, 306, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 590, 597, 634, 640, 659, 664, 666, 668, 670, 700, 867, 869, 879, 902, 905, 971, 979, 980, 981, 982, 983, 984, 986, 987, 989, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 165, 170, 175, 180, 185, 190, 195, 196, 197, 198, 199, 202, 207, 208, 213, 216, 221, 222, 227, 230, 233, 238, 243, 246, 251, 256, 261, 264, 269, 273, 274, 275, 276, 277, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 362, 366, 370, 375, 379, 383, 387, 391, 395, 399, 403, 407, 411, 415, 419, 423, 427, 431, 436, 440, 444, 448, 452, 456, 460, 464, 468, 472, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 520, 524, 525, 526, 531, 535, 539, 543, 547, 551, 555, 559, 563, 567, 571, 575, 580, 585, 586, 590, 591, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 671, 675, 676, 680, 684, 688, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721, 724, 727, 730, 733, 736, 739, 743, 746, 747, 750, 753, 756, 759, 762, 763, 766, 769, 772, 775, 778, 781, 784, 787, 788, 793, 798, 803, 804, 809, 813, 817, 821, 825, 829, 833, 837, 842, 843, 847, 851, 855, 859, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 890, 891, 892, 895, 896, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 914, 915, 916, 917, 922, 927, 928, 932, 936, 940, 944, 948, 952, 956, 960, 961, 966, 971, 974, 975, 976, 977, 979, 980, 981, 982, 983, 984, 986, 987, 989, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 971], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 67, 68, 72, 73, 74, 75, 76, 113, 114, 120, 121, 122, 124, 128, 131, 132, 134, 136, 147, 148, 590, 641, 890, 891, 895, 971, 979, 980, 981, 982, 983, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1007, 1008, 1015, 1016], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 125, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 975, 976, 979, 980, 981, 982, 983, 984, 986, 987, 989, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019], "base": [0, 19, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 123, 125, 131, 147, 198, 230, 231, 232, 269, 306, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 356, 444, 447, 488, 491, 492, 495, 496, 499, 500, 503, 543, 546, 590, 625, 648, 655, 664, 907, 908, 909, 913, 915, 927, 928, 931, 979, 980, 981, 984, 986, 987, 989, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "object": [0, 23, 69, 72, 73, 74, 75, 76, 133, 136, 198, 216, 219, 269, 289, 306, 351, 664, 867, 870, 872, 874, 875, 876, 881, 882, 883, 884, 890, 901, 984, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1005, 1006], "__init__": [0, 1, 4, 5, 72, 73, 74, 75, 76, 116, 122, 126, 131, 133, 134, 135, 136, 269, 270, 271, 272, 306, 307, 314, 315, 316, 317, 318, 319, 320, 321, 664, 665, 890, 891, 895, 971, 979, 980, 981, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "choose_random_backend": 0, "exclud": [0, 2, 118, 131, 198, 199, 200, 890, 896, 898], "none": [0, 2, 5, 12, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 121, 125, 126, 127, 128, 129, 131, 133, 135, 136, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 275, 277, 278, 280, 282, 284, 285, 286, 289, 292, 306, 315, 316, 324, 325, 348, 349, 350, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 595, 596, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 628, 630, 631, 635, 641, 643, 646, 647, 648, 649, 654, 655, 661, 664, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 873, 878, 879, 880, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 910, 912, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 982, 983, 984, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "clear_backend_stack": 0, "current_backend": [0, 74, 75, 116, 121], "arg": [0, 4, 21, 23, 26, 27, 28, 69, 72, 73, 131, 133, 135, 306, 315, 330, 334, 338, 350, 590, 647, 982, 983, 1005, 1006], "kwarg": [0, 4, 23, 26, 27, 28, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 131, 133, 135, 306, 315, 330, 334, 338, 590, 640, 982, 983, 1005, 1006], "return": [0, 4, 5, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 305, 306, 315, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 649, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 690, 691, 692, 693, 694, 695, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 873, 877, 878, 879, 880, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 976, 982, 983, 993, 1002, 1003, 1009, 1013], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 72, 73, 74, 75, 76, 121, 127, 131, 136, 147, 148, 269, 290, 291, 293, 305, 306, 315, 339, 340, 344, 346, 590, 624, 631, 635, 642, 644, 867, 868, 877, 878, 971], "prioriti": [0, 4, 19, 72, 73, 128], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 26, 27, 28, 29, 30, 69, 72, 73, 74, 75, 76, 115, 116, 117, 118, 120, 121, 122, 124, 125, 131, 133, 134, 195, 196, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 297, 306, 315, 316, 330, 334, 338, 356, 357, 360, 370, 373, 375, 378, 419, 422, 452, 455, 535, 538, 567, 570, 571, 574, 580, 584, 590, 596, 597, 601, 611, 618, 640, 647, 702, 705, 714, 715, 716, 719, 727, 729, 803, 837, 840, 867, 873, 885, 886, 889, 907, 909, 913, 927, 932, 935, 952, 955, 960, 961, 964, 974, 976, 982, 983, 1005, 1006], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 26, 29, 30, 69, 72, 73, 115, 117, 118, 120, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 197, 198, 233, 236, 251, 255, 256, 260, 269, 290, 291, 306, 325, 349, 356, 547, 550, 590, 599, 664, 671, 673, 676, 678, 684, 686, 692, 694, 715, 766, 768, 769, 771, 867, 873, 879, 927, 948, 951, 956, 959, 971, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016], "paramet": [0, 4, 5, 26, 27, 28, 29, 30, 67, 68, 72, 73, 74, 75, 76, 113, 114, 116, 117, 120, 133, 134, 147, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 195, 196, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 273, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 306, 315, 316, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 591, 594, 596, 597, 598, 599, 600, 601, 602, 603, 605, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 666, 669, 671, 673, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 974, 976, 982, 983, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 67, 68, 69, 72, 73, 74, 75, 76, 113, 114, 115, 116, 117, 118, 120, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 198, 199, 200, 202, 205, 208, 211, 216, 219, 221, 222, 225, 233, 236, 238, 241, 246, 249, 264, 268, 269, 278, 281, 297, 306, 315, 316, 325, 340, 344, 349, 350, 356, 460, 463, 567, 570, 590, 611, 618, 619, 622, 658, 664, 671, 673, 684, 686, 702, 710, 713, 715, 727, 729, 766, 768, 778, 780, 803, 821, 824, 833, 836, 843, 846, 863, 864, 865, 866, 867, 869, 879, 880, 890, 891, 892, 893, 895, 896, 898, 902, 906, 907, 908, 914, 927, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 977, 982, 983, 993, 1001, 1004, 1009, 1013], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 72, 73, 74, 75, 76, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 147, 148, 159, 180, 183, 195, 196, 197, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 221, 222, 225, 227, 228, 230, 231, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 283, 287, 289, 292, 293, 305, 306, 315, 316, 326, 331, 332, 333, 334, 335, 336, 337, 338, 340, 344, 346, 348, 349, 350, 356, 547, 550, 590, 596, 608, 609, 611, 618, 619, 622, 624, 630, 634, 642, 643, 644, 646, 647, 662, 664, 671, 673, 675, 676, 678, 684, 686, 688, 690, 692, 694, 697, 699, 700, 702, 713, 715, 721, 723, 727, 729, 743, 745, 763, 765, 766, 768, 778, 780, 781, 783, 787, 793, 796, 798, 801, 803, 809, 812, 821, 824, 829, 832, 837, 840, 842, 847, 850, 867, 872, 873, 874, 875, 880, 881, 882, 883, 884, 890, 891, 892, 893, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 974, 976, 982, 983, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 72, 73, 124, 125, 133, 148, 590, 661, 971], "infer": [0, 4, 115, 122, 126, 127, 131, 136, 195, 196, 198, 199, 200, 202, 205, 208, 211, 221, 222, 225, 238, 241, 246, 249, 264, 268, 356, 460, 463, 590, 627, 652, 803, 833, 836], "when": [0, 4, 14, 15, 18, 19, 20, 23, 69, 72, 73, 74, 75, 76, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 136, 148, 269, 275, 306, 356, 370, 373, 448, 451, 543, 546, 590, 601, 634, 655, 787, 788, 791, 793, 796, 798, 801, 867, 878, 902, 903, 904, 906, 927, 932, 935, 940, 943, 948, 951, 956, 959, 971, 1005, 1006], "global": [0, 4, 5, 6, 12, 72, 73, 74, 75, 76, 121, 122, 126, 127, 131, 269, 284, 285, 286, 306, 315, 316, 348, 349, 350, 590, 625, 626, 645, 648, 649, 650, 654, 655, 885, 886, 889, 1007, 1008], "set": [0, 4, 5, 6, 12, 14, 17, 19, 26, 29, 30, 60, 69, 72, 73, 106, 115, 116, 121, 123, 124, 125, 126, 127, 128, 131, 133, 134, 306, 325, 335, 336, 347, 348, 349, 350, 356, 387, 390, 590, 591, 594, 648, 649, 650, 651, 664, 671, 673, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 715, 721, 723, 743, 745, 747, 749, 756, 758, 763, 765, 867, 868, 877, 878, 879, 883, 884, 890, 900, 902, 903, 908, 909, 913, 914, 915, 916, 917, 920, 922, 925, 927, 948, 951, 956, 959, 993, 1002, 1009, 1010, 1011, 1012, 1013, 1014], "ret": [0, 4, 5, 12, 26, 27, 28, 29, 30, 72, 73, 116, 117, 131, 136, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 195, 196, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 273, 274, 275, 276, 277, 278, 281, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 305, 306, 315, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 355, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 591, 594, 596, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 646, 647, 652, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 669, 671, 673, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 863, 864, 865, 866, 867, 868, 869, 873, 877, 878, 879, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 974, 976, 982, 983, 1009, 1013], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 24, 25, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 67, 68, 69, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 147, 148, 159, 160, 161, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 198, 221, 222, 225, 233, 236, 243, 244, 246, 249, 261, 263, 264, 268, 269, 275, 278, 279, 280, 281, 282, 290, 291, 306, 325, 326, 328, 340, 341, 342, 343, 344, 347, 349, 351, 353, 354, 356, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 391, 394, 395, 398, 399, 402, 411, 414, 415, 418, 419, 420, 421, 422, 423, 426, 427, 430, 444, 447, 452, 453, 454, 455, 460, 463, 464, 467, 480, 483, 484, 487, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 582, 583, 584, 585, 590, 591, 592, 593, 594, 595, 598, 599, 607, 608, 615, 618, 619, 620, 621, 622, 623, 626, 637, 652, 653, 658, 659, 660, 664, 666, 667, 668, 669, 670, 702, 703, 705, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 729, 736, 738, 747, 749, 753, 755, 766, 768, 772, 774, 775, 777, 787, 788, 791, 793, 796, 798, 801, 803, 804, 805, 806, 807, 808, 809, 812, 817, 820, 821, 824, 829, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 916, 917, 920, 927, 928, 931, 948, 951, 952, 955, 960, 961, 964, 971], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 26, 29, 30, 69, 72, 73, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 148, 198, 199, 200, 207, 208, 211, 213, 214, 221, 222, 225, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 277, 297, 306, 325, 349, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 419, 422, 423, 426, 427, 430, 444, 447, 448, 451, 452, 455, 488, 491, 492, 495, 500, 503, 504, 507, 512, 515, 516, 519, 526, 529, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 580, 584, 585, 586, 589, 590, 634, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 715, 716, 719, 721, 723, 743, 745, 747, 749, 756, 758, 759, 761, 763, 765, 766, 768, 778, 780, 781, 783, 787, 788, 791, 793, 796, 798, 801, 803, 817, 820, 821, 824, 837, 840, 842, 843, 846, 847, 850, 863, 864, 865, 867, 879, 880, 890, 895, 896, 898, 902, 903, 904, 905, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971], "import": [0, 4, 15, 20, 67, 68, 113, 114, 116, 117, 118, 122, 124, 125, 126, 127, 128, 131, 133, 134, 136, 148, 306, 347, 971, 977], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 72, 73, 120, 122, 126, 127, 128, 129, 131, 133, 136, 590, 659, 927, 928, 931, 971], "np": [0, 4, 124, 126, 127, 128, 129, 133, 134, 136, 971], "x": [0, 4, 12, 21, 24, 25, 26, 29, 30, 33, 34, 37, 38, 39, 40, 47, 48, 51, 52, 59, 60, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 118, 121, 122, 125, 128, 129, 131, 133, 134, 135, 136, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 198, 202, 205, 206, 208, 211, 212, 216, 219, 220, 222, 225, 226, 233, 236, 238, 241, 242, 246, 249, 250, 251, 252, 255, 256, 257, 260, 261, 263, 264, 265, 268, 269, 275, 277, 278, 279, 280, 281, 282, 287, 306, 325, 326, 327, 328, 331, 332, 340, 344, 349, 351, 356, 357, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 415, 418, 419, 420, 421, 422, 423, 426, 427, 430, 440, 443, 444, 447, 448, 451, 452, 453, 454, 455, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 512, 515, 524, 525, 531, 534, 539, 542, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 580, 581, 582, 583, 584, 585, 586, 589, 590, 598, 599, 600, 602, 603, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 629, 630, 632, 633, 634, 636, 637, 638, 639, 643, 652, 653, 656, 658, 659, 660, 662, 663, 664, 675, 680, 682, 683, 697, 699, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 743, 745, 746, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 766, 768, 769, 771, 772, 774, 775, 777, 781, 783, 787, 788, 791, 793, 796, 798, 801, 803, 804, 805, 806, 807, 808, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 848, 849, 850, 851, 854, 855, 858, 859, 862, 867, 868, 873, 877, 878, 879, 885, 886, 889, 890, 892, 893, 894, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 920, 921, 922, 925, 926, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 965, 966, 969, 970, 971, 993, 1004], "arrai": [0, 4, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 148, 149, 157, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 191, 193, 194, 197, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 235, 236, 237, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 276, 277, 278, 280, 281, 282, 287, 289, 292, 294, 295, 297, 301, 306, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 340, 344, 346, 350, 351, 356, 357, 359, 360, 361, 362, 365, 366, 369, 370, 372, 373, 374, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 421, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 454, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 581, 583, 584, 585, 586, 589, 590, 591, 593, 594, 595, 598, 599, 600, 602, 603, 605, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 627, 629, 630, 631, 632, 633, 634, 636, 637, 639, 642, 643, 644, 646, 647, 652, 653, 656, 658, 659, 660, 662, 663, 664, 666, 668, 669, 670, 671, 673, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 697, 699, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 746, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 806, 807, 808, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 863, 864, 865, 866, 867, 869, 879, 880, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 974, 976, 993, 1001, 1004], "2": [0, 4, 18, 19, 21, 24, 25, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 69, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 118, 122, 125, 129, 130, 131, 133, 134, 135, 136, 148, 159, 165, 166, 168, 170, 173, 175, 176, 178, 180, 183, 190, 191, 192, 193, 194, 197, 198, 221, 222, 225, 233, 236, 243, 244, 246, 249, 264, 268, 269, 275, 278, 279, 280, 281, 282, 306, 325, 326, 328, 340, 342, 344, 351, 356, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 383, 386, 387, 390, 395, 398, 399, 402, 411, 414, 415, 418, 419, 420, 421, 422, 423, 426, 427, 430, 444, 447, 452, 453, 454, 455, 460, 463, 464, 467, 480, 483, 484, 487, 500, 503, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 582, 583, 584, 585, 590, 591, 592, 593, 594, 598, 599, 602, 603, 605, 608, 615, 618, 619, 620, 621, 622, 623, 637, 652, 653, 658, 664, 666, 667, 668, 669, 670, 702, 705, 706, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 728, 729, 736, 738, 739, 742, 743, 745, 747, 749, 753, 755, 756, 758, 759, 761, 766, 768, 772, 773, 774, 775, 777, 781, 782, 783, 787, 788, 791, 798, 801, 803, 804, 805, 806, 807, 808, 809, 812, 817, 820, 821, 824, 829, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 851, 854, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 916, 917, 920, 927, 928, 931, 932, 935, 960, 961, 964, 971], "0": [0, 4, 19, 24, 25, 31, 32, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 53, 54, 59, 60, 63, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 131, 133, 134, 135, 136, 159, 160, 161, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 192, 193, 194, 198, 199, 200, 213, 214, 215, 227, 228, 230, 231, 232, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 268, 269, 275, 278, 280, 281, 282, 289, 306, 308, 311, 315, 318, 322, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 340, 344, 347, 349, 350, 354, 356, 357, 358, 360, 361, 362, 365, 366, 369, 370, 373, 374, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 403, 406, 411, 414, 415, 418, 419, 420, 421, 422, 423, 426, 427, 430, 444, 447, 448, 451, 452, 453, 454, 455, 464, 467, 484, 487, 488, 491, 492, 495, 500, 503, 524, 525, 526, 529, 531, 534, 535, 538, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 580, 581, 582, 583, 584, 585, 586, 589, 590, 591, 592, 593, 594, 595, 598, 599, 602, 603, 605, 607, 608, 609, 615, 618, 619, 622, 623, 628, 637, 643, 646, 647, 652, 658, 659, 660, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 684, 685, 686, 687, 688, 689, 690, 691, 702, 703, 705, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 728, 729, 736, 738, 766, 768, 772, 774, 775, 776, 777, 781, 783, 787, 788, 791, 793, 796, 798, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 824, 825, 828, 829, 832, 837, 838, 839, 840, 841, 842, 843, 846, 847, 848, 849, 850, 851, 854, 859, 861, 867, 879, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 920, 927, 928, 931, 932, 935, 936, 939, 948, 949, 950, 951, 952, 955, 956, 957, 958, 959, 960, 961, 964, 971, 984, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016], "print": [0, 4, 5, 6, 12, 18, 24, 25, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 67, 68, 72, 73, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 113, 114, 118, 125, 131, 133, 134, 135, 159, 160, 161, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 192, 193, 194, 198, 221, 222, 225, 233, 236, 243, 244, 246, 249, 261, 263, 264, 268, 269, 275, 278, 279, 280, 281, 282, 290, 291, 306, 326, 340, 341, 342, 343, 344, 346, 349, 353, 356, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 391, 394, 395, 398, 399, 402, 411, 414, 415, 418, 419, 420, 421, 422, 423, 426, 427, 430, 444, 447, 452, 453, 454, 455, 460, 463, 464, 467, 480, 483, 484, 487, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 582, 583, 584, 585, 590, 591, 592, 593, 594, 595, 598, 599, 607, 608, 615, 618, 619, 620, 621, 622, 623, 626, 644, 652, 653, 658, 659, 660, 664, 666, 667, 669, 670, 702, 703, 705, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 729, 736, 738, 753, 755, 766, 768, 772, 774, 775, 777, 787, 788, 791, 793, 796, 798, 801, 803, 804, 805, 806, 807, 808, 817, 820, 821, 824, 829, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 851, 854, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 916, 917, 920, 927, 928, 931, 932, 935, 948, 951, 952, 955, 960, 961, 964, 971], "function": [0, 4, 5, 6, 14, 19, 21, 24, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 67, 68, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 128, 130, 132, 133, 134, 135, 146, 147, 159, 160, 161, 163, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 207, 208, 209, 211, 213, 214, 216, 217, 219, 221, 222, 223, 225, 227, 228, 230, 231, 233, 236, 238, 239, 241, 243, 244, 246, 247, 249, 251, 253, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 420, 421, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 453, 454, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 581, 582, 583, 584, 585, 586, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 673, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 746, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 805, 806, 807, 808, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 974, 976, 979, 980, 981, 1009, 1012, 1014], "py": [0, 4, 5, 19, 116, 117, 121, 122, 126, 127, 129, 131, 133, 135, 136, 890, 891, 895], "noqa": [0, 4, 5, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 395, 398, 415, 418, 419, 422, 427, 430, 484, 487, 535, 538, 551, 554, 567, 570, 571, 574, 580, 584, 585, 715, 724, 726, 727, 729, 803, 817, 820, 821, 824, 837, 840, 927, 932, 935], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 26, 27, 28, 29, 30, 69, 72, 73, 74, 75, 76, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 147, 159, 160, 163, 165, 168, 180, 183, 190, 194, 195, 196, 198, 199, 200, 216, 219, 230, 231, 251, 255, 256, 260, 269, 273, 274, 275, 283, 288, 290, 291, 293, 296, 301, 305, 306, 315, 316, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 526, 529, 535, 538, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 580, 584, 585, 586, 589, 590, 596, 598, 601, 602, 610, 611, 617, 619, 622, 632, 633, 634, 636, 637, 638, 639, 641, 646, 647, 648, 649, 650, 653, 654, 655, 663, 664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 697, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 787, 788, 791, 793, 796, 798, 801, 803, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 842, 855, 858, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 889, 890, 891, 895, 902, 903, 904, 905, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 982, 983, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012, 1013], "set_backend": [0, 4, 5, 12, 121, 122, 123, 126, 269, 290, 291, 306, 347, 590, 652, 971], "ha": [0, 4, 5, 14, 15, 16, 19, 69, 72, 73, 117, 118, 121, 122, 123, 126, 127, 131, 133, 135, 136, 147, 148, 198, 233, 236, 306, 325, 356, 357, 360, 526, 529, 543, 546, 715, 739, 742, 762, 763, 765, 766, 768, 775, 777, 803, 817, 820, 843, 846, 907, 908, 909, 913, 915, 927, 936, 939, 944, 947, 948, 951, 952, 955, 956, 959], "over": [0, 4, 14, 16, 18, 67, 68, 69, 72, 73, 113, 114, 117, 118, 122, 128, 133, 148, 715, 743, 745, 772, 774, 778, 780, 781, 783, 885, 886, 889, 890, 896, 898, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 1007, 1008], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 65, 66, 67, 68, 72, 73, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 195, 196, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 306, 351, 356, 357, 360, 370, 373, 375, 378, 419, 422, 436, 439, 452, 455, 464, 467, 484, 487, 535, 538, 567, 570, 571, 574, 580, 584, 590, 591, 594, 611, 612, 613, 614, 615, 618, 629, 636, 637, 638, 639, 654, 655, 664, 675, 702, 705, 712, 714, 715, 716, 719, 727, 729, 803, 837, 840, 863, 864, 865, 866, 867, 873, 877, 885, 886, 889, 890, 896, 898, 907, 909, 913, 927, 932, 935, 960, 961, 964, 971], "pass": [0, 4, 20, 67, 68, 72, 73, 74, 75, 76, 113, 114, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 133, 148, 269, 283, 306, 315, 350, 356, 387, 390, 590, 601, 634, 664, 700, 863, 864, 865, 982, 983, 1005, 1006, 1009, 1013, 1015, 1016], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 122, 126, 127, 128, 129, 131, 133, 136, 148, 664, 680, 682, 907, 908, 909, 913, 915, 971], "get_backend": [0, 121, 122], "specifi": [0, 5, 69, 72, 73, 115, 120, 121, 126, 127, 128, 129, 131, 134, 135, 136, 198, 199, 200, 207, 221, 227, 228, 230, 231, 243, 244, 251, 255, 256, 260, 261, 263, 269, 275, 277, 306, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 344, 346, 349, 350, 351, 356, 547, 550, 590, 596, 608, 618, 619, 622, 629, 662, 715, 727, 729, 743, 745, 772, 774, 775, 777, 778, 780, 781, 783, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 821, 824, 837, 840, 843, 846, 847, 850, 859, 862, 867, 872, 874, 875, 881, 882, 883, 884, 902, 903, 904, 907, 908, 909, 913, 915, 916, 917, 920, 927, 928, 931, 944, 947, 952, 955, 960, 961, 964, 966, 969], "isn": [0, 5, 19, 134, 148], "t": [0, 5, 15, 16, 18, 19, 20, 21, 67, 68, 113, 114, 118, 126, 131, 133, 134, 135, 136, 148, 590, 599, 702, 711, 712], "associ": [0, 5, 19, 121, 123, 148, 356, 370, 373, 526, 529, 715, 747, 749, 756, 758, 784, 786], "option": [0, 5, 18, 19, 26, 27, 28, 29, 30, 67, 68, 72, 73, 74, 75, 113, 114, 116, 117, 118, 121, 125, 126, 127, 128, 129, 131, 136, 148, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 195, 196, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 277, 283, 284, 285, 286, 293, 305, 306, 325, 349, 350, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 596, 602, 603, 605, 608, 609, 610, 612, 613, 614, 616, 618, 619, 622, 630, 641, 643, 646, 647, 654, 655, 664, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 863, 864, 865, 866, 867, 868, 873, 878, 879, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 901, 902, 903, 904, 906, 907, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "str": [0, 5, 23, 26, 27, 28, 69, 72, 73, 126, 127, 195, 196, 198, 233, 236, 269, 273, 283, 284, 285, 288, 289, 292, 293, 294, 295, 298, 299, 300, 305, 306, 322, 325, 326, 328, 331, 332, 333, 334, 350, 590, 596, 610, 612, 613, 614, 641, 646, 647, 702, 703, 705, 707, 708, 709, 715, 759, 761, 863, 864, 865, 866, 867, 873, 927, 928, 931], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 67, 68, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 147, 148, 664, 675, 971, 977], "want": [0, 5, 15, 17, 18, 19, 67, 68, 113, 114, 120, 134, 135, 136, 148], "retriev": [0, 5, 19, 590, 596], "i": [0, 5, 19, 21, 115, 131, 134, 136, 198, 199, 200, 233, 236, 356, 357, 360, 387, 390, 403, 406, 411, 414, 419, 422, 452, 455, 456, 459, 468, 471, 524, 525, 531, 534, 543, 546, 547, 550, 590, 598, 599, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 715, 721, 723, 739, 742, 747, 749, 756, 758, 763, 765, 766, 768, 775, 777, 781, 783, 803, 847, 850, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 948, 951, 952, 955, 956, 959], "e": [0, 5, 15, 16, 17, 19, 21, 69, 115, 125, 134, 148, 197, 198, 233, 236, 269, 274, 297, 306, 322, 356, 357, 360, 387, 390, 403, 406, 411, 414, 419, 422, 444, 447, 452, 455, 456, 459, 468, 471, 488, 491, 496, 499, 524, 525, 531, 534, 543, 546, 547, 550, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 715, 721, 723, 739, 742, 747, 749, 756, 758, 763, 765, 766, 768, 781, 783, 803, 847, 850, 890, 895, 896, 898, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959], "one": [0, 5, 15, 16, 18, 19, 69, 72, 73, 83, 84, 85, 86, 93, 94, 97, 98, 101, 102, 118, 121, 124, 125, 126, 128, 129, 130, 133, 134, 136, 148, 198, 199, 200, 233, 236, 269, 276, 278, 281, 306, 335, 336, 337, 338, 350, 357, 361, 370, 374, 590, 591, 593, 594, 595, 619, 623, 640, 643, 646, 647, 715, 716, 720, 739, 742, 743, 745, 753, 755, 759, 761, 778, 780, 781, 783, 803, 804, 808, 817, 820, 821, 824, 837, 840, 841, 843, 846, 892, 894, 902, 903, 905, 907, 908, 909, 913, 914, 915, 927, 928, 931, 971], "default": [0, 5, 19, 23, 26, 27, 28, 29, 30, 67, 68, 69, 72, 73, 74, 75, 76, 113, 114, 117, 118, 121, 122, 125, 126, 127, 129, 135, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 195, 196, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 277, 284, 285, 286, 287, 306, 315, 316, 325, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 345, 347, 348, 349, 350, 351, 354, 355, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 591, 594, 596, 602, 603, 605, 608, 609, 612, 613, 614, 616, 617, 618, 619, 622, 627, 628, 629, 630, 631, 634, 635, 636, 637, 639, 640, 641, 643, 645, 646, 647, 650, 652, 654, 655, 662, 663, 664, 666, 669, 671, 673, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 697, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 863, 864, 865, 866, 867, 868, 869, 873, 877, 878, 879, 880, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 982, 983, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "torch": [0, 5, 12, 19, 116, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 195, 196, 269, 290, 291, 306, 347, 590, 652, 803, 817, 820, 971], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 126, 127, 128, 129, 131, 136, 148, 971], "mxnet": [0, 5, 15, 20, 126, 127, 128, 131, 136, 971], "either": [0, 5, 12, 18, 19, 21, 69, 72, 73, 117, 118, 121, 122, 125, 126, 127, 131, 133, 134, 148, 198, 216, 219, 356, 370, 373, 387, 390, 472, 475, 488, 491, 492, 495, 500, 503, 504, 507, 526, 529, 547, 550, 555, 558, 559, 562, 580, 584, 590, 611, 636, 640, 641, 715, 739, 742, 863, 864, 865, 866, 927, 944, 947, 952, 955, 993, 1004, 1005, 1006], "doesn": [0, 5, 18, 21, 118, 126, 131, 148], "matter": [0, 5, 14, 118], "been": [0, 5, 19, 117, 121, 122, 125, 126, 127, 129, 131, 147, 148, 306, 325, 590, 612, 613, 614, 890, 891], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 19, 20, 23, 37, 38, 67, 68, 69, 72, 73, 74, 75, 76, 83, 84, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 147, 148, 159, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 197, 269, 288, 306, 315, 316, 341, 345, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 375, 378, 395, 398, 415, 418, 427, 430, 464, 467, 484, 487, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 590, 618, 625, 626, 640, 646, 647, 648, 649, 654, 655, 664, 666, 669, 671, 673, 684, 686, 688, 690, 702, 708, 710, 711, 713, 714, 715, 724, 726, 727, 729, 743, 745, 787, 788, 791, 803, 817, 820, 821, 824, 829, 832, 837, 840, 851, 854, 863, 864, 865, 866, 867, 868, 870, 876, 877, 878, 880, 885, 886, 889, 902, 903, 904, 905, 907, 908, 927, 928, 931, 960, 961, 964, 971, 993, 1001, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1012], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 118, 120, 121, 124, 128, 129, 135], "call": [0, 6, 12, 15, 21, 23, 69, 74, 75, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 306, 350, 590, 645, 650, 661, 664, 675, 867, 868, 873, 877, 878, 993, 1004, 1005, 1006, 1009, 1013], "nativ": [0, 6, 26, 28, 29, 30, 72, 73, 126, 128, 133, 134, 198, 238, 241, 269, 273, 274, 283, 306, 322, 323, 324, 325, 326, 345, 352, 355, 590, 634, 636, 639, 982, 983], "native_arrai": [0, 6, 12, 31, 32, 39, 40, 77, 78, 85, 86, 159, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 233, 236, 269, 278, 281, 306, 328, 344, 356, 357, 360, 375, 378, 395, 398, 415, 418, 419, 422, 452, 455, 464, 467, 484, 487, 524, 525, 531, 534, 535, 538, 567, 570, 571, 574, 585, 590, 591, 592, 593, 594, 595, 599, 607, 608, 615, 618, 619, 622, 653, 658, 659, 660, 664, 666, 669, 702, 705, 708, 709, 714, 715, 721, 723, 724, 726, 727, 729, 772, 774, 787, 788, 791, 798, 801, 803, 804, 807, 817, 820, 821, 824, 829, 832, 842, 851, 854, 885, 886, 889, 890, 891, 902, 903, 904, 905, 906, 907, 908, 909, 913, 927, 928, 931, 932, 935, 960, 961, 964], "1": [0, 6, 12, 15, 16, 21, 24, 25, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 69, 72, 73, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 118, 121, 125, 128, 129, 130, 131, 133, 134, 135, 136, 148, 159, 160, 161, 165, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 190, 191, 192, 193, 194, 198, 199, 200, 201, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 264, 268, 269, 275, 278, 279, 280, 281, 282, 289, 306, 310, 313, 315, 320, 325, 326, 328, 330, 334, 338, 340, 343, 344, 351, 356, 357, 358, 359, 360, 362, 365, 366, 369, 370, 371, 372, 373, 374, 375, 378, 387, 390, 395, 398, 399, 402, 411, 414, 415, 418, 419, 420, 421, 422, 423, 426, 427, 430, 444, 447, 448, 451, 452, 453, 454, 455, 460, 463, 464, 467, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 524, 525, 531, 534, 535, 538, 543, 546, 551, 554, 555, 558, 559, 562, 567, 570, 571, 574, 580, 581, 582, 583, 584, 585, 590, 591, 592, 593, 594, 595, 598, 599, 607, 608, 615, 618, 619, 620, 621, 622, 623, 637, 643, 646, 647, 652, 653, 655, 658, 659, 660, 662, 664, 666, 667, 668, 669, 670, 702, 703, 704, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 736, 738, 747, 749, 753, 755, 763, 765, 766, 768, 772, 774, 775, 777, 778, 779, 780, 781, 783, 787, 788, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 867, 879, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 931, 932, 935, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016], "type": [0, 6, 12, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 129, 131, 133, 134, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 305, 306, 322, 323, 324, 325, 326, 328, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 632, 633, 634, 636, 637, 638, 639, 643, 646, 647, 648, 649, 652, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 669, 670, 671, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 690, 691, 692, 693, 694, 695, 697, 699, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 873, 877, 878, 879, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004], "ndarrai": [0, 6, 124, 126, 127, 128, 129, 133, 198, 202, 205, 238, 241, 590, 659], "Or": [0, 6, 134], "jaxlib": [0, 6, 18, 126, 127, 129, 133], "xla_extens": [0, 6, 126, 127, 129, 133], "devicearrai": [0, 6, 133], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 23, 26, 27, 28, 29, 30, 39, 40, 47, 48, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 125, 128, 134, 135, 136, 160, 162, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 191, 193, 199, 201, 202, 204, 206, 208, 210, 212, 213, 215, 216, 218, 220, 222, 224, 226, 227, 229, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 246, 248, 250, 251, 252, 254, 256, 257, 259, 261, 262, 264, 265, 267, 269, 275, 278, 280, 281, 282, 287, 306, 325, 326, 337, 341, 342, 345, 350, 353, 355, 356, 357, 359, 361, 362, 364, 366, 368, 370, 372, 374, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 398, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 463, 464, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 479, 480, 482, 483, 484, 486, 487, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 515, 516, 518, 519, 520, 522, 526, 528, 530, 531, 533, 535, 537, 538, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 576, 578, 580, 581, 583, 586, 588, 590, 591, 592, 593, 594, 595, 598, 599, 603, 604, 608, 611, 615, 617, 619, 621, 623, 627, 634, 636, 637, 639, 640, 652, 662, 664, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 715, 716, 717, 718, 719, 720, 739, 741, 743, 744, 745, 766, 768, 781, 782, 783, 788, 790, 792, 793, 795, 797, 798, 800, 802, 803, 804, 806, 808, 809, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 839, 841, 842, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 864, 865, 866, 867, 868, 869, 873, 877, 878, 879, 880, 886, 888, 890, 891, 896, 897, 899, 902, 903, 904, 906, 907, 908, 909, 910, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 982, 983, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 122], "unset": [0, 12, 122, 131, 133], "adjust": [0, 12, 927, 948, 951, 956, 959], "dict": [0, 12, 26, 27, 28, 29, 30, 69, 72, 73, 74, 75, 76, 125, 134, 135, 306, 315, 316, 325, 328, 331, 332, 333, 334, 590, 596, 612, 613, 614, 867, 869, 870, 873, 876, 879, 880], "previous": [0, 12, 18, 21, 120, 121, 131, 590, 601], "otherwis": [0, 12, 23, 26, 27, 28, 29, 30, 69, 72, 73, 124, 126, 127, 129, 131, 133, 198, 199, 200, 269, 275, 278, 281, 284, 285, 286, 306, 325, 356, 468, 471, 472, 475, 476, 479, 590, 600, 661, 664, 680, 682, 697, 715, 716, 719, 724, 726, 778, 780, 781, 783, 863, 864, 865, 867, 880, 902, 903, 904, 906, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "implement": [0, 12, 20, 23, 69, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 269, 275, 297, 306, 351, 356, 357, 360, 362, 365, 366, 369, 375, 378, 379, 382, 383, 386, 387, 390, 423, 426, 427, 430, 444, 447, 448, 451, 488, 491, 492, 495, 496, 499, 500, 503, 526, 529, 543, 546, 547, 550, 559, 562, 563, 566, 580, 584, 585, 715, 730, 732, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 932, 935, 936, 939, 940, 943, 971], "wa": [0, 12, 15, 72, 73, 118, 131, 133, 590, 661, 867, 880, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "last": [0, 12, 16, 19, 69, 72, 73, 118, 122, 148, 159, 180, 183, 306, 325, 702, 712, 715, 721, 723, 727, 729, 743, 745, 775, 777, 778, 780, 787, 793, 796, 798, 801, 803, 821, 824, 837, 840, 842, 847, 850, 916, 917, 920, 922, 925, 960, 961, 964, 966, 969, 993, 1003], "henc": [0, 12, 907, 908, 909, 913, 915], "here": [0, 12, 18, 19, 20, 116, 118, 125, 129, 131, 132, 133, 134, 135, 136, 147, 148], "tensor": [0, 12, 14, 72, 73, 116, 121, 122, 124, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 198, 227, 228, 230, 231, 269, 287, 356, 395, 398, 524, 525, 590, 643, 646, 647, 702, 710, 712, 715, 772, 774, 803, 817, 820, 833, 836, 842, 890, 891, 902, 905, 971, 993, 1001, 1003], "howev": [0, 12, 15, 18, 20, 117, 120, 121, 122, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 148], "befor": [0, 12, 18, 19, 20, 72, 73, 117, 120, 124, 126, 127, 128, 131, 134, 148, 306, 350, 356, 586, 589, 702, 713, 714, 863, 864, 865, 867, 879, 907, 908, 909, 913, 915, 927, 944, 947, 952, 955], "becom": [0, 12, 14, 16, 19, 118, 125, 131, 136, 148, 803, 804, 807], "swap": [0, 12, 803, 851, 854], "python": [0, 12, 13, 14, 15, 18, 19, 21, 131, 133, 134, 148, 198, 199, 200, 306, 345, 355, 356, 547, 550, 971, 977], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 71, 72, 73, 75, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 119, 121, 122, 123, 124, 127, 129, 130, 133, 136, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 975, 976, 977, 980, 981, 982, 983, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1019], "op": [0, 12, 116, 131, 148], "eagertensor": [0, 12], "def": [1, 20, 116, 118, 121, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 270, 271, 272, 307, 314, 317, 665, 971, 985, 988, 991], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 71, 72, 73, 75, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 975, 976, 977, 980, 981, 983, 985, 986, 987, 988, 989, 990, 991, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1019], "backend": [4, 5, 6, 12, 14, 19, 20, 26, 28, 30, 72, 73, 115, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 136, 269, 290, 291, 293, 305, 306, 341, 343, 353, 590, 631, 634, 635, 641, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 700, 971, 977, 982, 983, 1009, 1010, 1011, 1012, 1013, 1014], "ml": [13, 15, 16, 17, 130, 131, 132, 134, 135, 136, 147, 971, 977], "explos": [13, 15, 971], "A": [13, 14, 15, 16, 21, 72, 73, 74, 75, 76, 115, 120, 121, 125, 126, 127, 131, 134, 148, 198, 213, 214, 238, 241, 306, 315, 316, 350, 356, 539, 542, 590, 626, 658, 715, 753, 755, 762, 763, 765, 766, 768, 803, 842, 847, 850, 867, 868, 870, 872, 874, 875, 876, 877, 878, 881, 882, 883, 884, 927, 928, 931, 960, 961, 964, 966, 969, 971, 1015, 1016], "huge": [13, 15, 134, 971], "number": [13, 14, 18, 72, 73, 74, 75, 76, 118, 125, 127, 128, 131, 134, 136, 195, 196, 197, 198, 199, 200, 202, 205, 213, 214, 227, 228, 230, 231, 233, 236, 238, 241, 269, 276, 288, 289, 292, 294, 295, 297, 306, 342, 343, 344, 356, 370, 373, 387, 390, 419, 422, 452, 455, 456, 459, 524, 525, 526, 529, 543, 546, 547, 550, 551, 554, 555, 558, 586, 589, 590, 591, 594, 617, 626, 627, 642, 660, 663, 702, 713, 715, 727, 729, 730, 732, 747, 749, 762, 766, 768, 778, 780, 803, 804, 807, 813, 816, 825, 828, 829, 832, 837, 840, 842, 847, 850, 855, 858, 859, 862, 863, 864, 865, 866, 890, 891, 900, 902, 905, 907, 908, 909, 913, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004], "tool": [13, 16, 19, 132, 136, 147, 148, 971], "have": [13, 14, 15, 16, 18, 19, 20, 21, 72, 73, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 147, 148, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 276, 277, 289, 306, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 602, 603, 605, 608, 612, 613, 614, 616, 619, 622, 630, 643, 646, 647, 664, 680, 682, 697, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971], "explod": [13, 14, 971], "onto": [13, 14, 306, 335, 336, 867, 873, 879, 971], "scene": [13, 14, 115, 130, 132, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 971], "b": [13, 16, 17, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 115, 118, 121, 122, 125, 130, 131, 132, 134, 135, 136, 146, 190, 191, 193, 269, 278, 280, 281, 282, 306, 328, 356, 357, 359, 360, 361, 370, 372, 373, 374, 375, 378, 395, 398, 415, 418, 419, 421, 422, 427, 430, 452, 454, 455, 464, 467, 484, 487, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 583, 584, 585, 590, 591, 593, 594, 595, 598, 599, 607, 608, 615, 618, 619, 621, 622, 623, 660, 664, 666, 668, 669, 670, 702, 705, 708, 709, 714, 715, 716, 718, 719, 720, 721, 723, 724, 726, 727, 729, 753, 755, 763, 765, 772, 774, 784, 786, 787, 788, 791, 803, 804, 806, 807, 808, 817, 820, 821, 824, 829, 832, 837, 839, 840, 841, 847, 850, 851, 854, 885, 886, 889, 890, 892, 894, 895, 896, 898, 902, 904, 905, 906, 907, 909, 910, 912, 913, 916, 917, 920, 927, 928, 931, 932, 935, 960, 961, 964, 971, 977], "why": [13, 15, 19, 125, 128, 129, 133, 971], "unifi": [13, 15, 72, 73, 124, 131, 148, 306, 335, 336, 337, 338, 350, 971], "should": [13, 15, 18, 19, 20, 21, 23, 69, 72, 73, 74, 75, 76, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 195, 196, 198, 233, 236, 251, 255, 256, 260, 269, 277, 306, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 444, 447, 448, 451, 452, 455, 468, 471, 472, 475, 476, 479, 480, 483, 488, 491, 492, 495, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 526, 529, 535, 538, 543, 546, 547, 550, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 601, 634, 643, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 736, 738, 739, 742, 747, 749, 753, 755, 756, 758, 759, 761, 763, 765, 766, 768, 772, 774, 775, 777, 778, 780, 781, 783, 803, 833, 836, 890, 901, 902, 903, 904, 907, 908, 909, 913, 915, 927, 928, 931, 932, 935, 936, 939, 944, 947, 948, 951, 952, 955, 956, 959, 971], "them": [13, 14, 15, 16, 120, 122, 124, 125, 131, 133, 134, 135, 148, 971], "c": [13, 15, 16, 17, 101, 102, 115, 118, 121, 125, 130, 131, 132, 134, 148, 356, 535, 538, 590, 598, 599, 607, 660, 664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 708, 803, 847, 850, 892, 894, 902, 905, 927, 928, 931, 948, 951, 956, 959, 971, 977], "standard": [13, 23, 115, 116, 117, 119, 120, 124, 128, 129, 148, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 289, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 452, 455, 484, 487, 535, 538, 551, 554, 567, 570, 571, 574, 580, 584, 585, 715, 724, 726, 727, 729, 803, 817, 820, 821, 824, 837, 840, 885, 886, 889, 890, 895, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 948, 951, 956, 959, 960, 961, 964, 971, 977, 1007, 1008], "re": [13, 14, 15, 17, 18, 19, 20, 21, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 136, 148, 306, 350, 590, 612, 715, 772, 774, 803, 837, 840, 902, 906, 971], "collabor": [13, 14, 15, 971], "consortium": [13, 15, 971, 977], "data": [13, 15, 72, 73, 74, 75, 76, 115, 116, 117, 121, 123, 125, 127, 128, 129, 133, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 273, 274, 275, 277, 278, 281, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 301, 305, 306, 308, 309, 310, 311, 312, 313, 318, 319, 320, 322, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 526, 529, 535, 538, 543, 546, 547, 550, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 598, 599, 636, 637, 639, 656, 664, 680, 682, 700, 702, 711, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 763, 765, 766, 768, 772, 774, 775, 777, 778, 780, 781, 783, 803, 817, 820, 821, 824, 825, 828, 833, 836, 837, 840, 843, 846, 847, 850, 890, 901, 902, 903, 904, 905, 916, 917, 920, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 977, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004], "api": [13, 14, 18, 19, 115, 117, 118, 120, 121, 123, 124, 126, 127, 128, 129, 130, 132, 134, 148, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 452, 455, 484, 487, 535, 538, 551, 554, 567, 570, 571, 574, 580, 584, 585, 715, 724, 726, 727, 729, 803, 817, 820, 821, 824, 837, 840, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 960, 961, 964, 971, 977], "open": [14, 15, 16, 17, 18, 21, 117, 147, 198, 199, 200, 890, 892, 893, 896, 898, 971], "project": [14, 15, 16, 18, 19, 21, 116, 122, 133, 135, 147, 148, 890, 891, 895], "grown": 14, "consider": [14, 118, 129], "recent": [14, 15, 18, 19], "year": [14, 16, 148, 971], "especi": [14, 18], "deep": [14, 17, 19, 20, 72, 73, 130, 134, 971], "learn": [14, 15, 18, 20, 115, 121, 130, 136, 147, 356, 460, 463, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 863, 864, 865, 866, 971, 1009, 1010, 1011, 1012, 1013, 1014], "can": [14, 15, 16, 17, 18, 19, 23, 69, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 147, 148, 198, 202, 205, 238, 241, 269, 278, 281, 306, 348, 349, 350, 715, 736, 738, 803, 833, 836, 890, 892, 893, 971, 977], "seen": [14, 15, 118, 133, 134], "rapidli": 14, "increas": [14, 306, 330, 334, 338, 803, 813, 816, 859, 862, 867, 879], "github": [14, 19, 20, 117, 120], "repo": [14, 15, 16, 18, 19, 119, 131, 133, 134, 135, 136, 147, 971, 977], "contain": [14, 18, 19, 20, 21, 26, 29, 30, 39, 40, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 126, 128, 129, 130, 131, 132, 135, 136, 148, 159, 160, 165, 170, 173, 175, 178, 180, 185, 188, 190, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 306, 327, 328, 331, 340, 344, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 591, 592, 594, 596, 599, 602, 603, 605, 607, 608, 615, 618, 619, 622, 629, 638, 658, 659, 660, 664, 666, 669, 671, 676, 680, 684, 688, 692, 702, 705, 708, 709, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 813, 817, 820, 821, 824, 825, 828, 829, 832, 833, 837, 840, 842, 843, 847, 851, 854, 855, 859, 863, 864, 865, 866, 867, 880, 885, 886, 889, 890, 891, 892, 895, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 913, 915, 916, 917, 920, 922, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1009, 1013, 1015, 1016], "term": [14, 19, 125, 702, 712, 993, 1003], "time": [14, 15, 16, 18, 19, 20, 120, 121, 125, 126, 129, 131, 134, 136, 148, 664, 671, 673, 684, 686, 702, 712, 803, 855, 858, 863, 864, 865, 866, 902, 903, 904, 907, 908, 909, 913, 993, 1004, 1005, 1006], "These": [14, 15, 16, 19, 117, 118, 120, 121, 125, 126, 128, 129, 131, 132, 134, 135, 136, 148, 715, 730, 732, 971, 977], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 69, 72, 73, 74, 75, 76, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 147, 148, 149, 157, 198, 199, 200, 306, 315, 316, 340, 344, 346, 350, 356, 423, 426, 512, 515, 516, 519, 551, 554, 559, 562, 580, 584, 590, 591, 594, 598, 599, 600, 624, 630, 631, 635, 642, 644, 656, 702, 711, 715, 721, 723, 739, 742, 743, 745, 747, 749, 756, 758, 766, 768, 769, 771, 778, 780, 803, 804, 807, 821, 824, 837, 840, 867, 869, 873, 879, 890, 895, 896, 898, 902, 903, 904, 905, 907, 908, 971, 1015, 1016], "written": [14, 18, 116, 117, 124, 128, 129, 131, 133, 136, 148], "mani": [14, 15, 16, 18, 19, 20, 72, 73, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 148, 803, 842], "differ": [14, 15, 16, 18, 19, 72, 73, 74, 75, 76, 115, 116, 117, 118, 120, 121, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 148, 269, 289, 306, 327, 328, 331, 332, 356, 370, 373, 526, 529, 575, 579, 702, 711, 803, 847, 850, 927, 944, 947, 952, 955, 971], "while": [14, 15, 18, 19, 72, 73, 74, 75, 76, 118, 122, 128, 135, 136, 148, 356, 512, 515, 516, 519, 907, 908, 927, 936, 939], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 69, 72, 73, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 147, 148, 160, 161, 165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 192, 193, 198, 199, 200, 202, 203, 205, 207, 208, 209, 211, 213, 214, 216, 217, 219, 221, 222, 223, 225, 227, 228, 230, 231, 233, 236, 238, 239, 241, 243, 244, 246, 247, 249, 251, 253, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 278, 279, 280, 281, 282, 306, 330, 334, 338, 345, 350, 355, 356, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 395, 398, 411, 414, 415, 418, 419, 420, 421, 422, 427, 430, 448, 451, 452, 453, 454, 455, 484, 487, 512, 515, 516, 519, 535, 538, 547, 550, 551, 554, 567, 570, 571, 574, 580, 581, 582, 583, 584, 585, 590, 591, 592, 593, 595, 617, 618, 619, 620, 621, 623, 634, 645, 650, 664, 666, 667, 668, 670, 671, 673, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 700, 702, 705, 711, 714, 715, 716, 717, 718, 719, 720, 724, 726, 727, 729, 743, 745, 762, 803, 804, 805, 806, 808, 817, 820, 821, 824, 833, 836, 837, 838, 839, 840, 841, 847, 850, 867, 873, 879, 880, 885, 886, 889, 892, 894, 902, 903, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 920, 927, 932, 935, 936, 939, 948, 951, 956, 959, 960, 961, 964, 971, 977, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014], "wonder": [14, 16, 133], "thing": [14, 15, 16, 18, 19, 20, 122, 133, 134], "research": [14, 147], "develop": [14, 15, 16, 17, 18, 19, 20, 147, 148, 971], "also": [14, 15, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 160, 161, 165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 192, 193, 198, 199, 200, 202, 203, 205, 207, 208, 209, 211, 213, 214, 216, 217, 219, 221, 222, 223, 225, 227, 228, 230, 231, 233, 236, 238, 239, 243, 244, 246, 247, 249, 251, 253, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 278, 279, 280, 281, 282, 356, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 395, 398, 415, 418, 419, 420, 421, 422, 427, 430, 452, 453, 454, 455, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 582, 583, 584, 585, 590, 591, 592, 593, 595, 618, 619, 620, 621, 623, 634, 664, 666, 667, 668, 670, 671, 673, 702, 705, 711, 714, 715, 716, 717, 718, 719, 720, 724, 726, 727, 729, 803, 804, 805, 806, 808, 817, 820, 821, 824, 837, 838, 839, 840, 841, 863, 864, 865, 866, 867, 868, 869, 877, 878, 879, 885, 886, 889, 892, 894, 907, 908, 909, 910, 911, 912, 913, 916, 917, 920, 927, 932, 935, 960, 961, 964, 993, 1003], "consid": [14, 15, 72, 73, 116, 121, 132, 133, 134, 356, 512, 515, 516, 519, 907, 908, 909, 913, 915], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 72, 73, 74, 75, 76, 87, 88, 115, 117, 118, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 146, 148, 159, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 306, 328, 351, 356, 415, 418, 571, 574, 664, 666, 668, 669, 670, 702, 708, 709, 907, 908, 909, 913, 916, 917, 920, 927, 928, 931, 971, 977], "significantli": 14, "hinder": [14, 129], "librari": [14, 15, 16, 131, 136, 146, 148, 306, 351, 356, 448, 451, 512, 515, 516, 519, 715, 730, 732, 907, 908, 909, 913, 915, 927, 932, 935, 936, 939, 940, 943, 971], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 916, 917, 920, 922, 925], "against": [14, 72, 73, 120, 148, 269, 276, 715, 739, 742, 743, 745, 747, 749, 756, 758, 902, 903], "newest": 14, "version": [14, 15, 16, 18, 117, 131, 133, 715, 730, 732, 971], "For": [14, 15, 16, 18, 19, 20, 21, 69, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 198, 199, 200, 233, 236, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 419, 422, 423, 426, 427, 430, 444, 447, 448, 451, 452, 455, 488, 491, 492, 495, 500, 503, 504, 507, 526, 529, 543, 546, 547, 550, 551, 554, 559, 562, 563, 566, 567, 570, 580, 584, 585, 586, 589, 664, 680, 682, 700, 715, 766, 768, 775, 777, 803, 804, 807, 847, 850, 907, 908, 909, 913, 915, 927, 932, 935, 940, 943, 952, 955, 982, 983], "softwar": [14, 15, 18, 19], "pipelin": [14, 124, 136], "where": [14, 15, 16, 17, 18, 19, 20, 21, 72, 73, 74, 75, 117, 121, 122, 124, 125, 126, 127, 128, 131, 134, 135, 136, 148, 198, 221, 222, 225, 233, 236, 356, 387, 390, 444, 447, 496, 499, 526, 529, 543, 546, 590, 630, 634, 643, 715, 730, 732, 747, 749, 756, 758, 759, 761, 766, 768, 769, 771, 775, 777, 778, 780, 803, 804, 807, 813, 816, 817, 820, 825, 828, 847, 850, 859, 862, 867, 868, 878, 890, 891, 902, 905, 927, 948, 951, 956, 959, 960, 961, 964, 966, 969, 971], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 136], "signific": [14, 15, 148], "bottleneck": 14, "As": [14, 19, 67, 68, 113, 114, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 148, 907, 908, 909, 913, 915], "new": [14, 15, 16, 17, 18, 19, 20, 21, 23, 69, 72, 73, 115, 116, 117, 118, 120, 123, 125, 126, 128, 130, 133, 136, 147, 198, 207, 216, 219, 221, 222, 225, 243, 244, 246, 249, 261, 263, 264, 268, 269, 301, 356, 391, 394, 496, 499, 539, 542, 590, 612, 613, 614, 617, 618, 619, 622, 646, 647, 648, 649, 654, 655, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 803, 817, 820, 833, 836, 847, 850, 867, 872, 883, 884, 885, 886, 889, 971, 982, 983, 993, 1003, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014], "futur": [14, 16, 18, 19, 133, 148, 715, 730, 732], "avail": [14, 18, 19, 72, 73, 117, 127, 148, 306, 325, 341, 342, 343, 353, 590, 613], "specif": [14, 20, 72, 73, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 147, 148, 269, 297, 306, 348, 351, 356, 512, 515, 516, 519, 590, 612, 613, 614, 641, 715, 730, 732, 772, 774, 803, 847, 850, 863, 864, 865, 866, 890, 891, 927, 932, 935, 936, 939, 940, 943, 971, 974, 976, 977, 1005, 1006], "quickli": [14, 16, 18, 19, 134, 135], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 115, 120, 122, 125, 128, 130, 148, 993, 1004, 1005, 1006], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 67, 68, 113, 114, 118, 125, 130, 133, 134, 135, 136, 148, 971], "desir": [14, 72, 73, 269, 275, 278, 281, 306, 351, 590, 630, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004], "provid": [14, 18, 19, 23, 69, 72, 73, 117, 118, 121, 124, 125, 126, 127, 128, 129, 131, 135, 147, 148, 195, 196, 198, 233, 236, 269, 284, 285, 286, 293, 297, 305, 306, 325, 590, 611, 643, 647, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 715, 778, 780, 803, 821, 824, 847, 850, 902, 903, 927, 948, 951, 956, 959, 960, 961, 964, 966, 969, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1009, 1010, 1011, 1012, 1013, 1014], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 65, 66, 67, 68, 69, 72, 73, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 147, 148, 149, 157, 195, 196, 198, 199, 200, 251, 255, 256, 260, 306, 315, 340, 346, 590, 591, 594, 598, 599, 624, 644, 659, 702, 712, 715, 763, 765, 772, 774, 781, 783, 803, 821, 824, 837, 840, 863, 864, 865, 866, 867, 868, 869, 878, 879, 880, 890, 891, 896, 898, 960, 971, 974, 976], "modern": [14, 15], "simpl": [14, 18, 19, 116, 117, 118, 120, 121, 124, 125, 126, 127, 128, 131, 133, 135, 136, 148, 590, 615], "scalabl": [14, 131], "manner": [14, 26, 29, 30, 72, 73, 116, 117, 127, 134, 147, 148, 867, 879], "must": [14, 16, 18, 19, 20, 72, 73, 74, 75, 76, 116, 117, 118, 121, 124, 125, 126, 127, 129, 131, 135, 136, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 276, 277, 306, 335, 336, 337, 338, 350, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 602, 603, 605, 608, 612, 613, 614, 616, 619, 622, 630, 643, 646, 647, 664, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 1009, 1013], "determin": [14, 72, 73, 117, 121, 125, 126, 127, 269, 278, 281, 283, 288, 293, 294, 295, 305, 306, 341, 342, 343, 353, 356, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 423, 426, 427, 430, 431, 434, 444, 447, 448, 451, 468, 471, 472, 475, 476, 479, 488, 491, 492, 495, 500, 503, 504, 507, 520, 523, 526, 529, 543, 546, 547, 550, 559, 562, 563, 566, 567, 570, 580, 584, 585, 590, 591, 594, 598, 599, 629, 631, 635, 636, 637, 638, 639, 656, 663, 664, 680, 682, 702, 713, 715, 716, 719, 721, 723, 724, 726, 727, 729, 736, 738, 739, 742, 747, 749, 753, 755, 756, 758, 762, 763, 765, 775, 777, 778, 780, 781, 783, 863, 864, 865, 866, 907, 908, 909, 913, 915, 960, 961, 964, 966, 969], "exactli": [14, 16, 118, 125, 127, 971, 977], "common": [14, 20, 72, 73, 118, 121, 123, 125, 127, 148], "ground": [14, 120], "li": 14, "between": [14, 72, 73, 74, 75, 76, 118, 120, 121, 124, 125, 129, 130, 132, 133, 134, 136, 147, 198, 199, 200, 269, 289, 356, 387, 390, 543, 546, 787, 788, 791, 793, 796, 798, 801, 803, 817, 820, 847, 850, 867, 873, 890, 892, 893, 907, 908, 909, 913, 915, 971, 1009, 1011], "find": [14, 18, 19, 72, 73, 131, 134, 907, 908, 909, 913, 915, 971], "exist": [14, 15, 18, 20, 21, 72, 73, 74, 75, 117, 118, 119, 120, 121, 122, 123, 128, 131, 148, 590, 611, 1009, 1013], "essenti": [14, 15, 20, 118, 121, 127], "order": [14, 18, 19, 21, 69, 72, 73, 74, 75, 76, 117, 118, 122, 124, 125, 126, 127, 129, 133, 134, 136, 148, 356, 387, 390, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 715, 730, 732, 743, 745, 766, 768, 769, 771, 781, 783, 803, 821, 824, 863, 864, 865, 902, 905, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 1015, 1016], "design": [14, 15, 115, 128, 131, 133, 148], "univers": 14, "abstract": [14, 23, 69, 125, 135, 148, 306, 321, 1009, 1013], "In": [14, 16, 18, 19, 69, 116, 117, 118, 121, 122, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 306, 345, 351, 352, 355, 356, 370, 373, 526, 529, 547, 550, 590, 596, 634, 803, 833, 836, 890, 896, 898, 971], "search": [14, 18, 26, 29, 30, 58, 72, 73, 104, 116, 118, 120, 903, 904, 905, 906], "languag": [14, 16, 131], "first": [14, 15, 18, 19, 21, 69, 118, 121, 124, 125, 129, 131, 133, 134, 136, 195, 196, 198, 227, 228, 230, 231, 269, 296, 301, 306, 325, 337, 356, 370, 373, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 436, 439, 456, 459, 464, 467, 480, 483, 484, 487, 504, 507, 508, 511, 516, 519, 520, 523, 526, 529, 535, 538, 543, 546, 575, 579, 590, 598, 664, 675, 715, 721, 723, 727, 729, 730, 732, 739, 742, 753, 755, 759, 761, 766, 768, 772, 774, 778, 780, 803, 809, 812, 837, 840, 847, 850, 851, 854, 863, 864, 865, 866, 867, 868, 877, 878, 890, 901, 902, 903, 904, 907, 908, 909, 913, 993, 1004, 1005, 1006, 1009, 1013], "see": [14, 17, 18, 19, 20, 23, 69, 119, 121, 125, 127, 129, 133, 134, 147, 148, 198, 199, 200, 216, 219, 227, 228, 230, 231, 269, 277, 297, 356, 370, 373, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 431, 434, 448, 451, 480, 483, 504, 507, 516, 519, 520, 523, 526, 529, 535, 538, 543, 546, 547, 550, 575, 579, 715, 747, 749, 756, 758, 763, 765, 778, 780, 781, 783, 902, 904, 907, 908, 909, 913, 915, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971], "clear": [14, 15, 16, 19, 20, 69, 118, 120, 126, 127, 131, 133, 306, 324], "front": [14, 130, 131, 134, 971, 977], "runner": 14, "look": [14, 18, 19, 21, 116, 118, 121, 122, 125, 126, 127, 129, 131, 133, 135, 136, 971], "littl": [14, 133], "deeper": [14, 19, 115, 130, 306, 330, 334, 338, 867, 878, 879], "follow": [14, 15, 18, 19, 20, 21, 69, 72, 73, 116, 117, 118, 120, 122, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 148, 269, 292, 306, 350, 356, 547, 550, 590, 632, 633, 634, 654, 655, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 713, 714, 715, 759, 761, 781, 783, 867, 873, 879, 907, 908, 909, 913, 915, 971, 993, 1003, 1009, 1013], "same": [14, 16, 18, 19, 21, 26, 27, 28, 72, 73, 116, 118, 120, 121, 124, 125, 127, 128, 129, 131, 133, 135, 136, 198, 199, 200, 208, 211, 222, 225, 233, 236, 246, 249, 251, 255, 256, 260, 264, 268, 269, 275, 276, 277, 306, 315, 316, 350, 356, 357, 360, 370, 373, 399, 402, 419, 422, 452, 455, 526, 529, 547, 550, 551, 554, 555, 558, 586, 589, 590, 616, 618, 619, 622, 643, 646, 647, 664, 680, 682, 697, 702, 703, 704, 705, 706, 707, 708, 709, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 750, 752, 756, 758, 759, 761, 763, 765, 766, 768, 775, 777, 778, 780, 803, 809, 812, 821, 824, 825, 828, 837, 840, 843, 846, 847, 850, 863, 864, 865, 867, 880, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 952, 955, 956, 959, 971, 993, 994, 995, 996, 997, 998, 999, 1000], "core": [14, 18, 20, 127, 131, 136, 306, 342, 971], "principl": 14, "oper": [14, 18, 20, 72, 73, 74, 75, 117, 118, 121, 124, 125, 127, 128, 134, 135, 198, 227, 228, 230, 231, 269, 297, 356, 370, 373, 411, 414, 415, 418, 464, 467, 531, 534, 535, 538, 547, 550, 571, 574, 590, 600, 612, 613, 614, 656, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 703, 704, 705, 706, 707, 708, 709, 711], "expos": [14, 131, 135, 590, 606], "almost": [14, 19, 125, 132, 134], "ident": [14, 16, 72, 73, 121, 123, 125, 133, 134, 148, 306, 340, 867, 880, 971], "uniqu": [14, 121, 125, 148, 306, 315, 316, 863, 864, 865, 866, 867, 873, 907, 908, 909, 913, 914, 915], "syntax": [14, 15], "There": [14, 18, 19, 118, 121, 124, 125, 126, 131, 134, 148], "onli": [14, 17, 18, 19, 72, 73, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 146, 148, 306, 346, 356, 512, 515, 516, 519, 715, 739, 742, 759, 761, 803, 821, 824, 867, 868, 869, 877, 878, 902, 903, 904, 927, 936, 939, 971, 1009, 1010, 1011, 1012, 1013, 1014], "so": [14, 15, 18, 19, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 116, 117, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 148, 149, 157, 160, 161, 165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 192, 193, 202, 203, 208, 209, 216, 217, 222, 223, 238, 239, 246, 247, 251, 253, 256, 258, 264, 266, 278, 279, 280, 282, 357, 358, 359, 361, 370, 371, 372, 374, 419, 420, 421, 452, 453, 454, 580, 581, 582, 583, 591, 592, 593, 595, 619, 620, 621, 623, 666, 667, 668, 670, 716, 717, 718, 720, 804, 805, 806, 808, 837, 838, 839, 841, 867, 868, 878, 892, 894, 909, 910, 911, 912, 971], "wai": [14, 15, 18, 23, 122, 128, 133, 134, 135, 136, 148], "manipul": [14, 52, 98, 116, 136, 147, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862], "unsurprisingli": [14, 118], "fundament": [14, 125, 131], "consist": [14, 72, 73, 124, 128, 306, 338, 715, 730, 732, 927, 928, 931, 1005, 1006], "each": [14, 15, 16, 19, 20, 72, 73, 74, 75, 76, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 136, 147, 148, 159, 170, 173, 175, 178, 185, 188, 198, 233, 236, 269, 276, 306, 315, 316, 327, 328, 329, 330, 331, 332, 333, 337, 350, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 591, 594, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 703, 704, 705, 706, 707, 708, 709, 710, 715, 716, 719, 721, 723, 724, 726, 730, 732, 739, 742, 747, 749, 750, 752, 756, 758, 763, 765, 766, 768, 803, 813, 816, 829, 832, 837, 840, 842, 847, 850, 855, 858, 859, 862, 867, 873, 880, 890, 891, 902, 905, 907, 908, 909, 913, 927, 928, 931, 971, 977, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "veri": [14, 15, 18, 19, 116, 118, 120, 121, 125, 127, 128, 129, 132, 134, 135, 136, 148, 971], "similar": [14, 116, 125, 126, 127, 134, 148, 356, 547, 550, 702, 713, 993, 1004], "convent": [14, 147, 715, 739, 742, 927, 928, 931], "those": [14, 18, 19, 20, 72, 73, 125, 131, 136, 198, 199, 200, 664, 700, 715, 759, 761, 766, 768, 803, 804, 807], "introduc": [14, 125, 134, 803, 837, 840, 907, 908], "2006": 14, "layer": [14, 46, 92, 116, 117, 131, 132, 135, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 885, 886, 889, 971, 984, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016], "therefor": [14, 19, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 135, 148, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 419, 422, 452, 455, 535, 538, 567, 570, 571, 574, 580, 584, 590, 618, 702, 705, 714, 715, 716, 719, 727, 729, 803, 837, 840, 885, 886, 889, 907, 909, 913, 927, 932, 935, 960, 961, 964], "present": [14, 19, 69, 72, 73, 119, 125, 126, 127, 128, 129, 131], "itself": [14, 18, 19, 125, 128, 129, 135, 147, 148, 590, 596, 867, 879], "cut": 14, "cloth": 14, "adher": [14, 15, 117, 119, 131, 136], "semant": [14, 131, 136, 356, 547, 550], "round": [14, 15, 16, 18, 19, 20, 21, 37, 38, 83, 84, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 356, 370, 373, 419, 422, 452, 455, 456, 459, 526, 529, 567, 570, 586, 589, 971], "up": [14, 15, 16, 17, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 147, 148], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147], "paint": [14, 131], "pictur": [14, 131], "how": [14, 16, 17, 18, 19, 20, 21, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 147, 148, 971, 977, 993, 1004, 1005, 1006], "pleas": [14, 15, 16, 18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 971], "check": [14, 15, 16, 18, 19, 26, 27, 28, 29, 30, 72, 73, 125, 130, 131, 133, 134, 135, 136, 147, 269, 283, 290, 291, 293, 305, 306, 345, 355, 590, 600, 615, 629, 636, 637, 638, 639, 656, 663, 664, 680, 682, 715, 730, 732, 867, 868, 877, 878, 879, 971], "out": [14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 31, 32, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 83, 84, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 147, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 275, 277, 306, 351, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 602, 603, 604, 605, 607, 608, 609, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 630, 643, 646, 647, 664, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 903, 904, 906, 907, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 993, 1001], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 971], "faq": [14, 15, 16, 131, 133, 134, 135, 136, 147], "reach": [14, 15, 16, 18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 306, 330, 334, 338, 867, 879], "discord": [14, 15, 16, 18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 971], "you": [14, 15, 16, 17, 18, 19, 20, 21, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 147, 148, 971, 977], "question": [14, 15, 16, 18, 19, 118, 120, 131, 133, 134, 135, 136, 147, 148, 971], "With": [15, 16, 18, 39, 40, 41, 42, 59, 60, 72, 73, 74, 75, 83, 84, 85, 86, 93, 94, 97, 98, 101, 102, 105, 106, 118, 120, 131, 159, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 191, 194, 198, 233, 236, 269, 278, 281, 306, 328, 344, 356, 357, 360, 361, 370, 373, 374, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 452, 455, 464, 467, 484, 487, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 584, 585, 590, 591, 592, 593, 594, 595, 599, 607, 608, 615, 618, 619, 622, 623, 653, 658, 659, 660, 664, 666, 667, 669, 702, 705, 708, 709, 714, 715, 716, 719, 720, 721, 723, 724, 726, 727, 729, 743, 745, 772, 774, 787, 788, 791, 798, 801, 803, 804, 807, 808, 817, 820, 821, 824, 829, 832, 837, 840, 841, 842, 851, 854, 885, 886, 889, 890, 891, 892, 894, 895, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 916, 917, 920, 927, 928, 931, 960, 961, 964], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 72, 73, 118, 120, 123, 124, 125, 126, 127, 128, 129, 131, 134, 147, 148, 198, 199, 200, 590, 645, 650, 907, 914, 971], "would": [15, 18, 19, 21, 115, 117, 118, 120, 122, 123, 124, 125, 128, 129, 130, 131, 133, 135, 136, 148, 159, 180, 183, 306, 351, 971], "entir": [15, 16, 19, 72, 73, 118, 119, 120, 124, 125, 128, 133, 134, 135, 136, 148, 306, 350, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 993, 1002], "forgiven": 15, "rais": [15, 19, 69, 72, 73, 128, 131, 133, 269, 277, 356, 444, 447, 543, 546, 590, 600, 625, 634, 648, 655, 661, 715, 739, 742, 746, 778, 780, 803, 843, 846, 847, 850, 902, 905, 927, 932, 935, 940, 943, 960, 961, 964, 966, 969, 1005, 1006, 1009, 1013], "an": [15, 16, 18, 19, 20, 21, 23, 26, 29, 30, 67, 68, 69, 72, 73, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 159, 170, 173, 175, 178, 185, 188, 197, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 276, 277, 278, 281, 289, 294, 295, 297, 306, 328, 332, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 601, 602, 603, 605, 607, 616, 617, 618, 630, 634, 636, 637, 638, 639, 659, 660, 661, 664, 680, 682, 697, 699, 700, 702, 705, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 746, 747, 749, 750, 752, 756, 758, 759, 761, 762, 763, 765, 766, 768, 775, 777, 778, 780, 781, 783, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 833, 836, 837, 840, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 867, 873, 885, 886, 889, 890, 892, 893, 901, 902, 905, 906, 907, 908, 909, 913, 914, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 982, 983, 1005, 1006, 1009, 1010, 1011, 1013], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 121, 126, 127, 128, 129, 131, 133, 136, 148, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 971, 1009, 1010, 1011, 1012, 1013, 1014], "other": [15, 18, 19, 72, 73, 74, 75, 116, 117, 118, 120, 121, 124, 125, 128, 131, 133, 135, 136, 146, 147, 148, 195, 196, 198, 199, 200, 356, 448, 451, 590, 591, 594, 596, 664, 675, 890, 896, 898, 907, 914, 927, 948, 951, 956, 959, 971], "strong": [15, 148], "industri": 15, "back": [15, 124, 130, 131, 133, 148, 971, 977, 1005, 1006, 1009, 1013], "momentum": 15, "won": [15, 16, 19, 136], "ad": [15, 18, 19, 20, 113, 114, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 131, 135, 148, 590, 654, 655, 715, 730, 732, 803, 817, 820, 1015, 1016], "just": [15, 16, 18, 19, 117, 118, 120, 121, 128, 131, 133, 134, 148, 927, 928, 931, 993, 1002], "make": [15, 16, 18, 19, 20, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 134, 136, 306], "problem": [15, 19, 124, 133], "even": [15, 16, 18, 19, 117, 121, 126, 127, 129, 133, 134, 135, 136, 148, 356, 543, 546, 551, 554], "wors": 15, "rather": [15, 72, 73, 116, 117, 120, 125, 136, 148, 198, 199, 200, 306, 350, 590, 636, 637, 639, 664, 680, 682], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 121, 125], "feasibl": 15, "space": [15, 198, 199, 200, 227, 228, 230, 231, 590, 617], "case": [15, 18, 19, 20, 26, 29, 30, 69, 72, 73, 74, 75, 76, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 135, 136, 148, 198, 233, 236, 306, 345, 352, 355, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 415, 418, 419, 422, 423, 426, 427, 430, 444, 447, 448, 451, 452, 455, 488, 491, 492, 495, 500, 503, 504, 507, 526, 529, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 580, 584, 585, 586, 589, 590, 634, 646, 647, 715, 743, 745, 803, 833, 836, 867, 870, 876, 927, 932, 935, 936, 939, 940, 943, 948, 951, 952, 955, 956, 959, 993, 1004, 1005, 1006, 1009, 1013], "unlik": [15, 118, 125, 306], "charger": 15, "charact": 15, "encod": [15, 134, 590, 617], "instant": [15, 971], "messag": [15, 19, 131, 133, 1018, 1019], "much": [15, 19, 116, 124, 125, 128, 131, 133, 134], "doe": [15, 19, 21, 23, 69, 72, 73, 115, 116, 117, 118, 120, 121, 122, 126, 128, 129, 131, 133, 134, 148, 356, 415, 418, 590, 634, 803, 842], "mandat": [15, 120, 128], "adopt": [15, 19, 124], "continu": [15, 16, 119, 120, 148], "own": [15, 16, 18, 117, 131, 148], "signatur": [15, 23, 69, 116, 117, 118, 125, 126, 127, 128, 129, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 375, 378, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 567, 570, 571, 574, 715, 727, 729, 803, 817, 820, 837, 840, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935], "replac": [15, 19, 21, 72, 73, 118, 120, 123, 125, 126, 127, 131, 133, 136, 148, 590, 646, 647, 803, 804, 807, 890, 891], "your": [15, 16, 17, 18, 20, 21, 116, 117, 134, 135, 148, 971], "10": [15, 18, 21, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 125, 131, 133, 134, 198, 221, 230, 231, 232, 306, 356, 395, 398, 399, 402, 427, 430, 464, 467, 484, 487, 492, 495, 567, 570, 590, 608, 618, 645, 650, 664, 684, 685, 686, 687, 702, 708, 715, 724, 726, 727, 729, 753, 755, 772, 774, 803, 821, 824, 829, 832, 842, 885, 886, 889, 890, 891, 892, 893, 894, 902, 905, 907, 908, 927, 928, 931, 932, 935, 1009, 1011], "100": [15, 16, 101, 102, 134, 135, 136, 148, 356, 567, 570, 892, 894, 971], "despit": [15, 125, 127], "distinct": [15, 117, 125, 128, 130, 907, 908, 909, 913, 915, 971], "still": [15, 72, 73, 117, 120, 126, 133, 135, 148, 971], "believ": [15, 19], "share": [15, 72, 73, 118, 120, 121, 122, 125, 131, 269, 301], "bring": [15, 131, 132], "benefit": [15, 16, 18, 19, 124, 125, 128, 133, 134, 148], "unrel": [15, 19], "what": [15, 16, 19, 115, 117, 118, 123, 125, 129, 130, 131, 133, 134, 135, 136, 147, 148, 971], "again": [15, 16, 19, 116, 118, 125, 128, 134, 136, 148], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 134], "most": [15, 18, 19, 72, 73, 116, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 148, 715, 730, 732], "technolog": 15, "sector": [15, 356, 366, 369, 379, 382, 391, 394], "full": [15, 16, 19, 74, 75, 117, 126, 129, 131, 148, 198, 269, 289, 356, 464, 467, 484, 487, 702, 708, 715, 759, 761, 763, 765, 766, 768, 885, 886, 889], "success": 15, "reason": [15, 19, 116, 118, 121, 124, 125, 126, 128, 131, 133, 356, 547, 550], "build": [15, 17, 18, 121, 130, 132, 135, 136, 148, 907, 908, 909, 913, 915, 971, 993, 1004, 1005, 1006], "custom": [15, 23, 69, 135], "comput": [15, 16, 18, 72, 73, 121, 125, 131, 134, 148, 306, 350, 356, 370, 373, 395, 398, 407, 410, 415, 418, 436, 439, 440, 443, 460, 463, 464, 467, 480, 483, 484, 487, 508, 511, 512, 515, 516, 519, 520, 523, 526, 529, 531, 534, 535, 538, 590, 602, 603, 605, 608, 609, 664, 666, 669, 671, 673, 675, 676, 678, 684, 686, 688, 690, 692, 694, 697, 699, 702, 703, 704, 705, 706, 707, 708, 709, 711, 713, 715, 716, 719, 721, 723, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 759, 761, 762, 763, 765, 766, 768, 778, 780, 781, 783, 787, 788, 791, 793, 796, 798, 801, 867, 873, 907, 908, 909, 913, 915, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959], "thank": [15, 134], "interoper": 15, "compon": [15, 131], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 69, 72, 73, 74, 75, 76, 122, 126, 127, 306, 702, 712, 986, 987, 989, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1009, 1013], "pcie": 15, "interfac": [15, 136, 148], "motherboard": 15, "raid": 15, "storag": [15, 134], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 26, 27, 28, 29, 30, 72, 73, 121, 135, 136, 198, 202, 205, 238, 241, 251, 255, 256, 260, 590, 596, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 715, 716, 719, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 747, 749, 750, 752, 756, 758, 759, 761, 763, 765, 766, 768, 769, 771, 775, 777, 867, 869, 879], "factor": [15, 306, 315, 348, 349, 350, 664, 666, 669, 671, 673, 684, 686, 688, 690, 702, 703, 704, 705, 706, 707, 708, 709, 715, 716, 719, 993, 994, 995, 996, 997, 998, 999, 1000, 1009, 1010, 1011, 1012], "sata": 15, "connect": [15, 18, 135, 136, 993, 1003, 1004], "host": [15, 148], "bu": 15, "adapt": [15, 664, 688, 690, 1009, 1012], "devic": [15, 19, 31, 32, 36, 72, 73, 77, 78, 82, 101, 102, 115, 116, 121, 123, 126, 133, 134, 148, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 590, 618, 619, 622, 643, 646, 647, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 982, 983, 984, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016], "html": [15, 21, 117, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 375, 378, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 567, 570, 571, 574, 715, 727, 729, 803, 817, 820, 837, 840, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935], "enabl": [15, 18, 19, 72, 73, 74, 75, 76, 120, 121, 124, 125, 128, 130, 131, 132, 134, 136, 148], "anyon": [15, 17, 148], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 72, 73, 125, 867, 868, 877, 878], "commun": [15, 17, 19, 20, 148, 971, 977], "network": [15, 121, 125, 131, 135, 147, 702, 711, 971, 979, 993, 1005, 1006], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 117, 118, 120, 125, 126, 128, 131, 134, 147, 148, 590, 640, 658, 927, 932, 935, 940, 943], "send": 15, "gmail": 15, "outlook": 15, "pop": [15, 69], "email": 15, "ieee": [15, 197, 269, 289, 356, 370, 373, 448, 451, 526, 529, 547, 550, 567, 570], "754": [15, 197, 269, 289, 356, 370, 373, 448, 451, 526, 529, 547, 550, 567, 570], "allow": [15, 131, 148, 198, 227, 228, 230, 231, 590, 640, 1005, 1006], "calcul": [15, 72, 73, 74, 75, 76, 117, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 423, 426, 427, 430, 431, 434, 444, 447, 448, 451, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 526, 529, 543, 546, 559, 562, 563, 566, 567, 570, 575, 579, 580, 584, 585, 787, 788, 791, 793, 796, 798, 801, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959], "live": [15, 16], "depend": [15, 18, 19, 117, 123, 125, 126, 131, 148, 269, 275, 356, 357, 360, 362, 365, 366, 369, 375, 378, 379, 382, 383, 386, 387, 390, 423, 426, 427, 430, 444, 447, 448, 451, 488, 491, 492, 495, 496, 499, 500, 503, 543, 546, 559, 562, 563, 566, 580, 584, 585, 715, 730, 732, 759, 761, 763, 765, 766, 768, 902, 906, 916, 917, 920, 922, 925], "did": [15, 20, 136], "aris": [15, 148], "until": [15, 19, 148, 971], "substanti": [15, 19, 120, 124], "innov": 15, "growth": 15, "usag": [15, 131, 306, 350], "relev": [15, 18, 20, 118, 125, 126, 134, 1009, 1010, 1011, 1012, 1013, 1014], "area": [15, 128, 146, 356, 366, 369, 379, 382, 391, 394, 971], "necess": 15, "parti": [15, 148], "could": [15, 16, 18, 19, 118, 120, 125, 126, 128, 131, 133, 134, 135, 907, 908, 909, 913, 915], "easili": [15, 19, 134, 135, 136, 148, 971], "engag": [15, 17, 18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "regard": [15, 125, 306], "effect": [15, 117, 124, 125, 129, 148, 198, 233, 236, 664, 692, 694, 927, 948, 951, 956, 959], "2015": 15, "sinc": [15, 18, 19, 148], "alongsid": 15, "machin": [15, 18, 121, 147, 269, 289, 292, 356, 460, 463, 715, 747, 749, 756, 758], "given": [15, 16, 18, 19, 20, 21, 69, 72, 73, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 135, 136, 147, 198, 199, 200, 207, 227, 228, 230, 231, 306, 339, 345, 347, 348, 349, 350, 352, 355, 590, 608, 609, 619, 622, 646, 647, 662, 664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 703, 704, 705, 706, 707, 708, 709, 715, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 817, 820, 821, 824, 829, 832, 837, 840, 842, 855, 858, 867, 874, 875, 890, 892, 893, 895, 896, 898, 901, 916, 922, 925, 982, 983], "frame": [15, 147], "less": [15, 19, 37, 38, 72, 73, 83, 84, 118, 125, 129, 130, 131, 356, 362, 365, 366, 369, 375, 378, 387, 390, 419, 422, 488, 491, 492, 495, 500, 503, 543, 546, 547, 550, 555, 558, 567, 570, 715, 747, 749, 756, 758, 781, 783, 890, 896, 898, 927, 956, 959], "matur": [15, 148], "state": [15, 117, 129, 130, 131, 132, 134, 147, 356, 526, 529, 702, 712, 971, 979, 980, 981, 982, 983, 984, 986, 987, 989, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "than": [15, 19, 72, 73, 116, 118, 120, 125, 128, 131, 134, 135, 136, 148, 198, 199, 200, 269, 289, 306, 350, 356, 362, 365, 366, 369, 375, 378, 387, 390, 403, 406, 411, 414, 419, 422, 452, 455, 456, 459, 488, 491, 492, 495, 500, 503, 524, 543, 546, 547, 550, 555, 558, 567, 570, 586, 589, 590, 636, 637, 639, 664, 680, 682, 715, 721, 723, 739, 742, 747, 749, 756, 758, 781, 783, 803, 804, 807, 821, 824, 843, 846, 890, 896, 898, 907, 908, 909, 913, 915, 927, 944, 947, 948, 951, 952, 955, 956, 959], "preced": [15, 135], "mention": [15, 18, 19, 118, 121, 128, 129], "aros": 15, "70": [15, 715, 753, 755, 927, 928, 931], "80": [15, 715, 753, 755, 927, 928, 931], "90": [15, 101, 102, 356, 415, 418, 551, 554, 715, 753, 755, 892, 894, 927, 928, 931], "effort": [15, 17, 148], "stage": [15, 17, 19, 21, 115, 971], "complet": [15, 19, 20, 72, 73, 124, 125, 133, 134, 715, 759, 761], "natur": [15, 118, 124, 125, 147, 356, 444, 447, 488, 491, 496, 499, 715, 762], "like": [15, 18, 19, 21, 69, 115, 116, 117, 118, 120, 127, 128, 129, 130, 131, 133, 134, 135, 136, 147, 148, 664, 680, 682, 890, 896, 898, 971], "certainli": 15, "mission": [15, 971], "creat": [15, 17, 18, 19, 21, 23, 69, 72, 73, 126, 127, 128, 131, 132, 135, 146, 147, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 221, 222, 225, 227, 228, 230, 231, 238, 241, 243, 244, 246, 249, 261, 263, 264, 268, 306, 315, 316, 590, 618, 619, 622, 643, 646, 647, 658, 664, 699, 890, 891, 892, 893, 896, 898, 971, 977, 982, 983, 984, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 121, 125, 131, 136, 306, 315, 316, 345, 355], "ourselv": 15, "lead": [15, 16, 72, 73, 74, 75, 76, 148, 715, 759, 761, 766, 768], "quansight": 15, "compani": 15, "made": [15, 19, 20, 125, 128, 131, 133], "organ": [15, 116, 121, 124, 125], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 907, 908, 909, 913, 915], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 131, 136], "sympi": 15, "rai": [15, 356, 387, 390], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 72, 73, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 147, 148, 198, 199, 200, 202, 205, 238, 241, 590, 629, 663, 715, 781, 783, 867, 868, 890, 896, 898, 902, 904, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 974, 976, 993, 1003, 1004, 1007, 1008], "member": [15, 19], "googl": [15, 971], "octoml": 15, "einop": [15, 72, 73, 590, 612, 613, 614], "further": [15, 16, 19, 21, 118, 124, 130, 134, 135, 971], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 69, 101, 102, 115, 125, 134, 590, 599, 607, 702, 703, 704, 705, 706, 707, 708, 709, 715, 727, 729, 753, 755, 892, 894, 971, 977], "shaw": 15, "co": [15, 37, 38, 83, 84, 131, 147, 356, 590, 617, 971], "intel": 15, "togeth": [15, 72, 73, 124, 125, 135, 136, 148, 1015, 1016], "major": [15, 126, 127, 148, 902, 905], "involv": [15, 17, 21, 115, 126, 136, 269, 297, 356, 370, 373, 526, 529, 971, 977], "anoth": [15, 18, 19, 72, 73, 121, 125, 126, 133, 136, 198, 216, 219, 269, 276, 278, 281], "promis": 15, "sign": [15, 18, 37, 38, 83, 84, 132, 136, 198, 199, 200, 356, 357, 360, 370, 373, 387, 390, 411, 414, 526, 529, 547, 550, 715, 762, 907, 908, 909, 913, 915, 927, 944, 947, 952, 955], "pursuit": 15, "unif": [15, 17, 133, 971, 977], "clearli": [15, 20, 118], "lot": [15, 16, 123, 133, 148], "thought": [15, 18, 19, 129], "care": [15, 19, 136], "attent": [15, 19, 124, 125, 702, 713, 714, 993, 1004], "gone": [15, 130], "simplifi": [15, 131, 132, 133, 135], "compat": [15, 129, 148, 269, 277, 356, 370, 373, 387, 390, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 431, 434, 436, 439, 456, 459, 464, 467, 480, 483, 484, 487, 504, 507, 508, 511, 516, 519, 520, 523, 526, 529, 535, 538, 543, 546, 547, 550, 575, 579, 715, 747, 749, 756, 758, 763, 765, 772, 774, 778, 780, 781, 783, 803, 833, 836, 902, 904, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971], "excit": [15, 17, 115, 971], "complianc": 15, "hope": [15, 148], "due": [15, 18, 125, 128, 356, 526, 529], "suit": [15, 18, 115, 119, 120, 134, 147], "some": [15, 16, 18, 19, 20, 72, 73, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 147, 148, 356, 448, 451, 664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 700, 702, 710, 971, 993, 1001], "motiv": [15, 133], "great": [15, 16, 120, 131, 133], "convinc": 15, "celebr": 15, "encourag": [15, 147, 148, 971, 977], "foundat": 15, "point": [16, 19, 117, 118, 124, 128, 129, 131, 133, 134, 147, 197, 198, 199, 200, 207, 213, 214, 221, 243, 244, 261, 263, 269, 275, 289, 294, 297, 356, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 444, 447, 448, 451, 452, 455, 488, 491, 492, 495, 500, 503, 504, 507, 526, 529, 543, 546, 547, 550, 551, 554, 559, 562, 563, 566, 567, 570, 580, 584, 585, 586, 589, 715, 716, 719, 724, 726, 730, 732, 733, 735, 736, 738, 747, 749, 756, 758, 759, 761, 763, 765, 766, 768, 781, 783, 907, 908, 909, 913, 915, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959], "mai": [16, 18, 19, 23, 69, 125, 133, 135, 198, 199, 200, 216, 219, 306, 351, 356, 436, 439, 464, 467, 484, 487, 512, 515, 516, 519, 590, 611, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 932, 935, 936, 939, 940, 943], "ask": [16, 131, 133, 148, 971], "perfectli": 16, "happi": [16, 18, 148], "abund": 16, "better": [16, 115, 130, 133, 134, 135], "ll": [16, 17, 19, 118, 125, 128, 134], "give": [16, 18, 19, 115, 117, 118, 122, 129, 133, 803, 833, 836], "two": [16, 69, 74, 75, 117, 118, 120, 124, 125, 130, 134, 136, 198, 199, 200, 213, 214, 233, 236, 251, 255, 256, 260, 269, 296, 301, 356, 411, 414, 551, 554, 590, 598, 715, 716, 719, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 775, 777, 778, 780, 803, 851, 854, 907, 908, 909, 913, 914, 915, 971], "streamlin": 16, "workflow": [16, 19, 134, 146, 971], "save": [16, 72, 73, 148, 590, 651, 1005, 1006], "week": [16, 19, 20, 971], "let": [16, 117, 118, 125, 126, 127, 131, 133, 134, 135, 136, 927, 936, 939, 948, 951, 952, 955, 956, 959, 971], "sai": [16, 18, 123, 133], "deepmind": 16, "releas": [16, 18, 20, 971], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 128, 134, 927, 948, 951, 956, 959], "perceiverio": 16, "happen": [16, 18, 19, 134], "slew": 16, "rush": 16, "f": [16, 21, 69, 115, 125, 131, 134, 136, 356, 460, 463, 590, 631, 635], "g": [16, 115, 125, 148, 269, 274, 297, 306, 322, 890, 895, 896, 898, 907, 908, 909, 913, 915, 927, 932, 935, 940, 943, 944, 947, 952, 955], "inevit": 16, "deviat": [16, 885, 886, 889, 890, 895, 927, 948, 951, 1007, 1008], "origin": [16, 72, 73, 74, 75, 76, 122, 123, 126, 131, 133, 356, 387, 390, 715, 743, 745, 803, 833, 836, 837, 840], "often": [16, 121, 148], "erron": 16, "train": [16, 121, 125, 127, 134, 135, 136, 146, 147, 148, 664, 666, 669, 671, 673, 684, 686, 971], "poor": 16, "converg": 16, "perform": [16, 72, 73, 116, 118, 120, 121, 122, 124, 125, 127, 128, 129, 131, 134, 148, 159, 180, 183, 198, 227, 228, 230, 231, 306, 590, 608, 612, 613, 614, 632, 633, 634, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 710, 712, 715, 766, 768, 863, 864, 865, 866, 867, 874, 875, 960, 961, 964, 966, 969], "issu": [16, 17, 20, 131, 133, 135, 148], "etc": [16, 18, 19, 20, 67, 68, 72, 73, 113, 114, 116, 118, 120, 124, 125, 126, 129, 131, 133, 134, 148, 198, 227, 228, 230, 231, 590, 618, 619, 622, 643, 646, 647, 890, 891, 892, 893, 896, 898, 907, 908, 909, 913, 915, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016], "publish": [16, 148], "manag": [16, 17, 128, 148, 306], "get": [16, 17, 18, 20, 69, 72, 73, 115, 121, 126, 127, 128, 131, 132, 133, 134, 135, 269, 287, 288, 289, 292, 306, 315, 316, 325, 326, 339, 340, 345, 349, 352, 355, 590, 597, 624, 625, 626, 645, 971, 977, 993, 1002], "work": [16, 18, 19, 20, 115, 120, 125, 126, 127, 130, 131, 132, 133, 135, 136, 971, 977], "repositori": [16, 18, 19, 21, 119], "pull": [16, 17, 18, 21, 116, 148], "request": [16, 17, 116, 306, 342], "confus": [16, 128], "do": [16, 18, 19, 20, 72, 73, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 356, 547, 550, 590, 634, 664, 680, 682, 700, 867, 868, 877, 878, 879], "don": [16, 18, 19, 20, 67, 68, 113, 114, 126, 135, 148], "expect": [16, 148, 590, 597, 971], "codebas": [16, 17, 115, 116, 128, 130, 306, 348, 349, 971], "total": [16, 17, 19, 72, 73, 74, 75, 76, 118, 120, 127, 134, 135, 148, 306, 352, 902, 905, 927, 948, 951, 956, 959], "hour": 16, "spent": 16, "spin": 16, "off": [16, 130, 715, 727, 729, 775, 777], "test": [16, 18, 20, 115, 118, 148, 269, 294, 295, 356, 468, 471, 472, 475, 476, 479, 960, 961, 964, 966, 969], "error": [16, 18, 72, 73, 120, 124, 127, 129, 133, 148, 159, 160, 163, 306, 356, 440, 443, 927, 932, 935, 940, 943, 1005, 1006, 1009, 1013], "iter": [16, 26, 27, 28, 29, 30, 67, 68, 69, 72, 73, 74, 75, 76, 113, 114, 125, 131, 134, 195, 196, 306, 328, 329, 331, 332, 333, 334, 337, 350, 590, 591, 594, 647, 652, 803, 813, 816, 829, 832, 842, 855, 858, 859, 862, 867, 868, 869, 873, 877, 878, 879], "address": [16, 19, 20, 124, 131], "sake": 16, "singl": [16, 19, 72, 73, 116, 118, 120, 121, 123, 125, 128, 129, 131, 134, 135, 136, 148, 306, 315, 316, 335, 336, 337, 338, 590, 660, 663, 890, 895, 896, 898, 907, 908], "multipl": [16, 19, 72, 73, 83, 84, 85, 86, 93, 94, 97, 98, 101, 102, 118, 121, 125, 148, 356, 370, 374, 526, 529, 590, 591, 593, 594, 595, 619, 623, 640, 715, 716, 719, 720, 736, 738, 803, 804, 807, 808, 837, 840, 841, 842, 885, 886, 889, 892, 894, 902, 903, 904, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 993, 1003], "line": [16, 18, 118, 124, 132, 133, 134, 135, 146, 971, 977], "convert": [16, 26, 27, 28, 29, 30, 72, 73, 124, 131, 148, 149, 157, 198, 202, 205, 238, 241, 269, 273, 274, 306, 322, 323, 324, 325, 345, 352, 355, 590, 653, 659, 660, 715, 784, 786, 867, 869, 879, 880, 983], "directli": [16, 19, 116, 117, 121, 124, 125, 126, 127, 128, 129, 131, 133, 135, 136, 147, 148, 867, 879], "graph": [16, 121, 125, 132, 148, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 907, 908, 909, 913, 915, 1005, 1006], "guarante": [16, 124, 148, 907, 908], "turn": [16, 118, 125], "4": [16, 21, 37, 38, 47, 48, 51, 52, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 122, 125, 131, 133, 134, 135, 136, 159, 165, 168, 170, 173, 180, 183, 190, 191, 193, 198, 222, 225, 233, 236, 246, 249, 264, 268, 269, 278, 280, 281, 282, 306, 328, 344, 356, 357, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 387, 390, 395, 398, 415, 418, 419, 421, 422, 427, 430, 452, 454, 455, 464, 467, 484, 487, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 583, 584, 585, 590, 599, 608, 617, 618, 619, 621, 622, 623, 653, 658, 664, 666, 668, 669, 670, 702, 705, 706, 707, 709, 712, 714, 715, 716, 717, 719, 721, 723, 724, 726, 727, 729, 736, 738, 747, 749, 753, 755, 772, 774, 775, 777, 787, 798, 801, 803, 804, 805, 806, 807, 808, 809, 812, 817, 820, 821, 824, 829, 832, 833, 836, 837, 839, 840, 841, 842, 851, 854, 885, 886, 889, 890, 891, 892, 894, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 916, 917, 920, 927, 928, 931, 932, 935, 960, 961, 964, 971, 1009, 1010, 1011, 1012, 1014], "step": [16, 18, 19, 21, 41, 42, 72, 73, 77, 78, 87, 88, 118, 122, 124, 125, 126, 127, 131, 134, 135, 136, 147, 198, 199, 200, 201, 227, 228, 230, 231, 306, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 678, 684, 685, 686, 687, 688, 690, 692, 694, 863, 864, 865, 866, 971, 1009, 1010, 1011, 1012, 1013, 1014], "take": [16, 17, 18, 19, 117, 118, 120, 125, 126, 127, 131, 133, 135, 136, 148, 356, 415, 418, 971, 977], "few": [16, 19, 20, 121, 125, 126, 127, 128, 132, 133, 134, 135, 146, 971, 977], "second": [16, 18, 118, 128, 133, 269, 296, 301, 306, 337, 356, 370, 373, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 436, 439, 456, 459, 464, 467, 480, 483, 484, 487, 504, 507, 508, 511, 516, 519, 520, 523, 526, 529, 535, 538, 543, 546, 575, 579, 590, 598, 645, 650, 664, 666, 669, 671, 673, 684, 686, 715, 721, 723, 727, 729, 730, 732, 739, 742, 753, 755, 759, 761, 766, 768, 772, 774, 778, 780, 803, 847, 850, 851, 854, 863, 865, 907, 908, 909, 913, 1009, 1010, 1011], "automat": [16, 18, 19, 121, 125, 129, 130, 131, 132, 135, 136, 971], "convers": [16, 27, 28, 29, 30, 72, 73, 130, 132, 136, 147, 148, 971, 977], "everyon": [16, 17, 19, 148], "regardless": [16, 17, 72, 73, 133, 136, 195, 196], "wouldn": 16, "nice": [16, 120], "write": [16, 19, 20, 21, 72, 73, 115, 116, 117, 118, 120, 121, 122, 128, 131, 133, 136, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 277, 306, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 602, 603, 605, 608, 609, 612, 613, 614, 616, 618, 619, 622, 630, 643, 646, 647, 664, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 901, 902, 906, 907, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "onc": [16, 18, 19, 125, 126, 127, 131, 134, 148, 306, 350, 715, 736, 738, 766, 768, 890, 891], "know": [16, 19, 907, 908, 909, 913, 915], "among": [16, 72, 73, 120], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 121, 131], "understand": [16, 18, 19, 20, 21, 115, 117, 118, 119, 129, 130], "pattern": [16, 72, 73, 117, 126, 590, 612, 613, 614], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 117, 119, 120, 125, 131, 135, 148, 160, 161, 165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 192, 193, 202, 203, 208, 209, 216, 217, 222, 223, 238, 239, 246, 247, 251, 253, 256, 258, 264, 266, 278, 279, 280, 282, 306, 357, 358, 359, 361, 370, 371, 372, 374, 419, 420, 421, 452, 453, 454, 580, 581, 582, 583, 591, 592, 593, 595, 619, 620, 621, 623, 666, 667, 668, 670, 715, 716, 717, 718, 720, 721, 723, 803, 804, 805, 806, 808, 833, 836, 837, 838, 839, 841, 867, 869, 879, 892, 894, 909, 910, 911, 912, 971, 977], "now": [16, 18, 21, 72, 73, 116, 123, 125, 126, 129, 133, 134, 136, 147, 148, 993, 1004, 1005, 1006], "spend": 16, "torchvis": 16, "probabl": [16, 702, 710, 890, 891, 993, 1001], "sonnet": 16, "about": [16, 18, 19, 119, 130, 131, 135, 136, 148, 269, 289, 292], "next": [16, 18, 19, 20, 21, 117, 118, 122, 123, 133, 134, 269, 289, 971, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014], "everyth": [16, 19, 20, 132, 148], "zero": [16, 72, 73, 74, 75, 118, 124, 125, 126, 127, 129, 131, 134, 135, 159, 165, 168, 170, 173, 198, 207, 213, 214, 233, 236, 251, 255, 256, 260, 264, 268, 269, 275, 356, 370, 373, 375, 378, 403, 406, 427, 430, 448, 451, 452, 455, 512, 515, 516, 519, 524, 525, 526, 529, 531, 534, 535, 538, 543, 546, 547, 550, 551, 554, 567, 570, 571, 574, 580, 584, 585, 590, 608, 643, 646, 647, 664, 666, 669, 671, 673, 684, 686, 688, 690, 702, 710, 715, 716, 719, 724, 726, 739, 742, 747, 749, 756, 758, 778, 780, 781, 783, 803, 817, 820, 821, 824, 829, 832, 837, 840, 859, 862, 885, 886, 889, 890, 892, 893, 902, 903, 904, 905, 907, 908, 909, 913, 915, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 984, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1003, 1009, 1010, 1011, 1012], "need": [16, 18, 19, 20, 21, 116, 117, 118, 119, 121, 124, 125, 128, 131, 133, 134, 147, 148, 590, 602, 603, 605, 803, 804, 807, 817, 820], "said": 16, "high": [16, 20, 72, 73, 101, 102, 134, 890, 892, 893, 894, 896, 897, 898, 899], "level": [16, 17, 20, 121, 130, 131, 134, 135, 136, 148], "optim": [16, 128, 132, 134, 136, 147, 306, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 863, 864, 865, 866, 971, 1010, 1011, 1012, 1014], "trainer": [16, 146, 148, 971], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 136], "flax": [16, 136, 148], "trax": [16, 136], "objax": [16, 136], "idea": [16, 147], "fulli": [16, 124, 125, 129, 131, 132, 133, 134, 135, 136, 148, 993, 1003, 1004], "offer": [16, 135], "strongli": [17, 18, 971, 977], "welcom": [17, 18, 19, 971, 977], "absolut": [17, 72, 73, 356, 357, 360, 715, 762], "skill": 17, "whether": [17, 18, 26, 27, 28, 29, 30, 72, 73, 74, 75, 76, 113, 114, 126, 128, 129, 159, 160, 163, 195, 196, 269, 275, 287, 293, 294, 295, 305, 306, 325, 326, 337, 341, 342, 345, 346, 350, 353, 355, 356, 476, 479, 590, 591, 594, 598, 599, 608, 611, 615, 617, 627, 629, 631, 634, 635, 636, 637, 638, 639, 640, 652, 656, 662, 663, 664, 671, 673, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 697, 702, 710, 715, 730, 732, 863, 864, 865, 866, 867, 868, 869, 873, 877, 878, 879, 880, 890, 891, 960, 961, 964, 966, 969, 982, 983, 993, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 72, 73, 77, 78, 115, 117, 118, 126, 130, 131, 133, 134, 135, 147, 148, 198, 199, 200, 201, 227, 228, 229, 230, 231, 232, 306, 321], "aspect": [17, 134, 971], "guid": [17, 18, 19, 120, 971], "through": [17, 19, 20, 115, 118, 121, 122, 125, 130, 131, 133, 134, 135, 136, 147, 356, 387, 390], "journei": [17, 971, 977], "inclusvi": 17, "big": [17, 148], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 130, 971], "split": [17, 19, 72, 73, 130, 131, 148, 306, 315, 331, 332, 333, 334, 348, 349, 350, 590, 640, 803, 971], "section": [17, 19, 20, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 907, 908, 909, 913, 915], "below": [17, 18, 20, 21, 115, 116, 118, 121, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 147, 198, 251, 255, 256, 260, 356, 395, 398, 415, 418, 427, 430, 551, 554, 585, 715, 724, 726, 727, 729, 775, 777, 803, 817, 820, 821, 824, 907, 908, 916, 917, 920, 971], "best": [17, 18, 19, 20, 21, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 590, 640], "go": [17, 18, 19, 20, 115, 116, 118, 125, 130, 134, 148, 867, 878], "finish": [17, 18, 115, 971], "dive": [17, 19, 20, 130, 133, 134, 148, 971], "right": [17, 18, 19, 72, 73, 115, 118, 134, 356, 403, 406, 411, 414, 715, 766, 768], "environ": [17, 19, 21, 147], "basic": [17, 20, 21], "fork": [17, 18, 590, 641], "doc": [17, 20, 117, 129, 131, 134, 135, 971], "document": [17, 19, 132, 134, 136], "local": [17, 18, 21, 121], "task": [17, 19, 147, 863, 864, 865, 866, 971], "help": [17, 18, 23, 69, 118, 122, 124, 125, 133, 134, 135, 146, 590, 596, 927, 952, 955, 971], "video": [17, 19, 117, 118, 129], "realli": [18, 125, 148], "contribut": [18, 19, 20, 131, 977], "toward": [18, 131, 803, 837, 840, 971, 977], "page": [18, 19, 132, 136, 146, 971, 977], "explain": [18, 19, 20, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 971, 977], "main": [18, 21, 123, 125, 198, 213, 214, 251, 255, 256, 260, 715, 727, 729, 775, 777], "prefer": [18, 125], "mode": [18, 47, 48, 72, 73, 118, 125, 148, 195, 196, 306, 335, 336, 337, 338, 350, 356, 370, 373, 526, 529, 715, 759, 760, 761], "git": [18, 19], "recurs": [18, 21, 26, 27, 28, 29, 30, 72, 73, 121, 125, 135, 148, 867, 868, 869, 877, 878, 879], "submodul": [18, 19, 20, 21, 119, 120, 121, 127, 130, 131, 135, 971, 1007, 1008, 1015, 1016], "com": 18, "unifyai": [18, 21], "http": [18, 117, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 375, 378, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 567, 570, 571, 574, 664, 666, 669, 671, 673, 715, 727, 729, 803, 817, 820, 837, 840, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935], "gh": 18, "your_fold": 18, "id": [18, 124, 125, 306, 325, 1005, 1006], "cours": [18, 19, 118, 134, 148], "whatev": [18, 148], "integr": [18, 120, 269, 275], "familiar": [18, 20], "decid": [18, 72, 73, 867, 878], "sure": [18, 20, 119], "elig": 18, "free": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 147, 971], "student": 18, "licenc": 18, "peopl": [18, 19, 115], "seem": [18, 135, 148], "miss": [18, 118, 120, 124, 125, 1009, 1013], "add": [18, 19, 20, 37, 38, 67, 68, 72, 73, 74, 75, 83, 84, 85, 86, 113, 114, 115, 116, 117, 121, 122, 124, 125, 129, 131, 133, 148, 356, 357, 360, 374, 591, 595, 885, 886, 889, 971, 977, 1007, 1008], "explicit": [18, 21, 125, 126, 128, 131, 148], "remind": 18, "channel": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 590, 617, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003], "pace": 18, "updat": [18, 19, 20, 21, 69, 72, 73, 115, 118, 119, 123, 124, 125, 126, 129, 131, 133, 134, 136, 148, 306, 315, 590, 634, 646, 647, 664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 712, 863, 864, 865, 867, 874, 875, 883, 884, 982, 983, 1009, 1010, 1011, 1012, 1013, 1014], "suggest": [18, 19, 116], "latest": [18, 20, 21, 117, 148, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 375, 378, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 567, 570, 571, 574, 715, 727, 729, 803, 817, 820, 837, 840, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 993, 1002], "packag": [18, 21, 148], "ensur": [18, 19, 120, 124, 126, 129, 590, 634], "align": [18, 72, 73, 131, 133, 971, 977], "accord": [18, 21, 72, 73, 121, 126, 269, 278, 281, 289, 356, 370, 373, 411, 414, 526, 529, 590, 618, 646, 647, 715, 778, 780, 803, 813, 816, 859, 862, 927, 948, 951, 956, 959], "stabl": [18, 61, 62, 107, 108, 131, 148, 590, 625, 626, 648, 649, 654, 655, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926], "pypi": [18, 20, 148], "mayb": [18, 26, 29, 30, 131, 133], "person": [18, 19], "experi": [18, 132, 134, 148], "avoid": [18, 19, 120, 122, 123, 125, 133, 306, 356, 448, 451], "pip": [18, 147, 971], "instal": [18, 21, 147, 971], "abil": [18, 132, 148], "certain": [18, 72, 73, 148, 198, 199, 200, 227, 228, 230, 231], "perhap": [18, 133, 134, 135, 148], "keep": [18, 19, 72, 73, 119, 125, 132, 134, 136, 590, 662], "track": [18, 19, 306, 867, 879, 1005, 1006], "termin": [18, 19, 21, 72, 73, 74, 75, 76, 125, 131, 134], "run": [18, 21, 119, 120, 122, 129, 131, 132, 133, 134, 135, 136, 147, 148, 306, 315, 664, 666, 669, 671, 673, 684, 686, 863, 864, 865, 866, 993, 1004, 1005, 1006], "command": [18, 21, 971], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 23, 69, 117, 120, 131, 133, 134, 136, 195, 196, 590, 596, 715, 730, 732, 759, 761, 766, 768, 907, 908, 909, 913], "3": [18, 21, 24, 25, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 118, 122, 125, 131, 133, 134, 135, 136, 159, 160, 161, 165, 168, 170, 173, 175, 178, 180, 183, 190, 191, 193, 197, 198, 222, 225, 233, 236, 246, 249, 261, 263, 264, 268, 269, 278, 279, 280, 281, 282, 306, 325, 328, 344, 351, 356, 357, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 395, 398, 411, 414, 415, 418, 419, 421, 422, 427, 430, 444, 447, 452, 453, 454, 455, 460, 463, 464, 467, 480, 483, 484, 487, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 583, 584, 585, 590, 591, 592, 593, 598, 599, 608, 615, 618, 619, 620, 621, 622, 623, 652, 653, 658, 660, 664, 666, 667, 668, 669, 670, 702, 703, 704, 705, 707, 708, 709, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 729, 736, 738, 747, 749, 753, 755, 766, 768, 772, 774, 775, 777, 784, 786, 787, 788, 791, 798, 801, 803, 804, 805, 806, 807, 808, 809, 812, 817, 820, 821, 824, 829, 832, 833, 836, 837, 839, 840, 841, 842, 843, 846, 851, 854, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 916, 917, 920, 927, 928, 931, 932, 935, 952, 955, 960, 961, 964, 971], "8": [18, 21, 51, 52, 74, 75, 83, 84, 101, 102, 118, 125, 130, 134, 159, 175, 178, 306, 328, 356, 370, 373, 374, 395, 398, 419, 422, 427, 430, 464, 467, 484, 487, 524, 525, 551, 554, 567, 570, 571, 574, 585, 590, 599, 618, 664, 666, 669, 702, 709, 715, 721, 723, 724, 726, 727, 729, 753, 755, 772, 774, 787, 788, 791, 803, 804, 805, 807, 821, 824, 829, 832, 842, 890, 891, 892, 893, 894, 902, 906, 907, 908, 927, 928, 931, 971, 993, 1004], "activ": [18, 19, 21, 25, 67, 68, 71, 113, 114, 116, 135, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 971, 980, 981], "setup": 18, "click": [18, 19, 117, 971], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 136, 306, 351, 356, 512, 515, 516, 519, 902, 906, 907, 908, 909, 913, 915, 927, 932, 935, 936, 939, 940, 943], "left": [18, 19, 72, 73, 118, 126, 356, 403, 406, 715, 730, 732, 743, 745, 766, 768, 902, 903, 971], "panel": 18, "select": [18, 19, 120, 131, 133, 136, 148], "drop": [18, 148], "down": [18, 133], "path": [18, 21], "manual": [18, 19, 120, 135, 867, 868, 877, 878], "builtin": [18, 21, 133, 135], "requir": [18, 21, 116, 117, 118, 120, 123, 124, 126, 127, 129, 133, 148, 195, 196, 356, 567, 570, 715, 730, 732, 803, 847, 850, 982, 983], "cmd": [18, 21], "directori": [18, 19, 21, 590, 651], "folder": [18, 19, 21, 116, 119, 120, 121], "file": [18, 19, 21, 72, 73, 116, 117, 121, 122, 124, 125, 131, 134, 590, 651, 1005, 1006], "abov": [18, 19, 21, 117, 118, 121, 122, 124, 125, 128, 129, 133, 134, 135, 136, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 452, 455, 526, 529, 535, 538, 551, 554, 567, 570, 571, 574, 580, 584, 585, 590, 618, 702, 705, 714, 715, 716, 719, 724, 726, 727, 729, 730, 732, 775, 777, 803, 817, 820, 821, 824, 837, 840, 885, 886, 889, 890, 892, 893, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 944, 947, 948, 951, 952, 955, 960, 961, 964], "m": [18, 19, 21, 115, 131, 198, 233, 236, 251, 255, 256, 260, 590, 599, 715, 716, 719, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 763, 765, 766, 768, 769, 771, 775, 777, 890, 895, 896, 898], "python3": [18, 21], "script": [18, 19, 21, 118, 131, 148], "bat": [18, 19, 21], "OR": [18, 19, 21, 356, 407, 410, 516, 519, 960, 966, 969], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 69, 72, 73, 74, 75, 76, 117, 124, 125, 306, 340], "os": 18, "note": [18, 19, 116, 117, 118, 125, 356, 547, 550, 715, 730, 732, 766, 768, 803, 847, 850, 907, 909, 913, 927, 936, 939], "tick": [18, 19], "abl": [18, 19, 72, 73, 121, 126, 128, 133, 136], "To": [18, 118, 121, 125, 134, 135, 136, 971], "ivy_test": [18, 19], "test_array_api": [18, 19, 119, 120], "cd": [18, 19, 21], "r": [18, 72, 73, 590, 599, 662, 715, 759, 761, 784, 786], "txt": 18, "visual": [18, 148], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 130, 356, 448, 451], "conflict": [18, 19, 134], "addit": [18, 19, 72, 73, 116, 117, 120, 125, 126, 133, 134, 136, 306, 351, 356, 370, 373, 590, 612, 613, 614, 885, 886, 889, 993, 1003], "yet": [18, 20, 125], "particular": [18, 19, 116, 128, 356, 357, 360], "system": [18, 148, 715, 763, 765], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 44, 90, 116, 131, 132, 134, 136, 147, 702, 703, 704, 705, 706, 708, 709, 971], "profession": 18, "execut": [18, 21, 125, 128, 131, 133, 136, 148, 590, 661], "deploy": 18, "top": [18, 19, 120, 134, 135, 971], "press": [18, 134, 971], "ok": 18, "correctli": [18, 72, 73, 120, 125, 126, 129, 135, 148, 715, 743, 745, 902, 903], "caus": [18, 19, 118, 120, 125, 128, 148], "earlier": [18, 19], "might": [18, 19, 116, 120, 123, 131, 133, 134, 590, 611], "necessari": [18, 118, 122, 125, 128], "virtualis": 18, "detail": [18, 19, 20, 116, 119, 120, 121, 122, 123, 125, 129, 134, 135, 198, 216, 219, 907, 908, 909, 913, 915], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 72, 73, 85, 86, 198, 233, 236, 590, 602, 603, 604, 605, 702, 710, 715, 743, 745, 781, 783, 993, 1001], "keyr": 18, "fssl": 18, "download": [18, 120], "gpg": 18, "dearmor": 18, "o": [18, 131, 590, 599], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 136, 148], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 26, 27, 28, 29, 30, 31, 32, 67, 68, 69, 72, 73, 87, 88, 105, 106, 113, 114, 116, 118, 126, 127, 129, 131, 134, 135, 136, 148, 198, 199, 200, 202, 205, 207, 233, 234, 236, 238, 241, 243, 244, 261, 263, 269, 276, 306, 315, 316, 325, 327, 328, 331, 332, 335, 336, 350, 590, 599, 653, 658, 662, 666, 668, 670, 702, 703, 704, 705, 706, 707, 708, 709, 715, 772, 774, 803, 809, 812, 821, 824, 842, 847, 850, 867, 868, 869, 873, 878, 879, 885, 886, 889, 902, 905, 907, 909, 910, 912, 913, 971, 993, 994, 995, 996, 997, 998, 999, 1000], "dev": [18, 72, 73, 74, 76, 121, 127, 131, 133, 135, 306, 315, 340], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 125, 148], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 147, 306], "post": [18, 136, 885, 886, 889, 971, 977], "It": [18, 19, 21, 23, 69, 115, 116, 117, 118, 122, 124, 125, 128, 131, 133, 134, 135, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 277, 306, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 602, 603, 605, 608, 612, 613, 614, 616, 619, 622, 630, 643, 646, 647, 664, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 901, 902, 903, 906, 907, 915, 916, 917, 920, 922, 925, 960, 961, 964, 966, 969], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 117, 118, 120, 121, 125, 128, 129, 131, 133, 134, 148], "featur": [18, 116, 129, 134, 971], "vm": 18, "azur": 18, "cloud": [18, 147], "mean": [18, 19, 63, 64, 72, 73, 109, 110, 113, 114, 115, 118, 121, 125, 126, 127, 128, 131, 133, 134, 135, 136, 147, 148, 306, 335, 336, 337, 338, 350, 590, 613, 863, 864, 865, 866, 867, 873, 890, 895, 907, 908, 927, 971, 984], "configur": [18, 19, 21, 72, 73, 126, 306, 349, 867, 880], "defin": [18, 20, 116, 117, 126, 129, 133, 135, 148, 356, 526, 529, 547, 550, 590, 643, 715, 721, 723, 730, 732, 763, 765, 890, 892, 893, 927, 932, 935, 936, 939, 940, 943], "dockerfil": [18, 21], "longer": [18, 126, 128], "worri": 18, "platform": 18, "agnost": [18, 124, 129, 131, 133, 136, 148, 971], "usual": 18, "studio": 18, "favourit": 18, "extens": [18, 19, 117, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 452, 455, 484, 487, 535, 538, 551, 554, 567, 570, 571, 574, 580, 584, 585, 715, 724, 726, 727, 729, 803, 817, 820, 821, 824, 837, 840, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 960, 961, 964], "theme": 18, "too": [18, 19, 148, 356, 370, 373, 526, 529], "done": [18, 19, 118, 120, 134], "unsupport": [18, 126, 269, 290, 291], "old": [18, 72, 73, 128], "slow": 18, "ipad": 18, "long": [18, 19, 118, 702, 712], "browser": 18, "cool": [18, 116], "requisit": 18, "head": [18, 125, 702, 713, 971, 993, 1004], "pane": [18, 19], "readi": [18, 20], "begin": [18, 867, 868, 878], "outlin": [18, 19, 20, 115, 117, 120, 121, 125, 128, 133], "green": [18, 19, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 1018, 1019], "dropdown": 18, "tab": [18, 134, 971], "master": [18, 19, 125], "vs": 18, "view": [18, 19, 69, 198, 216, 219, 702, 705, 709], "log": [18, 19, 37, 38, 83, 84, 121, 125, 128, 131, 134, 198, 230, 231, 356, 496, 499, 504, 507, 715, 762, 971], "built": [18, 132, 198, 199, 200, 306, 993, 1004, 1005, 1006], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 101, 102, 118, 356, 395, 398, 551, 554, 702, 705, 715, 727, 729, 753, 755, 772, 774, 803, 837, 840, 885, 886, 889, 890, 892, 893, 894, 902, 905, 907, 908, 927, 928, 931], "minut": 18, "launch": 18, "12": [18, 101, 102, 118, 125, 356, 395, 398, 415, 418, 427, 430, 551, 554, 590, 608, 626, 664, 666, 669, 715, 727, 729, 753, 755, 772, 774, 803, 821, 824, 829, 832, 837, 840, 885, 886, 889, 890, 892, 893, 894, 902, 906, 907, 908, 927, 928, 931], "output": [18, 72, 73, 115, 116, 117, 118, 120, 121, 124, 125, 127, 128, 129, 131, 133, 135, 136, 148, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 277, 306, 315, 316, 350, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 601, 602, 603, 605, 608, 609, 612, 613, 614, 616, 618, 619, 622, 630, 643, 646, 647, 664, 675, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 867, 880, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 901, 902, 906, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971, 993, 994, 995, 996, 997, 998, 999, 1001, 1002, 1003, 1004], "That": [18, 19, 133, 134, 135, 356, 547, 550], "alreadi": [18, 19, 72, 73, 122, 125, 129, 133, 148, 306, 356, 419, 422, 452, 455, 526, 529, 551, 554, 586, 589, 715, 753, 755, 971], "refer": [18, 19, 120, 121, 126, 129, 148, 198, 213, 214, 356, 448, 451, 496, 499, 664, 666, 669, 671, 673, 715, 778, 780, 784, 786, 927, 948, 951, 956, 959, 960, 961, 964, 966, 969, 993, 1003], "approach": [18, 19, 120, 121, 125, 133, 134, 148], "colour": 18, "applic": [18, 126, 127, 135, 702, 713, 714, 867, 873, 879], "good": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 135], "chanc": 18, "vscode": 18, "show": [18, 19, 72, 73, 118, 128, 147, 148, 971], "explor": [18, 132, 136, 147], "troubleshoot": 18, "sometim": [18, 19], "ever": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "64": [18, 134, 135, 356, 567, 570, 571, 574, 702, 708, 709, 715, 753, 755, 927, 928, 931, 971, 993, 1004], "bit": [18, 118, 121, 125, 133, 269, 288, 289, 292, 356, 399, 402, 403, 406, 411, 414, 927, 944, 947, 952, 955], "usr": 18, "more": [18, 19, 20, 115, 116, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 147, 148, 198, 199, 200, 269, 276, 356, 448, 451, 715, 739, 742, 803, 821, 824, 907, 908, 909, 913, 915, 971], "nutshel": [18, 129], "hook": 18, "lint": 18, "accept": [18, 19, 26, 117, 118, 120, 121, 124, 125, 127, 128, 129, 133, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 452, 455, 512, 515, 516, 519, 535, 538, 547, 550, 551, 554, 567, 570, 571, 574, 580, 584, 585, 590, 618, 702, 705, 714, 715, 716, 719, 724, 726, 727, 729, 803, 817, 820, 821, 824, 837, 840, 885, 886, 889, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 936, 939, 960, 961, 964, 971], "fix": [18, 19], "fail": [18, 20, 119, 120, 131, 133], "attempt": [18, 148], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 117, 118, 120, 121, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 146, 148, 159, 160, 161, 163, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 192, 193, 194, 202, 203, 208, 209, 216, 217, 222, 223, 238, 239, 246, 247, 251, 253, 256, 258, 264, 266, 269, 278, 279, 280, 282, 297, 357, 358, 359, 361, 370, 371, 372, 374, 419, 420, 421, 452, 453, 454, 580, 581, 582, 583, 590, 591, 592, 593, 595, 612, 613, 614, 619, 620, 621, 623, 664, 666, 667, 668, 670, 684, 686, 688, 690, 702, 711, 713, 714, 715, 716, 717, 718, 720, 747, 749, 756, 758, 787, 788, 791, 793, 796, 798, 801, 803, 804, 805, 806, 808, 837, 838, 839, 841, 847, 850, 863, 864, 865, 867, 873, 876, 879, 880, 885, 886, 889, 892, 894, 909, 910, 911, 912, 971, 979, 980, 981, 1007, 1008], "proce": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "modifi": [18, 19, 117, 121, 126, 127, 131], "properli": [18, 115], "enter": [18, 19, 124, 126, 127, 129, 306], "unsur": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "feel": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 971], "server": [19, 971], "appropri": [19, 67, 68, 113, 114, 123, 356, 370, 373, 526, 529, 902, 903], "context": [19, 118, 125, 126, 127, 306, 590, 641, 702, 713, 993, 1004], "suitabl": [19, 116, 125], "quick": [19, 115, 135], "alwai": [19, 20, 72, 73, 116, 117, 121, 122, 124, 125, 128, 129, 131, 133, 148, 269, 275, 356, 370, 373, 526, 529, 590, 634, 664, 680, 682, 697], "correct": [19, 20, 63, 64, 109, 110, 115, 121, 125, 126, 127, 129, 269, 301, 803, 804, 807, 927, 948, 949, 950, 951, 956, 957, 958, 959, 971], "tendenc": 19, "gener": [19, 20, 21, 40, 67, 68, 72, 73, 86, 113, 114, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 147, 148, 195, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 375, 378, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 547, 550, 567, 570, 571, 574, 591, 594, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 680, 682, 715, 727, 729, 803, 817, 820, 837, 840, 890, 891, 892, 893, 896, 898, 900, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 971, 1009, 1013], "land": 19, "end": [19, 125, 128, 130, 147, 148, 198, 199, 200, 356, 387, 390, 971, 977], "world": 19, "come": [19, 20, 135, 146, 971, 977], "fly": 19, "hard": [19, 133], "receiv": [19, 120, 126, 127, 306, 315, 316, 590, 597, 640, 993, 1003], "respons": [19, 21], "internship": 19, "comment": 19, "trigger": 19, "unansw": 19, "label": [19, 131, 132, 136, 787, 788, 791, 793, 796, 798, 801], "respond": 19, "remov": [19, 20, 21, 69, 72, 73, 117, 120, 121, 126, 128, 136, 715, 727, 729, 739, 742, 775, 777, 803, 843, 846, 863, 864, 865], "someon": [19, 148], "els": [19, 20, 69, 116, 121, 122, 128, 131, 133, 135, 136, 148, 590, 600, 611, 615, 867, 877], "strive": [19, 148], "repli": 19, "newli": [19, 128, 195, 196, 269, 275, 590, 601], "place": [19, 72, 73, 115, 116, 117, 118, 120, 121, 125, 127, 129, 136, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 306, 351, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 551, 554, 567, 570, 571, 574, 580, 584, 585, 590, 618, 632, 633, 634, 702, 705, 714, 715, 716, 719, 724, 726, 727, 729, 803, 817, 820, 821, 824, 837, 840, 885, 886, 889, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 960, 961, 964, 1009, 1010, 1011, 1012, 1013, 1014], "bug": [19, 120], "serv": [19, 120, 121, 124, 125, 129, 130, 971], "suspect": 19, "behaviour": [19, 117, 120, 124, 125, 128, 129, 133], "observ": 19, "confid": 19, "noth": [19, 23, 69, 72, 73], "wrong": 19, "someth": [19, 116, 134, 135, 148], "bet": 19, "act": [19, 118, 148], "placehold": [19, 124, 129, 867, 879], "sub": [19, 20, 72, 73, 115, 120, 125, 133, 134, 135, 306, 331, 332, 335, 336, 337, 338, 715, 727, 729, 803, 842, 863, 864, 865, 866, 971], "mark": [19, 120], "ii": [19, 927, 928, 931], "iii": 19, "titl": [19, 971], "issue_numb": 19, "delet": [19, 21, 69], "No": [19, 131], "wait": [19, 72, 73, 74, 75, 76], "progress": [19, 125, 132, 136], "pr": 19, "soon": [19, 125, 146, 148, 971, 977], "partial": [19, 72, 73, 1005, 1006], "solut": [19, 120, 125, 715, 763, 765], "review": [19, 116], "merg": 19, "everi": [19, 20, 21, 118, 119, 120, 121, 122, 123, 125, 128, 129, 131, 133, 135, 198, 221, 222, 225, 590, 591, 594], "shape": [19, 51, 52, 72, 73, 77, 78, 87, 88, 97, 98, 101, 102, 105, 106, 116, 117, 118, 126, 127, 128, 129, 131, 133, 134, 135, 136, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 245, 246, 249, 251, 255, 256, 260, 261, 262, 263, 264, 268, 269, 275, 276, 277, 306, 318, 346, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 602, 603, 605, 608, 612, 613, 614, 616, 619, 622, 627, 630, 643, 646, 647, 653, 664, 666, 668, 670, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 834, 835, 836, 837, 840, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 901, 902, 903, 905, 906, 910, 912, 916, 917, 920, 922, 925, 927, 928, 931, 960, 961, 964, 966, 969, 971, 993, 995, 996, 997, 998, 999, 1000, 1007, 1008], "move": [19, 72, 73, 116, 306, 351], "within": [19, 26, 29, 30, 120, 135, 148, 198, 199, 200, 890, 896, 898], "7": [19, 21, 37, 38, 51, 52, 74, 75, 83, 84, 101, 102, 118, 121, 125, 128, 159, 165, 168, 170, 173, 306, 328, 356, 357, 360, 370, 371, 372, 373, 374, 395, 398, 399, 402, 415, 418, 419, 422, 427, 430, 444, 447, 452, 455, 464, 467, 484, 487, 524, 525, 551, 554, 567, 570, 580, 584, 585, 590, 599, 608, 618, 664, 666, 669, 671, 673, 684, 686, 702, 708, 709, 714, 715, 721, 723, 724, 726, 727, 729, 753, 755, 772, 774, 787, 788, 791, 793, 796, 798, 801, 803, 804, 805, 807, 817, 820, 821, 824, 829, 832, 842, 851, 854, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 898, 902, 906, 907, 908, 927, 928, 931], "dai": 19, "close": [19, 117, 356, 448, 451, 551, 554, 715, 766, 768], "likewis": [19, 117, 121, 125, 126, 129, 134], "freed": 19, "flag": [19, 72, 73, 128, 133, 306, 325, 664, 680, 682], "purpos": [19, 21, 118, 120, 121, 123, 124, 125, 129, 130, 133, 356, 448, 451, 971], "remain": [19, 118, 148, 356, 370, 373, 526, 529, 547, 550, 803, 833, 836, 867, 873], "access": [19, 21, 72, 73, 126], "short": [19, 135, 702, 712], "basi": [19, 119, 134], "situat": [19, 136], "alloc": [19, 148, 198, 251, 255, 256, 260, 269, 275, 306], "upon": [19, 118, 120, 128, 148], "period": 19, "prevent": [19, 128, 133, 664, 666, 669, 671, 673, 684, 686, 927, 952, 955, 1009, 1010, 1011], "unabl": 19, "obvious": 19, "never": [19, 125], "reflect": [19, 124], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 133, 136], "becaus": [19, 117, 120, 121, 122, 124, 126, 127, 128, 129, 131, 135, 136, 148], "inact": 19, "limit": [19, 72, 73, 74, 75, 76, 118, 120, 131, 134, 136, 148, 269, 289, 292, 590, 602, 603, 605, 803, 804, 807], "me": 19, "unfairli": 19, "definit": [19, 121, 126, 133, 715, 716, 719, 721, 723], "investig": 19, "Then": [19, 21, 133, 148], "practic": [19, 120], "separ": [19, 120, 124, 131, 133, 134], "branch": [19, 125, 148, 195, 196, 356, 387, 390], "simpli": [19, 24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 117, 118, 120, 121, 124, 125, 127, 128, 129, 131, 135, 136, 160, 161, 165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 192, 193, 202, 203, 208, 209, 216, 217, 222, 223, 238, 239, 246, 247, 251, 253, 256, 258, 264, 266, 278, 279, 280, 282, 356, 357, 358, 359, 361, 370, 371, 372, 374, 419, 420, 421, 448, 451, 452, 453, 454, 580, 581, 582, 583, 591, 592, 593, 595, 619, 620, 621, 623, 666, 667, 668, 670, 716, 717, 718, 720, 804, 805, 806, 808, 837, 838, 839, 841, 892, 894, 909, 910, 911, 912], "role": [19, 132], "kept": [19, 72, 73, 74, 75, 76, 128, 863, 864, 865], "date": 19, "upstream": [19, 119], "complic": [19, 131], "root": [19, 21, 134, 356, 567, 570, 890, 891, 895], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 927, 944, 947, 952, 955], "clone": [19, 21, 72, 73, 306, 327, 328, 329, 330], "push": [19, 119], "both": [19, 117, 118, 121, 125, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 296, 356, 357, 360, 370, 373, 375, 378, 419, 422, 452, 455, 535, 538, 543, 546, 567, 570, 571, 574, 580, 584, 590, 618, 664, 666, 669, 702, 705, 714, 715, 716, 719, 721, 723, 727, 729, 739, 742, 778, 780, 803, 837, 840, 885, 886, 889, 907, 909, 913, 927, 932, 935, 960, 961, 964], "abort": 19, "tediou": 19, "resolut": 19, "stash": 19, "reinstat": 19, "correspond": [19, 69, 72, 73, 74, 75, 117, 118, 119, 121, 124, 125, 126, 129, 269, 276, 356, 387, 390, 543, 546, 715, 721, 723, 730, 732, 763, 765, 803, 809, 812, 837, 840, 890, 891, 902, 903, 904, 907, 908, 909, 913, 915, 927, 944, 947, 948, 951, 952, 955, 956, 959], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 117, 125, 129, 133], "atlassian": 19, "tutori": 19, "wrote": 19, "piec": [19, 121, 123, 124, 131], "inform": [19, 269, 289, 292, 590, 596, 664, 697], "tag": 19, "usu": 19, "describ": [19, 132, 136, 927, 928, 931, 944, 947, 948, 951, 952, 955], "navig": [19, 115], "blame": 19, "revis": 19, "author": [19, 971], "eg": 19, "16": [19, 47, 48, 83, 84, 101, 102, 118, 134, 356, 580, 581, 583, 584, 702, 708, 715, 716, 717, 719, 727, 729, 753, 755, 892, 894, 902, 906, 927, 928, 931], "5": [19, 21, 37, 38, 39, 40, 47, 48, 51, 52, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 118, 122, 129, 133, 134, 135, 159, 165, 168, 170, 173, 180, 183, 190, 191, 193, 198, 222, 225, 233, 236, 246, 249, 261, 263, 264, 268, 269, 278, 280, 281, 282, 306, 328, 344, 356, 357, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 391, 394, 395, 398, 411, 414, 415, 418, 419, 420, 421, 422, 427, 430, 452, 453, 454, 455, 464, 467, 484, 487, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 583, 584, 585, 590, 591, 592, 599, 608, 618, 619, 622, 623, 653, 658, 664, 666, 668, 669, 670, 702, 705, 707, 708, 714, 715, 716, 717, 719, 721, 723, 724, 726, 727, 729, 736, 738, 753, 755, 772, 774, 775, 777, 787, 798, 801, 803, 804, 805, 806, 807, 808, 809, 812, 817, 820, 821, 824, 829, 832, 833, 836, 837, 839, 840, 841, 842, 851, 854, 885, 886, 889, 890, 891, 892, 893, 894, 901, 902, 904, 905, 906, 907, 908, 909, 913, 916, 917, 920, 927, 928, 931, 932, 935, 960, 961, 964, 993, 1004], "past": 19, "l": [19, 115, 715, 716, 719, 730, 732, 739, 742, 775, 777], "filepath": [19, 72, 73], "grep": 19, "v": [19, 69, 131, 134, 135, 136, 702, 714, 971, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1013, 1015, 1016], "commit_id": 19, "handi": 19, "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 118], "previou": [19, 120, 129, 136, 148, 664, 671, 673, 684, 686], "shown": [19, 67, 68, 72, 73, 113, 114, 118, 129, 131, 133, 148, 356, 395, 398, 415, 418, 427, 430, 551, 554, 585, 715, 724, 726, 803, 817, 820, 821, 824, 907, 908, 916, 917, 920], "whenev": [19, 133, 134], "think": [19, 118], "interact": [19, 971], "gain": [19, 130, 135, 984], "quit": [19, 20, 117, 121, 123, 124], "repeat": [19, 51, 52, 72, 73, 97, 98, 117, 118, 122, 124, 125, 590, 614, 803, 855, 858], "yourself": [19, 20, 147], "simpler": [19, 133], "cannot": [19, 122, 126, 136], "least": [19, 118, 121, 124, 715, 739, 742], "final": [19, 117, 118, 121, 124, 126, 128, 131, 133, 134, 198, 227, 228, 230, 231, 590, 617, 993, 1004], "tickbox": 19, "lower": [19, 72, 73, 118, 131, 148, 198, 213, 214, 251, 255, 356, 524, 715, 716, 719, 890, 896, 898], "corner": 19, "without": [19, 72, 73, 116, 121, 124, 125, 127, 129, 131, 133, 134, 135, 147, 148, 590, 645, 650, 803, 833, 836, 867, 869, 907, 908, 909, 913, 915], "span": 19, "intent": [19, 128], "larg": [19, 134, 356, 370, 373, 526, 529], "discourag": 19, "philosophi": 19, "increment": [19, 590, 633], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 23, 69, 971], "wast": 19, "spot": [19, 121], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 72, 73, 74, 75, 76, 121, 124, 129, 133, 148], "advoc": [19, 148], "individu": [19, 20, 121], "per": [19, 134, 306, 702, 703, 704, 705, 706, 707, 708, 709, 993, 994, 995, 996, 997, 998, 999, 1000], "style": [19, 902, 905], "ve": [19, 130, 133, 890, 891, 971], "were": [19, 72, 73, 116, 120, 125], "actual": [19, 115, 121, 128, 130, 133, 135, 148], "aim": [19, 130], "part": [19, 116, 119, 120, 121, 131, 132, 136, 147, 148, 198, 251, 255, 256, 260, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 1005, 1006], "subsect": 19, "session": [19, 971], "block": [19, 121, 130, 132, 136, 148, 306, 971], "smaller": [19, 131, 136, 803, 804, 807, 837, 840, 927, 944, 947, 952, 955], "edit": 19, "exact": [19, 72, 73, 131, 907, 908], "beauti": 19, "particularli": [19, 134, 148], "concern": [19, 115, 118, 125, 128, 130], "effici": [19, 120, 121, 125, 128, 129, 131, 134, 148], "difficult": [19, 120, 148, 907, 908, 909, 913, 915], "undo": 19, "stress": 19, "frequenc": [19, 590, 617], "pycharm": 19, "pytest": [19, 120], "button": 19, "declar": 19, "insid": [19, 21, 116, 126], "exec": 19, "rm": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "bash": [19, 21], "test_ivi": [19, 120], "test_funct": 19, "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 72, 73, 269, 284, 285, 286, 298, 299, 300, 306, 319, 320, 590, 606, 610, 628, 664, 696, 701], "q": [19, 148, 702, 714, 715, 730, 732, 759, 761], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 702, 703, 704, 705, 706, 707, 708, 709, 993, 994, 995, 996, 997, 998, 999, 1000], "variou": [19, 117, 123, 129, 147], "valu": [19, 23, 51, 52, 59, 60, 69, 72, 73, 74, 75, 76, 97, 98, 118, 120, 121, 125, 126, 127, 128, 129, 131, 133, 136, 148, 198, 199, 200, 213, 214, 221, 222, 225, 227, 228, 230, 231, 269, 275, 284, 285, 286, 306, 318, 349, 350, 356, 357, 360, 362, 365, 370, 373, 375, 378, 383, 386, 419, 422, 436, 439, 440, 443, 452, 455, 456, 459, 460, 463, 464, 467, 480, 483, 484, 487, 524, 525, 526, 529, 535, 538, 539, 542, 543, 546, 551, 554, 585, 586, 589, 590, 602, 603, 605, 606, 611, 617, 618, 619, 622, 628, 631, 635, 645, 646, 647, 648, 649, 650, 663, 664, 666, 669, 671, 673, 675, 684, 686, 697, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 715, 747, 749, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 781, 783, 803, 804, 807, 813, 814, 815, 816, 829, 832, 833, 836, 859, 861, 862, 863, 864, 865, 867, 871, 872, 873, 874, 875, 880, 883, 884, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 900, 902, 903, 904, 906, 907, 908, 909, 911, 913, 914, 915, 916, 917, 920, 922, 925, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 993, 994, 995, 996, 997, 998, 999, 1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013], "cpu": [19, 72, 73, 127, 148, 198, 227, 228, 230, 231, 306, 325, 326, 328, 342, 345, 347, 351, 352, 354, 355, 590, 618, 619, 622, 643, 646, 647, 890, 891, 892, 893, 895, 896, 898, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016], "gpu": [19, 101, 102, 127, 133, 148, 306, 325, 328, 341, 343, 347, 349, 354, 892, 894], "combin": [19, 72, 73, 74, 75, 76, 118, 120, 121, 124, 125, 136, 715, 721, 723], "wherebi": [20, 125, 867, 879], "broad": 20, "distribut": [20, 72, 73, 127, 148, 306, 327, 331, 332, 333, 334, 702, 710, 787, 788, 791, 793, 796, 798, 801, 890, 891, 892, 893, 895, 896, 898, 993, 1001, 1005, 1006], "across": [20, 72, 73, 118, 120, 121, 125, 126, 129, 306, 315, 316, 327, 328, 330, 331, 332, 333, 334, 338, 348, 349, 590, 598, 599, 867, 873, 902, 904], "todo": [20, 120], "commit": [20, 120], "NOT": [20, 356, 512, 515], "static": [20, 70, 71, 72, 73, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 101, 102, 105, 106, 107, 108, 111, 112, 113, 114, 117, 118, 121, 148, 190, 191, 195, 196, 278, 282, 357, 361, 370, 374, 580, 581, 591, 595, 619, 623, 716, 720, 804, 808, 837, 841, 892, 894, 909, 910], "method": [20, 23, 24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 67, 68, 69, 72, 73, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 113, 114, 116, 117, 118, 120, 121, 124, 129, 131, 132, 135, 136, 148, 159, 160, 161, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 192, 193, 194, 198, 202, 203, 208, 209, 216, 217, 219, 222, 223, 238, 239, 246, 247, 251, 253, 256, 258, 264, 266, 278, 279, 280, 282, 356, 357, 358, 359, 361, 370, 371, 372, 374, 375, 378, 395, 398, 415, 418, 419, 420, 421, 422, 427, 430, 452, 453, 454, 455, 464, 467, 484, 487, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 582, 583, 585, 590, 591, 592, 593, 595, 606, 607, 618, 619, 620, 621, 623, 646, 647, 658, 660, 664, 666, 667, 668, 670, 684, 686, 688, 690, 702, 708, 714, 715, 716, 717, 718, 720, 721, 723, 724, 726, 787, 788, 791, 803, 804, 805, 806, 808, 817, 820, 821, 824, 829, 832, 837, 838, 839, 841, 842, 851, 854, 867, 868, 878, 879, 880, 885, 886, 889, 890, 892, 894, 895, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 916, 917, 920, 927, 928, 931, 932, 935, 960, 961, 964, 971, 993, 1004, 1005, 1006], "instanc": [20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 67, 68, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 105, 106, 113, 114, 117, 118, 120, 121, 124, 126, 128, 129, 134, 135, 136, 149, 157, 159, 160, 161, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 192, 193, 194, 198, 199, 200, 202, 203, 205, 207, 208, 209, 211, 213, 214, 216, 217, 219, 221, 222, 223, 225, 227, 228, 230, 231, 233, 236, 238, 239, 243, 244, 246, 247, 249, 251, 253, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 278, 279, 280, 281, 306, 315, 347, 356, 357, 358, 359, 360, 370, 371, 372, 373, 375, 378, 395, 398, 415, 418, 419, 420, 421, 422, 427, 430, 452, 453, 454, 455, 464, 467, 484, 487, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 582, 583, 584, 585, 590, 591, 592, 593, 607, 618, 619, 620, 621, 634, 658, 660, 666, 667, 668, 670, 702, 705, 708, 714, 715, 716, 717, 718, 719, 721, 723, 724, 726, 727, 729, 787, 788, 791, 803, 804, 805, 806, 817, 820, 821, 824, 829, 832, 837, 838, 839, 840, 842, 851, 854, 885, 886, 889, 890, 895, 896, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 916, 917, 920, 927, 928, 931, 932, 935, 960, 961, 964, 982, 983], "revers": [20, 69, 74, 75, 117, 118, 136, 148, 590, 611, 803, 821, 824], "resourc": 20, "content": [20, 21, 72, 73, 128, 131, 134], "thei": [20, 72, 73, 115, 116, 118, 121, 123, 125, 126, 127, 128, 133, 134, 135, 136, 148, 269, 296, 863, 864, 865, 890, 891, 971, 1015, 1016], "hypothesi": 20, "cover": [20, 117, 118, 121, 123, 130], "lambda": [20, 131, 134, 1009, 1012, 1014], "direct": [20, 135, 136, 147, 916, 922, 925], "bind": [20, 125], "special": [20, 74, 75, 116, 117, 118, 124, 129, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 415, 418, 419, 422, 423, 426, 427, 430, 444, 447, 448, 451, 452, 455, 488, 491, 492, 495, 500, 503, 504, 507, 526, 529, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 580, 584, 585, 586, 589, 927, 932, 935, 936, 939, 940, 943, 948, 951, 952, 955, 956, 959], "aforement": 20, "categori": [20, 116, 124, 125, 126, 130, 971], "parent": [20, 133], "arraywithelementwis": [20, 37, 124], "containerwithmanipul": [20, 74, 75, 97], "hint": [20, 116, 117, 121, 124, 128, 129, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 551, 554, 567, 570, 571, 574, 580, 584, 585, 590, 618, 702, 705, 714, 715, 716, 719, 724, 726, 727, 729, 803, 817, 820, 821, 824, 837, 840, 885, 886, 889, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 960, 961, 964], "its": [20, 21, 117, 269, 276, 306, 350, 715, 739, 742, 803, 817, 820, 833, 836, 837, 840, 851, 854], "docstr": [20, 21, 24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 115, 116, 121, 125, 129, 160, 161, 165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 192, 193, 198, 199, 200, 202, 203, 205, 207, 208, 209, 211, 213, 214, 216, 217, 219, 221, 222, 223, 225, 227, 228, 233, 236, 238, 239, 243, 244, 246, 247, 249, 251, 253, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 278, 279, 280, 281, 282, 356, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 395, 398, 415, 418, 419, 420, 421, 422, 427, 430, 452, 453, 454, 455, 484, 487, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 582, 583, 584, 585, 591, 592, 593, 595, 619, 620, 621, 623, 666, 667, 668, 670, 715, 716, 717, 718, 720, 724, 726, 727, 729, 803, 804, 805, 806, 808, 817, 820, 821, 824, 837, 838, 839, 840, 841, 892, 894, 907, 908, 909, 910, 911, 912, 913, 916, 917, 920, 927, 932, 935, 960, 961, 964], "thorough": [20, 117, 120, 129], "transpil": [20, 130, 132, 971, 977], "builder": [21, 146, 148, 971], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 715, 727, 729, 747, 749, 756, 758, 775, 777, 803, 821, 824, 837, 840, 916, 917, 920, 922, 925, 971], "synchron": 21, "rest": [21, 132, 136], "remove_doc": 21, "_": [21, 117, 125, 128, 133, 134, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 375, 378, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 567, 570, 571, 574, 664, 666, 669, 671, 673, 715, 727, 729, 784, 786, 803, 817, 820, 837, 840, 907, 908, 916, 917, 920, 927, 932, 935], "indic": [21, 39, 40, 72, 73, 85, 86, 132, 136, 159, 180, 183, 356, 555, 558, 590, 618, 619, 620, 621, 622, 623, 630, 643, 646, 647, 702, 703, 704, 705, 706, 707, 708, 709, 715, 781, 783, 803, 837, 840, 867, 868, 870, 872, 874, 875, 876, 878, 881, 882, 883, 884, 885, 886, 889, 890, 891, 902, 903, 904, 905, 907, 908, 914, 916, 917, 920, 922, 925, 971, 974, 976, 993, 994, 995, 996, 997, 998, 999, 1000, 1005, 1006], "privat": [21, 1009, 1013], "fulfil": [21, 130, 971], "autogenerated_sourc": 21, "format": [21, 72, 73, 117, 126, 127, 131, 133, 134, 269, 287, 306, 326, 927, 928, 931, 971], "png": [21, 134], "_imag": 21, "lastli": 21, "structur": [21, 72, 73, 74, 75, 76, 116, 121, 124, 125, 134, 135, 590, 606, 867, 880], "rst": 21, "skip": [21, 72, 73, 120, 867, 880], "read": [21, 72, 73, 971], "partial_sourc": 21, "conf": 21, "copi": [21, 31, 32, 72, 73, 77, 78, 117, 122, 126, 131, 133, 134, 147, 148, 198, 202, 203, 204, 205, 206, 216, 219, 269, 275, 306, 351, 590, 607, 659, 660, 803, 833, 836, 867, 869, 916, 922, 925], "create_rst_fil": 21, "filter": [21, 702, 703, 704, 705, 706, 707, 708, 709, 993, 994, 995, 996, 997, 998, 999, 1000], "repres": [21, 133, 198, 233, 236, 269, 288, 356, 366, 369, 370, 373, 379, 382, 391, 394, 427, 430, 526, 529, 563, 566, 585, 702, 711, 715, 762, 763, 765], "overal": [21, 117, 125, 126, 127, 136], "markup": 21, "6": [21, 37, 38, 41, 42, 51, 52, 74, 75, 83, 84, 85, 86, 101, 102, 118, 122, 125, 133, 134, 135, 159, 165, 168, 170, 173, 180, 183, 198, 222, 225, 306, 328, 344, 356, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 395, 398, 399, 402, 415, 418, 419, 420, 421, 422, 427, 430, 452, 455, 464, 467, 484, 487, 524, 525, 531, 534, 551, 554, 567, 570, 571, 574, 580, 584, 585, 590, 599, 608, 618, 619, 622, 623, 653, 658, 664, 666, 667, 669, 702, 705, 708, 709, 714, 715, 721, 723, 724, 726, 727, 729, 753, 755, 766, 768, 772, 774, 787, 788, 791, 798, 801, 803, 804, 805, 807, 809, 812, 817, 820, 821, 824, 829, 832, 833, 836, 837, 840, 842, 851, 854, 885, 886, 889, 890, 891, 892, 893, 894, 902, 903, 906, 907, 908, 909, 913, 927, 928, 931, 932, 935], "extract": [21, 116], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 148], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 72, 73, 120, 131, 134, 356, 403, 406, 715, 727, 729, 739, 742], "append_toctree_to_rst": 21, "9": [21, 37, 38, 41, 42, 51, 52, 74, 75, 83, 84, 87, 88, 101, 102, 118, 134, 135, 356, 370, 371, 372, 373, 374, 395, 398, 399, 402, 524, 525, 551, 554, 567, 570, 571, 574, 590, 618, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 684, 685, 686, 687, 702, 705, 708, 709, 715, 721, 723, 724, 726, 727, 729, 753, 755, 766, 768, 772, 774, 803, 804, 805, 807, 821, 824, 829, 832, 837, 840, 842, 890, 891, 892, 893, 894, 902, 906, 907, 908, 927, 928, 931, 1009, 1010, 1011], "index": [21, 31, 32, 72, 73, 77, 78, 121, 125, 133, 197, 198, 213, 214, 233, 234, 235, 236, 237, 306, 347, 590, 596, 618, 619, 622, 803, 847, 850, 867, 870, 871, 874, 875, 876, 881, 883, 902, 903, 904, 905, 907, 908, 909, 913, 916, 917, 920, 974, 976], "create_index_rst": 21, "14": [21, 101, 102, 118, 125, 356, 415, 418, 664, 666, 669, 702, 714, 715, 727, 729, 753, 755, 892, 894, 907, 908, 927, 928, 931], "\u03c0": [21, 356, 362, 365, 375, 378, 383, 386, 387, 390], "namespac": [21, 116, 126, 131, 136], "helper": [23, 69, 120, 134], "abc": [23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 72, 73, 133, 306, 315, 321, 590, 615, 1005, 1006, 1009, 1013], "inherit": [23, 124, 125, 133], "__delattr__": [23, 69], "self": [23, 69, 72, 73, 124, 125, 131, 133, 134, 135, 136, 160, 161, 162, 165, 166, 167, 170, 171, 172, 175, 176, 177, 180, 181, 182, 185, 186, 187, 190, 192, 193, 202, 203, 204, 208, 209, 210, 216, 217, 218, 222, 223, 224, 233, 234, 235, 238, 239, 240, 246, 247, 248, 251, 253, 254, 256, 258, 259, 264, 266, 267, 278, 279, 280, 306, 357, 358, 359, 362, 363, 364, 366, 367, 368, 370, 371, 372, 375, 376, 377, 379, 380, 381, 383, 384, 385, 387, 388, 389, 391, 392, 393, 395, 396, 397, 399, 400, 401, 403, 404, 405, 407, 408, 409, 411, 412, 413, 415, 416, 417, 419, 420, 421, 423, 424, 425, 427, 428, 429, 431, 432, 433, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 461, 462, 464, 465, 466, 468, 469, 470, 472, 473, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 501, 502, 504, 505, 506, 508, 509, 510, 512, 513, 514, 516, 517, 518, 520, 521, 522, 526, 527, 528, 531, 532, 533, 535, 536, 537, 539, 540, 541, 543, 544, 545, 547, 548, 549, 551, 552, 553, 555, 556, 557, 559, 560, 561, 563, 564, 565, 567, 568, 569, 571, 572, 573, 575, 577, 578, 580, 582, 583, 586, 587, 588, 591, 592, 593, 603, 604, 619, 620, 621, 666, 667, 668, 671, 672, 676, 677, 680, 681, 684, 685, 688, 689, 692, 693, 716, 717, 718, 721, 722, 724, 725, 727, 728, 730, 731, 733, 734, 736, 737, 739, 740, 741, 743, 744, 747, 748, 750, 751, 753, 754, 756, 757, 759, 760, 763, 764, 766, 767, 769, 770, 772, 773, 775, 776, 778, 779, 781, 782, 784, 785, 788, 789, 790, 793, 794, 795, 798, 799, 800, 804, 805, 806, 809, 810, 811, 813, 814, 815, 817, 818, 819, 821, 822, 823, 825, 826, 827, 829, 830, 831, 833, 834, 835, 837, 838, 839, 843, 844, 845, 847, 848, 849, 851, 852, 853, 855, 856, 857, 859, 860, 861, 886, 887, 888, 896, 897, 909, 911, 912, 917, 918, 919, 922, 923, 924, 928, 929, 930, 932, 933, 934, 936, 937, 938, 940, 941, 942, 944, 945, 946, 948, 949, 950, 952, 953, 954, 956, 957, 958, 961, 962, 963, 966, 967, 968, 971, 1009, 1013], "delattr": [23, 69], "__format__": [23, 69], "format_spec": [23, 69], "formatt": [23, 69], "__getattribute__": [23, 69], "getattr": [23, 69], "__init_subclass__": [23, 69], "subclass": [23, 69], "overridden": [23, 69], "extend": [23, 69, 117, 120, 122, 129], "__new__": [23, 69], "accur": [23, 69, 356, 448, 451], "__reduce__": [23, 69], "pickl": [23, 69, 72, 73, 125, 134], "__reduce_ex__": [23, 69], "protocol": [23, 69], "__setattr__": [23, 125], "setattr": 23, "__sizeof__": [23, 69], "size": [23, 69, 72, 73, 74, 75, 76, 133, 134, 198, 227, 228, 230, 231, 306, 348, 349, 350, 590, 646, 652, 702, 714, 715, 727, 729, 743, 745, 753, 755, 759, 761, 766, 768, 778, 780, 803, 817, 820, 837, 840, 842, 843, 846, 890, 891, 895, 896, 898, 902, 903, 905, 960, 961, 964, 966, 969, 993, 994, 995], "memori": [23, 69, 127, 128, 146, 148, 306, 324, 345, 350, 352, 355, 702, 712, 971], "byte": [23, 69], "__str__": [23, 69], "__subclasshook__": [23, 69], "overrid": [23, 69, 590, 643], "issubclass": [23, 69], "invok": [23, 69], "abcmeta": [23, 69], "__subclasscheck__": [23, 69], "true": [23, 24, 25, 33, 34, 39, 40, 47, 48, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 120, 121, 125, 126, 128, 131, 133, 134, 135, 136, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 191, 193, 195, 196, 198, 199, 201, 202, 204, 206, 208, 210, 212, 213, 215, 216, 218, 220, 222, 224, 226, 227, 228, 229, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 246, 248, 250, 251, 252, 254, 256, 257, 259, 261, 262, 264, 265, 267, 269, 275, 278, 279, 280, 281, 282, 306, 325, 342, 346, 347, 356, 357, 359, 361, 362, 364, 366, 368, 370, 372, 374, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 398, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 418, 419, 421, 423, 425, 427, 429, 431, 433, 435, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 463, 464, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 479, 480, 482, 483, 484, 486, 487, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 515, 516, 518, 519, 520, 522, 526, 528, 530, 531, 533, 535, 537, 538, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 576, 578, 580, 581, 583, 586, 588, 590, 591, 592, 593, 594, 595, 598, 599, 600, 601, 603, 604, 608, 615, 617, 619, 621, 623, 629, 630, 637, 652, 658, 660, 663, 664, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 702, 710, 715, 716, 718, 719, 720, 739, 741, 743, 745, 766, 767, 768, 781, 783, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 800, 801, 802, 803, 804, 806, 808, 809, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 839, 841, 842, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 864, 865, 866, 867, 868, 877, 878, 880, 886, 888, 890, 891, 896, 897, 899, 902, 903, 904, 906, 907, 908, 909, 910, 912, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 932, 934, 935, 936, 938, 939, 940, 942, 943, 944, 946, 947, 948, 950, 951, 952, 954, 955, 956, 958, 959, 960, 961, 963, 964, 965, 966, 968, 969, 970, 993, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014], "notimpl": [23, 69], "normal": [23, 69, 134, 803, 847, 850, 885, 886, 889, 890, 895, 1007, 1008], "algorithm": [23, 69, 148, 702, 703, 704, 705, 706, 707, 708, 709, 993, 994, 995, 996, 997, 998, 999, 1000], "outcom": [23, 69], "cach": [23, 69, 120, 121, 306, 324, 590, 601], "arraywithactiv": 24, "gelu": [24, 25, 70, 71, 159, 979], "approxim": [24, 25, 70, 71, 117, 159, 160, 161, 162, 163, 164, 356, 362, 365, 366, 369, 375, 378, 379, 382, 383, 386, 387, 390, 423, 426, 427, 430, 444, 447, 448, 451, 488, 491, 492, 495, 496, 499, 500, 503, 543, 546, 559, 562, 563, 566, 580, 584, 585, 715, 747, 749, 756, 758], "variant": [24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 117, 118, 160, 161, 165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 192, 193, 202, 203, 208, 209, 216, 217, 222, 223, 238, 239, 246, 247, 251, 253, 256, 258, 264, 266, 278, 279, 280, 282, 357, 358, 359, 361, 370, 371, 372, 374, 419, 420, 421, 452, 453, 454, 580, 581, 582, 583, 591, 592, 593, 595, 619, 620, 621, 623, 666, 667, 668, 670, 716, 717, 718, 720, 804, 805, 806, 808, 837, 838, 839, 841, 892, 894, 909, 910, 911, 912], "wrap": [24, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 68, 72, 73, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 114, 115, 117, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 136, 148, 149, 157, 160, 161, 165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 192, 193, 202, 203, 208, 209, 216, 217, 222, 223, 238, 239, 246, 247, 251, 253, 256, 258, 264, 266, 278, 279, 280, 282, 357, 358, 359, 361, 370, 371, 372, 374, 419, 420, 421, 452, 453, 454, 580, 581, 582, 583, 590, 591, 592, 593, 595, 601, 619, 620, 621, 623, 664, 666, 667, 668, 670, 700, 716, 717, 718, 720, 804, 805, 806, 808, 837, 838, 839, 841, 892, 894, 909, 910, 911, 912], "minim": [24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 105, 106, 117, 128, 131, 160, 161, 165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 192, 193, 202, 203, 208, 209, 216, 217, 222, 223, 238, 239, 246, 247, 251, 253, 256, 258, 264, 266, 278, 279, 280, 282, 357, 358, 359, 361, 370, 371, 372, 374, 419, 420, 421, 452, 453, 454, 580, 581, 582, 583, 591, 592, 593, 595, 619, 620, 621, 623, 666, 667, 668, 670, 716, 717, 718, 720, 804, 805, 806, 808, 837, 838, 839, 841, 892, 894, 909, 910, 911, 912], "y": [24, 25, 37, 38, 39, 40, 47, 48, 51, 52, 59, 60, 74, 75, 83, 84, 85, 86, 93, 94, 97, 98, 101, 102, 105, 106, 116, 118, 122, 125, 131, 133, 159, 160, 161, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 192, 193, 194, 198, 221, 222, 225, 233, 236, 243, 244, 246, 249, 264, 268, 269, 275, 306, 326, 340, 344, 349, 356, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 375, 378, 387, 390, 395, 398, 399, 402, 411, 414, 415, 418, 419, 420, 421, 422, 423, 426, 427, 430, 444, 447, 452, 453, 454, 455, 464, 467, 484, 487, 524, 525, 531, 534, 535, 538, 551, 554, 567, 570, 571, 574, 580, 581, 582, 583, 584, 585, 590, 591, 592, 593, 594, 595, 598, 599, 607, 608, 615, 616, 618, 619, 620, 621, 622, 623, 652, 658, 659, 660, 664, 675, 702, 708, 709, 711, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 736, 738, 753, 755, 772, 774, 775, 777, 787, 788, 791, 793, 796, 798, 801, 803, 804, 805, 806, 807, 808, 809, 812, 817, 820, 821, 824, 829, 832, 833, 836, 837, 838, 839, 840, 841, 842, 851, 854, 890, 891, 892, 893, 894, 895, 896, 898, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 916, 917, 920, 927, 928, 931, 932, 935, 948, 951, 952, 955, 960, 961, 964], "185": [24, 25, 160, 161], "046": [24, 25, 160, 161], "leaky_relu": [24, 25, 70, 71, 159, 971], "alpha": [24, 25, 70, 71, 159, 165, 166, 167, 168, 169], "39": [24, 25, 159, 165, 166, 168, 356, 444, 447, 664, 666, 669, 715, 753, 755, 927, 928, 931], "85": [24, 25, 159, 165, 166, 168, 356, 415, 418], "17": [24, 25, 118, 125, 159, 165, 166, 168, 715, 727, 729, 890, 895], "relu": [24, 25, 67, 68, 70, 71, 134, 135, 159, 160, 163, 165, 168, 971], "sigmoid": [24, 25, 70, 71, 131, 134, 135, 159, 971], "269": [24, 25, 159, 175, 176, 178], "731": [24, 25, 159, 175, 176, 178], "881": [24, 25, 159, 175, 176, 178], "softmax": [24, 25, 67, 68, 70, 71, 159, 702, 713, 714, 971], "axi": [24, 25, 47, 48, 49, 50, 51, 52, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 77, 78, 95, 96, 97, 98, 107, 108, 109, 110, 111, 112, 118, 121, 125, 126, 128, 129, 131, 133, 136, 147, 159, 180, 181, 182, 183, 184, 198, 227, 228, 229, 230, 231, 232, 306, 308, 311, 318, 331, 332, 333, 334, 335, 336, 337, 338, 350, 590, 608, 609, 618, 662, 715, 721, 722, 723, 727, 729, 778, 779, 780, 781, 782, 783, 787, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 809, 810, 811, 812, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 829, 830, 831, 832, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 855, 858, 859, 862, 890, 901, 902, 903, 904, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970], "422": [24, 25, 159, 180, 181, 183], "155": [24, 25, 159, 180, 181, 183], "softplu": [24, 25, 70, 71, 159, 971], "3461": [24, 25, 159, 185, 186, 188], "6491": [24, 25, 159, 185, 186, 188], "535": [24, 25, 159, 185, 186, 188], "42": [24, 25, 101, 102, 136, 159, 185, 186, 188, 664, 666, 669, 715, 753, 755, 890, 892, 894, 900, 927, 928, 931], "tanh": [24, 25, 37, 38, 70, 71, 83, 84, 131, 159, 191, 356, 971], "55": [24, 25, 159, 190, 194, 702, 708, 715, 753, 755, 927, 928, 931], "501": [24, 25, 159, 190, 194], "collect": [26, 72, 73, 120, 147, 159, 195, 306, 590, 664, 702, 787, 867, 880, 885, 890, 979, 993, 1007, 1009], "args_to_ivi": 26, "include_deriv": [26, 27, 28, 29, 30, 867, 869, 879], "keyword": [26, 27, 28, 69, 72, 73, 74, 75, 76, 116, 126, 127, 128, 129, 134, 198, 233, 236, 306, 315, 316, 330, 334, 338, 590, 597, 640, 867, 873, 927, 952, 955, 1005, 1006], "variabl": [26, 27, 28, 29, 30, 72, 73, 74, 75, 117, 122, 125, 126, 128, 129, 134, 135, 136, 148, 590, 600, 632, 633, 634, 635, 636, 637, 639, 656, 664, 671, 673, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 697, 700, 702, 713, 715, 763, 765, 863, 864, 865, 866, 885, 886, 889, 971, 982, 983, 984, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "nest": [26, 27, 28, 29, 30, 72, 73, 74, 75, 76, 116, 121, 124, 125, 133, 134, 135, 148, 306, 330, 334, 338, 590, 658, 863, 864, 865, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014], "unchang": [26, 27, 28, 29, 30], "posit": [26, 27, 28, 37, 38, 83, 84, 129, 134, 147, 197, 198, 213, 214, 269, 289, 306, 330, 334, 338, 356, 357, 360, 468, 471, 472, 475, 526, 529, 547, 550, 590, 617, 715, 716, 719, 803, 817, 820, 837, 840, 890, 900, 902, 905, 960, 961, 964, 966, 969, 982, 983], "bool": [26, 27, 28, 29, 30, 33, 34, 72, 73, 113, 114, 118, 125, 126, 128, 136, 195, 196, 198, 221, 269, 275, 278, 279, 281, 284, 285, 286, 287, 290, 293, 294, 295, 305, 306, 325, 326, 341, 350, 353, 356, 395, 398, 399, 402, 407, 410, 415, 418, 436, 439, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 508, 511, 512, 515, 516, 519, 535, 538, 590, 591, 594, 598, 599, 608, 611, 615, 617, 627, 629, 634, 636, 637, 638, 639, 652, 662, 663, 664, 697, 715, 716, 719, 743, 745, 766, 768, 781, 783, 803, 842, 863, 864, 865, 866, 867, 868, 869, 873, 877, 878, 879, 890, 891, 902, 903, 904, 916, 917, 920, 922, 925, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "deriv": [26, 27, 28, 29, 30, 126, 127, 133, 135, 198, 208, 211, 222, 225, 246, 249, 264, 268, 664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 867, 869, 879, 1005, 1009, 1013, 1015], "tupl": [26, 27, 28, 29, 30, 47, 48, 59, 60, 69, 72, 73, 116, 125, 126, 127, 129, 133, 134, 135, 148, 198, 202, 205, 207, 221, 238, 241, 243, 244, 261, 263, 269, 277, 291, 306, 325, 590, 617, 653, 702, 705, 708, 709, 712, 715, 747, 749, 756, 758, 766, 767, 768, 772, 774, 781, 783, 803, 809, 812, 813, 816, 821, 824, 825, 828, 833, 836, 837, 840, 843, 846, 847, 850, 859, 862, 863, 864, 865, 866, 867, 869, 870, 872, 874, 875, 876, 878, 879, 881, 882, 883, 884, 890, 895, 896, 898, 902, 905, 907, 908, 909, 911, 913, 914, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "kei": [26, 27, 28, 69, 72, 73, 74, 75, 76, 125, 134, 306, 318, 590, 596, 606, 702, 713, 714, 863, 864, 865, 867, 870, 876, 880, 982, 983, 993, 1004, 1009, 1013], "word": [26, 27, 28, 198, 199, 200, 890, 896, 898, 982, 983], "args_to_n": [26, 128, 133], "to_ivi": [26, 72, 73, 133, 867, 880], "input": [26, 29, 30, 41, 42, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 149, 157, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 191, 194, 195, 196, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 288, 294, 295, 296, 297, 301, 306, 315, 316, 325, 326, 327, 328, 330, 331, 334, 338, 344, 350, 351, 356, 357, 360, 361, 362, 365, 366, 369, 370, 373, 374, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 581, 584, 585, 586, 589, 590, 591, 594, 595, 596, 598, 599, 600, 602, 603, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 623, 627, 629, 630, 632, 633, 634, 636, 637, 638, 639, 643, 646, 647, 652, 653, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 669, 670, 675, 680, 682, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 808, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 863, 864, 865, 866, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1007, 1008], "leaf": [26, 29, 30, 72, 73, 121, 125, 134, 867, 868, 877, 878], "union": [26, 29, 30, 39, 40, 47, 48, 72, 73, 116, 118, 121, 124, 125, 126, 127, 128, 129, 131, 136, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 195, 196, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 273, 274, 275, 276, 277, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 306, 322, 323, 324, 325, 326, 328, 331, 332, 333, 334, 339, 345, 347, 349, 350, 351, 352, 355, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 591, 594, 598, 599, 602, 603, 605, 608, 609, 612, 613, 614, 616, 617, 618, 619, 620, 622, 627, 629, 630, 632, 633, 634, 643, 646, 647, 652, 653, 658, 659, 660, 662, 663, 664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 697, 699, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 767, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 863, 864, 865, 866, 867, 868, 869, 878, 879, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "nativearrai": [26, 29, 30, 31, 32, 39, 40, 116, 118, 121, 124, 125, 128, 129, 131, 133, 136, 149, 157, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 199, 200, 202, 205, 208, 211, 222, 225, 227, 228, 230, 231, 233, 236, 238, 239, 241, 246, 249, 251, 255, 256, 260, 264, 268, 269, 275, 276, 277, 278, 281, 287, 289, 292, 294, 295, 297, 301, 306, 325, 326, 328, 344, 350, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 591, 592, 594, 598, 599, 602, 603, 605, 607, 608, 609, 612, 613, 614, 616, 617, 618, 619, 620, 622, 627, 629, 630, 632, 633, 634, 643, 646, 647, 652, 653, 658, 659, 660, 662, 663, 664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 697, 699, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 867, 869, 879, 885, 886, 889, 890, 891, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "travers": [26, 29, 30, 72, 73, 125, 131, 133, 867, 879], "lowest": [26, 29, 30, 72, 73, 121, 148, 867, 879, 890, 892, 893], "leav": [26, 29, 30, 72, 73, 74, 75, 117, 118, 120, 121, 125, 126, 128, 129, 134, 135, 803, 847, 850, 867, 868, 869, 877, 878, 879], "to_n": [26, 72, 73], "item": [26, 30, 67, 68, 69, 72, 73, 126, 131, 133, 134, 136, 269, 284, 306, 315, 316, 318, 325, 327, 329, 331, 333, 337, 590, 606, 628, 654, 655, 867, 872, 873, 874, 875, 879, 883, 884, 971, 1005, 1006], "arraywithcr": 31, "asarrai": [31, 32, 77, 78, 128, 198, 702, 703, 907, 909, 913], "dtype": [31, 32, 33, 34, 63, 64, 72, 73, 77, 78, 79, 80, 109, 110, 116, 118, 121, 126, 127, 133, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 226, 227, 228, 229, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 306, 346, 356, 411, 414, 590, 598, 599, 643, 659, 702, 710, 803, 817, 820, 885, 886, 889, 890, 896, 898, 902, 903, 904, 916, 922, 925, 927, 944, 945, 946, 947, 948, 951, 952, 953, 954, 955, 960, 961, 964, 971, 984, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1015, 1016], "empty_lik": [31, 32, 77, 78, 198], "from_dlpack": [31, 32, 77, 78, 198], "full_lik": [31, 32, 77, 78, 198], "fill_valu": [31, 32, 77, 78, 126, 198, 221, 222, 223, 224, 225, 226, 356, 464, 467, 484, 487], "meshgrid": [31, 32, 77, 78, 198], "xy": [31, 32, 77, 78, 198, 233, 234, 235, 236, 237], "ones_lik": [31, 32, 77, 78, 136, 198, 971], "tril": [31, 32, 77, 78, 198], "k": [31, 32, 69, 77, 78, 115, 131, 198, 213, 214, 215, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 590, 598, 702, 714, 715, 739, 742, 759, 761, 763, 765, 766, 768, 769, 771, 775, 777, 890, 895, 896, 898, 902, 905], "triu": [31, 32, 77, 78, 198], "zeros_lik": [31, 32, 77, 78, 198, 803, 804, 807, 971], "creation": [32, 72, 73, 74, 75, 76, 78, 116, 126, 127, 131, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 238, 241, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268], "data_typ": [33, 34, 79, 80, 116, 126, 269, 273, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "arraywithdatatyp": 33, "can_cast": [33, 34, 79, 80, 121, 126, 269, 282], "float32": [33, 34, 79, 80, 118, 126, 269, 273, 274, 278, 279, 280, 281, 282, 290, 885, 886, 889], "float64": [33, 34, 126, 269, 275, 278, 279, 281, 290], "arraywithdevic": [35, 133], "ab": [37, 38, 83, 84, 120, 123, 356, 361, 543, 546, 715, 781, 783, 971], "aco": [37, 38, 83, 84, 356, 971], "acosh": [37, 38, 83, 84, 269, 290, 291, 356, 971], "x2": [37, 38, 39, 40, 47, 48, 72, 73, 83, 84, 85, 86, 93, 94, 118, 129, 269, 301, 306, 344, 356, 370, 371, 372, 373, 374, 387, 388, 389, 390, 395, 396, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 431, 432, 433, 434, 435, 436, 437, 438, 439, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 480, 481, 482, 483, 484, 485, 486, 487, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 535, 536, 537, 538, 543, 544, 545, 546, 547, 548, 549, 550, 575, 576, 577, 578, 579, 590, 591, 592, 593, 594, 595, 702, 707, 715, 721, 722, 723, 739, 740, 741, 742, 753, 754, 755, 763, 764, 765, 772, 773, 774, 778, 779, 780, 902, 906], "z": [37, 38, 39, 40, 74, 75, 83, 84, 85, 86, 118, 122, 125, 131, 133, 306, 340, 356, 370, 371, 372, 373, 374, 395, 398, 415, 418, 464, 467, 484, 487, 524, 525, 590, 598, 599, 618, 619, 620, 621, 623, 652, 715, 721, 723, 787, 788, 791, 793, 796, 803, 804, 807, 902, 903, 927, 928, 931, 932, 935], "asin": [37, 38, 83, 84, 356, 971], "asinh": [37, 38, 83, 84, 356, 971], "atan": [37, 38, 83, 84, 356, 971], "atan2": [37, 38, 83, 84, 356, 971], "atanh": [37, 38, 83, 84, 356, 971], "bitwise_and": [37, 38, 83, 84, 356], "bitwise_invert": [37, 38, 83, 84, 356], "bitwise_left_shift": [37, 38, 83, 84, 356], "bitwise_or": [37, 38, 83, 84, 356], "bitwise_right_shift": [37, 38, 83, 84, 356], "bitwise_xor": [37, 38, 83, 84, 356], "ceil": [37, 38, 83, 84, 198, 199, 200, 356, 971], "cosh": [37, 38, 83, 84, 356, 971], "divid": [37, 38, 72, 73, 83, 84, 118, 124, 356, 456, 459, 590, 654, 803, 842], "equal": [37, 38, 72, 73, 83, 84, 118, 125, 126, 198, 213, 214, 221, 222, 225, 269, 275, 356, 403, 406, 411, 414, 468, 471, 472, 475, 543, 546, 551, 554, 590, 591, 594, 598, 599, 715, 727, 729, 747, 749, 756, 758, 803, 804, 807, 813, 816, 842, 859, 862, 890, 896, 898, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925, 927, 936, 939, 948, 951, 952, 955, 956, 959], "erf": [37, 38, 83, 84, 356], "exp": [37, 38, 83, 84, 356, 448, 451, 504, 507, 971], "expm1": [37, 38, 83, 84, 356], "floor": [37, 38, 83, 84, 356, 411, 414, 590, 616, 971], "floor_divid": [37, 38, 83, 84, 356], "greater": [37, 38, 72, 73, 83, 84, 356, 362, 365, 375, 378, 387, 390, 403, 406, 411, 414, 452, 455, 456, 459, 543, 546, 547, 550, 555, 558, 586, 589, 715, 721, 723, 803, 843, 846, 890, 896, 898], "greater_equ": [37, 38, 83, 84, 356], "isfinit": [37, 38, 83, 84, 356], "isinf": [37, 38, 83, 84, 356], "isnan": [37, 38, 83, 84, 356], "less_equ": [37, 38, 83, 84, 356], "log10": [37, 38, 83, 84, 356], "log1p": [37, 38, 83, 84, 356], "log2": [37, 38, 83, 84, 356], "logaddexp": [37, 38, 83, 84, 356], "logical_and": [37, 38, 83, 84, 356, 971], "logical_not": [37, 38, 83, 84, 356, 971], "logical_or": [37, 38, 83, 84, 356, 971], "logical_xor": [37, 38, 83, 84, 356], "multipli": [37, 38, 83, 84, 118, 122, 124, 356, 590, 608], "neg": [37, 38, 83, 84, 121, 125, 128, 159, 165, 168, 198, 199, 200, 213, 214, 356, 468, 471, 472, 475, 526, 529, 543, 546, 547, 550, 715, 766, 768, 778, 780, 781, 783, 803, 821, 824, 837, 840, 960, 961, 964, 966, 969], "not_equ": [37, 38, 83, 84, 356], "pow": [37, 38, 83, 84, 356], "remaind": [37, 38, 72, 73, 83, 84, 356, 590, 616, 803, 842], "sin": [37, 38, 83, 84, 124, 131, 356, 590, 617, 971], "sinh": [37, 38, 83, 84, 356, 971], "sqrt": [37, 38, 83, 84, 356, 715, 781, 783], "squar": [37, 38, 83, 84, 356, 567, 570, 702, 705, 715, 716, 719, 724, 726, 730, 732, 733, 735, 736, 738, 746, 762, 763, 765, 766, 768], "subtract": [37, 38, 83, 84, 118, 124, 356], "tan": [37, 38, 83, 84, 117, 121, 125, 128, 129, 131, 356, 375, 378, 581, 715, 727, 729, 907, 908, 916, 917, 920, 971], "56": [37, 38, 83, 84, 118, 356, 567, 570, 580, 581, 582, 583, 584, 664, 666, 669, 715, 753, 755, 927, 928, 931], "19": [37, 38, 83, 84, 118, 356, 415, 418, 580, 581, 582, 583, 584, 715, 727, 729], "762": [37, 38, 83, 84, 159, 190, 192, 193, 194, 356, 585], "964": [37, 38, 83, 84, 159, 190, 192, 193, 194, 356, 585], "trunc": [37, 38, 83, 84, 356], "elementwis": [38, 72, 73, 84, 116, 121, 131, 136, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589], "arraywithgener": [39, 133], "all_equ": [39, 40, 85, 86, 590, 595], "equality_matrix": [39, 40, 85, 86, 590, 591, 592, 593, 594, 595], "x1": [39, 40, 83, 84, 85, 86, 118, 129, 269, 301, 306, 344, 356, 370, 373, 374, 387, 390, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 431, 434, 435, 436, 439, 456, 459, 460, 463, 464, 467, 480, 483, 484, 487, 504, 507, 508, 511, 516, 519, 520, 523, 524, 525, 526, 529, 530, 535, 538, 543, 546, 547, 550, 575, 576, 579, 590, 591, 592, 593, 594, 595, 598, 702, 707, 715, 721, 723, 739, 742, 753, 755, 763, 765, 772, 774, 778, 780, 902, 906], "mix": [39, 40, 74, 75, 115, 118, 120, 131, 269, 297, 306, 344, 356, 370, 373, 395, 398, 415, 418, 464, 467, 484, 487, 524, 525, 535, 538, 590, 591, 592, 607, 615, 618, 619, 622, 658, 659, 660, 702, 705, 708, 709, 714, 715, 716, 719, 772, 774, 787, 788, 791, 798, 801, 803, 804, 807, 885, 886, 889, 902, 906, 927, 928, 931, 936, 939], "gather_nd": [39, 40, 72, 73, 85, 86, 590, 623, 971], "arraywithgradi": [41, 133], "adam_step": [41, 42, 87, 88, 664, 670], "mw": [41, 42, 87, 88, 135, 664, 666, 667, 668, 669, 670, 671, 673], "vw": [41, 42, 87, 88, 135, 664, 666, 667, 668, 669, 670, 671, 673], "beta1": [41, 42, 87, 88, 135, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 684, 685, 686, 687, 1009, 1010, 1011], "beta2": [41, 42, 87, 88, 135, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 684, 685, 686, 687, 1009, 1010, 1011], "999": [41, 42, 83, 84, 87, 88, 135, 190, 191, 193, 356, 585, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 684, 685, 686, 687, 1009, 1010, 1011], "epsilon": [41, 42, 49, 50, 53, 54, 87, 88, 95, 96, 99, 100, 121, 125, 128, 135, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 684, 685, 686, 687, 715, 747, 749, 756, 758, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 885, 886, 887, 888, 889, 1007, 1008, 1009, 1010, 1011], "1e": [41, 42, 49, 50, 53, 54, 87, 88, 95, 96, 99, 100, 121, 125, 128, 135, 136, 590, 626, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 684, 685, 686, 687, 715, 766, 768, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 885, 886, 887, 888, 889, 971, 1009, 1010, 1011, 1012, 1014], "07": [41, 42, 49, 50, 87, 88, 95, 96, 135, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 684, 685, 686, 687, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 1009, 1010, 1011], "dcdw": [41, 42, 87, 88, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 684, 685, 686, 687, 688, 689, 690, 691], "adam_step_delta": [41, 42, 87, 88, 664, 666, 667, 668, 669, 670], "639": [41, 42, 664, 666, 667, 669], "11": [41, 42, 74, 75, 83, 84, 101, 102, 118, 125, 356, 370, 372, 373, 374, 395, 398, 551, 554, 590, 608, 618, 666, 667, 715, 727, 729, 753, 755, 787, 798, 801, 803, 821, 824, 829, 832, 890, 892, 893, 894, 902, 906, 907, 908, 927, 928, 931], "32": [41, 42, 134, 159, 165, 168, 356, 415, 418, 666, 667, 702, 705, 708, 715, 753, 755, 902, 906, 927, 928, 931], "63": [41, 42, 93, 94, 356, 567, 570, 666, 667, 715, 716, 718, 719, 720, 753, 755, 927, 928, 931], "00121": [41, 42, 666, 667], "0102": [41, 42, 666, 667], "0397": [41, 42, 666, 667], "gradient": [42, 72, 73, 88, 116, 125, 134, 135, 147, 148, 306, 350, 666, 669, 671, 673, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 697, 698, 699, 700, 701, 863, 864, 865, 866, 971, 1009, 1010, 1011, 1012, 1013, 1014], "arraywithimag": [43, 133], "arraywithlay": 45, "linear_algebra": [47, 48, 93, 94, 116, 133, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 746, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786], "arraywithlinearalgebra": 47, "choleski": [47, 48, 93, 94, 715, 720], "upper": [47, 48, 72, 73, 93, 94, 198, 213, 214, 256, 260, 715, 716, 717, 718, 719, 720, 759, 761, 890, 896, 898], "625": [47, 48, 715, 716, 717, 719], "25": [47, 48, 125, 356, 567, 570, 571, 574, 715, 716, 717, 719, 727, 729, 736, 738, 787, 793, 796, 885, 886, 889, 927, 928, 931], "cross": [47, 48, 74, 75, 715, 787, 788, 791, 793, 796, 798, 801, 971], "det": [47, 48, 74, 75, 715], "diagon": [47, 48, 74, 75, 198, 213, 214, 251, 255, 256, 260, 715, 775, 777], "offset": [47, 48, 53, 54, 99, 100, 715, 727, 728, 729, 775, 776, 777, 885, 886, 887, 888, 889], "axis1": [47, 48, 51, 52, 97, 98, 715, 727, 728, 729, 803, 851, 852, 853, 854], "axis2": [47, 48, 715, 727, 728, 729], "eigh": [47, 48, 74, 75, 715], "namedtupl": [47, 48, 715, 730, 731, 732, 759, 760, 761, 766, 768, 907, 908, 909, 913], "eigvalsh": [47, 48, 74, 75, 715], "inv": [47, 48, 74, 75, 133, 715, 971], "matmul": [47, 48, 93, 94, 116, 122, 131, 715, 766, 768, 971], "matrix_norm": [47, 48, 72, 73, 715], "ord": [47, 48, 72, 73, 715, 743, 744, 745, 781, 782, 783], "fro": [47, 48, 715, 743, 744, 745], "keepdim": [47, 48, 63, 64, 65, 66, 72, 73, 109, 110, 111, 112, 590, 662, 715, 743, 744, 745, 781, 782, 783, 902, 903, 904, 927, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970], "matrix_rank": [47, 48, 74, 75, 715], "rtol": [47, 48, 715, 747, 748, 749, 756, 757, 758], "matrix_transpos": [47, 48, 74, 75, 133, 715], "outer": [47, 48, 74, 75, 715, 863, 864, 865, 866], "pinv": [47, 48, 74, 75, 715, 971], "qr": [47, 48, 74, 75, 715], "reduc": [47, 48, 72, 73, 133, 306, 350, 590, 613, 715, 759, 760, 761, 902, 903, 904, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "solv": [47, 48, 74, 75, 132, 147, 715], "svd": [47, 48, 74, 75, 715, 971], "full_matric": [47, 48, 715, 766, 767, 768], "svdval": [47, 48, 74, 75, 715], "tensordot": [47, 48, 74, 75, 715], "ax": [47, 48, 51, 52, 72, 73, 97, 98, 116, 118, 126, 133, 306, 350, 590, 608, 715, 743, 745, 763, 765, 772, 773, 774, 781, 783, 803, 813, 816, 821, 824, 825, 826, 827, 828, 837, 840, 843, 846, 851, 854, 859, 862, 902, 903, 904, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "trace": [47, 48, 72, 73, 74, 75, 131, 148, 590, 636, 637, 639, 715], "vecdot": [47, 48, 74, 75, 715], "vector_norm": [47, 48, 72, 73, 715], "vector_to_skew_symmetric_matrix": [47, 48, 74, 75, 715, 971], "arraywithloss": 49, "binary_cross_entropi": [49, 50, 95, 96, 787], "pred": [49, 50, 95, 96, 121, 125, 128, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "cross_entropi": [49, 50, 95, 96, 121, 125, 128, 787, 798, 801], "sparse_cross_entropi": [49, 50, 95, 96, 787], "loss": [50, 96, 116, 121, 134, 135, 136, 788, 791, 793, 796, 798, 801, 971], "arraywithmanipul": 51, "clip": [51, 52, 72, 73, 97, 98, 121, 125, 128, 131, 134, 136, 356, 524, 525, 590, 602, 603, 605, 803, 808, 971], "x_min": [51, 52, 72, 73, 97, 98, 131, 136, 803, 804, 805, 806, 807, 808], "x_max": [51, 52, 72, 73, 97, 98, 131, 136, 803, 804, 805, 806, 807, 808], "roll": [51, 52, 97, 98, 125, 129, 803, 804, 805, 841], "concat": [51, 52, 72, 73, 97, 98, 306, 335, 336, 337, 338, 350, 590, 617, 803, 971], "xs": [51, 52, 97, 98, 125, 306, 329, 333, 335, 336, 337, 590, 591, 594, 599, 664, 675, 803, 809, 810, 811, 812], "constant_pad": [51, 52, 97, 98, 803], "pad_width": [51, 52, 97, 98, 803, 813, 814, 815, 816, 859, 860, 861, 862], "expand_dim": [51, 52, 97, 98, 131, 134, 803, 971], "flip": [51, 52, 97, 98, 133, 134, 136, 356, 399, 402, 803, 829, 832, 971], "permute_dim": [51, 52, 97, 98, 803], "reshap": [51, 52, 72, 73, 97, 98, 128, 131, 133, 136, 803, 971], "shift": [51, 52, 97, 98, 118, 129, 356, 403, 406, 411, 414, 803, 837, 838, 839, 840, 841], "squeez": [51, 52, 97, 98, 803, 971], "stack": [51, 52, 72, 73, 97, 98, 131, 198, 251, 255, 256, 260, 715, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 746, 747, 749, 750, 752, 756, 758, 759, 761, 766, 768, 769, 771, 775, 777, 803, 867, 868, 877, 878, 971, 993, 1002], "swapax": [51, 52, 97, 98, 803], "axis0": [51, 52, 97, 98, 803, 851, 852, 853, 854], "tile": [51, 52, 97, 98, 803, 971], "rep": [51, 52, 97, 98, 803, 855, 856, 857, 858], "zero_pad": [51, 52, 97, 98, 803, 971], "arraywithnorm": 53, "layer_norm": [53, 54, 99, 100, 885], "normalized_idx": [53, 54, 99, 100, 885, 886, 887, 888, 889], "05": [53, 54, 99, 100, 306, 664, 666, 669, 885, 886, 887, 888, 889], "scale": [53, 54, 99, 100, 125, 306, 348, 349, 664, 688, 690, 702, 710, 713, 714, 885, 886, 887, 888, 889, 993, 1001, 1004, 1009, 1012], "new_std": [53, 54, 99, 100, 885, 886, 887, 888, 889, 1007, 1008], "norm": [54, 72, 73, 100, 116, 590, 602, 603, 605, 715, 743, 745, 781, 783, 886, 889, 971, 1008, 1009, 1011], "arraywithrandom": [55, 133], "random": [56, 72, 73, 102, 116, 127, 136, 147, 891, 892, 893, 895, 896, 898, 900, 901, 971], "arraywithsearch": 57, "arraywithset": 59, "unique_count": [59, 60, 105, 106, 907, 910], "uc": [59, 60, 909, 911], "count": [59, 60, 118, 134, 306, 344, 715, 778, 780, 803, 821, 824, 907, 908, 909, 911, 913, 960, 961, 964, 966, 969], "arraywithsort": 61, "argsort": [61, 62, 107, 108, 916], "descend": [61, 62, 107, 108, 715, 766, 768, 769, 771, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926], "sort": [62, 72, 73, 74, 75, 76, 108, 116, 715, 730, 732, 766, 768, 769, 771, 917, 920], "arraywithstatist": 63, "einsum": [63, 64, 109, 110, 927], "equat": [63, 64, 109, 110, 715, 763, 765, 927, 928, 929, 930, 931], "max": [63, 64, 72, 73, 109, 110, 269, 289, 292, 356, 524, 590, 602, 603, 605, 613, 646, 647, 715, 747, 749, 756, 758, 927, 1009, 1011], "min": [63, 64, 72, 73, 109, 110, 269, 289, 292, 356, 525, 590, 613, 646, 647, 654, 715, 759, 761, 766, 768, 769, 771, 781, 783, 927], "prod": [63, 64, 72, 73, 109, 110, 118, 126, 590, 613, 927], "std": [63, 64, 109, 110, 118, 890, 895, 907, 908, 927], "sum": [63, 64, 72, 73, 109, 110, 121, 125, 126, 128, 131, 306, 335, 336, 337, 338, 350, 356, 370, 373, 504, 507, 590, 609, 613, 646, 647, 702, 714, 715, 766, 768, 775, 777, 781, 783, 927, 928, 931, 948, 951], "var": [63, 64, 109, 110, 113, 114, 118, 131, 863, 864, 865, 927], "statist": [64, 110, 113, 114, 116, 126, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959], "arraywithutil": 65, "util": [66, 112, 116, 127, 306, 339, 961, 964, 966, 969], "add_ivy_array_instance_method": 67, "cl": [67, 68, 113, 114], "to_ignor": [67, 68, 113, 114, 867, 878], "loop": [67, 68, 113, 114, 122, 148, 863, 864, 865, 866], "_wrap_funct": [67, 68, 113, 114, 121, 123], "toi": [67, 68, 113, 114], "arrayexampl": [67, 68], "hasattr": [67, 68, 113, 114, 133], "empti": [69, 72, 73, 74, 75, 124, 126, 127, 198, 199, 200, 927, 948, 951, 952, 955, 960, 961, 964, 966, 969], "dictionari": [69, 72, 73, 74, 75, 76, 134, 148, 306, 349], "map": [69, 72, 73, 74, 75, 76, 120, 121, 125, 129, 134, 147, 148, 306, 315, 867, 874, 875, 879, 880, 993, 1004], "pair": [69, 356, 387, 390, 702, 714, 715, 721, 723], "via": [69, 116, 125, 126, 127, 128, 131, 133, 134, 147, 867, 868, 877, 878], "__delitem__": 69, "__iter__": 69, "__len__": 69, "len": [69, 133, 136, 198, 233, 236], "__reversed__": 69, "fromkei": 69, "keyerror": 69, "popitem": 69, "lifo": 69, "setdefault": 69, "insert": [69, 803, 817, 820, 867, 872, 902, 903], "lack": 69, "containerwithactiv": [70, 74, 75], "dict_in": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "queue": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 134, 306, 315, 316, 590, 645, 650], "queue_load_s": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "container_combine_method": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "list_join": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "queue_timeout": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 590], "print_limit": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "key_length_limit": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "print_ind": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "print_line_spac": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "ivyh": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "default_key_color": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "keyword_color_dict": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "rebuild_child_contain": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "types_to_iteratively_nest": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "alphabetical_kei": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "containerbas": [70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 125], "key_chain": [70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 160, 162, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 191, 193, 199, 201, 202, 204, 206, 208, 210, 212, 213, 215, 216, 218, 220, 222, 224, 226, 227, 229, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 246, 248, 250, 251, 252, 254, 256, 257, 259, 261, 262, 264, 265, 267, 278, 280, 282, 357, 359, 361, 362, 364, 366, 368, 370, 372, 374, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 576, 578, 580, 581, 583, 586, 588, 591, 593, 595, 603, 604, 619, 621, 623, 671, 672, 674, 676, 677, 679, 680, 681, 683, 684, 685, 687, 688, 689, 691, 692, 693, 695, 716, 718, 720, 739, 741, 788, 790, 792, 793, 795, 797, 798, 800, 802, 804, 806, 808, 809, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 867, 880, 886, 888, 892, 894, 896, 897, 899, 909, 910, 912, 917, 919, 921, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 961, 963, 965, 966, 968, 970], "to_appli": [70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 160, 162, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 191, 193, 199, 201, 202, 204, 206, 208, 210, 212, 213, 215, 216, 218, 220, 222, 224, 226, 227, 229, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 246, 248, 250, 251, 252, 254, 256, 257, 259, 261, 262, 264, 265, 267, 278, 280, 282, 357, 359, 361, 362, 364, 366, 368, 370, 372, 374, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 576, 578, 580, 581, 583, 586, 588, 591, 593, 595, 603, 604, 619, 621, 623, 671, 672, 674, 676, 677, 679, 680, 681, 683, 684, 685, 687, 688, 689, 691, 692, 693, 695, 716, 718, 720, 739, 741, 788, 790, 792, 793, 795, 797, 798, 800, 802, 804, 806, 808, 809, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 867, 880, 886, 888, 896, 897, 899, 909, 910, 912, 917, 919, 921, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 961, 963, 965, 966, 968, 970], "prune_unappli": [70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 160, 162, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 191, 193, 199, 201, 202, 204, 206, 208, 210, 212, 213, 215, 216, 218, 220, 222, 224, 226, 227, 229, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 246, 248, 250, 251, 252, 254, 256, 257, 259, 261, 262, 264, 265, 267, 278, 280, 282, 357, 359, 361, 362, 364, 366, 368, 370, 372, 374, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 576, 578, 580, 581, 583, 586, 588, 591, 593, 595, 603, 604, 619, 621, 623, 671, 672, 674, 676, 677, 679, 680, 681, 683, 684, 685, 687, 688, 689, 691, 692, 693, 695, 716, 718, 720, 739, 741, 788, 790, 792, 793, 795, 797, 798, 800, 802, 804, 806, 808, 809, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 867, 880, 886, 888, 896, 897, 899, 909, 910, 912, 917, 919, 921, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 961, 963, 965, 966, 968, 970], "map_sequ": [70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 160, 162, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 191, 193, 199, 201, 202, 204, 206, 208, 210, 212, 213, 215, 216, 218, 220, 222, 224, 226, 227, 229, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 246, 248, 250, 251, 252, 254, 256, 257, 259, 261, 262, 264, 265, 267, 278, 280, 282, 357, 359, 361, 362, 364, 366, 368, 370, 372, 374, 375, 377, 379, 381, 383, 385, 391, 393, 399, 401, 419, 421, 423, 425, 427, 429, 431, 433, 435, 440, 442, 444, 446, 448, 450, 452, 454, 468, 470, 472, 474, 476, 478, 488, 490, 492, 494, 496, 498, 500, 502, 512, 514, 526, 528, 530, 531, 533, 539, 541, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 576, 578, 580, 581, 583, 586, 588, 591, 593, 595, 603, 604, 619, 621, 623, 671, 672, 674, 676, 677, 679, 680, 681, 683, 684, 685, 687, 688, 689, 691, 692, 693, 695, 716, 718, 720, 788, 790, 792, 793, 795, 797, 798, 800, 802, 804, 806, 808, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 839, 841, 843, 845, 851, 853, 855, 857, 859, 861, 886, 888, 896, 897, 899, 909, 910, 912, 917, 919, 921, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 961, 963, 965, 966, 968, 970], "static_gelu": [70, 71, 160], "static_leaky_relu": [70, 71, 165], "static_relu": [70, 71, 170], "static_sigmoid": [70, 71, 175], "static_softmax": [70, 71, 180], "static_softplu": [70, 71, 185], "static_tanh": [70, 71, 83, 84, 190], "__getitem__": [72, 73, 125], "queri": [72, 73, 125, 126, 133, 306, 339, 349, 702, 713, 714, 993, 1004], "slice": [72, 73, 590, 618, 619, 622, 867, 876], "chain": [72, 73, 124, 125, 135, 136, 148, 863, 864, 865, 867, 880, 1015, 1016], "element": [72, 73, 117, 131, 136, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 199, 200, 221, 222, 225, 251, 255, 256, 260, 306, 329, 333, 337, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 598, 599, 602, 603, 605, 608, 609, 616, 630, 659, 660, 702, 710, 715, 721, 723, 730, 732, 739, 742, 759, 761, 766, 768, 803, 804, 807, 821, 824, 829, 832, 837, 840, 842, 843, 846, 890, 891, 902, 905, 906, 907, 908, 909, 913, 914, 915, 916, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 993, 1001], "represent": [72, 73, 74, 75, 76, 147, 197, 269, 273, 274, 289, 292, 306, 322, 323, 356, 357, 360, 370, 373, 395, 398, 407, 410, 415, 418, 520, 523, 526, 529, 590, 596, 653, 658], "sequenc": [72, 73, 74, 75, 76, 118, 126, 147, 195, 196, 306, 315, 316, 590, 599, 640, 803, 842, 847, 850, 890, 892, 893, 927, 932, 935, 960, 961, 964, 966, 969, 993, 1002, 1007, 1008, 1015, 1016], "multiprocess": [72, 73, 74, 75, 76, 134, 148, 306, 315, 590], "asynchron": [72, 73, 74, 75, 76], "dimens": [72, 73, 74, 75, 76, 118, 131, 134, 159, 180, 183, 198, 251, 255, 256, 260, 306, 337, 590, 612, 613, 614, 617, 627, 643, 662, 702, 703, 704, 705, 706, 707, 708, 709, 712, 715, 716, 719, 721, 723, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 756, 758, 759, 761, 763, 765, 766, 768, 769, 771, 775, 777, 778, 780, 781, 783, 787, 793, 796, 798, 801, 803, 809, 812, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 842, 843, 846, 847, 850, 863, 864, 865, 866, 890, 901, 902, 903, 904, 905, 907, 908, 909, 913, 915, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 993, 994, 995, 996, 997, 998, 999, 1000, 1003, 1004], "arriv": [72, 73, 74, 75, 76], "timeout": [72, 73, 74, 75, 76, 306, 315, 316, 590, 645, 650], "maximum": [72, 73, 74, 75, 76, 118, 131, 134, 136, 306, 330, 334, 338, 350, 356, 590, 602, 603, 605, 617, 664, 684, 686, 803, 804, 807, 867, 879, 902, 903, 927, 932, 935, 940, 943, 971], "length": [72, 73, 74, 75, 76, 134, 198, 199, 200, 233, 236, 715, 766, 768, 769, 771, 803, 833, 836], "whitespac": [72, 73, 74, 75, 76], "indent": [72, 73, 74, 75, 76, 134], "extra": [72, 73, 74, 75, 76, 118, 123, 124, 131, 664, 675], "newlin": [72, 73, 74, 75, 76, 117], "handl": [72, 73, 74, 75, 76, 115, 120, 121, 123, 125, 126, 127, 128, 129, 135, 148, 195, 196, 306, 322, 323, 324, 325, 326, 340, 344, 345, 352, 355, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 1009, 1010, 1011, 1012, 1013, 1014], "result": [72, 73, 74, 75, 76, 116, 117, 118, 120, 124, 125, 126, 128, 129, 134, 148, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 277, 297, 306, 315, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 602, 603, 605, 608, 609, 612, 613, 614, 616, 618, 619, 622, 630, 643, 646, 647, 664, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 867, 880, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 901, 902, 903, 904, 906, 907, 908, 915, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969, 971], "color": [72, 73, 74, 75, 76, 1018, 1019], "termcolor": [72, 73, 74, 75, 76], "rebuild": [72, 73, 74, 75, 76], "constructor": [72, 73, 74, 75, 76, 126, 127, 133, 590, 597, 1015, 1016], "param": [72, 73, 74, 75, 76, 85, 86, 131, 136, 590, 596, 618, 619, 622, 623], "alphabet": [72, 73, 74, 75, 76], "preserv": [72, 73, 74, 75, 76, 136, 148, 664, 697, 803, 821, 824], "__setitem__": [72, 73, 124, 125, 133], "val": [72, 73, 128, 133, 590, 632, 633, 634, 648, 649], "after": [72, 73, 118, 125, 126, 130, 269, 301, 356, 567, 570, 664, 671, 673, 675, 676, 678, 684, 686, 688, 690, 692, 694, 885, 886, 889, 1009, 1010, 1011, 1012, 1013, 1014], "all_fals": [72, 73], "assert_is_bool": [72, 73], "entri": [72, 73, 198, 227, 228, 230, 231, 803, 842, 867, 880], "boolean": [72, 73, 125, 198, 221, 269, 275, 293, 305, 306, 341, 353, 356, 395, 398, 399, 402, 407, 410, 415, 418, 508, 511, 512, 515, 516, 519, 520, 523, 590, 591, 594, 598, 599, 629, 630, 631, 635, 636, 637, 638, 639, 656, 663, 664, 680, 682, 863, 864, 865, 867, 877, 927, 940, 943], "evalu": [72, 73, 125, 356, 444, 447, 448, 451, 488, 491, 492, 495, 496, 499, 500, 503, 531, 534, 555, 558, 571, 574, 867, 868, 877, 878, 960, 961, 964, 966, 969], "assert": [72, 73, 133, 134, 590, 600], "prune": [72, 73, 867, 880, 881, 882], "all_key_chain": [72, 73], "include_empti": [72, 73], "all_tru": [72, 73, 125, 134], "arrays_as_list": [72, 73], "intermedi": [72, 73], "as_arrai": [72, 73, 590, 627, 652], "as_bool": [72, 73], "as_on": [72, 73], "ones": [72, 73, 74, 75, 120, 131, 133, 134, 198, 213, 214, 246, 249, 356, 419, 422, 590, 643, 971], "fill": [72, 73, 198, 207, 221, 222, 225, 243, 244, 246, 249, 261, 263, 264, 268, 890, 892, 893], "as_random_uniform": [72, 73], "low": [72, 73, 101, 102, 131, 890, 892, 893, 894, 896, 897, 898, 899], "uniform": [72, 73, 135, 890, 891, 892, 893, 896, 898, 984, 986, 987, 990, 991], "boundari": [72, 73, 890, 896, 898], "interv": [72, 73, 131, 136, 198, 199, 200, 227, 228, 230, 231, 715, 778, 780, 803, 804, 807, 847, 850, 890, 892, 893, 896, 898, 960, 961, 964, 966, 969], "as_vari": [72, 73], "as_zero": [72, 73], "assert_contains_sub_contain": [72, 73], "sub_cont": [72, 73], "except": [72, 73, 117, 124, 128, 133, 148, 269, 277, 590, 600, 611, 634, 661, 715, 756, 758, 803, 809, 812, 847, 850, 902, 905, 960, 961, 964, 966, 969], "diff": [72, 73, 125, 134], "screen": [72, 73, 134], "assert_contains_sub_structur": [72, 73], "check_shap": [72, 73], "assert_ident": [72, 73], "check_typ": [72, 73], "same_arrai": [72, 73, 134], "arrays_equ": [72, 73, 74, 75, 590], "datatyp": [72, 73, 198, 202, 205, 238, 241, 269, 283, 294, 295, 296], "assert_identical_structur": [72, 73], "at_key_chain": [72, 73], "ignore_key_error": [72, 73], "ignore_non": [72, 73], "at_kei": [72, 73], "ignor": [72, 73, 118, 148, 198, 233, 236, 867, 878, 1009, 1013], "substr": [72, 73], "clip_min": [72, 73], "clip_max": [72, 73], "minimum": [72, 73, 131, 136, 306, 356, 357, 360, 590, 625, 626, 648, 649, 654, 655, 803, 804, 807, 902, 904, 927, 932, 935, 940, 943, 971], "config": [72, 73, 134, 867, 880], "duplic": [72, 73, 117, 122, 123, 133, 135], "compar": [72, 73, 120, 134, 590, 591, 594, 598, 599, 907, 908, 909, 913, 915, 916, 917, 920, 922, 925], "container_rightmost": [72, 73], "common_key_chain": [72, 73, 125], "properti": [72, 73, 118, 120, 121, 125, 133, 134, 135, 306, 318, 1005, 1006, 1009, 1010, 1011, 1012, 1014], "contains_sub_contain": [72, 73], "match": [72, 73, 125, 269, 275, 356, 547, 550, 590, 640], "contains_sub_structur": [72, 73], "create_if_abs": [72, 73], "inplac": [72, 73, 87, 88, 115, 118, 123, 124, 129, 133, 135, 590, 600, 631, 634, 635, 656, 664, 671, 672, 673, 674, 676, 677, 678, 679, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 982, 983, 1009, 1010, 1011, 1012, 1013, 1014], "cutoff_at_depth": [72, 73], "depth_cutoff": [72, 73], "cutoff_at_height": [72, 73], "height_cutoff": [72, 73], "deep_copi": [72, 73, 134], "intern": [72, 73, 117, 124, 125, 127, 128, 306, 664, 700, 867, 868, 877, 878, 984, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1015, 1016], "belong": [72, 73, 135], "dev_clon": [72, 73, 306], "dev_dist": [72, 73, 306], "along": [72, 73, 116, 128, 198, 227, 228, 230, 231, 306, 331, 332, 333, 334, 335, 336, 337, 338, 350, 590, 608, 609, 618, 662, 715, 743, 745, 775, 777, 778, 780, 781, 783, 787, 793, 796, 798, 801, 803, 809, 812, 821, 824, 829, 832, 837, 840, 842, 847, 850, 855, 858, 863, 864, 865, 866, 890, 901, 902, 903, 904, 916, 917, 920, 922, 925, 927, 928, 931, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "dev_str": [72, 73], "diff_kei": [72, 73], "detect_key_diff": [72, 73], "detect_value_diff": [72, 73], "detect_shape_diff": [72, 73], "treat": [72, 73, 132, 136, 195, 196], "detect": [72, 73, 129, 134, 135, 867, 868, 878], "container0": [72, 73], "einops_rearrang": [72, 73, 590], "axes_length": [72, 73, 590, 612, 613, 614], "rearrang": [72, 73, 590, 612, 614], "einops_reduc": [72, 73, 590], "reduct": [72, 73, 126, 133, 590, 613, 646, 647, 960, 961, 964, 966, 969, 971], "One": [72, 73, 126, 131, 133, 134, 590, 613, 803, 833, 836, 890, 892, 893], "callabl": [72, 73, 125, 131, 149, 150, 151, 152, 153, 154, 155, 156, 157, 195, 196, 269, 290, 291, 306, 350, 590, 596, 601, 611, 613, 863, 864, 865, 866, 867, 873, 877, 878, 879], "einops_repeat": [72, 73, 590], "find_sub_contain": [72, 73], "sub_cont_to_find": [72, 73], "exsit": [72, 73], "find_sub_structur": [72, 73], "sub_struc_to_find": [72, 73], "flatten_key_chain": [72, 73, 134, 1005, 1006], "__": [72, 73, 118, 134], "above_height": [72, 73, 134], "below_depth": [72, 73, 134], "format_key_chain": [72, 73], "format_fn": [72, 73], "string": [72, 73, 122, 126, 127, 131, 134, 269, 273, 274, 287, 293, 305, 306, 322, 323, 324, 325, 339, 345, 351, 352, 355, 590, 610], "from_disk_as_hdf5": [72, 73, 134], "h5_obj_or_filepath": [72, 73], "slice_obj": [72, 73], "load": [72, 73, 148], "disk": [72, 73, 134], "h5py": [72, 73], "hdf5": [72, 73, 134, 1005, 1006], "h5": [72, 73], "from_disk_as_json": [72, 73, 134], "json_filepath": [72, 73], "json": [72, 73, 134], "dure": [72, 73, 121, 125, 126, 127, 128, 148, 195, 196, 306, 351, 590, 661, 664, 666, 669, 671, 673, 684, 686, 715, 739, 742, 863, 864, 865, 866, 927, 948, 951, 956, 959, 1005, 1006, 1009, 1010, 1011, 1013], "from_disk_as_pickl": [72, 73, 134], "pickle_filepath": [72, 73], "from_flat_list": [72, 73], "flat_list": [72, 73], "hierarchi": [72, 73, 134], "flat": [72, 73, 590, 646, 803, 829, 832], "popul": [72, 73, 126, 127, 131, 890, 891, 927, 948, 951, 956, 959], "from_numpi": [72, 73, 134], "gather": [72, 73, 590, 619, 622], "h5_file_s": [72, 73], "batch": [72, 73, 121, 125, 134, 306, 348, 349, 590, 617, 702, 711, 715, 781, 783, 863, 864, 865, 866, 885, 886, 889, 1007, 1008], "handle_inplac": [72, 73], "prime": [72, 73], "overwritten": [72, 73, 122, 124], "has_kei": [72, 73], "query_kei": [72, 73], "somewher": [72, 73], "has_key_chain": [72, 73], "has_nan": [72, 73, 590], "include_inf": [72, 73, 590, 629, 663], "leafwis": [72, 73], "nan": [72, 73, 116, 117, 197, 269, 275, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 419, 422, 423, 426, 427, 430, 444, 447, 448, 451, 452, 455, 468, 471, 476, 479, 488, 491, 492, 495, 500, 503, 504, 507, 526, 529, 543, 546, 547, 550, 551, 554, 559, 562, 563, 566, 567, 570, 580, 584, 585, 586, 589, 590, 629, 663, 702, 714, 907, 908, 909, 913, 915, 927, 932, 935, 936, 939, 940, 943, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "well": [72, 73, 120, 128, 135, 136, 147, 590, 629, 715, 763, 765], "inf": [72, 73, 197, 590, 629, 663, 715, 781, 783], "wise": [72, 73, 131, 136, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 356, 357, 360, 362, 365, 370, 373, 375, 378, 383, 386, 387, 390, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 431, 434, 436, 439, 440, 443, 456, 459, 460, 463, 464, 467, 480, 483, 484, 487, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 535, 538, 543, 546, 547, 550, 575, 579, 590, 616, 803, 804, 807], "identical_array_shap": [72, 73], "exclus": [72, 73, 87, 88, 121, 125, 136, 198, 199, 200, 590, 608, 636, 637, 639, 664, 680, 681, 682, 683, 890, 892, 893], "identical_config": [72, 73], "identical_structur": [72, 73], "if_exist": [72, 73], "inplace_upd": [72, 73, 128, 590, 982, 983], "key_chains_contain": [72, 73], "sub_str": [72, 73], "join": [72, 73, 803, 809, 812, 847, 850, 971], "list_stack": [72, 73, 134], "dim": [72, 73, 126, 590, 643, 993, 1004], "func": [72, 73, 125, 195, 196, 306, 350, 590, 601, 664, 675, 867, 880], "map_cont": [72, 73], "include_self": [72, 73], "possibi": [72, 73], "matrix": [72, 73, 198, 233, 236, 251, 255, 256, 260, 590, 591, 594, 602, 702, 711, 715, 716, 719, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 739, 742, 743, 745, 746, 747, 749, 750, 752, 756, 758, 759, 761, 763, 765, 766, 768, 769, 771, 775, 777, 784, 786, 993, 1003], "integ": [72, 73, 125, 126, 133, 198, 199, 200, 221, 269, 292, 295, 297, 356, 357, 360, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 452, 455, 456, 459, 520, 523, 543, 546, 547, 550, 551, 554, 586, 589, 715, 746, 778, 780, 781, 783, 803, 842, 890, 892, 893, 900, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "flatten": [72, 73, 590, 617, 715, 753, 755, 781, 783, 803, 829, 832, 837, 840, 902, 903, 904, 907, 908, 909, 913, 915], "broadcast": [72, 73, 116, 117, 118, 125, 126, 159, 160, 163, 165, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 194, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 275, 276, 277, 306, 351, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 471, 472, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 520, 523, 524, 525, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 575, 579, 580, 584, 585, 586, 589, 590, 602, 603, 605, 608, 612, 613, 614, 616, 619, 622, 630, 643, 646, 647, 664, 697, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 719, 721, 723, 724, 726, 727, 729, 733, 735, 736, 738, 739, 742, 743, 745, 747, 749, 750, 752, 753, 755, 756, 758, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 791, 793, 796, 798, 801, 803, 804, 807, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 901, 902, 903, 904, 906, 907, 915, 916, 922, 925, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "max_depth": [72, 73, 306, 310, 313, 320, 330, 334, 338, 590, 628, 867, 879], "multi_map": [72, 73, 125], "map_nest": [72, 73, 83, 84, 93, 94, 97, 98, 387, 389, 395, 397, 403, 405, 407, 409, 411, 413, 415, 417, 436, 438, 456, 458, 460, 462, 464, 466, 480, 482, 484, 486, 504, 506, 508, 510, 516, 518, 520, 522, 535, 537, 543, 545, 547, 549, 739, 741, 809, 811, 847, 849], "leftmost": [72, 73, 867, 880], "multi_map_in_static_method": [72, 73, 125], "fn_name": [72, 73], "num_arrai": [72, 73], "overwrite_at_key_chain": [72, 73], "overwrit": [72, 73, 128, 131, 306, 350], "target_dict": [72, 73], "return_dict": [72, 73], "prune_empti": [72, 73], "keep_non": [72, 73], "prune_key_chain": [72, 73], "key1": [72, 73, 135], "key2": [72, 73], "key3": [72, 73], "prune_key_from_key_chain": [72, 73], "prune_kei": [72, 73], "prune_keys_from_key_chain": [72, 73], "remove_key_length_limit": [72, 73], "remove_print_limit": [72, 73], "reshape_lik": [72, 73], "leading_shap": [72, 73], "return_cont": [72, 73], "restructur": [72, 73], "keep_orig": [72, 73], "transpos": [72, 73, 133, 136, 306, 337, 702, 704, 706, 708, 715, 750, 752, 756, 758, 971, 993, 995, 997, 999], "restructure_key_chain": [72, 73], "keychain_map": [72, 73], "set_at_key_chain": [72, 73], "set_at_kei": [72, 73], "set_framework": [72, 73, 131, 133, 134, 136], "set_ivy_backend": [72, 73], "ivy_backend": [72, 73], "attribut": [72, 73, 117, 125, 126, 132, 133, 134, 135, 269, 289, 290, 291, 292, 306, 346], "show_sub_contain": [72, 73], "sub_cont_or_keychain": [72, 73], "shuffl": [72, 73, 890, 971], "seed_valu": [72, 73, 890, 900], "seed": [72, 73, 74, 75, 890, 971], "shuffle_h5_fil": [72, 73], "dataset": [72, 73, 134, 146, 971], "size_ordered_arrai": [72, 73], "keychain": [72, 73], "smallest": [72, 73, 269, 289, 292, 356, 419, 422], "largest": [72, 73, 147, 269, 289, 292, 715, 766, 768], "slice_kei": [72, 73], "key_slic": [72, 73], "all_depth": [72, 73], "slice_via_kei": [72, 73], "sort_by_kei": [72, 73], "num_or_size_split": [72, 73, 131, 803, 842], "with_remaind": [72, 73, 803, 842], "constitu": [72, 73, 136], "dimension": [72, 73, 198, 199, 200, 213, 214, 233, 236, 715, 721, 723, 724, 726, 739, 742, 747, 749, 753, 755, 756, 758, 778, 780, 781, 783, 803, 842, 902, 903, 904, 905, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "evenli": [72, 73, 198, 199, 200, 227, 228, 230, 231, 803, 842], "store": [72, 73, 117, 122, 124, 125, 131, 133, 134, 135, 590, 617, 664, 700, 715, 775, 777, 803, 842, 1005, 1006], "stop_gradi": [72, 73, 74, 75, 87, 88, 135, 306, 350, 664, 671, 672, 673, 674, 676, 677, 678, 679, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 863, 864, 865, 866, 971, 1009, 1010, 1011, 1012, 1013, 1014], "preserve_typ": [72, 73, 664, 697], "stop": [72, 73, 77, 78, 131, 148, 198, 199, 200, 201, 227, 228, 229, 230, 231, 232, 306, 321, 350, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 697, 863, 864, 865, 866, 1009, 1010, 1011, 1012, 1013, 1014], "structural_diff": [72, 73], "to_devic": [72, 73, 306, 325], "cuda": [72, 73, 131, 134, 148, 198, 227, 228, 230, 231, 306, 315, 322, 347, 590, 618, 619, 622, 643, 646, 647, 890, 891, 892, 893, 896, 898, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1016], "target": [72, 73, 115, 130, 134, 135, 136, 306, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 971], "to_dict": [72, 73], "to_disk_as_hdf5": [72, 73, 134], "starting_index": [72, 73], "max_batch_s": [72, 73], "w": [72, 73, 87, 88, 131, 134, 135, 590, 599, 664, 666, 669, 671, 673, 674, 676, 678, 679, 684, 686, 687, 688, 690, 691, 692, 694, 695, 702, 703, 704, 705, 706, 707, 708, 709], "later": [72, 73, 590, 601], "to_disk_as_json": [72, 73, 134], "to_disk_as_pickl": [72, 73, 134], "to_flat_list": [72, 73], "to_iter": [72, 73, 125], "leaf_keys_onli": [72, 73], "to_iterator_kei": [72, 73], "to_iterator_valu": [72, 73], "to_json": [72, 73], "to_list": [72, 73, 590, 971], "to_multi_dev": [72, 73], "multidevcontain": [72, 73, 74], "distributedarrai": [72, 73], "to_numpi": [72, 73, 134, 590, 971], "update_backend": [72, 73], "to_raw": [72, 73], "raw": [72, 73, 117], "trim_kei": [72, 73], "max_length": [72, 73], "try_kc": [72, 73], "tri": [72, 73], "arbitrari": [72, 73, 120, 121, 125, 128, 129, 135, 148, 198, 233, 236, 269, 276, 297, 306, 335, 336, 338], "concatten": [72, 73, 306, 335, 336, 337, 338, 350], "unstack": [72, 73, 131, 134, 590, 971], "dim_siz": [72, 73, 306], "update_config": [72, 73], "global_norm": [72, 73, 85, 86, 603, 604], "vector": [72, 73, 147, 198, 233, 236, 590, 603, 605, 702, 711, 715, 721, 723, 730, 732, 739, 742, 753, 755, 766, 768, 769, 771, 778, 780, 781, 783, 784, 786, 993, 1003], "with_default_key_color": [72, 73], "with_entries_as_list": [72, 73], "with_ivy_backend": [72, 73], "with_key_length_limit": [72, 73, 134], "with_print_ind": [72, 73, 134], "with_print_limit": [72, 73, 134], "with_print_line_spac": [72, 73], "containerwithcr": [74, 75, 77], "containerwithdatatyp": [74, 75, 79], "containerwithdevic": [74, 75, 81], "containerwithelementwis": [74, 75, 83, 125], "containerwithgener": [74, 75, 85], "containerwithgradi": [74, 75, 87], "containerwithimag": [74, 75, 89], "containerwithlay": [74, 75, 91], "containerwithlinearalgebra": [74, 75, 93], "containerwithloss": [74, 75, 95], "containerwithnorm": [74, 75, 99], "containerwithrandom": [74, 75, 101], "containerwithsearch": [74, 75, 103], "containerwithset": [74, 75, 105], "containerwithsort": [74, 75, 107], "containerwithstatist": [74, 75, 109], "containerwithutil": [74, 75, 111], "__add__": [74, 75, 117, 118, 124, 125, 129, 133], "__radd__": [74, 75, 117, 118], "arang": [74, 75, 126, 198, 227, 228, 230, 231, 927, 928, 931, 971], "arg_info": [74, 75, 590], "arg_nam": [74, 75, 590], "argmax": [74, 75, 902, 971], "argmin": [74, 75, 902, 971], "array_equ": [74, 75, 590], "as_ivy_dev": [74, 75, 133, 306], "as_ivy_dtyp": [74, 75, 269], "as_native_dev": [74, 75, 306], "as_native_dtyp": [74, 75, 269], "assert_supports_inplac": [74, 75, 590], "astyp": [74, 75, 126, 128, 269], "broadcast_arrai": [74, 75, 269], "broadcast_to": [74, 75, 126, 269], "cache_fn": [74, 75, 121, 590], "clear_mem_on_dev": [74, 75, 306], "clip_matrix_norm": [74, 75, 590], "closest_valid_dtyp": [74, 75, 269], "container_typ": [74, 75, 590], "conv1d": [74, 75, 702, 993], "conv1d_transpos": [74, 75, 702], "conv2d": [74, 75, 702, 971, 993], "conv2d_transpos": [74, 75, 702], "conv3d": [74, 75, 702, 993], "conv3d_transpos": [74, 75, 702], "copy_arrai": [74, 75, 590], "cumprod": [74, 75, 136, 590], "cumsum": [74, 75, 590, 971], "current_backend_str": [74, 75, 590], "default_devic": [74, 75, 127, 131, 306, 344, 347, 354], "default_dtyp": [74, 75, 121, 126, 269], "default_float_dtyp": [74, 75, 126, 269], "default_int_dtyp": [74, 75, 126, 269], "depthwise_conv2d": [74, 75, 702, 971], "dev_clone_arrai": [74, 75, 306], "dev_clone_it": [74, 75, 306], "dev_clone_nest": [74, 75, 306], "dev_dist_arrai": [74, 75, 306], "dev_dist_it": [74, 75, 306], "dev_dist_nest": [74, 75, 306], "dev_unifi": [74, 75, 306], "dev_unify_arrai": [74, 75, 306], "dev_unify_it": [74, 75, 306], "dev_unify_nest": [74, 75, 306], "dev_util": [74, 75, 127, 306], "dropout": [74, 75, 134, 702, 993, 1004], "dtype_bit": [74, 75, 269], "execute_with_gradi": [74, 75, 125, 134, 135, 136, 148, 664, 971], "ey": [74, 75, 136, 198, 702, 705, 709], "finfo": [74, 75, 269], "floormod": [74, 75, 590, 971], "fourier_encod": [74, 75, 590], "function_supported_dtyp": [74, 75, 269], "function_unsupported_dtyp": [74, 75, 269], "get_all_arrays_in_memori": [74, 75, 590], "get_all_ivy_arrays_on_dev": [74, 75, 127, 306], "get_min_bas": [74, 75, 590], "get_min_denomin": [74, 75, 590], "get_num_dim": [74, 75, 590, 971], "get_referrers_recurs": [74, 75, 590], "gpu_is_avail": [74, 75, 306], "handle_nest": [74, 75, 121, 125, 149], "handle_out_argu": [74, 75, 123, 126, 127, 128, 129, 149], "iinfo": [74, 75, 269], "indices_wher": [74, 75, 590, 971], "infer_devic": [74, 75, 126, 127, 129, 149], "infer_dtyp": [74, 75, 126, 127, 129, 149], "inplace_arrays_support": [74, 75, 590], "inplace_decr": [74, 75, 590], "inplace_incr": [74, 75, 590], "inplace_variables_support": [74, 75, 590], "inputs_to_native_arrai": [74, 75, 124, 149], "invalid_dtyp": [74, 75, 269], "is_float_dtyp": [74, 75, 269], "is_int_dtyp": [74, 75, 269, 590, 660], "is_ivy_contain": [74, 75, 590], "linear": [74, 75, 117, 131, 134, 135, 136, 159, 160, 163, 165, 168, 170, 173, 590, 617, 702, 710, 763, 765, 971, 993, 994, 995, 996, 997, 998, 999, 1000], "linspac": [74, 75, 131, 198, 199, 200, 971], "logspac": [74, 75, 131, 198], "lstm_updat": [74, 75, 131, 702], "match_kwarg": [74, 75, 590], "matrix_pow": [74, 75, 715], "multi_head_attent": [74, 75, 125, 128, 702], "multinomi": [74, 75, 890], "nonzero": [74, 75, 356, 370, 373, 526, 529, 902], "num_arrays_in_memori": [74, 75, 590], "num_cpu_cor": [74, 75, 127, 306], "num_gpu": [74, 75, 120, 127, 306], "num_ivy_arrays_on_dev": [74, 75, 306], "one_hot": [74, 75, 136, 590, 971], "outputs_to_ivy_arrai": [74, 75, 124, 126, 127, 129, 149], "percent_used_mem_on_dev": [74, 75, 306], "print_all_arrays_in_memori": [74, 75, 590], "print_all_ivy_arrays_on_dev": [74, 75, 306], "promote_typ": [74, 75, 269], "randint": [74, 75, 101, 102, 890, 894, 971], "random_norm": [74, 75, 702, 705, 708, 709, 715, 766, 768, 890, 907, 908], "result_typ": [74, 75, 126, 269], "scaled_dot_product_attent": [74, 75, 702], "scatter_flat": [74, 75, 590], "scatter_nd": [74, 75, 133, 590, 971], "set_default_devic": [74, 75, 127, 306, 354], "set_default_dtyp": [74, 75, 121, 126, 269], "set_default_float_dtyp": [74, 75, 126, 269], "set_default_int_dtyp": [74, 75, 126, 269], "set_min_bas": [74, 75, 590], "set_min_denomin": [74, 75, 590], "set_queue_timeout": [74, 75, 590], "set_split_factor": [74, 75, 306], "set_tmp_dir": [74, 75, 590], "set_with_grad": [74, 75, 664], "shape_to_tupl": [74, 75, 126, 590], "slogdet": [74, 75, 715], "split_factor": [74, 75, 306, 315], "split_func_cal": [74, 75, 306], "stable_divid": [74, 75, 121, 590], "stable_pow": [74, 75, 590], "static_aco": [74, 75], "static_acosh": [74, 75], "static_arg_info": [74, 75], "static_arg_nam": [74, 75], "static_argmax": [74, 75], "static_argmin": [74, 75], "static_arrai": [74, 75], "static_array_equ": [74, 75], "static_arrays_equ": [74, 75], "static_as_ivy_dev": [74, 75], "static_as_ivy_dtyp": [74, 75], "static_as_native_dev": [74, 75], "static_as_native_dtyp": [74, 75], "static_asin": [74, 75], "static_asinh": [74, 75], "static_assert_supports_inplac": [74, 75], "static_astyp": [74, 75], "static_atan": [74, 75], "static_atan2": [74, 75], "static_atanh": [74, 75], "static_bitwise_and": [74, 75], "static_bitwise_invert": [74, 75], "static_bitwise_left_shift": [74, 75], "static_bitwise_or": [74, 75], "static_bitwise_right_shift": [74, 75], "static_bitwise_xor": [74, 75], "static_broadcast_arrai": [74, 75], "static_broadcast_to": [74, 75], "static_cache_fn": [74, 75], "static_ceil": [74, 75], "static_clear_mem_on_dev": [74, 75], "static_clip_matrix_norm": [74, 75], "static_clip_vector_norm": [74, 75], "static_closest_valid_dtyp": [74, 75], "static_concat": [74, 75], "static_constant_pad": [74, 75], "static_container_typ": [74, 75], "static_conv1d": [74, 75], "static_conv1d_transpos": [74, 75], "static_conv2d": [74, 75], "static_conv2d_transpos": [74, 75], "static_conv3d": [74, 75], "static_conv3d_transpos": [74, 75], "static_copy_arrai": [74, 75], "static_co": [74, 75], "static_cosh": [74, 75], "static_cross": [74, 75], "static_cumprod": [74, 75], "static_cumsum": [74, 75], "static_current_backend": [74, 75], "static_current_backend_str": [74, 75], "static_default": [74, 75], "static_default_devic": [74, 75], "static_default_dtyp": [74, 75], "static_default_float_dtyp": [74, 75], "static_default_int_dtyp": [74, 75], "static_depthwise_conv2d": [74, 75], "static_det": [74, 75], "static_dev": [74, 75], "static_dev_clon": [74, 75], "static_dev_clone_arrai": [74, 75], "static_dev_clone_it": [74, 75], "static_dev_clone_nest": [74, 75], "static_dev_dist": [74, 75], "static_dev_dist_arrai": [74, 75], "static_dev_dist_it": [74, 75], "static_dev_dist_nest": [74, 75], "static_dev_unifi": [74, 75], "static_dev_unify_arrai": [74, 75], "static_dev_unify_it": [74, 75], "static_dev_unify_nest": [74, 75], "static_dev_util": [74, 75], "static_diagon": [74, 75], "static_dropout": [74, 75], "static_dtyp": [74, 75], "static_dtype_bit": [74, 75], "static_eigh": [74, 75], "static_eigvalsh": [74, 75], "static_einops_rearrang": [74, 75], "static_einops_reduc": [74, 75], "static_einops_repeat": [74, 75], "static_einsum": [74, 75], "static_empti": [74, 75], "static_equ": [74, 75], "static_erf": [74, 75], "static_execute_with_gradi": [74, 75], "static_exist": [74, 75], "static_exp": [74, 75], "static_expand_dim": [74, 75], "static_expm1": [74, 75], "static_finfo": [74, 75], "static_flip": [74, 75], "static_floor": [74, 75], "static_floor_divid": [74, 75], "static_floormod": [74, 75], "static_fourier_encod": [74, 75], "static_ful": [74, 75], "static_function_supported_dtyp": [74, 75], "static_function_unsupported_dtyp": [74, 75], "static_gath": [74, 75], "static_get_all_arrays_in_memori": [74, 75], "static_get_all_ivy_arrays_on_dev": [74, 75], "static_get_min_bas": [74, 75], "static_get_min_denomin": [74, 75], "static_get_num_dim": [74, 75], "static_get_referrers_recurs": [74, 75], "static_gpu_is_avail": [74, 75], "static_great": [74, 75], "static_greater_equ": [74, 75], "static_handle_nest": [74, 75], "static_handle_out_argu": [74, 75], "static_has_nan": [74, 75], "static_iinfo": [74, 75], "static_indices_wher": [74, 75], "static_infer_devic": [74, 75], "static_infer_dtyp": [74, 75], "static_inplace_arrays_support": [74, 75], "static_inplace_decr": [74, 75], "static_inplace_incr": [74, 75], "static_inplace_upd": [74, 75], "static_inplace_variables_support": [74, 75], "static_inputs_to_native_arrai": [74, 75], "static_inv": [74, 75], "static_invalid_dtyp": [74, 75], "static_is_arrai": [74, 75], "static_is_float_dtyp": [74, 75], "static_is_int_dtyp": [74, 75], "static_is_ivy_arrai": [74, 75], "static_is_ivy_contain": [74, 75], "static_is_native_arrai": [74, 75], "static_isfinit": [74, 75], "static_isinf": [74, 75], "static_isnan": [74, 75], "static_layer_norm": [74, 75], "static_less": [74, 75], "static_less_equ": [74, 75], "static_linear": [74, 75], "static_log": [74, 75], "static_log10": [74, 75], "static_log1p": [74, 75], "static_log2": [74, 75], "static_logaddexp": [74, 75], "static_logical_and": [74, 75], "static_logical_not": [74, 75], "static_logical_or": [74, 75], "static_logical_xor": [74, 75], "static_lstm_upd": [74, 75], "static_match_kwarg": [74, 75], "static_matmul": [74, 75], "static_matrix_norm": [74, 75], "static_matrix_pow": [74, 75], "static_matrix_rank": [74, 75], "static_matrix_transpos": [74, 75], "static_max": [74, 75], "static_maximum": [74, 75], "static_mean": [74, 75], "static_min": [74, 75], "static_minimum": [74, 75], "static_multi_head_attent": [74, 75], "static_multinomi": [74, 75], "static_multiprocess": [74, 75], "static_neg": [74, 75], "static_nonzero": [74, 75], "static_not_equ": [74, 75], "static_num_arrays_in_memori": [74, 75], "static_num_cpu_cor": [74, 75], "static_num_gpu": [74, 75], "static_num_ivy_arrays_on_dev": [74, 75], "static_one_hot": [74, 75], "static_out": [74, 75], "static_outputs_to_ivy_arrai": [74, 75], "static_percent_used_mem_on_dev": [74, 75], "static_permute_dim": [74, 75], "static_pinv": [74, 75], "static_posit": [74, 75], "static_pow": [74, 75], "static_print_all_arrays_in_memori": [74, 75], "static_print_all_ivy_arrays_on_dev": [74, 75], "static_prod": [74, 75], "static_promote_typ": [74, 75], "static_qr": [74, 75], "static_queue_timeout": [74, 75], "static_random_norm": [74, 75], "static_remaind": [74, 75], "static_repeat": [74, 75], "static_reshap": [74, 75], "static_result_typ": [74, 75], "static_round": [74, 75], "static_scaled_dot_product_attent": [74, 75], "static_scatter_flat": [74, 75], "static_scatter_nd": [74, 75], "static_se": [74, 75], "static_set_default_devic": [74, 75], "static_set_default_dtyp": [74, 75], "static_set_default_float_dtyp": [74, 75], "static_set_default_int_dtyp": [74, 75], "static_set_min_bas": [74, 75], "static_set_min_denomin": [74, 75], "static_set_queue_timeout": [74, 75], "static_set_split_factor": [74, 75], "static_set_tmp_dir": [74, 75], "static_set_with_grad": [74, 75], "static_shap": [74, 75], "static_shape_to_tupl": [74, 75], "static_shuffl": [74, 75], "static_sign": [74, 75], "static_sin": [74, 75], "static_sinh": [74, 75], "static_slogdet": [74, 75], "static_solv": [74, 75], "static_split": [74, 75], "static_split_factor": [74, 75], "static_split_func_cal": [74, 75], "static_sqrt": [74, 75], "static_squar": [74, 75], "static_squeez": [74, 75], "static_stable_divid": [74, 75], "static_stable_pow": [74, 75], "static_stack": [74, 75], "static_std": [74, 75], "static_stop_gradi": [74, 75], "static_sum": [74, 75], "static_supports_inplac": [74, 75], "static_svd": [74, 75], "static_svdv": [74, 75], "static_swapax": [74, 75], "static_tensordot": [74, 75], "static_til": [74, 75], "static_tmp_dir": [74, 75], "static_to_devic": [74, 75], "static_to_list": [74, 75], "static_to_native_arrays_and_back": [74, 75], "static_to_numpi": [74, 75], "static_to_scalar": [74, 75], "static_total_mem_on_dev": [74, 75], "static_tpu_is_avail": [74, 75], "static_trac": [74, 75], "static_trunc": [74, 75], "static_try_else_non": [74, 75], "static_type_promote_arrai": [74, 75], "static_unique_al": [74, 75], "static_unique_invers": [74, 75], "static_unique_valu": [74, 75], "static_unset_default_devic": [74, 75], "static_unset_default_dtyp": [74, 75], "static_unset_default_float_dtyp": [74, 75], "static_unset_default_int_dtyp": [74, 75], "static_unset_with_grad": [74, 75], "static_unstack": [74, 75], "static_used_mem_on_dev": [74, 75], "static_valid_dtyp": [74, 75], "static_value_is_nan": [74, 75], "static_var": [74, 75], "static_vari": [74, 75], "static_variable_data": [74, 75], "static_vecdot": [74, 75], "static_vector_norm": [74, 75], "static_vector_to_skew_symmetric_matrix": [74, 75], "static_wher": [74, 75], "static_with_grad": [74, 75], "static_zero_pad": [74, 75], "supports_inplac": [74, 75, 590], "tmp_dir": [74, 75, 590], "to_native_arrays_and_back": [74, 75, 123, 129, 149], "to_scalar": [74, 75, 590], "total_mem_on_dev": [74, 75, 127, 306], "tpu_is_avail": [74, 75, 306], "try_else_non": [74, 75, 590], "type_promote_arrai": [74, 75, 269], "unique_al": [74, 75, 907], "unique_invers": [74, 75, 907], "unique_valu": [74, 75, 907], "unset_default_devic": [74, 75, 306], "unset_default_dtyp": [74, 75, 269], "unset_default_float_dtyp": [74, 75, 269], "unset_default_int_dtyp": [74, 75, 269], "unset_with_grad": [74, 75, 664], "used_mem_on_dev": [74, 75, 306], "valid_dtyp": [74, 75, 269], "value_is_nan": [74, 75, 590], "variable_data": [74, 75, 664], "with_grad": [74, 75, 664, 696], "at_dev": [74, 76, 306, 319, 320], "static_arang": [77, 78, 199], "static_asarrai": [77, 78, 202], "static_empty_lik": [77, 78, 208], "static_ey": [77, 78, 213], "n_row": [77, 78, 198, 213, 214, 215], "n_col": [77, 78, 198, 213, 214, 215], "static_from_dlpack": [77, 78, 216], "static_full_lik": [77, 78, 222], "static_linspac": [77, 78, 227], "num": [77, 78, 131, 198, 227, 228, 229, 230, 231, 232], "endpoint": [77, 78, 198, 227, 228, 229, 230, 232], "static_logspac": [77, 78, 230], "static_meshgrid": [77, 78, 233], "static_native_arrai": [77, 78, 238], "static_on": [77, 78, 243], "static_ones_lik": [77, 78, 246], "static_tril": [77, 78, 251], "static_triu": [77, 78, 256], "static_zero": [77, 78, 261], "static_zeros_lik": [77, 78, 264], "int32": [79, 80, 126, 269, 278, 280, 281, 282, 290, 590, 659, 803, 817, 820, 927, 944, 947, 952, 955], "int64": [79, 80, 126, 269, 278, 280, 281, 282, 290, 356, 411, 414, 902, 903, 904, 927, 944, 947, 952, 955], "static_can_cast": [79, 80, 278], "from_": [79, 80, 269, 278, 281, 282], "static_ab": [83, 84, 357], "static_add": [83, 84, 117, 118, 125, 370], "static_divid": [83, 84, 125, 431], "static_multipli": [83, 84, 125, 526], "static_subtract": [83, 84, 125, 575], "static_tan": [83, 84, 118, 125, 580], "143": [83, 84, 118, 356, 580, 581, 583, 584], "38": [83, 84, 118, 356, 580, 581, 583, 584], "76": [83, 84, 190, 191, 356, 427, 430, 664, 666, 669, 715, 772, 774, 927, 928, 931], "96": [83, 84, 190, 191, 356, 580, 584, 664, 666, 669, 715, 753, 755, 927, 928, 931], "995": [83, 84, 190, 191, 193, 356, 585], "9999": [83, 84, 190, 191], "static_all_equ": [85, 86, 591, 593], "clip_vector_norm": [85, 86, 590], "max_norm": [85, 86, 590, 602, 603, 604, 605], "static_gather_nd": [85, 86, 619], "adam_upd": [87, 88, 135, 664], "lr": [87, 88, 134, 135, 664, 671, 672, 673, 674, 676, 677, 678, 679, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 1009, 1010, 1011, 1012, 1013, 1014], "mw_tm1": [87, 88, 664, 671, 672, 673, 674, 684, 685, 686, 687], "vw_tm1": [87, 88, 664, 671, 672, 673, 674, 684, 685, 686, 687], "gradient_descent_upd": [87, 88, 664, 863, 864, 865, 866, 971], "is_vari": [87, 88, 128, 664], "lamb_upd": [87, 88, 664], "max_trust_ratio": [87, 88, 664, 684, 685, 686, 687, 1009, 1011], "decay_lambda": [87, 88, 664, 684, 685, 686, 687, 688, 689, 690, 691, 1009, 1011, 1012], "lars_upd": [87, 88, 664], "optimizer_upd": [87, 88, 664], "effective_grad": [87, 88, 664, 692, 693, 694, 695], "static_adam_step": [87, 88, 666], "87": [87, 88, 101, 102, 664, 666, 669, 670, 892, 894], "976": [87, 88, 356, 585, 664, 666, 669, 670], "static_adam_upd": [87, 88, 671], "static_gradient_descent_upd": [87, 88, 676], "static_is_vari": [87, 88, 680], "static_lamb_upd": [87, 88, 684], "static_lars_upd": [87, 88, 688], "static_optimizer_upd": [87, 88, 692], "73": [93, 94, 356, 567, 570, 715, 716, 718, 719, 720, 885, 886, 889], "577": [93, 94, 715, 716, 718, 719, 720], "41": [93, 94, 133, 356, 415, 418, 567, 570, 715, 716, 718, 719, 720, 927, 952, 955], "707": [93, 94, 715, 716, 718, 719, 720], "static_choleski": [93, 94, 716], "static_rol": [93, 94, 97, 98, 118, 125, 716, 720, 804, 808, 837], "static_binary_cross_entropi": [95, 96, 788], "static_cross_entropi": [95, 96, 793], "static_sparse_cross_entropi": [95, 96, 798], "static_clip": [97, 98, 804], "random_uniform": [101, 102, 127, 135, 890, 971], "static_randint": [101, 102, 892], "20": [101, 102, 133, 356, 415, 418, 444, 447, 551, 554, 567, 570, 715, 727, 729, 753, 755, 772, 774, 890, 892, 893, 894, 902, 905, 906, 927, 928, 931], "40": [101, 102, 356, 427, 430, 567, 570, 715, 753, 755, 892, 894, 927, 928, 931], "62": [101, 102, 892, 894], "52": [101, 102, 664, 666, 669, 715, 753, 755, 892, 894, 907, 908, 927, 928, 931], "95": [101, 102, 664, 666, 669, 892, 894], "37": [101, 102, 356, 580, 584, 885, 886, 889, 892, 894], "13": [101, 102, 118, 125, 356, 395, 398, 415, 418, 427, 430, 567, 570, 590, 608, 664, 666, 669, 702, 714, 715, 727, 729, 753, 755, 885, 886, 889, 892, 894, 902, 906, 907, 908, 927, 928, 931], "static_random_uniform": [101, 102, 896], "static_unique_count": [105, 106, 909], "classivi": [105, 106, 803, 842, 907, 909, 910, 912, 913], "static_argsort": [107, 108, 917], "static_sort": [107, 108, 922], "static_al": [111, 112, 961], "static_ani": [111, 112, 966], "add_ivy_container_instance_method": 113, "containerexampl": [113, 114], "who": [115, 130, 148], "mainli": [115, 132, 134], "under": [115, 117, 118, 119, 120, 121, 125, 130, 131, 134, 136], "hood": [115, 118, 120, 121, 125, 130, 131, 134, 136], "weed": [115, 130], "behind": [115, 130, 132, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694], "tour": 115, "primari": [115, 120, 122, 128, 148], "composit": [115, 120, 122, 124, 125, 128, 131, 135, 136, 148], "nestabl": [115, 117, 118, 120, 128, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 419, 422, 452, 455, 535, 538, 567, 570, 571, 574, 580, 584, 590, 618, 702, 705, 714, 715, 716, 719, 727, 729, 803, 837, 840, 885, 886, 889, 907, 909, 913, 927, 932, 935, 960, 961, 964], "dynam": [115, 126, 127, 128, 131, 195, 196], "runtim": [115, 120, 306], "h": [115, 125, 702, 705, 706, 707, 708, 709], "j": [115, 590, 598, 599, 715, 775, 777, 927, 928, 931], "borrow": 115, "n": [115, 198, 233, 236, 251, 255, 256, 260, 590, 599, 702, 710, 715, 727, 729, 739, 742, 746, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 766, 768, 769, 771, 775, 777, 778, 780, 781, 783, 784, 786, 803, 813, 816, 817, 820, 825, 828, 847, 850, 859, 862, 890, 895, 896, 898, 902, 905, 927, 936, 939, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "taken": [116, 136, 715, 727, 729], "constant": [116, 121, 135, 136, 148, 306, 315, 316, 803, 813, 816, 867, 873, 885, 886, 889, 984, 985, 989, 992, 1005, 1006, 1007, 1008], "compil": [116, 125, 130, 132, 148, 971, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014], "meta": [116, 124, 864, 865, 866], "overlap": 116, "sever": [116, 148, 715, 736, 738], "judgement": 116, "locat": [116, 120, 122, 127, 890, 891], "some_namespac": 116, "some_backend": 116, "another_backend": 116, "break": [116, 129, 133, 148, 971], "anyth": [116, 971], "refactor": 116, "ongo": 116, "subfold": [116, 120], "file_nam": 116, "my_func": [116, 118], "int": [116, 118, 121, 125, 126, 127, 128, 129, 136, 159, 180, 183, 195, 196, 198, 207, 213, 214, 221, 222, 225, 227, 228, 230, 231, 243, 244, 251, 255, 256, 260, 261, 263, 269, 277, 286, 288, 289, 292, 295, 306, 328, 331, 332, 333, 334, 342, 343, 344, 350, 351, 356, 395, 398, 399, 402, 403, 406, 407, 410, 411, 414, 415, 418, 590, 596, 608, 609, 612, 613, 614, 617, 618, 627, 643, 646, 647, 652, 653, 662, 664, 666, 669, 671, 673, 684, 686, 702, 703, 705, 707, 708, 709, 715, 721, 723, 727, 729, 772, 774, 775, 777, 778, 780, 781, 783, 787, 793, 796, 798, 801, 803, 809, 812, 813, 816, 817, 820, 821, 824, 825, 828, 829, 832, 833, 836, 837, 840, 842, 843, 846, 847, 850, 851, 854, 855, 858, 859, 862, 863, 864, 865, 866, 867, 879, 885, 886, 889, 890, 891, 892, 893, 895, 896, 898, 900, 902, 903, 904, 916, 917, 920, 922, 925, 927, 932, 935, 936, 939, 940, 943, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "nativedtyp": [116, 126, 127, 129, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 221, 222, 225, 238, 241, 243, 244, 246, 249, 261, 263, 264, 268, 269, 274, 275, 285, 286, 287, 296, 927, 952, 955], "nativedevic": [116, 126, 127, 129, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 221, 222, 225, 227, 228, 230, 231, 238, 241, 243, 244, 246, 249, 261, 263, 264, 268, 306, 323, 324, 325, 339, 345, 347, 349, 351, 352, 355, 590, 643, 890, 891, 892, 893, 895, 896, 898], "my": 116, "numer": [116, 135, 198, 233, 236, 269, 275, 356, 357, 360, 370, 373, 419, 422, 431, 434, 448, 451, 452, 455, 456, 459, 468, 471, 472, 475, 476, 479, 480, 483, 512, 515, 516, 519, 526, 529, 531, 534, 535, 538, 543, 546, 547, 550, 555, 558, 571, 574, 575, 579, 586, 589, 590, 625, 626, 648, 649, 654, 655, 715, 721, 723, 739, 742, 753, 755, 766, 768, 772, 774, 775, 777, 778, 780, 890, 901, 902, 903, 904, 927, 932, 935, 944, 947, 952, 955, 984], "cooler": 116, "produc": [116, 306, 315, 316, 702, 714], "something_cool": 116, "category_nam": [117, 121, 126, 127, 129], "contrast": [117, 129], "backend_nam": [117, 121, 122, 123, 126, 127, 129], "account": 117, "instanti": 117, "firstli": [117, 118, 121, 124, 126, 128, 134], "templat": [117, 971], "spec": [117, 118], "api_specif": [117, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 375, 378, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 567, 570, 571, 574, 715, 727, 729, 803, 817, 820, 837, 840, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935], "array_api": 117, "preview": 117, "render": 117, "incorrectli": 117, "onlin": [117, 971], "tangent": [117, 159, 190, 194, 356, 383, 386, 387, 390, 391, 394, 580, 584, 585], "domain": [117, 356, 362, 365, 366, 369, 375, 378, 379, 382, 383, 386, 387, 390, 423, 426, 427, 430, 444, 447, 448, 451, 488, 491, 492, 495, 500, 503, 559, 562, 563, 566, 567, 570, 580, 584, 585], "infin": [117, 197, 269, 275, 356, 357, 360, 366, 369, 370, 373, 379, 382, 383, 386, 387, 390, 419, 422, 423, 426, 427, 430, 444, 447, 448, 451, 452, 455, 456, 459, 468, 471, 472, 475, 488, 491, 492, 495, 500, 503, 504, 507, 526, 529, 543, 546, 547, 550, 551, 554, 559, 562, 563, 566, 567, 570, 580, 584, 585, 586, 589, 715, 781, 783, 927, 932, 935, 940, 943, 960, 961, 964, 966, 969], "codomain": [117, 356, 362, 365, 366, 369, 375, 378, 379, 382, 383, 386, 387, 390, 423, 426, 427, 430, 444, 447, 448, 451, 488, 491, 492, 495, 500, 503, 559, 562, 563, 566, 567, 570, 580, 584, 585], "x_i": [117, 356, 357, 360, 362, 365, 366, 369, 375, 378, 379, 382, 383, 386, 399, 402, 419, 422, 423, 426, 427, 430, 444, 447, 448, 451, 452, 455, 468, 471, 472, 475, 476, 479, 488, 491, 492, 495, 500, 503, 512, 515, 531, 534, 551, 554, 555, 558, 559, 562, 563, 566, 567, 570, 571, 574, 580, 584, 585, 586, 589, 907, 908, 909, 913, 915, 927, 932, 935, 936, 939, 940, 943, 948, 951, 952, 955, 956, 959], "assum": [117, 122, 126, 133, 134, 148, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 423, 426, 427, 430, 452, 455, 535, 538, 551, 554, 559, 562, 567, 570, 571, 574, 580, 584, 585, 590, 618, 702, 705, 714, 715, 716, 719, 724, 726, 727, 729, 803, 817, 820, 821, 824, 837, 840, 885, 886, 889, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 960, 961, 964], "express": [117, 131, 136, 356, 362, 365, 375, 378, 383, 386, 387, 390, 423, 426, 559, 562, 580, 584], "radian": [117, 356, 362, 365, 375, 378, 383, 386, 387, 390, 423, 426, 559, 562, 580, 584], "float": [117, 121, 125, 126, 128, 129, 133, 135, 159, 165, 168, 197, 198, 199, 200, 207, 213, 214, 221, 222, 225, 227, 228, 230, 231, 243, 244, 261, 263, 269, 275, 285, 289, 294, 297, 306, 339, 345, 349, 352, 355, 356, 357, 360, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 415, 418, 419, 422, 423, 426, 427, 430, 431, 434, 436, 439, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 480, 483, 488, 491, 492, 495, 500, 503, 504, 507, 526, 529, 531, 534, 535, 538, 539, 542, 543, 546, 547, 550, 551, 554, 559, 562, 563, 566, 567, 570, 575, 579, 580, 584, 585, 586, 589, 590, 602, 603, 605, 617, 625, 626, 648, 649, 654, 655, 664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 705, 709, 714, 715, 716, 719, 724, 726, 730, 732, 733, 735, 736, 738, 747, 749, 756, 758, 759, 761, 763, 765, 766, 768, 781, 783, 787, 788, 791, 793, 796, 798, 801, 863, 864, 865, 866, 885, 886, 889, 890, 895, 896, 898, 907, 908, 909, 913, 915, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959], "operand": [117, 356, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 387, 390, 415, 418, 419, 422, 423, 426, 427, 430, 444, 447, 448, 451, 452, 455, 488, 491, 492, 495, 500, 503, 504, 507, 526, 529, 543, 546, 547, 550, 551, 554, 559, 562, 563, 566, 567, 570, 580, 584, 585, 586, 589, 927, 928, 931, 932, 935, 940, 943, 952, 955], "whose": [117, 198, 251, 255, 256, 260, 356, 366, 369, 379, 382, 391, 394, 423, 426, 427, 430, 543, 546, 559, 562, 563, 566, 580, 584, 585, 590, 601, 715, 716, 719, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 747, 749, 750, 752, 753, 755, 756, 758, 759, 761, 763, 765, 766, 768, 769, 771, 775, 777, 803, 821, 824, 837, 840, 907, 908, 909, 913, 927, 928, 931], "ref": [117, 356, 411, 414, 480, 483, 526, 529, 535, 538, 547, 550, 575, 579, 803, 847, 850], "promot": [117, 121, 126, 269, 275, 278, 281, 296, 297, 301, 356, 362, 365, 366, 369, 370, 373, 375, 378, 379, 382, 383, 386, 391, 394, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 423, 426, 427, 430, 431, 434, 444, 447, 448, 451, 488, 491, 492, 495, 500, 503, 504, 507, 520, 523, 526, 529, 543, 546, 547, 550, 559, 562, 563, 566, 567, 570, 580, 584, 585, 715, 716, 719, 721, 723, 736, 738, 739, 742, 747, 749, 753, 755, 756, 758, 763, 765, 778, 780, 781, 783, 803, 847, 850, 927, 936, 939], "But": [117, 125, 136], "needless": 117, "info": [117, 971], "subset": [117, 120, 129, 131], "renam": 117, "conform": [117, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 448, 451, 452, 455, 484, 487, 535, 538, 551, 554, 567, 570, 571, 574, 580, 584, 585, 715, 724, 726, 727, 729, 803, 817, 820, 821, 824, 837, 840, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 960, 961, 964], "org": [117, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 375, 378, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 567, 570, 571, 574, 664, 666, 669, 671, 673, 715, 727, 729, 803, 817, 820, 837, 840, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935], "elementwise_funct": [117, 356, 357, 360, 375, 378, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 567, 570, 571, 574, 715, 727, 729, 803, 837, 840, 907, 908, 916, 917, 920, 927, 932, 935], "descript": [117, 125, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 551, 554, 567, 570, 571, 574, 580, 584, 585, 590, 618, 702, 705, 714, 715, 716, 719, 724, 726, 727, 729, 781, 783, 803, 817, 820, 821, 824, 837, 840, 885, 886, 889, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935, 960, 961, 964], "simplic": [117, 135, 147, 198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 230, 231, 233, 236, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268, 269, 278, 281, 356, 357, 360, 370, 373, 375, 378, 395, 398, 415, 418, 419, 422, 427, 430, 452, 455, 535, 538, 551, 554, 567, 570, 571, 574, 580, 584, 585, 590, 618, 702, 705, 714, 715, 716, 719, 724, 726, 727, 729, 803, 817, 820, 821, 824, 837, 840, 885, 886, 889, 907, 908, 909, 913, 916, 917, 920, 927, 932, 935], "judgment": 117, "beyond": [117, 803, 837, 840], "text": 117, "func_nam": [117, 118, 121], "pure": [117, 133, 136, 148], "themselv": [117, 121, 125, 126, 127, 135, 867, 868], "operator_nam": 117, "succinct": 117, "contstructor": 117, "though": [117, 121, 126, 134, 148], "forward": [117, 136, 147, 148, 1005, 1006, 1009, 1013], "_forward": [117, 131, 134, 135, 971], "former": 117, "trainabl": [117, 132, 134, 135, 664, 680, 682, 982, 983, 1005, 1006, 1015], "explicitli": [117, 121, 122, 124, 125, 128, 131, 148, 715, 730, 732, 993, 1002, 1004, 1005, 1006], "latter": [117, 122], "implicit": [117, 125, 131], "docst": 117, "eight": 118, "static_": 118, "op_nam": 118, "__r": 118, "four": [118, 121, 126, 129, 134], "__sub__": [118, 124, 125, 129, 133], "__mul__": [118, 124, 125, 129, 133], "__truediv__": [118, 124, 125], "respect": [118, 124, 125, 126, 129, 198, 233, 236, 356, 357, 360, 370, 373, 387, 390, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 431, 434, 436, 439, 456, 459, 460, 463, 464, 467, 480, 483, 484, 487, 504, 507, 508, 511, 516, 519, 520, 523, 526, 529, 535, 538, 547, 550, 575, 579, 664, 666, 669, 671, 673, 675, 676, 678, 684, 686, 688, 690, 692, 694, 715, 759, 761, 863, 864, 865, 866], "recap": [118, 125, 135], "independ": [118, 119, 123, 125, 131, 136, 715, 721, 723, 763, 765, 890, 891], "combinatorili": 118, "variat": [118, 120], "grid": [118, 120, 147, 198, 233, 236], "vari": [118, 120, 125, 133, 907, 908, 909, 913, 915], "simplest": 118, "small": [118, 121, 131, 135, 148, 356, 526, 529, 715, 747, 749, 756, 758, 885, 886, 889, 1007, 1008], "unus": [118, 128, 195, 196], "18": [118, 125, 356, 415, 418, 715, 727, 729, 753, 755, 927, 928, 931], "excess": [118, 122, 133], "showcas": [118, 147], "demonstr": [118, 133], "replic": [118, 126], "meant": 118, "imaginari": 118, "some_flag": 118, "another_flag": 118, "54": [118, 356, 423, 426, 427, 430, 567, 570, 702, 714, 715, 753, 755, 890, 895, 927, 928, 931], "jointli": 118, "three": [118, 125, 130, 198, 233, 236, 971], "x0": [118, 590, 598], "procedur": 118, "sens": [118, 125, 133], "5574077": 118, "1850398": 118, "5463025": 118, "8422884": 118, "91601413": 118, "9647598": 118, "3738229": 118, "1597457": 118, "0963247": 118, "9955841": 118, "3278579": 118, "multi": [118, 125, 130, 148, 702, 713, 715, 721, 723, 971, 977, 993, 1004], "seper": [118, 590, 617], "pars": [118, 148], "satisfi": [118, 715, 784, 786], "far": [118, 127, 132, 133, 867, 868, 878], "asid": [118, 147], "irrelev": [118, 126], "increasingli": 118, "complex": [118, 134, 135, 136, 148, 715, 730, 732, 766, 768], "rule": [118, 120, 121, 124, 125, 126, 269, 275, 278, 281, 297, 356, 391, 394, 411, 414, 431, 434, 526, 529, 547, 550, 715, 716, 719, 721, 723, 753, 755, 763, 765], "14254655": 118, "1578213": 118, "380515": 118, "trivial": 118, "By": [118, 121, 125, 128, 135, 136, 590, 608, 609, 715, 778, 780, 803, 829, 832, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "non": [118, 125, 126, 131, 195, 196, 269, 275, 293, 356, 512, 515, 516, 519, 702, 705, 715, 724, 726, 747, 749, 766, 768, 772, 774, 778, 780, 781, 783, 902, 903, 904, 905, 927, 932, 935, 936, 939, 940, 943, 944, 947, 956, 959, 960, 961, 964, 966, 969, 1005, 1006, 1009, 1013], "dictat": [118, 124, 128, 129], "exlud": 118, "unit": [119, 120, 148, 159, 160, 163, 165, 168, 170, 173, 306], "thoroughli": [119, 120], "ci": [119, 120, 148], "failur": 119, "On": [120, 132, 136], "fixtur": 120, "consum": [120, 125, 129, 306], "300": [120, 356, 551, 554], "hit": [120, 131], "permit": [120, 124, 129], "action": 120, "eleg": 120, "intellig": 120, "sampl": [120, 702, 710, 890, 891, 895, 896, 898, 927, 948, 951, 956, 959, 993, 1001], "rang": [120, 134, 135, 136, 198, 199, 200, 227, 228, 230, 231, 907, 908, 927, 944, 947, 952, 955, 971], "unexplor": 120, "known": 120, "repeatedli": [120, 125, 867, 876], "upload": 120, "artifact": 120, "parametr": 120, "strategi": 120, "statement": [120, 148], "plai": [120, 136], "verifi": [120, 126, 127, 133, 971, 977], "truth": [120, 356, 436, 439, 460, 463, 464, 467, 480, 483, 484, 487, 535, 538], "opt": [120, 122, 128, 133], "defer": [120, 121, 124, 125, 126, 127, 128], "suffic": [120, 123], "catch": [120, 590, 611], "systemat": 120, "safeguard": 120, "inabl": 120, "fact": [120, 134], "categor": [121, 127], "mutual": [121, 125], "constitut": [121, 131, 927, 948, 951, 956, 959], "venn": 121, "diagram": 121, "light": [121, 148], "wherea": [121, 124, 126, 127, 129, 136], "hand": [121, 148], "log_pr": [121, 125, 128], "array_arg": 121, "typic": 121, "whatsoev": [121, 125], "commonli": [121, 927, 948, 951, 956, 959], "outsid": [121, 127, 131, 133, 136, 803, 804, 807, 847, 850], "denomin": [121, 148, 590, 616, 626, 649, 654, 655, 885, 886, 889, 1007, 1008], "divis": [121, 356, 411, 414, 431, 434, 456, 459, 547, 550, 590, 616, 626, 649, 654, 655, 664, 666, 669, 671, 673, 684, 686, 1009, 1010, 1011], "deal": [121, 148], "concurr": [121, 125], "weight": [121, 125, 135, 136, 664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 702, 711, 712, 714, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1005, 1006, 1009, 1011, 1012], "modif": 121, "decor": [121, 123, 125, 126, 127, 128], "group": [121, 125], "briefli": [121, 134], "cast": [121, 126, 269, 275, 278, 281, 803, 809, 812, 927, 944, 947, 952, 955, 971], "get_all_arrays_on_dev": 121, "nested_map": [121, 867], "index_nest": [121, 867], "implicit_backend": 122, "unless": [122, 127, 128, 148, 356, 526, 529, 590, 643], "__dict__": [122, 131, 133], "ivy_original_dict": [122, 131], "unmodifi": [122, 126], "moment": [122, 148, 664, 666, 669, 671, 673, 684, 686, 1009, 1010, 1011], "fallback": 122, "freedom": [122, 927, 948, 951, 956, 959], "recommend": [122, 356, 512, 515, 516, 519, 547, 550, 927, 936, 939], "achiev": [123, 134, 136], "wrapper": [123, 124, 125, 126, 128, 129, 133], "logic": [123, 124, 126, 127, 133, 306, 342, 356, 508, 511, 512, 515, 516, 519, 960, 961, 964, 966, 969, 971], "topic": [123, 133], "tf": [124, 126, 127, 128, 129, 131, 136, 148, 971], "_data": [124, 133], "organiz": [124, 125], "bear": [124, 125, 126], "mind": [124, 125], "necessarili": [124, 125], "although": [124, 125], "underpin": [124, 125, 131], "programmat": [124, 125], "backup": [124, 125], "accident": [124, 125], "readabl": [124, 125, 129, 133, 134], "absent": [124, 125], "perk": [124, 125], "auto": [124, 125, 134], "throw": [124, 133], "imposs": 124, "coupl": [124, 125, 133, 135], "anywai": 124, "secondli": [124, 126], "easier": 124, "five": [125, 134], "decis": [125, 131, 133], "displai": [125, 134], "arbitrarili": [125, 134], "__repr__": 125, "control": [125, 126, 128, 133, 134, 147], "__getattr__": 125, "underli": [125, 356, 395, 398, 407, 410, 415, 418, 520, 523], "__contains__": 125, "__getstate__": 125, "__setstate__": 125, "unpickl": 125, "expand": [125, 590, 617, 803, 817, 820], "children": 125, "shallowest": 125, "deepest": 125, "67": [125, 356, 415, 418, 427, 430], "22": [125, 356, 415, 418, 715, 727, 729, 753, 755, 902, 906, 927, 928, 931], "retain_grad": [125, 664, 675], "dy": [125, 664, 675], "dx": [125, 664, 675], "technic": [125, 128, 129, 148], "autograd": [125, 148], "grad": [125, 134, 135, 136, 971, 1009, 1013], "redund": 125, "num_head": [125, 702, 713, 993, 1004], "mask": [125, 702, 713, 714], "to_q_fn": [125, 702, 713], "to_kv_fn": [125, 702, 713], "to_out_fn": [125, 128, 702, 713], "to_q_v": [125, 702, 713], "to_kv_v": [125, 702, 713], "to_out_v": [125, 702, 713], "measur": [125, 702, 713, 993, 1004], "dot": [125, 702, 713, 714, 715, 772, 774, 778, 780, 993, 1004], "product": [125, 356, 526, 529, 590, 608, 702, 713, 714, 715, 721, 723, 739, 742, 753, 755, 772, 774, 778, 780, 927, 928, 931, 944, 947, 993, 1004], "implicitli": 125, "intuit": [125, 134, 135], "debug": [125, 134], "chronolog": 125, "had": [125, 128], "sequenti": [125, 135], "flow": [125, 147], "implic": 125, "slightli": [125, 131, 135], "eager": [125, 148], "int8": [126, 269, 290], "int16": [126, 269, 278, 281, 290, 927, 944, 947, 952, 955], "uint8": [126, 269, 278, 281, 290], "uint16": [126, 269, 291, 927, 944, 947, 952, 955], "uint32": [126, 269, 291, 927, 944, 947, 952, 955], "uint64": [126, 269, 291, 927, 944, 947, 952, 955], "bfloat16": [126, 269, 290], "float16": [126, 269, 291], "all_dtyp": 126, "all_numeric_dtyp": 126, "all_int_dtyp": 126, "all_float_dtyp": 126, "fall": [126, 130, 971, 1005, 1006, 1009, 1013], "valid": [126, 131, 269, 283, 702, 703, 704, 705, 706, 707, 708, 709, 803, 847, 850, 960, 961, 964, 966, 969, 993, 994, 995, 996, 997, 998, 999, 1000], "invalid": [126, 715, 778, 780, 960, 961, 964, 966, 969], "thirdli": 126, "native_float32": 126, "importantli": [126, 133, 136, 147], "varieti": [126, 127], "conveni": [126, 127, 129, 132, 134, 135], "arguabl": [126, 127], "compound": 126, "overflow": [126, 356, 370, 373, 927, 952, 955], "arr": [126, 127, 885, 886, 889], "scalar": [126, 131, 136, 148, 198, 222, 225, 590, 643, 660, 663, 715, 781, 783], "settabl": [126, 127], "jnp": [126, 127, 128, 129, 136, 971], "jaxarrai": [126, 127, 128, 129], "mx": [126, 127, 128, 971], "nd": [126, 127, 128, 131, 136, 971], "deleg": 126, "as_n": [126, 269, 284, 285, 286, 287, 306, 325, 326, 347], "idx": [127, 133, 590, 596], "tpu": [127, 306, 328, 353], "aliv": [127, 306, 340, 344, 346, 590, 624, 642, 644], "amount": [127, 306, 352, 787, 788, 791, 793, 796, 798, 801], "dual": 127, "thrown": [127, 148, 590, 634], "rare": [127, 148], "program": 128, "strictli": 128, "ration": 128, "speak": 128, "subtli": 128, "ensure_in_backend": [128, 590, 634], "x_nativ": 128, "val_n": 128, "is_ivy_arrai": [128, 133, 590], "assign": [128, 133], "elif": 128, "irrespect": [128, 133, 269, 275], "inclus": [128, 198, 199, 200, 890, 892, 893], "omit": [128, 129, 907, 908, 909, 913, 915], "unspecifi": [128, 356, 543, 546, 547, 550, 715, 730, 732, 803, 847, 850], "predominantli": [128, 147], "math": [128, 136, 971], "presenc": 128, "altern": [128, 134], "_wrap_fn": 128, "maxim": [128, 131], "inner": [128, 133, 715, 730, 732, 739, 742, 863, 864, 865, 866], "third": [128, 148, 715, 766, 768, 907, 908], "addition": [128, 129], "leverag": 128, "equival": [128, 134, 136, 198, 199, 200, 356, 411, 414, 512, 515, 516, 519, 547, 550, 715, 747, 749, 756, 758, 763, 765, 781, 783], "input_arrai": 128, "adress": 129, "revisit": [129, 136], "dedic": [129, 133, 135, 664, 700, 982, 983], "__div__": 129, "dicat": 129, "futher": 129, "absenc": 129, "pep": 129, "484": 129, "annot": 129, "brittl": 129, "intend": [129, 927, 952, 955], "freeli": 129, "inde": [129, 148], "flexibl": 129, "original_typ": 129, "cumbersom": 129, "sound": 130, "higher": [130, 131, 136, 148, 664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694], "overview": [130, 147], "handler": [130, 132, 136, 971], "fledg": [131, 132], "syntact": [131, 136], "clip_by_valu": [131, 136], "clamp": [131, 136], "behavior": [131, 148, 356, 543, 546, 547, 550, 907, 908, 909, 913, 915], "fit": [131, 803, 829, 832], "construct": [131, 132, 135, 136, 803, 855, 858, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016], "power_seq": 131, "okai": 131, "bound": 131, "resid": [131, 135], "edg": [131, 136, 803, 804, 807, 813, 816, 859, 862, 971], "larger": [131, 136, 269, 289, 803, 804, 807, 837, 840, 927, 948, 951, 956, 959], "ml_framework": [131, 136, 198, 199, 200], "current_framework": [131, 136], "furthermor": 131, "concaten": [131, 134, 306, 335, 590, 617, 803, 809, 812, 971], "framework_handl": 131, "face": 131, "verbos": [131, 971, 1019], "cprint": [131, 1018], "framework_stack": 131, "_determine_framework_from_arg": 131, "valueerror": [131, 803, 843, 846], "get_framework": 131, "neither": [131, 356, 370, 373, 526, 529], "illustr": [131, 147], "un": [131, 269, 293], "nn": [131, 136, 198, 233, 236, 971], "init_h": [131, 702, 712], "init_c": [131, 702, 712], "kernel": [131, 148, 702, 712], "recurrent_kernel": [131, 702, 712], "bia": [131, 135, 702, 711, 712, 993, 994, 995, 996, 997, 998, 999, 1000, 1003], "recurrent_bia": [131, 702, 712], "x_shape": 131, "batch_shap": [131, 133, 136, 590, 643, 702, 712, 713, 714, 715, 784, 786, 890, 891, 993, 1002], "timestep": [131, 702, 712, 993, 1002], "input_channel": [131, 135, 993, 994, 995, 996, 997, 998, 999, 1002, 1003], "x_flat": 131, "wi": 131, "wi_x": 131, "wii_x": 131, "wif_x": 131, "wig_x": 131, "wio_x": 131, "recurr": [131, 702, 712], "wh": 131, "lstm": [131, 702, 712, 993], "ht": 131, "ct": 131, "hts_list": 131, "unrol": [131, 134, 702, 712], "wii_xt": 131, "wif_xt": 131, "wig_xt": 131, "wio_xt": 131, "zip": 131, "htm1": 131, "ctm1": 131, "wh_htm1": 131, "whi_htm1": 131, "whf_htm1": 131, "whg_htm1": 131, "who_htm1": 131, "ft": 131, "gt": 131, "ot": 131, "offici": 131, "reliabl": 131, "sacrific": 131, "hear": 131, "virtu": 131, "pure_ivi": 131, "reduce_mean": [131, 134, 135, 136, 971], "reduce_sum": [131, 971], "reduce_var": 131, "compile_graph": [131, 136], "pure_torch": 131, "cat": [131, 136], "backbon": [131, 134], "_layer": 131, "super": [131, 134, 135, 136], "clean": [131, 132, 134], "random_unifrom": 131, "unclean": 131, "wx": 131, "temp": 131, "torchscript": 131, "fn": [131, 133, 149, 150, 151, 152, 153, 154, 155, 156, 157, 269, 290, 291, 306, 315, 316, 590, 596, 661, 867, 868, 873, 874, 875, 877, 878, 879, 974, 976], "example_input": [131, 195, 196], "static_argnum": [131, 195, 196], "static_argnam": [131, 195, 196], "jit": [131, 148], "frontend": 132, "primit": [132, 148], "hierarch": [132, 134, 135], "straight": [133, 971], "arraywithlinalg": 133, "arraywithlog": 133, "arraywithmath": 133, "arraywithmeta": 133, "arraywithreduct": 133, "is_native_arrai": [133, 590], "_shape": 133, "_size": 133, "functool": 133, "mul": 133, "_dtype": 133, "_devic": 133, "_dev_str": 133, "_pre_repr": 133, "_post_repr": 133, "ndim": [133, 715, 759, 761, 766, 768], "mt": 133, "answer": [133, 148], "consol": 133, "typeerror": 133, "immut": 133, "behav": 133, "claim": 133, "truli": 133, "_native_wrapp": 133, "attributeerror": 133, "genuin": 133, "some_method": 133, "similarli": [133, 198, 233, 236], "rewritten": 133, "__pow__": 133, "strang": 133, "power": [133, 134, 135, 356, 411, 414, 444, 447, 543, 546, 590, 625, 648, 655, 715, 746, 984], "enforc": 133, "notic": 133, "appear": [133, 803, 817, 820], "invers": [133, 147, 356, 362, 365, 366, 369, 375, 378, 379, 382, 383, 386, 387, 390, 391, 394, 715, 736, 738, 756, 758], "_wrap_method": 133, "func_wrapp": [133, 149, 150, 151, 152, 153, 154, 155, 156, 157], "__name__": 133, "non_wrapped_method": 133, "_method_wrap": 133, "native_arg": 133, "native_kwarg": 133, "inner_fn": 133, "whist": 133, "unwrap": 133, "transit": 133, "needlessli": 133, "randn": 133, "_unwrap_method": 133, "method_wrap": 133, "compartment": 133, "public": [133, 590, 606], "newshap": 133, "new_shap": 133, "tidi": 133, "shorter": 133, "crystal": 133, "enough": [133, 134, 135], "ton": 134, "ado": [134, 135], "incred": [134, 148], "hash": 134, "soup": 134, "walk": [134, 135], "dct": 134, "cnt": 134, "combo": [134, 971, 977], "hold": [134, 590, 646, 647], "1000": [134, 356, 567, 570], "uda": 134, "3333": 134, "6667": 134, "178": 134, "new_weight": 134, "0600": 134, "3100": 134, "2400": 134, "6900": 134, "delimit": 134, "autocomplet": 134, "midwai": 134, "agent": 134, "total_spe": 134, "total_height": 134, "total_width": 134, "ag": 134, "tot": 134, "total_": 134, "total_h": 134, "batch_siz": [134, 702, 703, 704, 705, 706, 707, 708, 709, 890, 891], "dir": 134, "adam": [134, 135, 136, 664, 666, 669, 671, 673, 684, 686, 971, 1009, 1011], "cnt0": 134, "cnt1": 134, "diff_0": 134, "diff_1": 134, "config0": 134, "config1": 134, "Not": [134, 135, 148, 197], "decod": 134, "l0": 134, "l1": [134, 715, 781, 783], "depth": [134, 135, 136, 147, 306, 330, 334, 338, 590, 628, 643, 867, 879, 1005, 1006], "clearer": 134, "truncat": 134, "decoder__l0": 134, "decoder__l1": 134, "encoder__l0": 134, "encoder__l1": 134, "height": 134, "l0__b": 134, "l0__w": 134, "l1__b": 134, "l1__w": 134, "printabl": 134, "obviou": 134, "foresight": 134, "untidili": 134, "update_ag": 134, "normalize_img": 134, "img": 134, "img_max": 134, "reduce_max": [134, 971], "img_min": 134, "reduce_min": [134, 971], "img_rang": 134, "agent_posit": 134, "agent_veloc": 134, "agent_cam_front_rgb": 134, "agent_cam_front_depth": 134, "agent_cam_rear_rgb": 134, "agent_cam_rear_depth": 134, "agent_cam_lidar": 134, "cleaner": 134, "camera": 134, "front_rgb": 134, "front_depth": 134, "rear_rgb": 134, "rear_depth": 134, "lidar": 134, "rgb": 134, "rear": 134, "veloc": 134, "cam": 134, "cam_max": 134, "cam_min": 134, "cam_rang": 134, "Of": 134, "ideal": 134, "perman": 134, "afterward": 134, "thread": 134, "incorpor": 134, "pretti": 134, "straightforward": 134, "dataload": [134, 146, 971], "_cnt": 134, "img_": 134, "_dataset_s": 134, "_batch_siz": 134, "_count": [134, 135], "__next__": 134, "filenam": 134, "img_fnam": 134, "fname": 134, "loaded_img": 134, "cv2": 134, "imread": 134, "loader": [134, 148], "batch_slic": 134, "model": [134, 135, 971], "mymodel": [134, 971], "linear0": [134, 135, 971], "linear1": [134, 135, 971], "x_in": [134, 135, 136, 971], "001": [134, 135, 664, 666, 669, 885, 886, 889], "loss_fn": [134, 135, 136, 971], "0145": 134, "grad_fn": 134, "addbackward0": 134, "_create_vari": 135, "output_channel": [135, 993, 994, 995, 996, 997, 998, 999, 1002, 1003], "with_bia": [135, 993, 1003], "_input_channel": 135, "_output_channel": 135, "_w_shape": 135, "_b_shape": 135, "_with_bia": 135, "8979": 135, "3198": 135, "0196": 135, "3126": 135, "3717": 135, "9687": 135, "6958": 135, "5122": 135, "3902": 135, "8800": 135, "5613": 135, "1982": 135, "nightmar": 135, "overcom": 135, "fc": 135, "9563": 135, "impact": 135, "v0": 135, "v1": 135, "6440": 135, "key0": 135, "1823": 135, "8075": 135, "linear3": 135, "v2": 135, "2346": 135, "counter": 135, "hidden": [135, 702, 712, 993, 1002], "fed": [135, 306, 350], "1300": 135, "decoupl": 135, "scheme": 135, "weight_initi": [135, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003], "glorotuniform": [135, 984, 993, 994, 995, 996, 997, 998, 999, 1000, 1002, 1003], "bias_initi": [135, 993, 994, 995, 996, 997, 998, 999, 1000, 1003], "_w_init": 135, "_b_init": 135, "create_vari": [135, 984], "var_shap": [135, 984], "fan_out": [135, 984], "fan_in": [135, 984], "fan_mod": [135, 984], "fan_sum": 135, "slight": 135, "misnom": 135, "saw": 135, "vanilla": [135, 863, 865], "descent": [135, 664, 676, 678, 1009, 1014], "lar": [135, 664, 684, 686, 688, 690, 1009], "lamb": [135, 664, 684, 686, 1009], "compile_on_next_step": [135, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014], "_beta1": 135, "_beta2": 135, "_epsilon": 135, "_mw": 135, "_vw": 135, "_first_pass": 135, "_should_compil": 135, "_step": [135, 1009, 1013], "new_v": 135, "_lr": 135, "isinst": [135, 136, 590, 658], "_inplac": 135, "_stop_gradi": 135, "set_stat": [135, 1009, 1010, 1011, 1012, 1013, 1014], "pre": [136, 148, 306], "captur": 136, "sparse_funct": 136, "num_class": [136, 890, 891], "num_dim": 136, "new_axi": 136, "_linear": 136, "to_backend": 136, "jax_graph": 136, "learnabl": [136, 885, 886, 889, 1007, 1008], "to_ivy_modul": [136, 982], "thinli": 136, "whilst": 136, "to_haiku_modul": 136, "hk": 136, "loss_fn_t": 136, "transform": [136, 147, 702, 710, 711], "without_apply_rng": 136, "rng": 136, "prngkei": 136, "init": 136, "update_rul": 136, "01": [136, 356, 551, 554], "tree_multimap": 136, "mechan": [146, 148, 971], "vision": [146, 971], "robot": [146, 971], "focus": 147, "field": [147, 715, 730, 732, 759, 761, 766, 768, 907, 908, 909, 913], "perfect": 147, "3d": [147, 993, 998, 999], "differenti": 147, "demo": [147, 971], "orient": 147, "pose": 147, "euler": [147, 197], "quaternion": 147, "rotat": 147, "matric": [147, 198, 233, 236, 251, 255, 256, 260, 702, 711, 715, 716, 719, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 746, 747, 749, 750, 752, 756, 758, 759, 761, 763, 765, 766, 768, 769, 771, 775, 777], "angl": [147, 356, 387, 390, 427, 430, 563, 566, 585], "ivy_mech": 147, "target_facing_rotation_matrix": 147, "polar_to_cartesian_coord": 147, "ordin": [147, 715, 763, 765], "warp": 147, "optic": 147, "voxel": 147, "ivy_vis": 147, "coords_to_voxel_grid": 147, "render_pixel_coord": 147, "neural": [147, 702, 971, 979, 993], "radianc": 147, "nerf": 147, "trajectori": 147, "motion": 147, "plan": [147, 971], "mobil": 147, "ivy_robot": 147, "sample_spline_path": 147, "rigidmobil": 147, "sample_bodi": 147, "drone": 147, "sample_link": 147, "openai": 147, "swimmer": 147, "cumul": [147, 590, 608, 609], "reward": 147, "supervis": 147, "reinforc": 147, "door": [147, 148], "intersect": 147, "cartpol": 147, "mountain_car": 147, "pendulum": 147, "reacher": 147, "polici": 147, "condit": [147, 195, 196, 867, 877, 878, 902, 906], "learnt": 147, "ture": 147, "ntm": 147, "egospher": 147, "spatial": 147, "esm": 147, "ivy_memori": 147, "egocentr": 147, "room": 147, "inspir": 147, "doubt": 148, "grate": 148, "put": 148, "probe": 148, "undergo": 148, "remark": 148, "surpris": 148, "backward": [148, 356, 547, 550, 715, 778, 780, 960, 961, 964, 966, 969], "lock": 148, "contunu": 148, "minor": 148, "xla": 148, "buffer": 148, "kind": [148, 269, 289, 292, 356, 543, 546, 927, 944, 947, 952, 955], "gold": 148, "dex": 148, "phase": 148, "lax": 148, "scan": 148, "tricki": 148, "predictor": 148, "tight": 148, "driver": 148, "schedul": 148, "dispatch": 148, "Will": 148, "ast": 148, "dynamic": 148, "cond": 148, "jacobian": 148, "checkpoint": 148, "autodiff": 148, "shine": 148, "merci": 148, "superset": 148, "cluster": 148, "compet": 148, "paradigm": 148, "parallelis": [148, 306, 315, 316], "spmd": 148, "mixtur": [148, 664, 666, 669], "expert": 148, "sophist": 148, "depart": 148, "routin": 148, "hundr": 148, "thousand": 148, "deepli": [148, 867, 869], "broadli": 148, "heavili": 148, "supplementari": 148, "Is": 148, "reusabl": 148, "fanci": 148, "fusion": 148, "lose": 148, "vmap": 148, "pmap": 148, "overhead": 148, "ineffici": 148, "eventu": 148, "supplement": 148, "backdoor": 148, "callback": 148, "record": 148, "metric": 148, "somewhat": 148, "outsourc": 148, "inputs_to_ivy_arrai": 149, "gaussian": [159, 160, 163], "leaki": [159, 160, 163, 165, 168], "rectifi": [159, 165, 168, 170, 173], "slope": [159, 165, 168], "48": [159, 165, 168, 356, 567, 570, 664, 666, 669, 715, 753, 755, 927, 928, 931], "88": [159, 165, 168, 356, 415, 418, 715, 753, 755, 927, 928, 931], "214": [159, 175, 178], "978": [159, 175, 178], "891": [159, 175, 178], "0768": [159, 180, 183], "231": [159, 180, 183], "693": [159, 180, 183, 787, 798, 801], "49": [159, 180, 183, 356, 567, 570, 927, 928, 931], "147": [159, 180, 183], "363": [159, 180, 183], "hyperbol": [159, 190, 194, 356, 366, 369, 379, 382, 391, 394, 427, 430, 563, 566, 585], "array_method": [160, 161, 165, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 192, 202, 203, 208, 209, 216, 217, 222, 223, 233, 234, 238, 239, 246, 247, 251, 253, 256, 258, 264, 266, 278, 279, 357, 358, 362, 363, 366, 367, 370, 371, 375, 376, 379, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 436, 437, 440, 441, 444, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 468, 469, 472, 473, 476, 477, 480, 481, 484, 485, 488, 489, 492, 493, 496, 497, 500, 501, 504, 505, 508, 509, 512, 513, 516, 517, 520, 521, 526, 527, 531, 532, 535, 536, 539, 540, 543, 544, 547, 548, 551, 552, 555, 556, 559, 560, 563, 564, 567, 568, 571, 572, 575, 577, 580, 582, 586, 587, 591, 592, 619, 620, 666, 667, 716, 717, 721, 722, 724, 725, 727, 728, 730, 731, 733, 734, 736, 737, 739, 740, 743, 744, 747, 748, 750, 751, 753, 754, 756, 757, 759, 760, 763, 764, 766, 767, 769, 770, 772, 773, 775, 776, 778, 779, 781, 782, 784, 785, 788, 789, 793, 794, 798, 799, 804, 805, 809, 810, 813, 814, 817, 818, 821, 822, 825, 826, 829, 830, 833, 834, 837, 838, 843, 844, 847, 848, 851, 852, 855, 856, 859, 860, 886, 887, 909, 911, 917, 918, 922, 923, 928, 929, 932, 933, 936, 937, 940, 941, 944, 945, 948, 949, 952, 953, 956, 957, 961, 962, 966, 967], "container_method": [160, 162, 164, 165, 167, 169, 170, 172, 174, 175, 177, 179, 180, 182, 184, 185, 187, 189, 190, 191, 193, 199, 201, 202, 204, 206, 208, 210, 212, 213, 215, 216, 218, 220, 222, 224, 226, 227, 229, 230, 232, 233, 235, 237, 238, 240, 242, 243, 245, 246, 248, 250, 251, 252, 254, 256, 257, 259, 261, 262, 264, 265, 267, 278, 280, 282, 357, 359, 361, 362, 364, 366, 368, 370, 372, 374, 375, 377, 379, 381, 383, 385, 387, 389, 391, 393, 395, 397, 399, 401, 403, 405, 407, 409, 411, 413, 415, 417, 419, 421, 423, 425, 427, 429, 431, 433, 435, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 526, 528, 530, 531, 533, 535, 537, 539, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 576, 578, 580, 581, 583, 586, 588, 591, 593, 595, 603, 604, 619, 621, 623, 666, 668, 670, 671, 672, 674, 676, 677, 679, 680, 681, 683, 684, 685, 687, 688, 689, 691, 692, 693, 695, 716, 718, 720, 739, 741, 788, 790, 792, 793, 795, 797, 798, 800, 802, 804, 806, 808, 809, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 886, 888, 892, 894, 896, 897, 899, 909, 910, 912, 917, 919, 921, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 961, 963, 965, 966, 968, 970], "faster": [195, 196], "invoc": [195, 196], "718281828459045": 197, "newaxi": 197, "alia": 197, "pi": 197, "141592653589793": 197, "mathemat": [197, 356, 370, 373, 387, 390, 448, 451, 526, 529, 715, 781, 783], "half": [198, 199, 200, 890, 892, 893, 896, 898], "chosen": [198, 199, 200, 356, 387, 390, 902, 906], "distanc": [198, 199, 200], "adjac": [198, 199, 200], "creation_funct": [198, 199, 200, 202, 205, 207, 208, 211, 213, 214, 216, 219, 221, 222, 225, 227, 228, 243, 244, 246, 249, 251, 255, 256, 260, 261, 263, 264, 268], "interpret": [198, 202, 205, 238, 241], "uniniti": [198, 207, 208, 211], "elsewher": [198, 213, 214, 902, 906], "row": [198, 213, 214, 715, 763, 765, 766, 768, 890, 891, 902, 905], "column": [198, 213, 214, 715, 730, 732, 759, 761, 763, 765, 766, 768], "__dlpack__": [198, 216, 219, 306, 351], "interchang": [198, 216, 219, 803, 851, 854], "coordin": [198, 233, 236, 356, 387, 390], "cartesian": [198, 233, 236], "ij": [198, 233, 236, 927, 928, 931], "rank": [198, 233, 236, 590, 662, 715, 721, 723, 747, 749, 759, 761, 763, 765, 775, 777, 778, 780, 781, 783, 803, 813, 816, 817, 820, 847, 850, 859, 862, 902, 905, 960, 961, 964, 966, 969], "ni": [198, 233, 236], "xi": [198, 233, 236], "n1": [198, 233, 236], "n2": [198, 233, 236], "n3": [198, 233, 236], "accordingli": [198, 233, 236, 356, 448, 451, 715, 781, 783, 902, 904, 907, 908, 909, 913, 915, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "xv": [198, 233, 236], "yv": [198, 233, 236], "triangular": [198, 251, 255, 256, 260, 715, 716, 719, 759, 761], "innermost": [198, 251, 255, 256, 260, 715, 716, 719, 724, 726, 727, 729, 730, 732, 733, 735, 736, 738, 747, 749, 750, 752, 756, 758, 759, 761, 763, 765, 766, 768, 769, 771, 775, 777], "mxn": [198, 251, 255, 256, 260, 715, 727, 729, 747, 749, 750, 752, 756, 758, 759, 761, 769, 771, 775, 777], "defaultdtyp": [269, 270], "defaultfloatdtyp": [269, 271], "float_dtyp": [269, 285, 299], "defaultintdtyp": [269, 272], "dtype_in": [269, 273, 274, 288, 293, 294, 295, 305], "incompat": [269, 277], "occur": [269, 278, 281, 902, 903, 904, 907, 908, 909, 913, 915], "data_type_funct": [269, 278, 281], "closest": [269, 283, 356, 419, 422, 452, 455, 456, 459, 551, 554, 586, 589], "floatdtyp": [269, 285], "int_dtyp": [269, 286, 300], "intdtyp": [269, 286], "followng": [269, 289], "occupi": [269, 289, 292, 590, 646, 647], "ep": [269, 289, 715, 747, 749, 756, 758], "smallest_norm": [269, 289], "precis": [269, 289, 356, 526, 529, 567, 570], "encapsul": [269, 292], "type1": [269, 296], "type2": [269, 296], "arrays_and_dtyp": [269, 297], "ret1": [269, 301], "ret2": [269, 301], "noinspect": [270, 271, 272, 307, 665], "pyshadowingnam": [270, 271, 272, 307, 665], "defaultdevic": [306, 307], "__enter__": 306, "_dev": 306, "initialis": 306, "devcloneditem": [306, 328], "multidevitem": [306, 308, 311], "devclonedit": 306, "multidevit": [306, 309, 312, 315, 316, 320], "devclonednest": 306, "multidevnest": [306, 310, 313], "devdistitem": 306, "devdistit": 306, "devdistnest": 306, "devmanag": [306, 314], "dev_mapp": 306, "da_dim_s": 306, "safety_factor": 306, "min_dev_dim_s": 306, "max_dev_dim_step_ratio": 306, "min_unit_dev_tune_step": 306, "min_sf_tune_step": 306, "starting_split_factor": 306, "max_split_factor_step_s": 306, "tune_dev_alloc": 306, "tune_dev_split": 306, "mapper": [306, 315, 316], "receivess": 306, "ratio": [306, 664, 684, 686, 1009, 1011], "safe": [306, 315], "oom": 306, "tune": 306, "da_tune_step": 306, "ds_tune_step": 306, "to_clon": 306, "to_distribut": 306, "multidevic": [306, 315], "parallel": [306, 315, 316], "mutlidevic": [306, 315], "repeated_config_check": 306, "tune_step": 306, "devmapp": [306, 316], "ret_fn": [306, 315, 316], "queue_class": [306, 315, 316], "worker_class": [306, 315, 316], "worker": [306, 315, 316], "used_dev": [306, 315], "sf": [306, 315], "devmappermultiproc": 306, "multidev": [306, 317, 318, 319, 338], "profil": 306, "save_dir": [306, 321], "deviceic": [306, 327], "spread": [306, 338], "139740789224448": [306, 340], "physic": [306, 342], "x3": [306, 344], "x4": [306, 344], "process_specif": [306, 345, 355], "percentag": [306, 345], "ram": [306, 345, 352, 355], "alon": [306, 345, 355], "attr_onli": [306, 346], "chunk": [306, 348, 349, 350], "max_chunk_s": [306, 350], "chunk_siz": [306, 350], "input_ax": [306, 350], "output_ax": [306, 350], "feed": [306, 350], "fist": [306, 350], "stream": [306, 351], "caveat": [306, 351], "portabl": [306, 351, 971], "gb": [306, 352, 355], "reset": [306, 354], "magnitud": [356, 357, 360, 370, 373, 526, 529, 715, 766, 768, 769, 771], "princip": [356, 362, 365, 375, 378, 383, 386], "cosin": [356, 362, 365, 366, 369, 423, 426, 427, 430], "x1_i": [356, 370, 373, 387, 390, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 431, 434, 436, 439, 456, 459, 460, 463, 464, 467, 480, 483, 484, 487, 504, 507, 508, 511, 516, 519, 520, 523, 526, 529, 535, 538, 543, 546, 547, 550, 575, 579], "x2_i": [356, 370, 373, 387, 390, 395, 398, 403, 406, 407, 410, 411, 414, 415, 418, 431, 434, 436, 439, 456, 459, 460, 463, 464, 467, 480, 483, 484, 487, 504, 507, 508, 511, 516, 519, 520, 523, 526, 529, 535, 538, 543, 546, 547, 550, 575, 579], "finit": [356, 370, 373, 387, 390, 468, 471, 526, 529, 543, 546, 547, 550], "nor": [356, 370, 373, 526, 529], "nearest": [356, 370, 373, 526, 529, 551, 554], "2019": [356, 370, 373, 448, 451, 526, 529], "commut": [356, 370, 373], "sine": [356, 375, 378, 379, 382, 559, 562, 563, 566], "57": [356, 375, 378, 415, 418, 427, 430], "524": [356, 375, 378], "644": [356, 375, 378], "201": [356, 375, 378, 551, 554], "305": [356, 375, 378], "412": [356, 375, 378], "quotient": [356, 387, 390], "notat": [356, 387, 390, 927, 928, 931], "denot": [356, 387, 390], "quadrant": [356, 387, 390], "3\u03c0": [356, 387, 390], "549": [356, 391, 394], "bitwis": [356, 395, 398, 407, 410, 415, 418, 520, 523], "AND": [356, 395, 398, 508, 511, 960, 961, 964], "binari": [356, 395, 398, 407, 410, 415, 418, 520, 523, 787, 788, 791], "invert": [356, 399, 402], "arithmet": [356, 411, 414, 927, 936, 939], "propag": [356, 411, 414, 927, 932, 935, 936, 939, 940, 943, 948, 951, 952, 955, 956, 959], "thu": [356, 411, 414, 543, 546, 547, 550, 715, 730, 732], "lh": [356, 411, 414], "rh": [356, 411, 414], "xor": [356, 415, 418, 520, 523], "78": [356, 415, 418, 715, 753, 755, 927, 928, 931], "91": [356, 415, 418, 715, 753, 755, 927, 928, 931], "23": [356, 415, 418, 702, 708, 715, 727, 729, 902, 906], "66": [356, 415, 418, 715, 753, 755, 927, 928, 931], "77": [356, 415, 418, 715, 753, 755, 927, 928, 931], "79": [356, 415, 418], "89": [356, 415, 418, 715, 772, 774, 927, 952, 955], "98": [356, 415, 418, 715, 753, 755, 902, 906, 927, 928, 931], "26": [356, 415, 418, 664, 666, 669, 702, 709, 715, 727, 729, 753, 755, 772, 774, 927, 928, 931], "21": [356, 415, 418, 590, 608, 715, 727, 729, 753, 755, 787, 798, 801, 927, 928, 931], "34": [356, 415, 418, 567, 570], "24": [356, 415, 418, 567, 570, 590, 608, 664, 666, 669, 715, 727, 729, 753, 755, 927, 928, 931], "51": [356, 415, 418], "27": [356, 415, 418, 427, 430, 567, 570, 702, 714, 715, 753, 755, 927, 928, 931], "74": [356, 415, 418], "59": [356, 415, 418], "416": [356, 423, 426], "122": [356, 427, 430], "368": [356, 427, 430], "670": [356, 427, 430], "202": [356, 427, 430, 551, 554], "548": [356, 427, 430], "1490": [356, 427, 430], "dividend": [356, 431, 434, 547, 550], "divisor": [356, 431, 434, 547, 550, 664, 666, 669, 671, 673, 684, 686, 927, 948, 951, 956, 959, 1009, 1010, 1011], "gauss": [356, 440, 443], "exponenti": [356, 440, 443, 444, 447, 504, 507, 543, 546], "logarithm": [356, 444, 447, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 715, 762], "72": [356, 444, 447, 664, 666, 669, 715, 753, 755, 927, 928, 931], "fdlibm": [356, 448, 451], "compliant": [356, 448, 451, 512, 515, 516, 519, 927, 932, 935, 936, 939, 940, 943], "greatest": [356, 452, 455, 456, 459], "out_i": [356, 468, 471, 472, 475, 476, 479], "threshold": [356, 524, 525], "exce": [356, 525], "y_i": [356, 531, 534], "expon": [356, 543, 546, 590, 655], "versu": [356, 543, 546], "odd": [356, 543, 546], "modulu": [356, 547, 550], "primarili": [356, 547, 550], "5654": [356, 551, 554], "034": [356, 551, 554], "433": [356, 551, 554], "343": [356, 551, 554], "44": [356, 551, 554, 567, 570, 571, 574, 715, 753, 755, 902, 906, 927, 928, 931], "30": [356, 551, 554, 715, 753, 755, 927, 928, 931, 984, 990], "81": [356, 551, 554, 571, 574, 927, 928, 931], "527": [356, 551, 554], "301": [356, 551, 554], "indistinguish": [356, 567, 570], "infinit": [356, 567, 570], "83": [356, 567, 570], "32455532": [356, 567, 570], "89897949": [356, 567, 570], "50": [356, 567, 570, 715, 753, 755, 902, 905, 927, 928, 931], "31": [356, 567, 570], "169": [356, 567, 570], "47": [356, 567, 570], "93": [356, 567, 570], "35": [356, 567, 570, 702, 714, 715, 721, 723, 902, 906, 927, 928, 931], "09": [356, 571, 574, 702, 714], "61": [356, 571, 574, 787, 788, 791], "546": [356, 580, 584], "842": [356, 580, 584], "916": [356, 580, 584, 787, 788, 791], "996": [356, 580, 584], "328": [356, 580, 584], "real": [356, 585], "462": [356, 585], "604": [356, 585], "984": [356, 585], "997": [356, 585, 885, 886, 889], "decim": [356, 586, 589], "inspect": [590, 596, 975, 976], "downscal": [590, 602, 603, 605], "60": [590, 608, 715, 753, 755, 927, 928, 931], "default_v": [590, 611], "catch_except": [590, 611], "rev": [590, 611], "with_cal": [590, 611], "arrang": [590, 612], "123": [590, 615], "mod": [590, 616], "max_freq": [590, 617], "num_band": [590, 617], "pad": [590, 617, 702, 703, 704, 705, 706, 707, 708, 709, 803, 813, 816, 859, 862, 993, 994, 995, 996, 997, 998, 999, 1000], "fourier": [590, 617], "band": [590, 617], "linearli": [590, 617, 715, 763, 765], "oppos": [590, 617], "geometr": [590, 617], "seen_set": [590, 628], "local_set": [590, 628], "decrement": [590, 632], "is_arrai": 590, "allow_dupl": [590, 640], "forkserv": [590, 641], "spawn": [590, 641], "hot": [590, 643], "scatter": [590, 643, 646, 647], "tmp_dr": [590, 651], "temporari": [590, 651], "min_denomin": [590, 654], "stabil": [590, 654, 655, 916, 917, 920, 922, 925], "_min_denomin": [590, 654], "min_bas": [590, 655], "_min_bas": [590, 655, 885, 886, 889, 1007, 1008], "100000023841858": [590, 658], "200000047683716": [590, 658], "299999952316284": [590, 658], "400000095367432": [590, 658], "599999904632568": [590, 658], "101": [590, 659], "unpack": [590, 662], "gradienttrack": [664, 665], "delta": [664, 666, 669], "cost": [664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 863, 864, 865, 866], "ws": [664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694], "en": [664, 666, 669, 671, 673], "wikipedia": [664, 666, 669, 671, 673], "wiki": [664, 666, 669, 671, 673], "stochastic_gradient_desc": [664, 666, 669, 671, 673], "dc": [664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694], "dw": [664, 666, 669, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694], "averag": [664, 666, 669, 671, 673, 684, 686, 863, 864, 865], "forget": [664, 666, 669, 671, 673, 684, 686, 1009, 1010, 1011], "004": [664, 666, 669], "009": [664, 666, 669], "86": [664, 666, 669], "28": [664, 666, 669, 702, 705, 708, 709, 715, 753, 755, 927, 928, 931], "45": [664, 666, 669, 715, 753, 755, 803, 842, 885, 886, 889, 927, 928, 931], "0125": [664, 666, 669], "601": [664, 666, 669], "581": [664, 666, 669], "025": [664, 666, 669], "992": [664, 666, 669], "209": [664, 666, 669, 907, 908], "271": [664, 666, 669], "0717": [664, 666, 669], "142": [664, 666, 669], "182": [664, 666, 669], "624": [664, 666, 669, 890, 896, 898], "06": [664, 666, 669], "02": [664, 666, 669], "744": [664, 666, 669], "626": [664, 666, 669], "65": [664, 666, 669, 715, 753, 755, 927, 928, 931], "024": [664, 666, 669], "096": [664, 666, 669], "216": [664, 666, 669], "384": [664, 666, 669], "rate": [664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694, 863, 864, 865, 866, 993, 1004, 1009, 1010, 1011, 1012, 1013, 1014], "ws_new": [664, 671, 673, 676, 678, 684, 686, 688, 690, 692, 694], "retain": [664, 675], "trust": [664, 684, 686, 1009, 1011], "decai": [664, 684, 686, 688, 690, 1009, 1011, 1012], "layerwis": [664, 688, 690, 1009, 1012], "stride": [702, 703, 704, 705, 706, 707, 708, 709, 993, 994, 995, 996, 997, 998, 999, 1000], "data_format": [702, 703, 704, 705, 706, 707, 708, 709, 993, 994, 995, 996, 997, 998, 999, 1000], "nwc": [702, 703, 704, 993, 994, 995], "dilat": [702, 703, 704, 705, 706, 707, 708, 709, 993, 994, 995, 996, 997, 998, 999, 1000], "convolut": [702, 703, 704, 705, 706, 707, 708, 709, 993, 994, 995, 996, 997, 998, 999, 1000], "d_in": [702, 703, 704, 705, 706, 707, 708], "fw": [702, 703, 704, 705, 706, 707, 708, 709], "d_out": [702, 703, 704, 705, 706, 707, 708], "slide": [702, 703, 704, 705, 706, 707, 708, 709, 993, 994, 995, 996, 997, 998, 999, 1000], "ncw": [702, 703, 704, 993, 994, 995], "wio": [702, 703], "output_shap": [702, 704, 706, 708, 993, 995, 997, 999], "nhwc": [702, 705, 706, 709, 993, 996, 997, 1000], "fh": [702, 705, 706, 707, 708, 709], "nchw": [702, 705, 706, 709, 993, 996, 997, 1000], "hwio": [702, 705], "unequ": [702, 705], "unsqueez": [702, 705, 709], "ndhwc": [702, 707, 708, 993, 998, 999], "volum": [702, 707], "fd": [702, 707, 708], "ncdhw": [702, 707, 708, 993, 998, 999], "dhwio": [702, 707], "256": [702, 708], "258": [702, 708], "128": [702, 708, 715, 753, 755], "depthwis": [702, 709, 993, 1000], "333": [702, 709], "inp": [702, 709], "prob": [702, 710, 890, 891, 993, 1001], "randomli": [702, 710, 993, 1001], "bernoulli": [702, 710], "out_featur": [702, 710, 711], "incom": [702, 711], "outer_batch_shap": [702, 711], "inner_batch_shap": [702, 711], "in_featur": [702, 711], "cell": [702, 712, 993, 1002], "num_queri": [702, 713, 714], "x_feat_dim": [702, 713], "num_kei": [702, 713, 714], "cont_feat_dim": [702, 713], "numhead": [702, 713], "feat_dim": [702, 713, 714], "out_feat_dim": [702, 713], "score": [702, 714], "04": [702, 714], "03": [702, 714, 885, 886, 889], "08": [702, 714], "decomposit": [715, 716, 719, 759, 761, 766, 768], "symmetr": [715, 716, 719, 730, 732, 733, 735, 784, 786], "u": [715, 716, 719, 766, 768], "vif": [715, 721, 723], "92": [715, 724, 726], "293": [715, 724, 726], "46997": [715, 724, 726], "eigendecomposit": [715, 730, 732], "qlq\u1d40": [715, 730, 732], "orthogon": [715, 730, 732], "eig": [715, 730, 732], "eigenvalu": [715, 730, 732, 733, 735], "eigenvector": [715, 730, 732], "75": [715, 736, 738, 753, 755], "prepend": [715, 739, 742], "singular": [715, 747, 749, 756, 758, 766, 768, 769, 771], "toler": [715, 747, 749, 756, 758], "largest_singular_valu": [715, 747, 749, 756, 758], "array_lik": [715, 753, 755], "33": [715, 753, 755, 885, 886, 889, 927, 928, 931], "36": [715, 753, 755, 927, 928, 931], "84": [715, 753, 755, 927, 928, 931], "105": [715, 753, 755, 787, 788, 791], "112": [715, 753, 755, 927, 928, 931], "104": [715, 753, 755, 927, 928, 931], "120": [715, 753, 755], "moor": [715, 756, 758], "penros": [715, 756, 758], "pseudo": [715, 756, 758], "orthonorm": [715, 759, 761, 766, 768], "2d": [715, 762, 993, 996, 997, 1000], "logdet": [715, 762], "coeffici": [715, 763, 765], "usvh": [715, 766, 768], "vh": [715, 766, 768], "hermitian": [715, 766, 768], "et": [715, 766, 768], "cetera": [715, 766, 768], "adjoint": [715, 766, 768], "reconstruct": [715, 766, 768, 907, 908, 914], "reconstructed_x": [715, 766, 768], "contract": [715, 772, 774, 927, 928, 931], "doubl": [715, 772, 774], "singleton": [715, 781, 783, 803, 843, 846, 902, 904, 927, 932, 935, 936, 939, 940, 943, 944, 947, 948, 951, 952, 955, 956, 959, 960, 961, 964, 966, 969], "liter": [715, 781, 783], "manhattan": [715, 781, 783], "l2": [715, 781, 783], "euclidean": [715, 781, 783], "mathbf": [715, 784, 786], "mathbb": [715, 784, 786], "skew": [715, 784, 786], "entropi": [787, 788, 791, 793, 796, 798, 801], "predict": [787, 788, 791, 793, 796, 798, 801], "smooth": [787, 788, 791, 793, 796, 798, 801], "223": [787, 788, 791], "357": [787, 788, 791, 798, 801], "511": [787, 788, 791], "discret": [787, 793, 796], "3862944": [787, 793, 796], "35667497": [787, 793, 796], "spars": [787, 798, 801], "logit": [787, 798, 801], "793291": [787, 798, 801], "512926": [787, 798, 801], "before_1": [803, 813, 816, 859, 862], "after_1": [803, 813, 816, 859, 862], "before_n": [803, 813, 816, 859, 862], "after_n": [803, 813, 816, 859, 862], "manipulation_funct": [803, 817, 820], "reorder": [803, 821, 824], "permut": [803, 825, 828, 851, 854], "repetit": [803, 829, 832, 855, 858], "restor": [803, 837, 840], "famili": [803, 847, 850], "intxx": [803, 847, 850], "floatxx": [803, 847, 850], "fomaml_step": 863, "inner_cost_fn": [863, 864, 865], "outer_cost_fn": [863, 864, 865], "inner_grad_step": [863, 864, 865, 866], "inner_learning_r": [863, 864, 865, 866], "inner_optimization_step": [863, 864, 865, 866], "inner_batch_fn": [863, 864, 865], "outer_batch_fn": [863, 864, 865], "average_across_step": [863, 864, 865], "inner_v": [863, 864, 865], "keep_inner_v": [863, 864, 865], "outer_v": [863, 864, 865], "keep_outer_v": [863, 864, 865], "return_inner_v": [863, 864, 865, 866], "num_task": [863, 864, 865, 866], "maml": [863, 864, 865], "recev": [863, 864, 865], "0x7fe686770e50": [863, 864, 865, 866], "maml_step": 863, "rece": [863, 865], "reptile_step": 863, "cost_fn": [863, 866], "reptil": [863, 866], "receivng": [863, 866], "all_nested_indic": 867, "include_nest": [867, 868], "_index": [867, 868, 878], "_base": [867, 868, 877, 878], "copy_nest": 867, "to_mut": [867, 869, 879], "mutabl": [867, 869, 879], "insert_into_nest_at_index": 867, "insert_into_nest_at_indic": 867, "map_nest_at_index": 867, "map_nest_at_indic": 867, "multi_index_nest": 867, "nested_ani": 867, "check_nest": [867, 877, 878], "conditon": [867, 877, 878], "nested_indices_wher": 867, "stop_after_n_found": [867, 878], "_depth": [867, 879], "_tuple_check_fn": [867, 879], "_list_check_fn": [867, 879], "_dict_check_fn": [867, 879], "nested_multi_map": 867, "nest0": [867, 880], "ivy_arrai": [867, 880], "funciton": [867, 880], "prune_nest_at_index": 867, "prune_nest_at_indic": 867, "set_nest_at_index": 867, "set_nest_at_indic": 867, "mini": [885, 886, 889, 1007, 1008], "gamma": [885, 886, 889], "beta": [885, 886, 889], "0976": [885, 886, 889], "3452": [885, 886, 889], "2740": [885, 886, 889], "1047": [885, 886, 889], "5886": [885, 886, 889], "2732": [885, 886, 889], "7696": [885, 886, 889], "7024": [885, 886, 889], "2518": [885, 886, 889], "58": [885, 886, 889, 907, 908], "283": [885, 886, 889], "585": [885, 886, 889], "909": [885, 886, 889], "628": [885, 886, 889], "225": [885, 886, 889], "425": [885, 886, 889], "norm_idx": [885, 886, 889], "228": [885, 886, 889], "0285": [885, 886, 889], "199": [885, 886, 889], "204": [885, 886, 889], "population_s": [890, 891], "num_sampl": [890, 891], "draw": [890, 891, 895, 896, 898], "unnorm": [890, 891], "drawn": [890, 891, 892, 893, 895, 896, 898], "home": [890, 891, 895], "uniformli": [890, 892, 893, 896, 898], "highest": [890, 892, 893], "parameter": [890, 895, 896, 898], "6444774682897879": [890, 895], "811": [890, 895], "508": [890, 895], "564": [890, 895], "7268672": [890, 895], "968": [890, 895], "175": [890, 895, 907, 908], "064": [890, 895], "40935726": [890, 895], "556": [890, 895], "26431865": [890, 896, 898], "475": [890, 896, 898], "878": [890, 896, 898], "861": [890, 896, 898], "89150229": [890, 896, 898], "89629126": [890, 896, 898], "94198485": [890, 896, 898], "91405606": [890, 896, 898], "72848724": [890, 896, 898], "7550739": [890, 896, 898], "00109": [890, 896, 898], "occurr": [902, 903, 904, 907, 908], "yield": [902, 906], "43": [902, 906], "x_j": [907, 908, 909, 913, 915], "impli": [907, 908, 909, 913, 915], "inverse_indic": [907, 908, 914], "aggreg": [907, 908], "fourth": [907, 908], "607": [907, 908], "735": [907, 908], "667": [907, 908], "381": [907, 908], "857": [907, 908], "0396": [907, 908], "166": [907, 908], "828": [907, 908], "144": [907, 908], "40501155": [907, 908], "77361575": [907, 908], "97776199": [907, 908], "36831157": [907, 908], "89148434": [907, 908], "9512272": [907, 908], "67542176": [907, 908], "41985657": [907, 908], "23478023": [907, 908], "1141": [907, 908], "8101": [907, 908], "9298": [907, 908], "8460": [907, 908], "2119": [907, 908], "3519": [907, 908], "6252": [907, 908], "4033": [907, 908], "7443": [907, 908], "2577": [907, 908], "3707": [907, 908], "0545": [907, 908], "3238": [907, 908], "5944": [907, 908], "0775": [907, 908], "4327": [907, 908], "176": [907, 908], "889": [907, 908], "763": [907, 908], "071": [907, 908], "262": [907, 908], "456": [907, 908], "114": [907, 908], "349": [907, 908], "615": [907, 908], "594": [907, 908], "335": [907, 908], "212": [907, 908], "457": [907, 908], "827": [907, 908], "set_funct": [907, 909, 913], "ascend": [916, 917, 920], "einstein": [927, 928, 931], "summat": [927, 928, 931], "seq": [927, 928, 931], "jk": [927, 928, 931], "ik": [927, 928, 931], "126": [927, 928, 931], "510": [927, 928, 931], "99": [927, 928, 931], "108": [927, 928, 931], "117": [927, 928, 931], "sentinel": [927, 932, 935, 940, 943], "unsign": [927, 944, 947, 952, 955], "degre": [927, 948, 951, 956, 959], "bessel": [927, 948, 951, 956, 959], "8164966": [927, 948, 951], "varianc": [927, 956, 959], "unbias": [927, 956, 959], "simplicit": [960, 961, 964], "autom": 971, "grow": 971, "ai": 971, "got": 971, "colab": 971, "sharp": 971, "weekli": 971, "event": 971, "immedi": 971, "favorit": 971, "jax_concat": 971, "tf_concat": 971, "np_concat": 971, "mx_concat": 971, "torch_concat": 971, "prompt": 971, "get_devic": 971, "reduce_prod": 971, "gradient_imag": 971, "linalg": 971, "bilinear_resampl": 971, "stack_imag": 971, "neural_net": 971, "ecosystem": [971, 977], "popular": [971, 977], "acceler": 971, "articl": 971, "lenton2021ivi": 971, "inter": 971, "lenton": 971, "daniel": 971, "pardo": 971, "fabio": 971, "falck": 971, "fabian": 971, "jame": 971, "stephen": 971, "clark": 971, "ronald": 971, "journal": 971, "arxiv": 971, "preprint": 971, "2102": 971, "02886": 971, "2021": 971, "add_array_spec": 974, "fn_array_spec": 974, "geglu": 979, "native_modul": [982, 983], "native_module_class": [982, 983], "firstlayersiren": 984, "kaimingnorm": [984, 988], "negative_slop": 984, "Ones": 984, "siren": 984, "w0": [984, 990], "filter_s": [993, 994, 995], "1d": [993, 994, 995], "conv1dtranspos": 993, "filter_shap": [993, 996, 997, 998, 999, 1000], "conv2dtranspos": 993, "conv3dtranspos": 993, "depthwiseconv2d": 993, "num_channel": [993, 1000], "bernoul": [993, 1001], "num_lay": [993, 1002], "return_sequ": [993, 1002], "return_st": [993, 1002], "get_initial_st": [993, 1002], "dens": [993, 1003], "multiheadattent": 993, "query_dim": [993, 1004], "head_dim": [993, 1004], "dropout_r": [993, 1004], "context_dim": [993, 1004], "with_to_q_fn": [993, 1004], "with_to_kv_fn": [993, 1004], "with_to_out_fn": [993, 1004], "build_mod": [993, 1004, 1005, 1006], "on_init": [993, 1004, 1005, 1006], "__call__": [993, 1004, 1005, 1006], "store_var": [1005, 1006], "arg_stateful_idx": [1005, 1006], "kwarg_stateful_idx": [1005, 1006], "fallback_to_non_compil": [1005, 1006, 1009, 1013], "with_partial_v": [1005, 1006], "initialz": [1005, 1006], "from_cal": [1005, 1006], "check_submod_ret": [1005, 1006], "get_mod_kei": [1005, 1006], "top_mod": [1005, 1006], "mod_depth": [1005, 1006], "mod_height": [1005, 1006], "mod_with_top_mod_key_chain": [1005, 1006], "save_weight": [1005, 1006], "weights_path": [1005, 1006], "show_mod_in_top_mod": [1005, 1006], "upper_depth": [1005, 1006], "lower_depth": [1005, 1006], "show_structur": [1005, 1006], "show_v_in_top_v": [1005, 1006], "sub_mod": [1005, 1006], "show_v": [1005, 1006], "track_submod_call_ord": [1005, 1006], "track_submod_ret": [1005, 1006], "v_with_top_v_key_chain": [1005, 1006], "layernorm": 1007, "normalized_shap": [1007, 1008], "elementwise_affin": [1007, 1008], "trail": [1007, 1008], "affin": [1007, 1008], "0001": [1009, 1010, 1011], "init_on_first_step": [1009, 1013], "ignore_miss": [1009, 1013], "overriden": [1009, 1013], "sgd": 1009, "stochast": [1009, 1014], "sub_modul": [1015, 1016]}, "objects": {"ivy": [[23, 0, 0, "-", "Array"], [69, 0, 0, "-", "Container"], [0, 0, 0, "-", "backend_handler"], [149, 0, 0, "-", "func_wrapper"], [974, 0, 0, "-", "inspection"], [978, 0, 0, "-", "stateful"], [1018, 0, 0, "-", "verbosity"]], "ivy.Array": [[23, 1, 1, "", "__delattr__"], [23, 1, 1, "", "__format__"], [23, 1, 1, "", "__getattribute__"], [23, 1, 1, "", "__init_subclass__"], [23, 1, 1, "", "__new__"], [23, 1, 1, "", "__reduce__"], [23, 1, 1, "", "__reduce_ex__"], [23, 1, 1, "", "__setattr__"], [23, 1, 1, "", "__sizeof__"], [23, 1, 1, "", "__str__"], [23, 1, 1, "", "__subclasshook__"]], "ivy.Container": [[69, 1, 1, "", "__delattr__"], [69, 1, 1, "", "__delitem__"], [69, 1, 1, "", "__format__"], [69, 1, 1, "", "__getattribute__"], [69, 1, 1, "", "__init_subclass__"], [69, 1, 1, "", "__iter__"], [69, 1, 1, "", "__len__"], [69, 1, 1, "", "__new__"], [69, 1, 1, "", "__reduce__"], [69, 1, 1, "", "__reduce_ex__"], [69, 1, 1, "", "__reversed__"], [69, 1, 1, "", "__sizeof__"], [69, 1, 1, "", "__str__"], [69, 1, 1, "", "__subclasshook__"], [69, 1, 1, "", "clear"], [69, 1, 1, "", "fromkeys"], [69, 1, 1, "", "get"], [69, 1, 1, "", "items"], [69, 1, 1, "", "keys"], [69, 1, 1, "", "pop"], [69, 1, 1, "", "popitem"], [69, 1, 1, "", "setdefault"], [69, 1, 1, "", "update"], [69, 1, 1, "", "values"]], "ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "conversions"], [31, 0, 0, "-", "creation"], [33, 0, 0, "-", "data_type"], [35, 0, 0, "-", "device"], [37, 0, 0, "-", "elementwise"], [39, 0, 0, "-", "general"], [41, 0, 0, "-", "gradients"], [43, 0, 0, "-", "image"], [45, 0, 0, "-", "layers"], [47, 0, 0, "-", "linear_algebra"], [49, 0, 0, "-", "losses"], [51, 0, 0, "-", "manipulation"], [53, 0, 0, "-", "norms"], [55, 0, 0, "-", "random"], [57, 0, 0, "-", "searching"], [59, 0, 0, "-", "set"], [61, 0, 0, "-", "sorting"], [63, 0, 0, "-", "statistical"], [65, 0, 0, "-", "utility"], [67, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 2, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 3, 1, "", "gelu"], [25, 3, 1, "", "leaky_relu"], [25, 3, 1, "", "relu"], [25, 3, 1, "", "sigmoid"], [25, 3, 1, "", "softmax"], [25, 3, 1, "", "softplus"], [25, 3, 1, "", "tanh"]], "ivy.array.array_methods": [[358, 1, 1, "", "abs"], [363, 1, 1, "", "acos"], [367, 1, 1, "", "acosh"], [667, 1, 1, "", "adam_step"], [371, 1, 1, "", "add"], [962, 1, 1, "", "all"], [592, 1, 1, "", "all_equal"], [967, 1, 1, "", "any"], [918, 1, 1, "", "argsort"], [203, 1, 1, "", "asarray"], [376, 1, 1, "", "asin"], [380, 1, 1, "", "asinh"], [384, 1, 1, "", "atan"], [388, 1, 1, "", "atan2"], [392, 1, 1, "", "atanh"], [789, 1, 1, "", "binary_cross_entropy"], [396, 1, 1, "", "bitwise_and"], [400, 1, 1, "", "bitwise_invert"], [404, 1, 1, "", "bitwise_left_shift"], [408, 1, 1, "", "bitwise_or"], [412, 1, 1, "", "bitwise_right_shift"], [416, 1, 1, "", "bitwise_xor"], [279, 1, 1, "", "can_cast"], [420, 1, 1, "", "ceil"], [717, 1, 1, "", "cholesky"], [805, 1, 1, "", "clip"], [810, 1, 1, "", "concat"], [814, 1, 1, "", "constant_pad"], [424, 1, 1, "", "cos"], [428, 1, 1, "", "cosh"], [722, 1, 1, "", "cross"], [794, 1, 1, "", "cross_entropy"], [725, 1, 1, "", "det"], [728, 1, 1, "", "diagonal"], [432, 1, 1, "", "divide"], [731, 1, 1, "", "eigh"], [734, 1, 1, "", "eigvalsh"], [929, 1, 1, "", "einsum"], [209, 1, 1, "", "empty_like"], [437, 1, 1, "", "equal"], [441, 1, 1, "", "erf"], [445, 1, 1, "", "exp"], [818, 1, 1, "", "expand_dims"], [449, 1, 1, "", "expm1"], [822, 1, 1, "", "flip"], [453, 1, 1, "", "floor"], [457, 1, 1, "", "floor_divide"], [217, 1, 1, "", "from_dlpack"], [223, 1, 1, "", "full_like"], [620, 1, 1, "", "gather_nd"], [161, 1, 1, "", "gelu"], [461, 1, 1, "", "greater"], [465, 1, 1, "", "greater_equal"], [737, 1, 1, "", "inv"], [469, 1, 1, "", "isfinite"], [473, 1, 1, "", "isinf"], [477, 1, 1, "", "isnan"], [887, 1, 1, "", "layer_norm"], [166, 1, 1, "", "leaky_relu"], [481, 1, 1, "", "less"], [485, 1, 1, "", "less_equal"], [489, 1, 1, "", "log"], [493, 1, 1, "", "log10"], [497, 1, 1, "", "log1p"], [501, 1, 1, "", "log2"], [505, 1, 1, "", "logaddexp"], [509, 1, 1, "", "logical_and"], [513, 1, 1, "", "logical_not"], [517, 1, 1, "", "logical_or"], [521, 1, 1, "", "logical_xor"], [740, 1, 1, "", "matmul"], [744, 1, 1, "", "matrix_norm"], [748, 1, 1, "", "matrix_rank"], [751, 1, 1, "", "matrix_transpose"], [933, 1, 1, "", "max"], [937, 1, 1, "", "mean"], [234, 1, 1, "", "meshgrid"], [941, 1, 1, "", "min"], [527, 1, 1, "", "multiply"], [239, 1, 1, "", "native_array"], [532, 1, 1, "", "negative"], [536, 1, 1, "", "not_equal"], [247, 1, 1, "", "ones_like"], [754, 1, 1, "", "outer"], [826, 1, 1, "", "permute_dims"], [757, 1, 1, "", "pinv"], [540, 1, 1, "", "positive"], [544, 1, 1, "", "pow"], [945, 1, 1, "", "prod"], [760, 1, 1, "", "qr"], [171, 1, 1, "", "relu"], [548, 1, 1, "", "remainder"], [830, 1, 1, "", "repeat"], [834, 1, 1, "", "reshape"], [838, 1, 1, "", "roll"], [552, 1, 1, "", "round"], [176, 1, 1, "", "sigmoid"], [556, 1, 1, "", "sign"], [560, 1, 1, "", "sin"], [564, 1, 1, "", "sinh"], [181, 1, 1, "", "softmax"], [186, 1, 1, "", "softplus"], [764, 1, 1, "", "solve"], [923, 1, 1, "", "sort"], [799, 1, 1, "", "sparse_cross_entropy"], [568, 1, 1, "", "sqrt"], [572, 1, 1, "", "square"], [844, 1, 1, "", "squeeze"], [848, 1, 1, "", "stack"], [949, 1, 1, "", "std"], [577, 1, 1, "", "subtract"], [953, 1, 1, "", "sum"], [767, 1, 1, "", "svd"], [770, 1, 1, "", "svdvals"], [852, 1, 1, "", "swapaxes"], [582, 1, 1, "", "tan"], [192, 1, 1, "", "tanh"], [773, 1, 1, "", "tensordot"], [856, 1, 1, "", "tile"], [776, 1, 1, "", "trace"], [253, 1, 1, "", "tril"], [258, 1, 1, "", "triu"], [587, 1, 1, "", "trunc"], [911, 1, 1, "", "unique_counts"], [957, 1, 1, "", "var"], [779, 1, 1, "", "vecdot"], [782, 1, 1, "", "vector_norm"], [785, 1, 1, "", "vector_to_skew_symmetric_matrix"], [860, 1, 1, "", "zero_pad"], [266, 1, 1, "", "zeros_like"]], "ivy.array.conversions": [[27, 1, 1, "", "args_to_ivy"], [28, 1, 1, "", "args_to_native"], [29, 1, 1, "", "to_ivy"], [30, 1, 1, "", "to_native"]], "ivy.array.creation": [[32, 2, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[32, 3, 1, "", "asarray"], [32, 3, 1, "", "empty_like"], [32, 3, 1, "", "from_dlpack"], [32, 3, 1, "", "full_like"], [32, 3, 1, "", "meshgrid"], [32, 3, 1, "", "native_array"], [32, 3, 1, "", "ones_like"], [32, 3, 1, "", "tril"], [32, 3, 1, "", "triu"], [32, 3, 1, "", "zeros_like"]], "ivy.array.data_type": [[34, 2, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[34, 3, 1, "", "can_cast"]], "ivy.array.device": [[36, 2, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[38, 2, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[38, 3, 1, "", "abs"], [38, 3, 1, "", "acos"], [38, 3, 1, "", "acosh"], [38, 3, 1, "", "add"], [38, 3, 1, "", "asin"], [38, 3, 1, "", "asinh"], [38, 3, 1, "", "atan"], [38, 3, 1, "", "atan2"], [38, 3, 1, "", "atanh"], [38, 3, 1, "", "bitwise_and"], [38, 3, 1, "", "bitwise_invert"], [38, 3, 1, "", "bitwise_left_shift"], [38, 3, 1, "", "bitwise_or"], [38, 3, 1, "", "bitwise_right_shift"], [38, 3, 1, "", "bitwise_xor"], [38, 3, 1, "", "ceil"], [38, 3, 1, "", "cos"], [38, 3, 1, "", "cosh"], [38, 3, 1, "", "divide"], [38, 3, 1, "", "equal"], [38, 3, 1, "", "erf"], [38, 3, 1, "", "exp"], [38, 3, 1, "", "expm1"], [38, 3, 1, "", "floor"], [38, 3, 1, "", "floor_divide"], [38, 3, 1, "", "greater"], [38, 3, 1, "", "greater_equal"], [38, 3, 1, "", "isfinite"], [38, 3, 1, "", "isinf"], [38, 3, 1, "", "isnan"], [38, 3, 1, "", "less"], [38, 3, 1, "", "less_equal"], [38, 3, 1, "", "log"], [38, 3, 1, "", "log10"], [38, 3, 1, "", "log1p"], [38, 3, 1, "", "log2"], [38, 3, 1, "", "logaddexp"], [38, 3, 1, "", "logical_and"], [38, 3, 1, "", "logical_not"], [38, 3, 1, "", "logical_or"], [38, 3, 1, "", "logical_xor"], [38, 3, 1, "", "multiply"], [38, 3, 1, "", "negative"], [38, 3, 1, "", "not_equal"], [38, 3, 1, "", "positive"], [38, 3, 1, "", "pow"], [38, 3, 1, "", "remainder"], [38, 3, 1, "", "round"], [38, 3, 1, "", "sign"], [38, 3, 1, "", "sin"], [38, 3, 1, "", "sinh"], [38, 3, 1, "", "sqrt"], [38, 3, 1, "", "square"], [38, 3, 1, "", "subtract"], [38, 3, 1, "", "tan"], [38, 3, 1, "", "tanh"], [38, 3, 1, "", "trunc"]], "ivy.array.general": [[40, 2, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[40, 3, 1, "", "all_equal"], [40, 3, 1, "", "gather_nd"]], "ivy.array.gradients": [[42, 2, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[42, 3, 1, "", "adam_step"]], "ivy.array.image": [[44, 2, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[46, 2, 1, "", "ArrayWithLayers"]], "ivy.array.linear_algebra": [[48, 2, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[48, 3, 1, "", "cholesky"], [48, 3, 1, "", "cross"], [48, 3, 1, "", "det"], [48, 3, 1, "", "diagonal"], [48, 3, 1, "", "eigh"], [48, 3, 1, "", "eigvalsh"], [48, 3, 1, "", "inv"], [48, 3, 1, "", "matmul"], [48, 3, 1, "", "matrix_norm"], [48, 3, 1, "", "matrix_rank"], [48, 3, 1, "", "matrix_transpose"], [48, 3, 1, "", "outer"], [48, 3, 1, "", "pinv"], [48, 3, 1, "", "qr"], [48, 3, 1, "", "solve"], [48, 3, 1, "", "svd"], [48, 3, 1, "", "svdvals"], [48, 3, 1, "", "tensordot"], [48, 3, 1, "", "trace"], [48, 3, 1, "", "vecdot"], [48, 3, 1, "", "vector_norm"], [48, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[50, 2, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[50, 3, 1, "", "binary_cross_entropy"], [50, 3, 1, "", "cross_entropy"], [50, 3, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[52, 2, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[52, 3, 1, "", "clip"], [52, 3, 1, "", "concat"], [52, 3, 1, "", "constant_pad"], [52, 3, 1, "", "expand_dims"], [52, 3, 1, "", "flip"], [52, 3, 1, "", "permute_dims"], [52, 3, 1, "", "repeat"], [52, 3, 1, "", "reshape"], [52, 3, 1, "", "roll"], [52, 3, 1, "", "squeeze"], [52, 3, 1, "", "stack"], [52, 3, 1, "", "swapaxes"], [52, 3, 1, "", "tile"], [52, 3, 1, "", "zero_pad"]], "ivy.array.norms": [[54, 2, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[54, 3, 1, "", "layer_norm"]], "ivy.array.random": [[56, 2, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[58, 2, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[60, 2, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[60, 3, 1, "", "unique_counts"]], "ivy.array.sorting": [[62, 2, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[62, 3, 1, "", "argsort"], [62, 3, 1, "", "sort"]], "ivy.array.statistical": [[64, 2, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[64, 3, 1, "", "einsum"], [64, 3, 1, "", "max"], [64, 3, 1, "", "mean"], [64, 3, 1, "", "min"], [64, 3, 1, "", "prod"], [64, 3, 1, "", "std"], [64, 3, 1, "", "sum"], [64, 3, 1, "", "var"]], "ivy.array.utility": [[66, 2, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[66, 3, 1, "", "all"], [66, 3, 1, "", "any"]], "ivy.array.wrapping": [[68, 1, 1, "", "add_ivy_array_instance_methods"]], "ivy.backend_handler": [[0, 2, 1, "", "ContextManager"], [2, 1, 1, "", "choose_random_backend"], [3, 1, 1, "", "clear_backend_stack"], [4, 1, 1, "", "current_backend"], [5, 1, 1, "", "get_backend"], [6, 1, 1, "", "set_backend"], [7, 1, 1, "", "try_import_ivy_jax"], [8, 1, 1, "", "try_import_ivy_mxnet"], [9, 1, 1, "", "try_import_ivy_numpy"], [10, 1, 1, "", "try_import_ivy_tf"], [11, 1, 1, "", "try_import_ivy_torch"], [12, 1, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 3, 1, "", "__init__"]], "ivy.container": [[70, 0, 0, "-", "activations"], [72, 0, 0, "-", "base"], [74, 0, 0, "-", "container"], [77, 0, 0, "-", "creation"], [79, 0, 0, "-", "data_type"], [81, 0, 0, "-", "device"], [83, 0, 0, "-", "elementwise"], [85, 0, 0, "-", "general"], [87, 0, 0, "-", "gradients"], [89, 0, 0, "-", "image"], [91, 0, 0, "-", "layers"], [93, 0, 0, "-", "linear_algebra"], [95, 0, 0, "-", "losses"], [97, 0, 0, "-", "manipulation"], [99, 0, 0, "-", "norms"], [101, 0, 0, "-", "random"], [103, 0, 0, "-", "searching"], [105, 0, 0, "-", "set"], [107, 0, 0, "-", "sorting"], [109, 0, 0, "-", "statistical"], [111, 0, 0, "-", "utility"], [113, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[71, 2, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[71, 3, 1, "", "gelu"], [71, 3, 1, "", "leaky_relu"], [71, 3, 1, "", "relu"], [71, 3, 1, "", "sigmoid"], [71, 3, 1, "", "softmax"], [71, 3, 1, "", "softplus"], [71, 3, 1, "", "static_gelu"], [71, 3, 1, "", "static_leaky_relu"], [71, 3, 1, "", "static_relu"], [71, 3, 1, "", "static_sigmoid"], [71, 3, 1, "", "static_softmax"], [71, 3, 1, "", "static_softplus"], [71, 3, 1, "", "static_tanh"], [71, 3, 1, "", "tanh"]], "ivy.container.base": [[73, 2, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[73, 3, 1, "", "__getitem__"], [73, 3, 1, "", "__init__"], [73, 3, 1, "", "__setitem__"], [73, 3, 1, "", "all_false"], [73, 3, 1, "", "all_key_chains"], [73, 3, 1, "", "all_true"], [73, 3, 1, "", "arrays_as_lists"], [73, 3, 1, "", "as_arrays"], [73, 3, 1, "", "as_bools"], [73, 3, 1, "", "as_ones"], [73, 3, 1, "", "as_random_uniform"], [73, 3, 1, "", "as_variables"], [73, 3, 1, "", "as_zeros"], [73, 3, 1, "", "assert_contains_sub_container"], [73, 3, 1, "", "assert_contains_sub_structure"], [73, 3, 1, "", "assert_identical"], [73, 3, 1, "", "assert_identical_structure"], [73, 3, 1, "", "at_key_chain"], [73, 3, 1, "", "at_key_chains"], [73, 3, 1, "", "at_keys"], [73, 3, 1, "", "clip"], [73, 3, 1, "", "combine"], [73, 3, 1, "", "common_key_chains"], [73, 4, 1, "", "config"], [73, 3, 1, "", "contains_sub_container"], [73, 3, 1, "", "contains_sub_structure"], [73, 3, 1, "", "copy"], [73, 3, 1, "", "create_if_absent"], [73, 3, 1, "", "cutoff_at_depth"], [73, 3, 1, "", "cutoff_at_height"], [73, 3, 1, "", "deep_copy"], [73, 4, 1, "", "dev"], [73, 3, 1, "", "dev_clone"], [73, 3, 1, "", "dev_dist"], [73, 4, 1, "", "dev_str"], [73, 3, 1, "", "diff"], [73, 3, 1, "", "dtype"], [73, 3, 1, "", "einops_rearrange"], [73, 3, 1, "", "einops_reduce"], [73, 3, 1, "", "einops_repeat"], [73, 3, 1, "", "find_sub_container"], [73, 3, 1, "", "find_sub_structure"], [73, 3, 1, "", "flatten_key_chain"], [73, 3, 1, "", "flatten_key_chains"], [73, 3, 1, "", "format_key_chains"], [73, 3, 1, "", "from_disk_as_hdf5"], [73, 3, 1, "", "from_disk_as_json"], [73, 3, 1, "", "from_disk_as_pickled"], [73, 3, 1, "", "from_flat_list"], [73, 3, 1, "", "from_numpy"], [73, 3, 1, "", "gather"], [73, 3, 1, "", "gather_nd"], [73, 3, 1, "", "h5_file_size"], [73, 3, 1, "", "handle_inplace"], [73, 3, 1, "", "has_key"], [73, 3, 1, "", "has_key_chain"], [73, 3, 1, "", "has_nans"], [73, 3, 1, "", "identical"], [73, 3, 1, "", "identical_array_shapes"], [73, 3, 1, "", "identical_configs"], [73, 3, 1, "", "identical_structure"], [73, 3, 1, "", "if_exists"], [73, 3, 1, "", "inplace_update"], [73, 4, 1, "", "ivy"], [73, 3, 1, "", "key_chains_containing"], [73, 3, 1, "", "list_join"], [73, 3, 1, "", "list_stack"], [73, 3, 1, "", "map"], [73, 3, 1, "", "map_conts"], [73, 3, 1, "", "matrix_norm"], [73, 4, 1, "", "max_depth"], [73, 3, 1, "", "maximum"], [73, 3, 1, "", "minimum"], [73, 3, 1, "", "multi_map"], [73, 3, 1, "", "multi_map_in_static_method"], [73, 3, 1, "", "num_arrays"], [73, 3, 1, "", "overwrite_at_key_chain"], [73, 3, 1, "", "overwrite_at_key_chains"], [73, 3, 1, "", "prune_empty"], [73, 3, 1, "", "prune_key_chain"], [73, 3, 1, "", "prune_key_chains"], [73, 3, 1, "", "prune_key_from_key_chains"], [73, 3, 1, "", "prune_keys"], [73, 3, 1, "", "prune_keys_from_key_chains"], [73, 3, 1, "", "reduce"], [73, 3, 1, "", "remove_key_length_limit"], [73, 3, 1, "", "remove_print_limit"], [73, 3, 1, "", "reshape_like"], [73, 3, 1, "", "restructure"], [73, 3, 1, "", "restructure_key_chains"], [73, 3, 1, "", "set_at_key_chain"], [73, 3, 1, "", "set_at_key_chains"], [73, 3, 1, "", "set_at_keys"], [73, 3, 1, "", "set_framework"], [73, 3, 1, "", "set_ivy_backend"], [73, 4, 1, "", "shape"], [73, 4, 1, "", "shapes"], [73, 3, 1, "", "show"], [73, 3, 1, "", "show_sub_container"], [73, 3, 1, "", "shuffle"], [73, 3, 1, "", "shuffle_h5_file"], [73, 3, 1, "", "size_ordered_arrays"], [73, 3, 1, "", "slice_keys"], [73, 3, 1, "", "slice_via_key"], [73, 3, 1, "", "sort_by_key"], [73, 3, 1, "", "split"], [73, 3, 1, "", "stop_gradients"], [73, 3, 1, "", "structural_diff"], [73, 3, 1, "", "to_device"], [73, 3, 1, "", "to_dict"], [73, 3, 1, "", "to_disk_as_hdf5"], [73, 3, 1, "", "to_disk_as_json"], [73, 3, 1, "", "to_disk_as_pickled"], [73, 3, 1, "", "to_flat_list"], [73, 3, 1, "", "to_iterator"], [73, 3, 1, "", "to_iterator_keys"], [73, 3, 1, "", "to_iterator_values"], [73, 3, 1, "", "to_ivy"], [73, 3, 1, "", "to_jsonable"], [73, 3, 1, "", "to_list"], [73, 3, 1, "", "to_multi_dev"], [73, 3, 1, "", "to_native"], [73, 3, 1, "", "to_numpy"], [73, 3, 1, "", "to_raw"], [73, 3, 1, "", "trim_key"], [73, 3, 1, "", "try_kc"], [73, 3, 1, "", "unify"], [73, 3, 1, "", "unstack"], [73, 3, 1, "", "update_config"], [73, 3, 1, "", "vector_norm"], [73, 3, 1, "", "with_default_key_color"], [73, 3, 1, "", "with_entries_as_lists"], [73, 3, 1, "", "with_ivy_backend"], [73, 3, 1, "", "with_key_length_limit"], [73, 3, 1, "", "with_print_indent"], [73, 3, 1, "", "with_print_limit"], [73, 3, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[75, 2, 1, "", "Container"], [76, 2, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[75, 3, 1, "", "__add__"], [75, 3, 1, "", "__init__"], [75, 3, 1, "", "__radd__"], [75, 3, 1, "", "arange"], [75, 3, 1, "", "arg_info"], [75, 3, 1, "", "arg_names"], [75, 3, 1, "", "argmax"], [75, 3, 1, "", "argmin"], [75, 3, 1, "", "array"], [75, 3, 1, "", "array_equal"], [75, 3, 1, "", "arrays_equal"], [75, 3, 1, "", "as_ivy_dev"], [75, 3, 1, "", "as_ivy_dtype"], [75, 3, 1, "", "as_native_dev"], [75, 3, 1, "", "as_native_dtype"], [75, 3, 1, "", "assert_supports_inplace"], [75, 3, 1, "", "astype"], [75, 3, 1, "", "broadcast_arrays"], [75, 3, 1, "", "broadcast_to"], [75, 3, 1, "", "cache_fn"], [75, 3, 1, "", "clear_mem_on_dev"], [75, 3, 1, "", "clip_matrix_norm"], [75, 3, 1, "", "closest_valid_dtype"], [75, 3, 1, "", "container_types"], [75, 3, 1, "", "conv1d"], [75, 3, 1, "", "conv1d_transpose"], [75, 3, 1, "", "conv2d"], [75, 3, 1, "", "conv2d_transpose"], [75, 3, 1, "", "conv3d"], [75, 3, 1, "", "conv3d_transpose"], [75, 3, 1, "", "copy_array"], [75, 3, 1, "", "cross"], [75, 3, 1, "", "cumprod"], [75, 3, 1, "", "cumsum"], [75, 3, 1, "", "current_backend"], [75, 3, 1, "", "current_backend_str"], [75, 3, 1, "", "default"], [75, 3, 1, "", "default_device"], [75, 3, 1, "", "default_dtype"], [75, 3, 1, "", "default_float_dtype"], [75, 3, 1, "", "default_int_dtype"], [75, 3, 1, "", "depthwise_conv2d"], [75, 3, 1, "", "det"], [75, 3, 1, "", "dev_clone_array"], [75, 3, 1, "", "dev_clone_iter"], [75, 3, 1, "", "dev_clone_nest"], [75, 3, 1, "", "dev_dist_array"], [75, 3, 1, "", "dev_dist_iter"], [75, 3, 1, "", "dev_dist_nest"], [75, 3, 1, "", "dev_unify"], [75, 3, 1, "", "dev_unify_array"], [75, 3, 1, "", "dev_unify_iter"], [75, 3, 1, "", "dev_unify_nest"], [75, 3, 1, "", "dev_util"], [75, 3, 1, "", "diagonal"], [75, 3, 1, "", "dropout"], [75, 3, 1, "", "dtype_bits"], [75, 3, 1, "", "eigh"], [75, 3, 1, "", "eigvalsh"], [75, 3, 1, "", "empty"], [75, 3, 1, "", "execute_with_gradients"], [75, 3, 1, "", "exists"], [75, 3, 1, "", "eye"], [75, 3, 1, "", "finfo"], [75, 3, 1, "", "floormod"], [75, 3, 1, "", "fourier_encode"], [75, 3, 1, "", "full"], [75, 3, 1, "", "function_supported_dtypes"], [75, 3, 1, "", "function_unsupported_dtypes"], [75, 3, 1, "", "get_all_arrays_in_memory"], [75, 3, 1, "", "get_all_ivy_arrays_on_dev"], [75, 3, 1, "", "get_min_base"], [75, 3, 1, "", "get_min_denominator"], [75, 3, 1, "", "get_num_dims"], [75, 3, 1, "", "get_referrers_recursive"], [75, 3, 1, "", "gpu_is_available"], [75, 3, 1, "", "handle_nestable"], [75, 3, 1, "", "handle_out_argument"], [75, 3, 1, "", "iinfo"], [75, 3, 1, "", "indices_where"], [75, 3, 1, "", "infer_device"], [75, 3, 1, "", "infer_dtype"], [75, 3, 1, "", "inplace_arrays_supported"], [75, 3, 1, "", "inplace_decrement"], [75, 3, 1, "", "inplace_increment"], [75, 3, 1, "", "inplace_variables_supported"], [75, 3, 1, "", "inputs_to_native_arrays"], [75, 3, 1, "", "inv"], [75, 3, 1, "", "invalid_dtype"], [75, 3, 1, "", "is_float_dtype"], [75, 3, 1, "", "is_int_dtype"], [75, 3, 1, "", "is_ivy_container"], [75, 3, 1, "", "linear"], [75, 3, 1, "", "linspace"], [75, 3, 1, "", "logspace"], [75, 3, 1, "", "lstm_update"], [75, 3, 1, "", "match_kwargs"], [75, 3, 1, "", "matrix_power"], [75, 3, 1, "", "matrix_rank"], [75, 3, 1, "", "matrix_transpose"], [75, 3, 1, "", "multi_head_attention"], [75, 3, 1, "", "multinomial"], [75, 3, 1, "", "multiprocessing"], [75, 3, 1, "", "nonzero"], [75, 3, 1, "", "num_arrays_in_memory"], [75, 3, 1, "", "num_cpu_cores"], [75, 3, 1, "", "num_gpus"], [75, 3, 1, "", "num_ivy_arrays_on_dev"], [75, 3, 1, "", "one_hot"], [75, 3, 1, "", "ones"], [75, 3, 1, "", "outer"], [75, 3, 1, "", "outputs_to_ivy_arrays"], [75, 3, 1, "", "percent_used_mem_on_dev"], [75, 3, 1, "", "pinv"], [75, 3, 1, "", "print_all_arrays_in_memory"], [75, 3, 1, "", "print_all_ivy_arrays_on_dev"], [75, 3, 1, "", "promote_types"], [75, 3, 1, "", "qr"], [75, 3, 1, "", "queue_timeout"], [75, 3, 1, "", "randint"], [75, 3, 1, "", "random_normal"], [75, 3, 1, "", "result_type"], [75, 3, 1, "", "scaled_dot_product_attention"], [75, 3, 1, "", "scatter_flat"], [75, 3, 1, "", "scatter_nd"], [75, 3, 1, "", "seed"], [75, 3, 1, "", "set_default_device"], [75, 3, 1, "", "set_default_dtype"], [75, 3, 1, "", "set_default_float_dtype"], [75, 3, 1, "", "set_default_int_dtype"], [75, 3, 1, "", "set_min_base"], [75, 3, 1, "", "set_min_denominator"], [75, 3, 1, "", "set_queue_timeout"], [75, 3, 1, "", "set_split_factor"], [75, 3, 1, "", "set_tmp_dir"], [75, 3, 1, "", "set_with_grads"], [75, 3, 1, "", "shape_to_tuple"], [75, 3, 1, "", "slogdet"], [75, 3, 1, "", "solve"], [75, 3, 1, "", "split_factor"], [75, 3, 1, "", "split_func_call"], [75, 3, 1, "", "stable_divide"], [75, 3, 1, "", "stable_pow"], [75, 3, 1, "", "static_acos"], [75, 3, 1, "", "static_acosh"], [75, 3, 1, "", "static_arg_info"], [75, 3, 1, "", "static_arg_names"], [75, 3, 1, "", "static_argmax"], [75, 3, 1, "", "static_argmin"], [75, 3, 1, "", "static_array"], [75, 3, 1, "", "static_array_equal"], [75, 3, 1, "", "static_arrays_equal"], [75, 3, 1, "", "static_as_ivy_dev"], [75, 3, 1, "", "static_as_ivy_dtype"], [75, 3, 1, "", "static_as_native_dev"], [75, 3, 1, "", "static_as_native_dtype"], [75, 3, 1, "", "static_asin"], [75, 3, 1, "", "static_asinh"], [75, 3, 1, "", "static_assert_supports_inplace"], [75, 3, 1, "", "static_astype"], [75, 3, 1, "", "static_atan"], [75, 3, 1, "", "static_atan2"], [75, 3, 1, "", "static_atanh"], [75, 3, 1, "", "static_bitwise_and"], [75, 3, 1, "", "static_bitwise_invert"], [75, 3, 1, "", "static_bitwise_left_shift"], [75, 3, 1, "", "static_bitwise_or"], [75, 3, 1, "", "static_bitwise_right_shift"], [75, 3, 1, "", "static_bitwise_xor"], [75, 3, 1, "", "static_broadcast_arrays"], [75, 3, 1, "", "static_broadcast_to"], [75, 3, 1, "", "static_cache_fn"], [75, 3, 1, "", "static_ceil"], [75, 3, 1, "", "static_clear_mem_on_dev"], [75, 3, 1, "", "static_clip_matrix_norm"], [75, 3, 1, "", "static_clip_vector_norm"], [75, 3, 1, "", "static_closest_valid_dtype"], [75, 3, 1, "", "static_concat"], [75, 3, 1, "", "static_constant_pad"], [75, 3, 1, "", "static_container_types"], [75, 3, 1, "", "static_conv1d"], [75, 3, 1, "", "static_conv1d_transpose"], [75, 3, 1, "", "static_conv2d"], [75, 3, 1, "", "static_conv2d_transpose"], [75, 3, 1, "", "static_conv3d"], [75, 3, 1, "", "static_conv3d_transpose"], [75, 3, 1, "", "static_copy_array"], [75, 3, 1, "", "static_cos"], [75, 3, 1, "", "static_cosh"], [75, 3, 1, "", "static_cross"], [75, 3, 1, "", "static_cumprod"], [75, 3, 1, "", "static_cumsum"], [75, 3, 1, "", "static_current_backend"], [75, 3, 1, "", "static_current_backend_str"], [75, 3, 1, "", "static_default"], [75, 3, 1, "", "static_default_device"], [75, 3, 1, "", "static_default_dtype"], [75, 3, 1, "", "static_default_float_dtype"], [75, 3, 1, "", "static_default_int_dtype"], [75, 3, 1, "", "static_depthwise_conv2d"], [75, 3, 1, "", "static_det"], [75, 3, 1, "", "static_dev"], [75, 3, 1, "", "static_dev_clone"], [75, 3, 1, "", "static_dev_clone_array"], [75, 3, 1, "", "static_dev_clone_iter"], [75, 3, 1, "", "static_dev_clone_nest"], [75, 3, 1, "", "static_dev_dist"], [75, 3, 1, "", "static_dev_dist_array"], [75, 3, 1, "", "static_dev_dist_iter"], [75, 3, 1, "", "static_dev_dist_nest"], [75, 3, 1, "", "static_dev_unify"], [75, 3, 1, "", "static_dev_unify_array"], [75, 3, 1, "", "static_dev_unify_iter"], [75, 3, 1, "", "static_dev_unify_nest"], [75, 3, 1, "", "static_dev_util"], [75, 3, 1, "", "static_diagonal"], [75, 3, 1, "", "static_dropout"], [75, 3, 1, "", "static_dtype"], [75, 3, 1, "", "static_dtype_bits"], [75, 3, 1, "", "static_eigh"], [75, 3, 1, "", "static_eigvalsh"], [75, 3, 1, "", "static_einops_rearrange"], [75, 3, 1, "", "static_einops_reduce"], [75, 3, 1, "", "static_einops_repeat"], [75, 3, 1, "", "static_einsum"], [75, 3, 1, "", "static_empty"], [75, 3, 1, "", "static_equal"], [75, 3, 1, "", "static_erf"], [75, 3, 1, "", "static_execute_with_gradients"], [75, 3, 1, "", "static_exists"], [75, 3, 1, "", "static_exp"], [75, 3, 1, "", "static_expand_dims"], [75, 3, 1, "", "static_expm1"], [75, 3, 1, "", "static_finfo"], [75, 3, 1, "", "static_flip"], [75, 3, 1, "", "static_floor"], [75, 3, 1, "", "static_floor_divide"], [75, 3, 1, "", "static_floormod"], [75, 3, 1, "", "static_fourier_encode"], [75, 3, 1, "", "static_full"], [75, 3, 1, "", "static_function_supported_dtypes"], [75, 3, 1, "", "static_function_unsupported_dtypes"], [75, 3, 1, "", "static_gather"], [75, 3, 1, "", "static_get_all_arrays_in_memory"], [75, 3, 1, "", "static_get_all_ivy_arrays_on_dev"], [75, 3, 1, "", "static_get_min_base"], [75, 3, 1, "", "static_get_min_denominator"], [75, 3, 1, "", "static_get_num_dims"], [75, 3, 1, "", "static_get_referrers_recursive"], [75, 3, 1, "", "static_gpu_is_available"], [75, 3, 1, "", "static_greater"], [75, 3, 1, "", "static_greater_equal"], [75, 3, 1, "", "static_handle_nestable"], [75, 3, 1, "", "static_handle_out_argument"], [75, 3, 1, "", "static_has_nans"], [75, 3, 1, "", "static_iinfo"], [75, 3, 1, "", "static_indices_where"], [75, 3, 1, "", "static_infer_device"], [75, 3, 1, "", "static_infer_dtype"], [75, 3, 1, "", "static_inplace_arrays_supported"], [75, 3, 1, "", "static_inplace_decrement"], [75, 3, 1, "", "static_inplace_increment"], [75, 3, 1, "", "static_inplace_update"], [75, 3, 1, "", "static_inplace_variables_supported"], [75, 3, 1, "", "static_inputs_to_native_arrays"], [75, 3, 1, "", "static_inv"], [75, 3, 1, "", "static_invalid_dtype"], [75, 3, 1, "", "static_is_array"], [75, 3, 1, "", "static_is_float_dtype"], [75, 3, 1, "", "static_is_int_dtype"], [75, 3, 1, "", "static_is_ivy_array"], [75, 3, 1, "", "static_is_ivy_container"], [75, 3, 1, "", "static_is_native_array"], [75, 3, 1, "", "static_isfinite"], [75, 3, 1, "", "static_isinf"], [75, 3, 1, "", "static_isnan"], [75, 3, 1, "", "static_layer_norm"], [75, 3, 1, "", "static_less"], [75, 3, 1, "", "static_less_equal"], [75, 3, 1, "", "static_linear"], [75, 3, 1, "", "static_log"], [75, 3, 1, "", "static_log10"], [75, 3, 1, "", "static_log1p"], [75, 3, 1, "", "static_log2"], [75, 3, 1, "", "static_logaddexp"], [75, 3, 1, "", "static_logical_and"], [75, 3, 1, "", "static_logical_not"], [75, 3, 1, "", "static_logical_or"], [75, 3, 1, "", "static_logical_xor"], [75, 3, 1, "", "static_lstm_update"], [75, 3, 1, "", "static_match_kwargs"], [75, 3, 1, "", "static_matmul"], [75, 3, 1, "", "static_matrix_norm"], [75, 3, 1, "", "static_matrix_power"], [75, 3, 1, "", "static_matrix_rank"], [75, 3, 1, "", "static_matrix_transpose"], [75, 3, 1, "", "static_max"], [75, 3, 1, "", "static_maximum"], [75, 3, 1, "", "static_mean"], [75, 3, 1, "", "static_min"], [75, 3, 1, "", "static_minimum"], [75, 3, 1, "", "static_multi_head_attention"], [75, 3, 1, "", "static_multinomial"], [75, 3, 1, "", "static_multiprocessing"], [75, 3, 1, "", "static_negative"], [75, 3, 1, "", "static_nonzero"], [75, 3, 1, "", "static_not_equal"], [75, 3, 1, "", "static_num_arrays_in_memory"], [75, 3, 1, "", "static_num_cpu_cores"], [75, 3, 1, "", "static_num_gpus"], [75, 3, 1, "", "static_num_ivy_arrays_on_dev"], [75, 3, 1, "", "static_one_hot"], [75, 3, 1, "", "static_outer"], [75, 3, 1, "", "static_outputs_to_ivy_arrays"], [75, 3, 1, "", "static_percent_used_mem_on_dev"], [75, 3, 1, "", "static_permute_dims"], [75, 3, 1, "", "static_pinv"], [75, 3, 1, "", "static_positive"], [75, 3, 1, "", "static_pow"], [75, 3, 1, "", "static_print_all_arrays_in_memory"], [75, 3, 1, "", "static_print_all_ivy_arrays_on_dev"], [75, 3, 1, "", "static_prod"], [75, 3, 1, "", "static_promote_types"], [75, 3, 1, "", "static_qr"], [75, 3, 1, "", "static_queue_timeout"], [75, 3, 1, "", "static_random_normal"], [75, 3, 1, "", "static_remainder"], [75, 3, 1, "", "static_repeat"], [75, 3, 1, "", "static_reshape"], [75, 3, 1, "", "static_result_type"], [75, 3, 1, "", "static_round"], [75, 3, 1, "", "static_scaled_dot_product_attention"], [75, 3, 1, "", "static_scatter_flat"], [75, 3, 1, "", "static_scatter_nd"], [75, 3, 1, "", "static_seed"], [75, 3, 1, "", "static_set_default_device"], [75, 3, 1, "", "static_set_default_dtype"], [75, 3, 1, "", "static_set_default_float_dtype"], [75, 3, 1, "", "static_set_default_int_dtype"], [75, 3, 1, "", "static_set_min_base"], [75, 3, 1, "", "static_set_min_denominator"], [75, 3, 1, "", "static_set_queue_timeout"], [75, 3, 1, "", "static_set_split_factor"], [75, 3, 1, "", "static_set_tmp_dir"], [75, 3, 1, "", "static_set_with_grads"], [75, 3, 1, "", "static_shape"], [75, 3, 1, "", "static_shape_to_tuple"], [75, 3, 1, "", "static_shuffle"], [75, 3, 1, "", "static_sign"], [75, 3, 1, "", "static_sin"], [75, 3, 1, "", "static_sinh"], [75, 3, 1, "", "static_slogdet"], [75, 3, 1, "", "static_solve"], [75, 3, 1, "", "static_split"], [75, 3, 1, "", "static_split_factor"], [75, 3, 1, "", "static_split_func_call"], [75, 3, 1, "", "static_sqrt"], [75, 3, 1, "", "static_square"], [75, 3, 1, "", "static_squeeze"], [75, 3, 1, "", "static_stable_divide"], [75, 3, 1, "", "static_stable_pow"], [75, 3, 1, "", "static_stack"], [75, 3, 1, "", "static_std"], [75, 3, 1, "", "static_stop_gradient"], [75, 3, 1, "", "static_sum"], [75, 3, 1, "", "static_supports_inplace"], [75, 3, 1, "", "static_svd"], [75, 3, 1, "", "static_svdvals"], [75, 3, 1, "", "static_swapaxes"], [75, 3, 1, "", "static_tensordot"], [75, 3, 1, "", "static_tile"], [75, 3, 1, "", "static_tmp_dir"], [75, 3, 1, "", "static_to_device"], [75, 3, 1, "", "static_to_list"], [75, 3, 1, "", "static_to_native_arrays_and_back"], [75, 3, 1, "", "static_to_numpy"], [75, 3, 1, "", "static_to_scalar"], [75, 3, 1, "", "static_total_mem_on_dev"], [75, 3, 1, "", "static_tpu_is_available"], [75, 3, 1, "", "static_trace"], [75, 3, 1, "", "static_trunc"], [75, 3, 1, "", "static_try_else_none"], [75, 3, 1, "", "static_type_promote_arrays"], [75, 3, 1, "", "static_unique_all"], [75, 3, 1, "", "static_unique_inverse"], [75, 3, 1, "", "static_unique_values"], [75, 3, 1, "", "static_unset_default_device"], [75, 3, 1, "", "static_unset_default_dtype"], [75, 3, 1, "", "static_unset_default_float_dtype"], [75, 3, 1, "", "static_unset_default_int_dtype"], [75, 3, 1, "", "static_unset_with_grads"], [75, 3, 1, "", "static_unstack"], [75, 3, 1, "", "static_used_mem_on_dev"], [75, 3, 1, "", "static_valid_dtype"], [75, 3, 1, "", "static_value_is_nan"], [75, 3, 1, "", "static_var"], [75, 3, 1, "", "static_variable"], [75, 3, 1, "", "static_variable_data"], [75, 3, 1, "", "static_vecdot"], [75, 3, 1, "", "static_vector_norm"], [75, 3, 1, "", "static_vector_to_skew_symmetric_matrix"], [75, 3, 1, "", "static_where"], [75, 3, 1, "", "static_with_grads"], [75, 3, 1, "", "static_zero_pad"], [75, 3, 1, "", "stop_gradient"], [75, 3, 1, "", "supports_inplace"], [75, 3, 1, "", "svd"], [75, 3, 1, "", "svdvals"], [75, 3, 1, "", "tensordot"], [75, 3, 1, "", "tmp_dir"], [75, 3, 1, "", "to_native_arrays_and_back"], [75, 3, 1, "", "to_scalar"], [75, 3, 1, "", "total_mem_on_dev"], [75, 3, 1, "", "tpu_is_available"], [75, 3, 1, "", "trace"], [75, 3, 1, "", "try_else_none"], [75, 3, 1, "", "type_promote_arrays"], [75, 3, 1, "", "unique_all"], [75, 3, 1, "", "unique_inverse"], [75, 3, 1, "", "unique_values"], [75, 3, 1, "", "unset_default_device"], [75, 3, 1, "", "unset_default_dtype"], [75, 3, 1, "", "unset_default_float_dtype"], [75, 3, 1, "", "unset_default_int_dtype"], [75, 3, 1, "", "unset_with_grads"], [75, 3, 1, "", "used_mem_on_dev"], [75, 3, 1, "", "valid_dtype"], [75, 3, 1, "", "value_is_nan"], [75, 3, 1, "", "variable"], [75, 3, 1, "", "variable_data"], [75, 3, 1, "", "vecdot"], [75, 3, 1, "", "vector_to_skew_symmetric_matrix"], [75, 3, 1, "", "where"], [75, 3, 1, "", "with_grads"], [75, 3, 1, "", "zeros"]], "ivy.container.container.MultiDevContainer": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "at_dev"], [76, 3, 1, "", "at_devs"]], "ivy.container.container_methods": [[359, 1, 1, "", "abs"], [364, 1, 1, "", "acos"], [368, 1, 1, "", "acosh"], [668, 1, 1, "", "adam_step"], [672, 1, 1, "", "adam_update"], [372, 1, 1, "", "add"], [963, 1, 1, "", "all"], [593, 1, 1, "", "all_equal"], [968, 1, 1, "", "any"], [919, 1, 1, "", "argsort"], [204, 1, 1, "", "asarray"], [377, 1, 1, "", "asin"], [381, 1, 1, "", "asinh"], [385, 1, 1, "", "atan"], [389, 1, 1, "", "atan2"], [393, 1, 1, "", "atanh"], [790, 1, 1, "", "binary_cross_entropy"], [397, 1, 1, "", "bitwise_and"], [401, 1, 1, "", "bitwise_invert"], [405, 1, 1, "", "bitwise_left_shift"], [409, 1, 1, "", "bitwise_or"], [413, 1, 1, "", "bitwise_right_shift"], [417, 1, 1, "", "bitwise_xor"], [280, 1, 1, "", "can_cast"], [421, 1, 1, "", "ceil"], [718, 1, 1, "", "cholesky"], [806, 1, 1, "", "clip"], [604, 1, 1, "", "clip_vector_norm"], [811, 1, 1, "", "concat"], [815, 1, 1, "", "constant_pad"], [425, 1, 1, "", "cos"], [429, 1, 1, "", "cosh"], [795, 1, 1, "", "cross_entropy"], [433, 1, 1, "", "divide"], [930, 1, 1, "", "einsum"], [210, 1, 1, "", "empty_like"], [438, 1, 1, "", "equal"], [442, 1, 1, "", "erf"], [446, 1, 1, "", "exp"], [819, 1, 1, "", "expand_dims"], [450, 1, 1, "", "expm1"], [823, 1, 1, "", "flip"], [454, 1, 1, "", "floor"], [458, 1, 1, "", "floor_divide"], [218, 1, 1, "", "from_dlpack"], [224, 1, 1, "", "full_like"], [621, 1, 1, "", "gather_nd"], [162, 1, 1, "", "gelu"], [677, 1, 1, "", "gradient_descent_update"], [462, 1, 1, "", "greater"], [466, 1, 1, "", "greater_equal"], [681, 1, 1, "", "is_variable"], [470, 1, 1, "", "isfinite"], [474, 1, 1, "", "isinf"], [478, 1, 1, "", "isnan"], [685, 1, 1, "", "lamb_update"], [689, 1, 1, "", "lars_update"], [888, 1, 1, "", "layer_norm"], [167, 1, 1, "", "leaky_relu"], [482, 1, 1, "", "less"], [486, 1, 1, "", "less_equal"], [490, 1, 1, "", "log"], [494, 1, 1, "", "log10"], [498, 1, 1, "", "log1p"], [502, 1, 1, "", "log2"], [506, 1, 1, "", "logaddexp"], [510, 1, 1, "", "logical_and"], [514, 1, 1, "", "logical_not"], [518, 1, 1, "", "logical_or"], [522, 1, 1, "", "logical_xor"], [741, 1, 1, "", "matmul"], [934, 1, 1, "", "max"], [938, 1, 1, "", "mean"], [235, 1, 1, "", "meshgrid"], [942, 1, 1, "", "min"], [528, 1, 1, "", "multiply"], [240, 1, 1, "", "native_array"], [533, 1, 1, "", "negative"], [537, 1, 1, "", "not_equal"], [248, 1, 1, "", "ones_like"], [693, 1, 1, "", "optimizer_update"], [827, 1, 1, "", "permute_dims"], [541, 1, 1, "", "positive"], [545, 1, 1, "", "pow"], [946, 1, 1, "", "prod"], [897, 1, 1, "", "random_uniform"], [172, 1, 1, "", "relu"], [549, 1, 1, "", "remainder"], [831, 1, 1, "", "repeat"], [835, 1, 1, "", "reshape"], [839, 1, 1, "", "roll"], [553, 1, 1, "", "round"], [177, 1, 1, "", "sigmoid"], [557, 1, 1, "", "sign"], [561, 1, 1, "", "sin"], [565, 1, 1, "", "sinh"], [182, 1, 1, "", "softmax"], [187, 1, 1, "", "softplus"], [924, 1, 1, "", "sort"], [800, 1, 1, "", "sparse_cross_entropy"], [569, 1, 1, "", "sqrt"], [573, 1, 1, "", "square"], [845, 1, 1, "", "squeeze"], [849, 1, 1, "", "stack"], [361, 1, 1, "", "static_abs"], [670, 1, 1, "", "static_adam_step"], [674, 1, 1, "", "static_adam_update"], [374, 1, 1, "", "static_add"], [965, 1, 1, "", "static_all"], [595, 1, 1, "", "static_all_equal"], [970, 1, 1, "", "static_any"], [201, 1, 1, "", "static_arange"], [921, 1, 1, "", "static_argsort"], [206, 1, 1, "", "static_asarray"], [792, 1, 1, "", "static_binary_cross_entropy"], [282, 1, 1, "", "static_can_cast"], [720, 1, 1, "", "static_cholesky"], [808, 1, 1, "", "static_clip"], [797, 1, 1, "", "static_cross_entropy"], [435, 1, 1, "", "static_divide"], [212, 1, 1, "", "static_empty_like"], [215, 1, 1, "", "static_eye"], [220, 1, 1, "", "static_from_dlpack"], [226, 1, 1, "", "static_full_like"], [623, 1, 1, "", "static_gather_nd"], [164, 1, 1, "", "static_gelu"], [679, 1, 1, "", "static_gradient_descent_update"], [683, 1, 1, "", "static_is_variable"], [687, 1, 1, "", "static_lamb_update"], [691, 1, 1, "", "static_lars_update"], [169, 1, 1, "", "static_leaky_relu"], [229, 1, 1, "", "static_linspace"], [232, 1, 1, "", "static_logspace"], [237, 1, 1, "", "static_meshgrid"], [530, 1, 1, "", "static_multiply"], [242, 1, 1, "", "static_native_array"], [245, 1, 1, "", "static_ones"], [250, 1, 1, "", "static_ones_like"], [695, 1, 1, "", "static_optimizer_update"], [894, 1, 1, "", "static_randint"], [899, 1, 1, "", "static_random_uniform"], [174, 1, 1, "", "static_relu"], [841, 1, 1, "", "static_roll"], [179, 1, 1, "", "static_sigmoid"], [184, 1, 1, "", "static_softmax"], [189, 1, 1, "", "static_softplus"], [926, 1, 1, "", "static_sort"], [802, 1, 1, "", "static_sparse_cross_entropy"], [576, 1, 1, "", "static_subtract"], [581, 1, 1, "", "static_tan"], [191, 1, 1, "", "static_tanh"], [252, 1, 1, "", "static_tril"], [257, 1, 1, "", "static_triu"], [910, 1, 1, "", "static_unique_counts"], [262, 1, 1, "", "static_zeros"], [265, 1, 1, "", "static_zeros_like"], [950, 1, 1, "", "std"], [578, 1, 1, "", "subtract"], [954, 1, 1, "", "sum"], [853, 1, 1, "", "swapaxes"], [583, 1, 1, "", "tan"], [193, 1, 1, "", "tanh"], [857, 1, 1, "", "tile"], [254, 1, 1, "", "tril"], [259, 1, 1, "", "triu"], [588, 1, 1, "", "trunc"], [912, 1, 1, "", "unique_counts"], [958, 1, 1, "", "var"], [861, 1, 1, "", "zero_pad"], [267, 1, 1, "", "zeros_like"]], "ivy.container.creation": [[78, 2, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[78, 3, 1, "", "asarray"], [78, 3, 1, "", "empty_like"], [78, 3, 1, "", "from_dlpack"], [78, 3, 1, "", "full_like"], [78, 3, 1, "", "meshgrid"], [78, 3, 1, "", "native_array"], [78, 3, 1, "", "ones_like"], [78, 3, 1, "", "static_arange"], [78, 3, 1, "", "static_asarray"], [78, 3, 1, "", "static_empty_like"], [78, 3, 1, "", "static_eye"], [78, 3, 1, "", "static_from_dlpack"], [78, 3, 1, "", "static_full_like"], [78, 3, 1, "", "static_linspace"], [78, 3, 1, "", "static_logspace"], [78, 3, 1, "", "static_meshgrid"], [78, 3, 1, "", "static_native_array"], [78, 3, 1, "", "static_ones"], [78, 3, 1, "", "static_ones_like"], [78, 3, 1, "", "static_tril"], [78, 3, 1, "", "static_triu"], [78, 3, 1, "", "static_zeros"], [78, 3, 1, "", "static_zeros_like"], [78, 3, 1, "", "tril"], [78, 3, 1, "", "triu"], [78, 3, 1, "", "zeros_like"]], "ivy.container.data_type": [[80, 2, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[80, 3, 1, "", "can_cast"], [80, 3, 1, "", "static_can_cast"]], "ivy.container.device": [[82, 2, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[84, 2, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[84, 3, 1, "", "abs"], [84, 3, 1, "", "acos"], [84, 3, 1, "", "acosh"], [84, 3, 1, "", "add"], [84, 3, 1, "", "asin"], [84, 3, 1, "", "asinh"], [84, 3, 1, "", "atan"], [84, 3, 1, "", "atan2"], [84, 3, 1, "", "atanh"], [84, 3, 1, "", "bitwise_and"], [84, 3, 1, "", "bitwise_invert"], [84, 3, 1, "", "bitwise_left_shift"], [84, 3, 1, "", "bitwise_or"], [84, 3, 1, "", "bitwise_right_shift"], [84, 3, 1, "", "bitwise_xor"], [84, 3, 1, "", "ceil"], [84, 3, 1, "", "cos"], [84, 3, 1, "", "cosh"], [84, 3, 1, "", "divide"], [84, 3, 1, "", "equal"], [84, 3, 1, "", "erf"], [84, 3, 1, "", "exp"], [84, 3, 1, "", "expm1"], [84, 3, 1, "", "floor"], [84, 3, 1, "", "floor_divide"], [84, 3, 1, "", "greater"], [84, 3, 1, "", "greater_equal"], [84, 3, 1, "", "isfinite"], [84, 3, 1, "", "isinf"], [84, 3, 1, "", "isnan"], [84, 3, 1, "", "less"], [84, 3, 1, "", "less_equal"], [84, 3, 1, "", "log"], [84, 3, 1, "", "log10"], [84, 3, 1, "", "log1p"], [84, 3, 1, "", "log2"], [84, 3, 1, "", "logaddexp"], [84, 3, 1, "", "logical_and"], [84, 3, 1, "", "logical_not"], [84, 3, 1, "", "logical_or"], [84, 3, 1, "", "logical_xor"], [84, 3, 1, "", "multiply"], [84, 3, 1, "", "negative"], [84, 3, 1, "", "not_equal"], [84, 3, 1, "", "positive"], [84, 3, 1, "", "pow"], [84, 3, 1, "", "remainder"], [84, 3, 1, "", "round"], [84, 3, 1, "", "sign"], [84, 3, 1, "", "sin"], [84, 3, 1, "", "sinh"], [84, 3, 1, "", "sqrt"], [84, 3, 1, "", "square"], [84, 3, 1, "", "static_abs"], [84, 3, 1, "", "static_add"], [84, 3, 1, "", "static_divide"], [84, 3, 1, "", "static_multiply"], [84, 3, 1, "", "static_subtract"], [84, 3, 1, "", "static_tan"], [84, 3, 1, "", "static_tanh"], [84, 3, 1, "", "subtract"], [84, 3, 1, "", "tan"], [84, 3, 1, "", "tanh"], [84, 3, 1, "", "trunc"]], "ivy.container.general": [[86, 2, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[86, 3, 1, "", "all_equal"], [86, 3, 1, "", "clip_vector_norm"], [86, 3, 1, "", "gather_nd"], [86, 3, 1, "", "static_all_equal"], [86, 3, 1, "", "static_gather_nd"]], "ivy.container.gradients": [[88, 2, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[88, 3, 1, "", "adam_step"], [88, 3, 1, "", "adam_update"], [88, 3, 1, "", "gradient_descent_update"], [88, 3, 1, "", "is_variable"], [88, 3, 1, "", "lamb_update"], [88, 3, 1, "", "lars_update"], [88, 3, 1, "", "optimizer_update"], [88, 3, 1, "", "static_adam_step"], [88, 3, 1, "", "static_adam_update"], [88, 3, 1, "", "static_gradient_descent_update"], [88, 3, 1, "", "static_is_variable"], [88, 3, 1, "", "static_lamb_update"], [88, 3, 1, "", "static_lars_update"], [88, 3, 1, "", "static_optimizer_update"]], "ivy.container.image": [[90, 2, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[92, 2, 1, "", "ContainerWithLayers"]], "ivy.container.linear_algebra": [[94, 2, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[94, 3, 1, "", "cholesky"], [94, 3, 1, "", "matmul"], [94, 3, 1, "", "static_cholesky"]], "ivy.container.losses": [[96, 2, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[96, 3, 1, "", "binary_cross_entropy"], [96, 3, 1, "", "cross_entropy"], [96, 3, 1, "", "sparse_cross_entropy"], [96, 3, 1, "", "static_binary_cross_entropy"], [96, 3, 1, "", "static_cross_entropy"], [96, 3, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[98, 2, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[98, 3, 1, "", "clip"], [98, 3, 1, "", "concat"], [98, 3, 1, "", "constant_pad"], [98, 3, 1, "", "expand_dims"], [98, 3, 1, "", "flip"], [98, 3, 1, "", "permute_dims"], [98, 3, 1, "", "repeat"], [98, 3, 1, "", "reshape"], [98, 3, 1, "", "roll"], [98, 3, 1, "", "squeeze"], [98, 3, 1, "", "stack"], [98, 3, 1, "", "static_clip"], [98, 3, 1, "", "static_roll"], [98, 3, 1, "", "swapaxes"], [98, 3, 1, "", "tile"], [98, 3, 1, "", "zero_pad"]], "ivy.container.norms": [[100, 2, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[100, 3, 1, "", "layer_norm"]], "ivy.container.random": [[102, 2, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[102, 3, 1, "", "random_uniform"], [102, 3, 1, "", "static_randint"], [102, 3, 1, "", "static_random_uniform"]], "ivy.container.searching": [[104, 2, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[106, 2, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[106, 3, 1, "", "static_unique_counts"], [106, 3, 1, "", "unique_counts"]], "ivy.container.sorting": [[108, 2, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[108, 3, 1, "", "argsort"], [108, 3, 1, "", "sort"], [108, 3, 1, "", "static_argsort"], [108, 3, 1, "", "static_sort"]], "ivy.container.statistical": [[110, 2, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[110, 3, 1, "", "einsum"], [110, 3, 1, "", "max"], [110, 3, 1, "", "mean"], [110, 3, 1, "", "min"], [110, 3, 1, "", "prod"], [110, 3, 1, "", "std"], [110, 3, 1, "", "sum"], [110, 3, 1, "", "var"]], "ivy.container.utility": [[112, 2, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[112, 3, 1, "", "all"], [112, 3, 1, "", "any"], [112, 3, 1, "", "static_all"], [112, 3, 1, "", "static_any"]], "ivy.container.wrapping": [[114, 1, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[150, 1, 1, "", "handle_nestable"], [151, 1, 1, "", "handle_out_argument"], [152, 1, 1, "", "infer_device"], [153, 1, 1, "", "infer_dtype"], [154, 1, 1, "", "inputs_to_ivy_arrays"], [155, 1, 1, "", "inputs_to_native_arrays"], [156, 1, 1, "", "outputs_to_ivy_arrays"], [157, 1, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[159, 0, 0, "-", "activations"], [195, 0, 0, "-", "compilation"], [197, 0, 0, "-", "constants"], [198, 0, 0, "-", "creation"], [269, 0, 0, "-", "data_type"], [306, 0, 0, "-", "device"], [356, 0, 0, "-", "elementwise"], [590, 0, 0, "-", "general"], [664, 0, 0, "-", "gradients"], [702, 0, 0, "-", "layers"], [715, 0, 0, "-", "linear_algebra"], [787, 0, 0, "-", "losses"], [803, 0, 0, "-", "manipulation"], [863, 0, 0, "-", "meta"], [867, 0, 0, "-", "nest"], [885, 0, 0, "-", "norms"], [890, 0, 0, "-", "random"], [902, 0, 0, "-", "searching"], [907, 0, 0, "-", "set"], [916, 0, 0, "-", "sorting"], [927, 0, 0, "-", "statistical"], [960, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[163, 1, 1, "", "gelu"], [168, 1, 1, "", "leaky_relu"], [173, 1, 1, "", "relu"], [178, 1, 1, "", "sigmoid"], [183, 1, 1, "", "softmax"], [188, 1, 1, "", "softplus"], [194, 1, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[196, 1, 1, "", "compile"]], "ivy.functional.ivy.constants": [[197, 5, 1, "", "e"], [197, 5, 1, "", "inf"], [197, 5, 1, "", "nan"], [197, 5, 1, "", "newaxis"], [197, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[200, 1, 1, "", "arange"], [198, 1, 1, "", "array"], [205, 1, 1, "", "asarray"], [207, 1, 1, "", "empty"], [211, 1, 1, "", "empty_like"], [214, 1, 1, "", "eye"], [219, 1, 1, "", "from_dlpack"], [221, 1, 1, "", "full"], [225, 1, 1, "", "full_like"], [228, 1, 1, "", "linspace"], [231, 1, 1, "", "logspace"], [236, 1, 1, "", "meshgrid"], [241, 1, 1, "", "native_array"], [244, 1, 1, "", "ones"], [249, 1, 1, "", "ones_like"], [255, 1, 1, "", "tril"], [260, 1, 1, "", "triu"], [263, 1, 1, "", "zeros"], [268, 1, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[269, 2, 1, "", "DefaultDtype"], [269, 2, 1, "", "DefaultFloatDtype"], [269, 2, 1, "", "DefaultIntDtype"], [273, 1, 1, "", "as_ivy_dtype"], [274, 1, 1, "", "as_native_dtype"], [275, 1, 1, "", "astype"], [276, 1, 1, "", "broadcast_arrays"], [277, 1, 1, "", "broadcast_to"], [281, 1, 1, "", "can_cast"], [283, 1, 1, "", "closest_valid_dtype"], [284, 1, 1, "", "default_dtype"], [285, 1, 1, "", "default_float_dtype"], [286, 1, 1, "", "default_int_dtype"], [287, 1, 1, "", "dtype"], [288, 1, 1, "", "dtype_bits"], [289, 1, 1, "", "finfo"], [290, 1, 1, "", "function_supported_dtypes"], [291, 1, 1, "", "function_unsupported_dtypes"], [292, 1, 1, "", "iinfo"], [293, 1, 1, "", "invalid_dtype"], [294, 1, 1, "", "is_float_dtype"], [295, 1, 1, "", "is_int_dtype"], [296, 1, 1, "", "promote_types"], [297, 1, 1, "", "result_type"], [298, 1, 1, "", "set_default_dtype"], [299, 1, 1, "", "set_default_float_dtype"], [300, 1, 1, "", "set_default_int_dtype"], [301, 1, 1, "", "type_promote_arrays"], [302, 1, 1, "", "unset_default_dtype"], [303, 1, 1, "", "unset_default_float_dtype"], [304, 1, 1, "", "unset_default_int_dtype"], [305, 1, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[269, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[269, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[269, 3, 1, "", "__init__"]], "ivy.functional.ivy.device": [[306, 2, 1, "", "DefaultDevice"], [308, 2, 1, "", "DevClonedItem"], [309, 2, 1, "", "DevClonedIter"], [310, 2, 1, "", "DevClonedNest"], [311, 2, 1, "", "DevDistItem"], [312, 2, 1, "", "DevDistIter"], [313, 2, 1, "", "DevDistNest"], [306, 2, 1, "", "DevManager"], [315, 2, 1, "", "DevMapper"], [316, 2, 1, "", "DevMapperMultiProc"], [306, 2, 1, "", "MultiDev"], [318, 2, 1, "", "MultiDevItem"], [319, 2, 1, "", "MultiDevIter"], [320, 2, 1, "", "MultiDevNest"], [321, 2, 1, "", "Profiler"], [322, 1, 1, "", "as_ivy_dev"], [323, 1, 1, "", "as_native_dev"], [324, 1, 1, "", "clear_mem_on_dev"], [325, 1, 1, "", "default_device"], [326, 1, 1, "", "dev"], [327, 1, 1, "", "dev_clone"], [328, 1, 1, "", "dev_clone_array"], [329, 1, 1, "", "dev_clone_iter"], [330, 1, 1, "", "dev_clone_nest"], [331, 1, 1, "", "dev_dist"], [332, 1, 1, "", "dev_dist_array"], [333, 1, 1, "", "dev_dist_iter"], [334, 1, 1, "", "dev_dist_nest"], [335, 1, 1, "", "dev_unify"], [336, 1, 1, "", "dev_unify_array"], [337, 1, 1, "", "dev_unify_iter"], [338, 1, 1, "", "dev_unify_nest"], [339, 1, 1, "", "dev_util"], [340, 1, 1, "", "get_all_ivy_arrays_on_dev"], [341, 1, 1, "", "gpu_is_available"], [342, 1, 1, "", "num_cpu_cores"], [343, 1, 1, "", "num_gpus"], [344, 1, 1, "", "num_ivy_arrays_on_dev"], [345, 1, 1, "", "percent_used_mem_on_dev"], [346, 1, 1, "", "print_all_ivy_arrays_on_dev"], [347, 1, 1, "", "set_default_device"], [348, 1, 1, "", "set_split_factor"], [349, 1, 1, "", "split_factor"], [350, 1, 1, "", "split_func_call"], [351, 1, 1, "", "to_device"], [352, 1, 1, "", "total_mem_on_dev"], [353, 1, 1, "", "tpu_is_available"], [354, 1, 1, "", "unset_default_device"], [355, 1, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[306, 3, 1, "", "__enter__"], [306, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[306, 3, 1, "", "__init__"], [306, 3, 1, "", "da_tune_step"], [306, 4, 1, "", "dim_size"], [306, 3, 1, "", "ds_tune_step"], [306, 3, 1, "", "map"], [306, 3, 1, "", "repeated_config_check"], [306, 4, 1, "", "tune_step"], [306, 4, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[315, 3, 1, "", "__init__"], [315, 3, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[316, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[306, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[318, 3, 1, "", "__init__"], [318, 3, 1, "", "items"], [318, 3, 1, "", "keys"], [318, 4, 1, "", "shape"], [318, 3, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[319, 3, 1, "", "__init__"], [319, 3, 1, "", "at_dev"], [319, 3, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[320, 3, 1, "", "__init__"], [320, 3, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[321, 3, 1, "", "__init__"], [321, 3, 1, "", "start"], [321, 3, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[360, 1, 1, "", "abs"], [365, 1, 1, "", "acos"], [369, 1, 1, "", "acosh"], [373, 1, 1, "", "add"], [378, 1, 1, "", "asin"], [382, 1, 1, "", "asinh"], [386, 1, 1, "", "atan"], [390, 1, 1, "", "atan2"], [394, 1, 1, "", "atanh"], [398, 1, 1, "", "bitwise_and"], [402, 1, 1, "", "bitwise_invert"], [406, 1, 1, "", "bitwise_left_shift"], [410, 1, 1, "", "bitwise_or"], [414, 1, 1, "", "bitwise_right_shift"], [418, 1, 1, "", "bitwise_xor"], [422, 1, 1, "", "ceil"], [426, 1, 1, "", "cos"], [430, 1, 1, "", "cosh"], [434, 1, 1, "", "divide"], [439, 1, 1, "", "equal"], [443, 1, 1, "", "erf"], [447, 1, 1, "", "exp"], [451, 1, 1, "", "expm1"], [455, 1, 1, "", "floor"], [459, 1, 1, "", "floor_divide"], [463, 1, 1, "", "greater"], [467, 1, 1, "", "greater_equal"], [471, 1, 1, "", "isfinite"], [475, 1, 1, "", "isinf"], [479, 1, 1, "", "isnan"], [483, 1, 1, "", "less"], [487, 1, 1, "", "less_equal"], [491, 1, 1, "", "log"], [495, 1, 1, "", "log10"], [499, 1, 1, "", "log1p"], [503, 1, 1, "", "log2"], [507, 1, 1, "", "logaddexp"], [511, 1, 1, "", "logical_and"], [515, 1, 1, "", "logical_not"], [519, 1, 1, "", "logical_or"], [523, 1, 1, "", "logical_xor"], [524, 1, 1, "", "maximum"], [525, 1, 1, "", "minimum"], [529, 1, 1, "", "multiply"], [534, 1, 1, "", "negative"], [538, 1, 1, "", "not_equal"], [542, 1, 1, "", "positive"], [546, 1, 1, "", "pow"], [550, 1, 1, "", "remainder"], [554, 1, 1, "", "round"], [558, 1, 1, "", "sign"], [562, 1, 1, "", "sin"], [566, 1, 1, "", "sinh"], [570, 1, 1, "", "sqrt"], [574, 1, 1, "", "square"], [579, 1, 1, "", "subtract"], [584, 1, 1, "", "tan"], [585, 1, 1, "", "tanh"], [589, 1, 1, "", "trunc"]], "ivy.functional.ivy.general": [[594, 1, 1, "", "all_equal"], [596, 1, 1, "", "arg_info"], [597, 1, 1, "", "arg_names"], [598, 1, 1, "", "array_equal"], [599, 1, 1, "", "arrays_equal"], [600, 1, 1, "", "assert_supports_inplace"], [601, 1, 1, "", "cache_fn"], [602, 1, 1, "", "clip_matrix_norm"], [605, 1, 1, "", "clip_vector_norm"], [606, 1, 1, "", "container_types"], [607, 1, 1, "", "copy_array"], [608, 1, 1, "", "cumprod"], [609, 1, 1, "", "cumsum"], [610, 1, 1, "", "current_backend_str"], [611, 1, 1, "", "default"], [612, 1, 1, "", "einops_rearrange"], [613, 1, 1, "", "einops_reduce"], [614, 1, 1, "", "einops_repeat"], [615, 1, 1, "", "exists"], [616, 1, 1, "", "floormod"], [617, 1, 1, "", "fourier_encode"], [618, 1, 1, "", "gather"], [622, 1, 1, "", "gather_nd"], [624, 1, 1, "", "get_all_arrays_in_memory"], [625, 1, 1, "", "get_min_base"], [626, 1, 1, "", "get_min_denominator"], [627, 1, 1, "", "get_num_dims"], [628, 1, 1, "", "get_referrers_recursive"], [629, 1, 1, "", "has_nans"], [630, 1, 1, "", "indices_where"], [631, 1, 1, "", "inplace_arrays_supported"], [632, 1, 1, "", "inplace_decrement"], [633, 1, 1, "", "inplace_increment"], [634, 1, 1, "", "inplace_update"], [635, 1, 1, "", "inplace_variables_supported"], [636, 1, 1, "", "is_array"], [637, 1, 1, "", "is_ivy_array"], [638, 1, 1, "", "is_ivy_container"], [639, 1, 1, "", "is_native_array"], [640, 1, 1, "", "match_kwargs"], [641, 1, 1, "", "multiprocessing"], [642, 1, 1, "", "num_arrays_in_memory"], [643, 1, 1, "", "one_hot"], [644, 1, 1, "", "print_all_arrays_in_memory"], [645, 1, 1, "", "queue_timeout"], [646, 1, 1, "", "scatter_flat"], [647, 1, 1, "", "scatter_nd"], [648, 1, 1, "", "set_min_base"], [649, 1, 1, "", "set_min_denominator"], [650, 1, 1, "", "set_queue_timeout"], [651, 1, 1, "", "set_tmp_dir"], [652, 1, 1, "", "shape"], [653, 1, 1, "", "shape_to_tuple"], [654, 1, 1, "", "stable_divide"], [655, 1, 1, "", "stable_pow"], [656, 1, 1, "", "supports_inplace"], [657, 1, 1, "", "tmp_dir"], [658, 1, 1, "", "to_list"], [659, 1, 1, "", "to_numpy"], [660, 1, 1, "", "to_scalar"], [661, 1, 1, "", "try_else_none"], [662, 1, 1, "", "unstack"], [663, 1, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[664, 2, 1, "", "GradientTracking"], [669, 1, 1, "", "adam_step"], [673, 1, 1, "", "adam_update"], [675, 1, 1, "", "execute_with_gradients"], [678, 1, 1, "", "gradient_descent_update"], [682, 1, 1, "", "is_variable"], [686, 1, 1, "", "lamb_update"], [690, 1, 1, "", "lars_update"], [694, 1, 1, "", "optimizer_update"], [696, 1, 1, "", "set_with_grads"], [697, 1, 1, "", "stop_gradient"], [698, 1, 1, "", "unset_with_grads"], [699, 1, 1, "", "variable"], [700, 1, 1, "", "variable_data"], [701, 1, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[664, 3, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[703, 1, 1, "", "conv1d"], [704, 1, 1, "", "conv1d_transpose"], [705, 1, 1, "", "conv2d"], [706, 1, 1, "", "conv2d_transpose"], [707, 1, 1, "", "conv3d"], [708, 1, 1, "", "conv3d_transpose"], [709, 1, 1, "", "depthwise_conv2d"], [710, 1, 1, "", "dropout"], [711, 1, 1, "", "linear"], [712, 1, 1, "", "lstm_update"], [713, 1, 1, "", "multi_head_attention"], [714, 1, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[719, 1, 1, "", "cholesky"], [723, 1, 1, "", "cross"], [726, 1, 1, "", "det"], [729, 1, 1, "", "diagonal"], [732, 1, 1, "", "eigh"], [735, 1, 1, "", "eigvalsh"], [738, 1, 1, "", "inv"], [742, 1, 1, "", "matmul"], [745, 1, 1, "", "matrix_norm"], [746, 1, 1, "", "matrix_power"], [749, 1, 1, "", "matrix_rank"], [752, 1, 1, "", "matrix_transpose"], [755, 1, 1, "", "outer"], [758, 1, 1, "", "pinv"], [761, 1, 1, "", "qr"], [762, 1, 1, "", "slogdet"], [765, 1, 1, "", "solve"], [768, 1, 1, "", "svd"], [771, 1, 1, "", "svdvals"], [774, 1, 1, "", "tensordot"], [777, 1, 1, "", "trace"], [780, 1, 1, "", "vecdot"], [783, 1, 1, "", "vector_norm"], [786, 1, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[791, 1, 1, "", "binary_cross_entropy"], [796, 1, 1, "", "cross_entropy"], [801, 1, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[807, 1, 1, "", "clip"], [812, 1, 1, "", "concat"], [816, 1, 1, "", "constant_pad"], [820, 1, 1, "", "expand_dims"], [824, 1, 1, "", "flip"], [828, 1, 1, "", "permute_dims"], [832, 1, 1, "", "repeat"], [836, 1, 1, "", "reshape"], [840, 1, 1, "", "roll"], [842, 1, 1, "", "split"], [846, 1, 1, "", "squeeze"], [850, 1, 1, "", "stack"], [854, 1, 1, "", "swapaxes"], [858, 1, 1, "", "tile"], [862, 1, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[864, 1, 1, "", "fomaml_step"], [865, 1, 1, "", "maml_step"], [866, 1, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[868, 1, 1, "", "all_nested_indices"], [869, 1, 1, "", "copy_nest"], [870, 1, 1, "", "index_nest"], [871, 1, 1, "", "insert_into_nest_at_index"], [872, 1, 1, "", "insert_into_nest_at_indices"], [873, 1, 1, "", "map"], [874, 1, 1, "", "map_nest_at_index"], [875, 1, 1, "", "map_nest_at_indices"], [876, 1, 1, "", "multi_index_nest"], [877, 1, 1, "", "nested_any"], [878, 1, 1, "", "nested_indices_where"], [879, 1, 1, "", "nested_map"], [880, 1, 1, "", "nested_multi_map"], [881, 1, 1, "", "prune_nest_at_index"], [882, 1, 1, "", "prune_nest_at_indices"], [883, 1, 1, "", "set_nest_at_index"], [884, 1, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[889, 1, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[891, 1, 1, "", "multinomial"], [893, 1, 1, "", "randint"], [895, 1, 1, "", "random_normal"], [898, 1, 1, "", "random_uniform"], [900, 1, 1, "", "seed"], [901, 1, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[903, 1, 1, "", "argmax"], [904, 1, 1, "", "argmin"], [905, 1, 1, "", "nonzero"], [906, 1, 1, "", "where"]], "ivy.functional.ivy.set": [[908, 1, 1, "", "unique_all"], [913, 1, 1, "", "unique_counts"], [914, 1, 1, "", "unique_inverse"], [915, 1, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[920, 1, 1, "", "argsort"], [925, 1, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[931, 1, 1, "", "einsum"], [935, 1, 1, "", "max"], [939, 1, 1, "", "mean"], [943, 1, 1, "", "min"], [947, 1, 1, "", "prod"], [951, 1, 1, "", "std"], [955, 1, 1, "", "sum"], [959, 1, 1, "", "var"]], "ivy.functional.ivy.utility": [[964, 1, 1, "", "all"], [969, 1, 1, "", "any"]], "ivy.inspection": [[975, 1, 1, "", "add_array_specs"], [976, 1, 1, "", "fn_array_spec"]], "ivy.stateful": [[979, 0, 0, "-", "activations"], [982, 0, 0, "-", "converters"], [984, 0, 0, "-", "initializers"], [993, 0, 0, "-", "layers"], [1005, 0, 0, "-", "module"], [1007, 0, 0, "-", "norms"], [1009, 0, 0, "-", "optimizers"], [1015, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[980, 2, 1, "", "GEGLU"], [981, 2, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[980, 3, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[981, 3, 1, "", "__init__"]], "ivy.stateful.converters": [[983, 1, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[984, 2, 1, "", "Constant"], [986, 2, 1, "", "FirstLayerSiren"], [987, 2, 1, "", "GlorotUniform"], [984, 2, 1, "", "KaimingNormal"], [989, 2, 1, "", "Ones"], [990, 2, 1, "", "Siren"], [984, 2, 1, "", "Uniform"], [992, 2, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[984, 3, 1, "", "__init__"], [984, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[986, 3, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[987, 3, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[984, 3, 1, "", "__init__"], [984, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[989, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[990, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[984, 3, 1, "", "__init__"], [984, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[992, 3, 1, "", "__init__"]], "ivy.stateful.layers": [[994, 2, 1, "", "Conv1D"], [995, 2, 1, "", "Conv1DTranspose"], [996, 2, 1, "", "Conv2D"], [997, 2, 1, "", "Conv2DTranspose"], [998, 2, 1, "", "Conv3D"], [999, 2, 1, "", "Conv3DTranspose"], [1000, 2, 1, "", "DepthwiseConv2D"], [1001, 2, 1, "", "Dropout"], [1002, 2, 1, "", "LSTM"], [1003, 2, 1, "", "Linear"], [1004, 2, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[994, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[995, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[996, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[997, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[998, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[999, 3, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1000, 3, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1001, 3, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1002, 3, 1, "", "__init__"], [1002, 3, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1003, 3, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1004, 3, 1, "", "__init__"]], "ivy.stateful.module": [[1006, 2, 1, "", "Module"]], "ivy.stateful.module.Module": [[1006, 3, 1, "", "__init__"], [1006, 3, 1, "", "build"], [1006, 4, 1, "", "build_mode"], [1006, 4, 1, "", "built"], [1006, 3, 1, "", "check_submod_rets"], [1006, 3, 1, "", "get_mod_key"], [1006, 3, 1, "", "mod_depth"], [1006, 3, 1, "", "mod_height"], [1006, 3, 1, "", "mod_with_top_mod_key_chain"], [1006, 3, 1, "", "save_weights"], [1006, 3, 1, "", "show_mod_in_top_mod"], [1006, 3, 1, "", "show_structure"], [1006, 3, 1, "", "show_v_in_top_v"], [1006, 3, 1, "", "sub_mods"], [1006, 3, 1, "", "track_submod_call_order"], [1006, 3, 1, "", "track_submod_rets"], [1006, 3, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1008, 2, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1008, 3, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1010, 2, 1, "", "Adam"], [1011, 2, 1, "", "LAMB"], [1012, 2, 1, "", "LARS"], [1013, 2, 1, "", "Optimizer"], [1014, 2, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1010, 3, 1, "", "__init__"], [1010, 3, 1, "", "set_state"], [1010, 4, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1011, 3, 1, "", "__init__"], [1011, 3, 1, "", "set_state"], [1011, 4, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1012, 3, 1, "", "__init__"], [1012, 3, 1, "", "set_state"], [1012, 4, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1013, 3, 1, "", "__init__"], [1013, 3, 1, "", "set_state"], [1013, 3, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1014, 3, 1, "", "__init__"], [1014, 3, 1, "", "set_state"], [1014, 4, 1, "", "state"]], "ivy.stateful.sequential": [[1016, 2, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1016, 3, 1, "", "__init__"]], "ivy.verbosity": [[1019, 1, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 116, 122, 131, 148], "handler": [0, 131], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 971], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 148], "competit": 15, "do": 15, "work": [15, 21], "The": [15, 19, 133, 148], "arrai": [15, 23, 119, 124, 129, 133, 161, 166, 171, 176, 181, 186, 192, 203, 209, 217, 223, 234, 239, 247, 253, 258, 266, 279, 358, 363, 367, 371, 376, 380, 384, 388, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 437, 441, 445, 449, 453, 457, 461, 465, 469, 473, 477, 481, 485, 489, 493, 497, 501, 505, 509, 513, 517, 521, 527, 532, 536, 540, 544, 548, 552, 556, 560, 564, 568, 572, 577, 582, 587, 592, 620, 667, 717, 722, 725, 728, 731, 734, 737, 740, 744, 748, 751, 754, 757, 760, 764, 767, 770, 773, 776, 779, 782, 785, 789, 794, 799, 805, 810, 814, 818, 822, 826, 830, 834, 838, 844, 848, 852, 856, 860, 887, 911, 918, 923, 929, 933, 937, 941, 945, 949, 953, 957, 962, 967], "api": [15, 20, 116, 119, 125, 131, 133, 135, 136], "why": 16, "unifi": [16, 133], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 971], "set": [18, 59, 105, 122, 907], "up": 18, "clone": 18, "ivi": [18, 116, 118, 120, 124, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 200, 201, 203, 204, 205, 206, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 223, 224, 225, 226, 228, 229, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 279, 280, 281, 282, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 384, 385, 386, 388, 389, 390, 392, 393, 394, 396, 397, 398, 400, 401, 402, 404, 405, 406, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 445, 446, 447, 449, 450, 451, 453, 454, 455, 457, 458, 459, 461, 462, 463, 465, 466, 467, 469, 470, 471, 473, 474, 475, 477, 478, 479, 481, 482, 483, 485, 486, 487, 489, 490, 491, 493, 494, 495, 497, 498, 499, 501, 502, 503, 505, 506, 507, 509, 510, 511, 513, 514, 515, 517, 518, 519, 521, 522, 523, 527, 528, 529, 530, 532, 533, 534, 536, 537, 538, 540, 541, 542, 544, 545, 546, 548, 549, 550, 552, 553, 554, 556, 557, 558, 560, 561, 562, 564, 565, 566, 568, 569, 570, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 587, 588, 589, 592, 593, 594, 595, 604, 605, 620, 621, 622, 623, 667, 668, 669, 670, 672, 673, 674, 677, 678, 679, 681, 682, 683, 685, 686, 687, 689, 690, 691, 693, 694, 695, 717, 718, 719, 720, 722, 723, 725, 726, 728, 729, 731, 732, 734, 735, 737, 738, 740, 741, 742, 744, 745, 748, 749, 751, 752, 754, 755, 757, 758, 760, 761, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 782, 783, 785, 786, 789, 790, 791, 792, 794, 795, 796, 797, 799, 800, 801, 802, 805, 806, 807, 808, 810, 811, 812, 814, 815, 816, 818, 819, 820, 822, 823, 824, 826, 827, 828, 830, 831, 832, 834, 835, 836, 838, 839, 840, 841, 844, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 860, 861, 862, 887, 888, 889, 893, 894, 897, 898, 899, 910, 911, 912, 913, 918, 919, 920, 921, 923, 924, 925, 926, 929, 930, 931, 933, 934, 935, 937, 938, 939, 941, 942, 943, 945, 946, 947, 949, 950, 951, 953, 954, 955, 957, 958, 959, 962, 963, 964, 965, 967, 968, 969, 970], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 134], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 119, 120], "local": 19, "open": 20, "task": 20, "function": [20, 121, 123, 125, 126, 127, 129, 131, 136, 148], "format": 20, "frontend": [20, 136], "build": [21, 131], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 148], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 33, 79, 120, 126, 134, 148, 269, 907, 908, 909, 913, 915], "class": [22, 133, 978], "activ": [24, 70, 159, 979], "arraywithactiv": 25, "convers": 26, "args_to_ivi": 27, "args_to_n": 28, "to_ivi": 29, "to_n": 30, "creation": [31, 77, 198], "arraywithcr": 32, "type": [33, 79, 121, 126, 148, 269], "arraywithdatatyp": 34, "devic": [35, 81, 127, 129, 306], "arraywithdevic": 36, "elementwis": [37, 83, 356], "arraywithelementwis": 38, "gener": [39, 85, 120, 590], "arraywithgener": 40, "gradient": [41, 87, 664], "arraywithgradi": 42, "imag": [43, 89], "arraywithimag": 44, "layer": [45, 91, 702, 993], "arraywithlay": 46, "linear": [47, 93, 711, 715, 1003], "algebra": [47, 93, 715], "arraywithlinearalgebra": 48, "loss": [49, 95, 787], "arraywithloss": 50, "manipul": [51, 97, 803], "arraywithmanipul": 52, "norm": [53, 99, 885, 1007], "arraywithnorm": 54, "random": [55, 101, 890], "arraywithrandom": 56, "search": [57, 103, 902], "arraywithsearch": 58, "arraywithset": 60, "sort": [61, 107, 916, 922, 923, 924, 925], "arraywithsort": 62, "statist": [63, 109, 927], "arraywithstatist": 64, "util": [65, 111, 960], "arraywithutil": 66, "wrap": [67, 113, 123], "add_ivy_array_instance_method": 68, "contain": [69, 74, 75, 125, 134, 162, 164, 167, 169, 172, 174, 177, 179, 182, 184, 187, 189, 191, 193, 201, 204, 206, 210, 212, 215, 218, 220, 224, 226, 229, 232, 235, 237, 240, 242, 245, 248, 250, 252, 254, 257, 259, 262, 265, 267, 280, 282, 359, 361, 364, 368, 372, 374, 377, 381, 385, 389, 393, 397, 401, 405, 409, 413, 417, 421, 425, 429, 433, 435, 438, 442, 446, 450, 454, 458, 462, 466, 470, 474, 478, 482, 486, 490, 494, 498, 502, 506, 510, 514, 518, 522, 528, 530, 533, 537, 541, 545, 549, 553, 557, 561, 565, 569, 573, 576, 578, 581, 583, 588, 593, 595, 604, 621, 623, 668, 670, 672, 674, 677, 679, 681, 683, 685, 687, 689, 691, 693, 695, 718, 720, 741, 790, 792, 795, 797, 800, 802, 806, 808, 811, 815, 819, 823, 827, 831, 835, 839, 841, 845, 849, 853, 857, 861, 888, 894, 897, 899, 910, 912, 919, 921, 924, 926, 930, 934, 938, 942, 946, 950, 954, 958, 963, 965, 968, 970], "containerwithactiv": 71, "base": 72, "containerbas": 73, "multidevcontain": 76, "containerwithcr": 78, "containerwithdatatyp": 80, "containerwithdevic": 82, "containerwithelementwis": 84, "containerwithgener": 86, "containerwithgradi": 88, "containerwithimag": 90, "containerwithlay": 92, "containerwithlinearalgebra": 94, "containerwithloss": 96, "containerwithmanipul": 98, "containerwithnorm": 100, "containerwithrandom": 102, "containerwithsearch": 104, "containerwithset": 106, "containerwithsort": 108, "containerwithstatist": 110, "containerwithutil": 112, "add_ivy_container_instance_method": 114, "deep": 115, "dive": 115, "navig": 116, "code": 116, "categor": 116, "submodul": 116, "design": [116, 130, 971], "docstr": [117, 118], "exampl": [118, 129], "tan": [118, 580, 582, 583, 584], "roll": [118, 837, 838, 839, 840], "add": [118, 370, 371, 372, 373], "hypothesi": 120, "self": 120, "consist": 120, "explicit": 120, "test_array_funct": 120, "primari": 121, "composit": 121, "mix": 121, "standalon": 121, "nestabl": [121, 125, 129], "conveni": 121, "nativ": 124, "handl": 124, "instanc": [125, 133], "method": [125, 133, 134], "static": 125, "special": 125, "modul": [126, 127, 135, 1005, 1006], "argument": [126, 127, 128, 129], "other": [126, 127], "inplac": 128, "updat": 128, "out": [128, 129], "copi": 128, "dtype": [129, 287], "number": 129, "oper": [129, 133, 148], "integ": 129, "sequenc": 129, "block": 131, "framework": [131, 132, 978], "graph": [131, 136], "compil": [131, 136, 195, 196], "monkei": 133, "patch": 133, "construct": 134, "represent": 134, "recurs": 134, "built": 134, "ins": 134, "access": 134, "save": 134, "load": 134, "comparison": 134, "custom": [134, 148], "case": 134, "compartment": 134, "configur": 134, "network": [134, 136], "weight": 134, "state": [135, 148], "initi": [135, 984], "optim": [135, 1009, 1013], "transpil": 136, "role": 136, "convert": [136, 982], "model": [136, 143, 148], "builder": 138, "ecosystem": 139, "gym": [140, 147], "mech": 141, "memori": [142, 147], "robot": [144, 147], "vision": [145, 147], "extens": [146, 971], "appli": 147, "librari": 147, "mechan": 147, "faq": 148, "maintain": 148, "version": 148, "dynam": 148, "size": 148, "shape": [148, 652, 907, 908, 909, 913, 915], "check": 148, "control": 148, "flow": 148, "auto": 148, "differenti": 148, "replica": 148, "parallel": 148, "support": 148, "altern": 148, "structur": 148, "func": 149, "wrapper": 149, "handle_nest": 150, "handle_out_argu": 151, "infer_devic": 152, "infer_dtyp": 153, "inputs_to_ivy_arrai": 154, "inputs_to_native_arrai": 155, "outputs_to_ivy_arrai": 156, "to_native_arrays_and_back": 157, "gelu": [160, 161, 162, 163, 981], "static_gelu": 164, "leaky_relu": [165, 166, 167, 168], "static_leaky_relu": 169, "relu": [170, 171, 172, 173], "static_relu": 174, "sigmoid": [175, 176, 177, 178], "static_sigmoid": 179, "softmax": [180, 181, 182, 183], "static_softmax": 184, "softplu": [185, 186, 187, 188], "static_softplu": 189, "tanh": [190, 192, 193, 194, 585], "static_tanh": 191, "constant": 197, "note": [198, 216, 219], "arang": [199, 200], "static_arang": 201, "asarrai": [202, 203, 204, 205], "static_asarrai": 206, "empti": 207, "empty_lik": [208, 209, 210, 211], "static_empty_lik": 212, "ey": [213, 214], "static_ey": 215, "from_dlpack": [216, 217, 218, 219], "static_from_dlpack": 220, "full": 221, "full_lik": [222, 223, 224, 225], "static_full_lik": 226, "linspac": [227, 228], "static_linspac": 229, "logspac": [230, 231], "static_logspac": 232, "meshgrid": [233, 234, 235, 236], "static_meshgrid": 237, "native_arrai": [238, 239, 240, 241], "static_native_arrai": 242, "ones": [243, 244], "static_on": 245, "ones_lik": [246, 247, 248, 249], "static_ones_lik": 250, "tril": [251, 253, 254, 255], "static_tril": 252, "triu": [256, 258, 259, 260], "static_triu": 257, "zero": [261, 263, 992], "static_zero": 262, "zeros_lik": [264, 266, 267, 268], "static_zeros_lik": 265, "as_ivy_dtyp": 273, "as_native_dtyp": 274, "astyp": 275, "broadcast_arrai": 276, "broadcast_to": 277, "can_cast": [278, 279, 280, 281], "static_can_cast": 282, "closest_valid_dtyp": 283, "default_dtyp": 284, "default_float_dtyp": 285, "default_int_dtyp": 286, "dtype_bit": 288, "finfo": 289, "function_supported_dtyp": 290, "function_unsupported_dtyp": 291, "iinfo": 292, "invalid_dtyp": 293, "is_float_dtyp": 294, "is_int_dtyp": 295, "promote_typ": 296, "result_typ": 297, "set_default_dtyp": 298, "set_default_float_dtyp": 299, "set_default_int_dtyp": 300, "type_promote_arrai": 301, "unset_default_dtyp": 302, "unset_default_float_dtyp": 303, "unset_default_int_dtyp": 304, "valid_dtyp": 305, "devcloneditem": 308, "devclonedit": 309, "devclonednest": 310, "devdistitem": 311, "devdistit": 312, "devdistnest": 313, "devmapp": 315, "devmappermultiproc": 316, "multidevitem": 318, "multidevit": 319, "multidevnest": 320, "profil": 321, "as_ivy_dev": 322, "as_native_dev": 323, "clear_mem_on_dev": 324, "default_devic": 325, "dev": 326, "dev_clon": 327, "dev_clone_arrai": 328, "dev_clone_it": 329, "dev_clone_nest": 330, "dev_dist": 331, "dev_dist_arrai": 332, "dev_dist_it": 333, "dev_dist_nest": 334, "dev_unifi": 335, "dev_unify_arrai": 336, "dev_unify_it": 337, "dev_unify_nest": 338, "dev_util": 339, "get_all_ivy_arrays_on_dev": 340, "gpu_is_avail": 341, "num_cpu_cor": 342, "num_gpu": 343, "num_ivy_arrays_on_dev": 344, "percent_used_mem_on_dev": 345, "print_all_ivy_arrays_on_dev": 346, "set_default_devic": 347, "set_split_factor": 348, "split_factor": 349, "split_func_cal": 350, "to_devic": 351, "total_mem_on_dev": 352, "tpu_is_avail": 353, "unset_default_devic": 354, "used_mem_on_dev": 355, "ab": [357, 358, 359, 360], "static_ab": 361, "aco": [362, 363, 364, 365], "acosh": [366, 367, 368, 369], "static_add": 374, "asin": [375, 376, 377, 378], "asinh": [379, 380, 381, 382], "atan": [383, 384, 385, 386], "atan2": [387, 388, 389, 390], "atanh": [391, 392, 393, 394], "bitwise_and": [395, 396, 397, 398], "bitwise_invert": [399, 400, 401, 402], "bitwise_left_shift": [403, 404, 405, 406], "bitwise_or": [407, 408, 409, 410], "bitwise_right_shift": [411, 412, 413, 414], "bitwise_xor": [415, 416, 417, 418], "ceil": [419, 420, 421, 422], "co": [423, 424, 425, 426], "cosh": [427, 428, 429, 430], "divid": [431, 432, 433, 434], "static_divid": 435, "equal": [436, 437, 438, 439], "erf": [440, 441, 442, 443], "exp": [444, 445, 446, 447], "expm1": [448, 449, 450, 451], "floor": [452, 453, 454, 455], "floor_divid": [456, 457, 458, 459], "greater": [460, 461, 462, 463], "greater_equ": [464, 465, 466, 467], "isfinit": [468, 469, 470, 471], "isinf": [472, 473, 474, 475], "isnan": [476, 477, 478, 479], "less": [480, 481, 482, 483], "less_equ": [484, 485, 486, 487], "log": [488, 489, 490, 491], "log10": [492, 493, 494, 495], "log1p": [496, 497, 498, 499], "log2": [500, 501, 502, 503], "logaddexp": [504, 505, 506, 507], "logical_and": [508, 509, 510, 511], "logical_not": [512, 513, 514, 515], "logical_or": [516, 517, 518, 519], "logical_xor": [520, 521, 522, 523], "maximum": 524, "minimum": 525, "multipli": [526, 527, 528, 529], "static_multipli": 530, "neg": [531, 532, 533, 534], "not_equ": [535, 536, 537, 538], "posit": [539, 540, 541, 542], "pow": [543, 544, 545, 546], "remaind": [547, 548, 549, 550], "round": [551, 552, 553, 554], "sign": [555, 556, 557, 558], "sin": [559, 560, 561, 562], "sinh": [563, 564, 565, 566], "sqrt": [567, 568, 569, 570], "squar": [571, 572, 573, 574], "subtract": [575, 577, 578, 579], "static_subtract": 576, "static_tan": 581, "trunc": [586, 587, 588, 589], "all_equ": [591, 592, 593, 594], "static_all_equ": 595, "arg_info": 596, "arg_nam": 597, "array_equ": 598, "arrays_equ": 599, "assert_supports_inplac": 600, "cache_fn": 601, "clip_matrix_norm": 602, "clip_vector_norm": [603, 604, 605], "container_typ": 606, "copy_arrai": 607, "cumprod": 608, "cumsum": 609, "current_backend_str": 610, "default": 611, "einops_rearrang": 612, "einops_reduc": 613, "einops_repeat": 614, "exist": 615, "floormod": 616, "fourier_encod": 617, "gather": 618, "gather_nd": [619, 620, 621, 622], "static_gather_nd": 623, "get_all_arrays_in_memori": 624, "get_min_bas": 625, "get_min_denomin": 626, "get_num_dim": 627, "get_referrers_recurs": 628, "has_nan": 629, "indices_wher": 630, "inplace_arrays_support": 631, "inplace_decr": 632, "inplace_incr": 633, "inplace_upd": 634, "inplace_variables_support": 635, "is_arrai": 636, "is_ivy_arrai": 637, "is_ivy_contain": 638, "is_native_arrai": 639, "match_kwarg": 640, "multiprocess": 641, "num_arrays_in_memori": 642, "one_hot": 643, "print_all_arrays_in_memori": 644, "queue_timeout": 645, "scatter_flat": 646, "scatter_nd": 647, "set_min_bas": 648, "set_min_denomin": 649, "set_queue_timeout": 650, "set_tmp_dir": 651, "shape_to_tupl": 653, "stable_divid": 654, "stable_pow": 655, "supports_inplac": 656, "tmp_dir": 657, "to_list": 658, "to_numpi": 659, "to_scalar": 660, "try_else_non": 661, "unstack": 662, "value_is_nan": 663, "adam_step": [666, 667, 668, 669], "static_adam_step": 670, "adam_upd": [671, 672, 673], "static_adam_upd": 674, "execute_with_gradi": 675, "gradient_descent_upd": [676, 677, 678], "static_gradient_descent_upd": 679, "is_vari": [680, 681, 682], "static_is_vari": 683, "lamb_upd": [684, 685, 686], "static_lamb_upd": 687, "lars_upd": [688, 689, 690], "static_lars_upd": 691, "optimizer_upd": [692, 693, 694], "static_optimizer_upd": 695, "set_with_grad": 696, "stop_gradi": 697, "unset_with_grad": 698, "variabl": 699, "variable_data": 700, "with_grad": 701, "conv1d": [703, 994], "conv1d_transpos": 704, "conv2d": [705, 996], "conv2d_transpos": 706, "conv3d": [707, 998], "conv3d_transpos": 708, "depthwise_conv2d": 709, "dropout": [710, 1001], "lstm_updat": 712, "multi_head_attent": 713, "scaled_dot_product_attent": 714, "choleski": [716, 717, 718, 719], "static_choleski": 720, "cross": [721, 722, 723], "det": [724, 725, 726], "diagon": [727, 728, 729], "eigh": [730, 731, 732], "eigvalsh": [733, 734, 735], "inv": [736, 737, 738], "matmul": [739, 740, 741, 742], "matrix_norm": [743, 744, 745], "matrix_pow": 746, "matrix_rank": [747, 748, 749], "matrix_transpos": [750, 751, 752], "outer": [753, 754, 755], "pinv": [756, 757, 758], "qr": [759, 760, 761], "slogdet": 762, "solv": [763, 764, 765], "svd": [766, 767, 768], "svdval": [769, 770, 771], "tensordot": [772, 773, 774], "trace": [775, 776, 777], "vecdot": [778, 779, 780], "vector_norm": [781, 782, 783], "vector_to_skew_symmetric_matrix": [784, 785, 786], "binary_cross_entropi": [788, 789, 790, 791], "static_binary_cross_entropi": 792, "cross_entropi": [793, 794, 795, 796], "static_cross_entropi": 797, "sparse_cross_entropi": [798, 799, 800, 801], "static_sparse_cross_entropi": 802, "clip": [804, 805, 806, 807], "static_clip": 808, "concat": [809, 810, 811, 812], "constant_pad": [813, 814, 815, 816], "expand_dim": [817, 818, 819, 820], "flip": [821, 822, 823, 824], "permute_dim": [825, 826, 827, 828], "repeat": [829, 830, 831, 832], "reshap": [833, 834, 835, 836], "static_rol": 841, "split": 842, "squeez": [843, 844, 845, 846], "stack": [847, 848, 849, 850], "swapax": [851, 852, 853, 854], "tile": [855, 856, 857, 858], "zero_pad": [859, 860, 861, 862], "meta": 863, "fomaml_step": 864, "maml_step": 865, "reptile_step": 866, "nest": 867, "all_nested_indic": 868, "copy_nest": 869, "index_nest": 870, "insert_into_nest_at_index": 871, "insert_into_nest_at_indic": 872, "map": 873, "map_nest_at_index": 874, "map_nest_at_indic": 875, "multi_index_nest": 876, "nested_ani": 877, "nested_indices_wher": 878, "nested_map": 879, "nested_multi_map": 880, "prune_nest_at_index": 881, "prune_nest_at_indic": 882, "set_nest_at_index": 883, "set_nest_at_indic": 884, "layer_norm": [886, 887, 888, 889], "multinomi": 891, "randint": [892, 893], "static_randint": 894, "random_norm": 895, "random_uniform": [896, 897, 898], "static_random_uniform": 899, "seed": 900, "shuffl": 901, "argmax": 903, "argmin": 904, "nonzero": 905, "where": 906, "depend": [907, 908, 909, 913, 915], "output": [907, 908, 909, 913, 915], "unique_al": 908, "unique_count": [909, 911, 912, 913], "static_unique_count": 910, "unique_invers": 914, "unique_valu": 915, "argsort": [917, 918, 919, 920], "static_argsort": 921, "static_sort": 926, "einsum": [928, 929, 930, 931], "max": [932, 933, 934, 935], "mean": [936, 937, 938, 939], "min": [940, 941, 942, 943], "prod": [944, 945, 946, 947], "std": [948, 949, 950, 951], "sum": [952, 953, 954, 955], "var": [956, 957, 958, 959], "all": [961, 962, 963, 964], "static_al": 965, "ani": [966, 967, 968, 969], "static_ani": 970, "content": 971, "overview": 971, "quick": 971, "start": 971, "roadmap": [971, 977], "citat": 971, "inspect": 974, "add_array_spec": 975, "fn_array_spec": 976, "geglu": 980, "to_ivy_modul": 983, "firstlayersiren": 986, "glorotuniform": 987, "Ones": 989, "siren": 990, "conv1dtranspos": 995, "conv2dtranspos": 997, "conv3dtranspos": 999, "depthwiseconv2d": 1000, "lstm": 1002, "multiheadattent": 1004, "layernorm": 1008, "adam": 1010, "lamb": 1011, "lar": 1012, "sgd": 1014, "sequenti": [1015, 1016], "verbos": 1018, "cprint": 1019}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})