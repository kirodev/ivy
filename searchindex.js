Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[774,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[367,0,0,"-"],creation_functions:[368,0,0,"-"],data_type_functions:[370,0,0,"-"],data_types:[374,0,0,"-"],elementwise_functions:[375,0,0,"-"],function_and_method_signatures:[377,0,0,"-"],linear_algebra_extension:[378,0,0,"-"],linear_algebra_functions:[379,0,0,"-"],manipulation_functions:[380,0,0,"-"],searching_functions:[381,0,0,"-"],set_functions:[382,0,0,"-"],sorting_functions:[383,0,0,"-"],statistical_functions:[384,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{zeros:[369,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[370,1,1,""],finfo:[372,2,1,""],iinfo:[373,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[370,3,1,""],bits:[370,3,1,""],eps:[370,3,1,""],max:[370,3,1,""],min:[370,3,1,""],smallest_normal:[370,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[376,2,1,""]},"ivy.functional.ivy":{array_api:[775,0,0,"-"],core:[794,0,0,"-"],nn:[1141,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[776,0,0,"-"],creation_functions:[777,0,0,"-"],data_type_functions:[778,0,0,"-"],data_types:[781,0,0,"-"],elementwise_functions:[782,0,0,"-"],function_and_method_signatures:[784,0,0,"-"],linear_algebra_extension:[785,0,0,"-"],linear_algebra_functions:[786,0,0,"-"],manipulation_functions:[787,0,0,"-"],searching_functions:[788,0,0,"-"],set_functions:[789,0,0,"-"],sorting_functions:[790,0,0,"-"],statistical_functions:[791,0,0,"-"],utility_functions:[792,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[779,2,1,""],iinfo:[780,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[783,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[793,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[795,0,0,"-"],compilation:[834,0,0,"-"],device:[836,0,0,"-"],dtype:[886,0,0,"-"],general:[910,0,0,"-"],gradients:[1012,0,0,"-"],image:[1028,0,0,"-"],linalg:[1035,0,0,"-"],logic:[1043,0,0,"-"],math:[1047,0,0,"-"],meta:[1065,0,0,"-"],multi_node:[1069,0,0,"-"],nest:[1113,0,0,"-"],random:[1125,0,0,"-"],reductions:[1132,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[796,2,1,""],builtin_add:[797,2,1,""],builtin_and:[798,2,1,""],builtin_bool:[799,2,1,""],builtin_contains:[800,2,1,""],builtin_deepcopy:[801,2,1,""],builtin_dir:[802,2,1,""],builtin_eq:[803,2,1,""],builtin_float:[804,2,1,""],builtin_floordiv:[805,2,1,""],builtin_ge:[806,2,1,""],builtin_getattr:[807,2,1,""],builtin_getattribute:[808,2,1,""],builtin_getitem:[809,2,1,""],builtin_gt:[810,2,1,""],builtin_int:[811,2,1,""],builtin_invert:[812,2,1,""],builtin_le:[813,2,1,""],builtin_lt:[814,2,1,""],builtin_mul:[815,2,1,""],builtin_ne:[816,2,1,""],builtin_neg:[817,2,1,""],builtin_or:[818,2,1,""],builtin_pos:[819,2,1,""],builtin_pow:[820,2,1,""],builtin_radd:[821,2,1,""],builtin_rand:[822,2,1,""],builtin_rfloordiv:[823,2,1,""],builtin_rmul:[824,2,1,""],builtin_ror:[825,2,1,""],builtin_rpow:[826,2,1,""],builtin_rsub:[827,2,1,""],builtin_rtruediv:[828,2,1,""],builtin_rxor:[829,2,1,""],builtin_setitem:[830,2,1,""],builtin_sub:[831,2,1,""],builtin_truediv:[832,2,1,""],builtin_xor:[833,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[835,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[836,1,1,""],DevClonedItem:[838,1,1,""],DevClonedIter:[839,1,1,""],DevClonedNest:[840,1,1,""],DevDistItem:[841,1,1,""],DevDistIter:[842,1,1,""],DevDistNest:[843,1,1,""],DevManager:[836,1,1,""],DevMapper:[845,1,1,""],DevMapperMultiProc:[846,1,1,""],MultiDev:[836,1,1,""],MultiDevItem:[848,1,1,""],MultiDevIter:[849,1,1,""],MultiDevNest:[850,1,1,""],Profiler:[851,1,1,""],clear_mem_on_dev:[852,2,1,""],default_device:[853,2,1,""],dev:[854,2,1,""],dev_clone:[855,2,1,""],dev_clone_array:[856,2,1,""],dev_clone_iter:[857,2,1,""],dev_clone_nest:[858,2,1,""],dev_dist:[859,2,1,""],dev_dist_array:[860,2,1,""],dev_dist_iter:[861,2,1,""],dev_dist_nest:[862,2,1,""],dev_from_str:[863,2,1,""],dev_to_str:[864,2,1,""],dev_unify:[865,2,1,""],dev_unify_array:[866,2,1,""],dev_unify_iter:[867,2,1,""],dev_unify_nest:[868,2,1,""],dev_util:[869,2,1,""],get_all_arrays_on_dev:[870,2,1,""],gpu_is_available:[871,2,1,""],num_arrays_on_dev:[872,2,1,""],num_cpu_cores:[873,2,1,""],num_gpus:[874,2,1,""],percent_used_mem_on_dev:[875,2,1,""],print_all_arrays_on_dev:[876,2,1,""],set_default_device:[877,2,1,""],set_split_factor:[878,2,1,""],split_factor:[879,2,1,""],split_func_call:[880,2,1,""],to_dev:[881,2,1,""],total_mem_on_dev:[882,2,1,""],tpu_is_available:[883,2,1,""],unset_default_device:[884,2,1,""],used_mem_on_dev:[885,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[836,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[836,3,1,""],da_tune_step:[836,3,1,""],dim_size:[836,3,1,""],ds_tune_step:[836,3,1,""],map:[836,3,1,""],repeated_config_check:[836,3,1,""],tune_step:[836,3,1,""],tuned:[836,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[845,3,1,""],map:[845,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[846,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[836,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[848,3,1,""],items:[848,3,1,""],keys:[848,3,1,""],shape:[848,3,1,""],values:[848,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[849,3,1,""],at_dev:[849,3,1,""],at_devs:[849,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[850,3,1,""],at_dev:[850,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[851,3,1,""],start:[851,3,1,""],stop:[851,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[886,1,1,""],DefaultFloatDtype:[886,1,1,""],DefaultIntDtype:[886,1,1,""],astype:[886,2,1,""],cast:[890,2,1,""],closest_valid_dtype:[891,2,1,""],convert_dtype:[892,2,1,""],default_dtype:[893,2,1,""],default_float_dtype:[894,2,1,""],default_int_dtype:[895,2,1,""],dtype:[896,2,1,""],dtype_bits:[897,2,1,""],dtype_from_str:[898,2,1,""],dtype_to_str:[899,2,1,""],invalid_dtype:[900,2,1,""],is_float_dtype:[901,2,1,""],is_int_dtype:[902,2,1,""],set_default_dtype:[903,2,1,""],set_default_float_dtype:[904,2,1,""],set_default_int_dtype:[905,2,1,""],unset_default_dtype:[906,2,1,""],unset_default_float_dtype:[907,2,1,""],unset_default_int_dtype:[908,2,1,""],valid_dtype:[909,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[886,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[886,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[886,3,1,""]},"ivy.functional.ivy.core.general":{"default":[936,2,1,""],abs:[911,2,1,""],all_equal:[912,2,1,""],arange:[913,2,1,""],arg_names:[914,2,1,""],argmax:[915,2,1,""],argmin:[916,2,1,""],argsort:[917,2,1,""],array:[918,2,1,""],array_equal:[919,2,1,""],arrays_equal:[920,2,1,""],asarray:[910,2,1,""],assert_supports_inplace:[921,2,1,""],broadcast_to:[922,2,1,""],cache_fn:[923,2,1,""],ceil:[924,2,1,""],clip:[925,2,1,""],clip_matrix_norm:[926,2,1,""],clip_vector_norm:[927,2,1,""],concatenate:[928,2,1,""],constant_pad:[929,2,1,""],container_types:[930,2,1,""],copy_array:[931,2,1,""],cross:[932,2,1,""],cumprod:[933,2,1,""],cumsum:[934,2,1,""],current_framework_str:[935,2,1,""],einops_rearrange:[937,2,1,""],einops_reduce:[938,2,1,""],einops_repeat:[939,2,1,""],equal:[940,2,1,""],exists:[941,2,1,""],expand_dims:[942,2,1,""],flip:[943,2,1,""],floor:[944,2,1,""],floormod:[945,2,1,""],fourier_encode:[946,2,1,""],full:[947,2,1,""],gather:[948,2,1,""],gather_nd:[949,2,1,""],get_all_arrays_in_memory:[950,2,1,""],get_min_base:[951,2,1,""],get_min_denominator:[952,2,1,""],get_num_dims:[953,2,1,""],get_referrers_recursive:[954,2,1,""],has_nans:[955,2,1,""],identity:[956,2,1,""],indices_where:[957,2,1,""],inplace_arrays_supported:[958,2,1,""],inplace_decrement:[959,2,1,""],inplace_increment:[960,2,1,""],inplace_update:[961,2,1,""],inplace_variables_supported:[962,2,1,""],is_array:[963,2,1,""],isinf:[964,2,1,""],isnan:[965,2,1,""],linear_resample:[966,2,1,""],linspace:[967,2,1,""],logspace:[968,2,1,""],match_kwargs:[969,2,1,""],matmul:[970,2,1,""],maximum:[971,2,1,""],meshgrid:[972,2,1,""],minimum:[973,2,1,""],multiprocessing:[974,2,1,""],num_arrays_in_memory:[975,2,1,""],one_hot:[976,2,1,""],ones:[977,2,1,""],ones_like:[978,2,1,""],print_all_arrays_in_memory:[979,2,1,""],queue_timeout:[980,2,1,""],repeat:[981,2,1,""],reshape:[982,2,1,""],round:[983,2,1,""],scatter_flat:[984,2,1,""],scatter_nd:[985,2,1,""],set_min_base:[986,2,1,""],set_min_denominator:[987,2,1,""],set_queue_timeout:[988,2,1,""],set_tmp_dir:[989,2,1,""],shape:[990,2,1,""],shape_to_tuple:[991,2,1,""],split:[992,2,1,""],squeeze:[993,2,1,""],stable_divide:[994,2,1,""],stable_pow:[995,2,1,""],stack:[996,2,1,""],supports_inplace:[997,2,1,""],swapaxes:[998,2,1,""],tile:[999,2,1,""],tmp_dir:[1000,2,1,""],to_list:[1001,2,1,""],to_numpy:[1002,2,1,""],to_scalar:[1003,2,1,""],transpose:[1004,2,1,""],try_else_none:[1005,2,1,""],unstack:[1006,2,1,""],value_is_nan:[1007,2,1,""],where:[1008,2,1,""],zero_pad:[1009,2,1,""],zeros:[1010,2,1,""],zeros_like:[1011,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1012,1,1,""],adam_step:[1014,2,1,""],adam_update:[1015,2,1,""],execute_with_gradients:[1016,2,1,""],gradient_descent_update:[1017,2,1,""],is_variable:[1018,2,1,""],lamb_update:[1019,2,1,""],lars_update:[1020,2,1,""],optimizer_update:[1021,2,1,""],set_with_grads:[1022,2,1,""],stop_gradient:[1023,2,1,""],unset_with_grads:[1024,2,1,""],variable:[1025,2,1,""],variable_data:[1026,2,1,""],with_grads:[1027,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1012,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1029,2,1,""],float_img_to_uint8_img:[1030,2,1,""],gradient_image:[1031,2,1,""],random_crop:[1032,2,1,""],stack_images:[1033,2,1,""],uint8_img_to_float_img:[1034,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1036,2,1,""],inv:[1037,2,1,""],matrix_norm:[1038,2,1,""],pinv:[1039,2,1,""],svd:[1040,2,1,""],vector_norm:[1041,2,1,""],vector_to_skew_symmetric_matrix:[1042,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1044,2,1,""],logical_not:[1045,2,1,""],logical_or:[1046,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1048,2,1,""],acosh:[1049,2,1,""],asin:[1050,2,1,""],asinh:[1051,2,1,""],atan2:[1053,2,1,""],atan:[1052,2,1,""],atanh:[1054,2,1,""],cos:[1055,2,1,""],cosh:[1056,2,1,""],divide:[1057,2,1,""],erf:[1058,2,1,""],exp:[1059,2,1,""],log:[1060,2,1,""],sin:[1061,2,1,""],sinh:[1062,2,1,""],tan:[1063,2,1,""],tanh:[1064,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1066,2,1,""],maml_step:[1067,2,1,""],reptile_step:[1068,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1069,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1114,2,1,""],copy_nest:[1115,2,1,""],index_nest:[1116,2,1,""],map:[1117,2,1,""],map_nest_at_index:[1118,2,1,""],map_nest_at_indices:[1119,2,1,""],multi_index_nest:[1120,2,1,""],nested_indices_where:[1121,2,1,""],nested_map:[1122,2,1,""],set_nest_at_index:[1123,2,1,""],set_nest_at_indices:[1124,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1126,2,1,""],randint:[1127,2,1,""],random_normal:[1128,2,1,""],random_uniform:[1129,2,1,""],seed:[1130,2,1,""],shuffle:[1131,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1133,2,1,""],reduce_max:[1134,2,1,""],reduce_mean:[1135,2,1,""],reduce_min:[1136,2,1,""],reduce_prod:[1137,2,1,""],reduce_std:[1138,2,1,""],reduce_sum:[1139,2,1,""],reduce_var:[1140,2,1,""]},"ivy.functional.ivy.nn":{activations:[1142,0,0,"-"],layers:[1150,0,0,"-"],losses:[1163,0,0,"-"],norms:[1167,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1143,2,1,""],leaky_relu:[1144,2,1,""],relu:[1145,2,1,""],sigmoid:[1146,2,1,""],softmax:[1147,2,1,""],softplus:[1148,2,1,""],tanh:[1149,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1151,2,1,""],conv1d_transpose:[1152,2,1,""],conv2d:[1153,2,1,""],conv2d_transpose:[1154,2,1,""],conv3d:[1155,2,1,""],conv3d_transpose:[1156,2,1,""],depthwise_conv2d:[1157,2,1,""],dropout:[1158,2,1,""],linear:[1159,2,1,""],lstm_update:[1160,2,1,""],multi_head_attention:[1161,2,1,""],scaled_dot_product_attention:[1162,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1164,2,1,""],cross_entropy:[1165,2,1,""],sparse_cross_entropy:[1166,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1168,2,1,""]},"ivy.graph_compiler":{compiler:[1169,0,0,"-"],globals:[1172,0,0,"-"],graph:[1175,0,0,"-"],helpers:[1177,0,0,"-"],op_logging:[1178,0,0,"-"],param:[1179,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1170,2,1,""],show_graph:[1171,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1173,2,1,""],log_global_inference_rel_times:[1174,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1175,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1175,3,1,""],add_fn_to_dict:[1175,3,1,""],add_param:[1175,3,1,""],compiled:[1175,3,1,""],connect:[1175,3,1,""],debug_info:[1175,3,1,""],get_param:[1175,3,1,""],get_param_recursive:[1175,3,1,""],include_generators:[1175,3,1,""],increment_param_count:[1175,3,1,""],log_all_ops:[1175,3,1,""],params_all_empty:[1175,3,1,""],save_debug_info:[1175,3,1,""],set_param:[1175,3,1,""],show:[1175,3,1,""],show_debug_info:[1175,3,1,""],update_inference_times:[1175,3,1,""],with_array_caching:[1175,3,1,""]},"ivy.graph_compiler.param":{Param:[1179,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1179,3,1,""],count:[1179,3,1,""],depth:[1179,3,1,""],get:[1179,3,1,""],is_var:[1179,3,1,""],ptype:[1179,3,1,""],set:[1179,3,1,""],set_count:[1179,3,1,""],shape:[1179,3,1,""]},"ivy.stateful":{activations:[1184,0,0,"-"],converters:[1187,0,0,"-"],initializers:[1189,0,0,"-"],layers:[1198,0,0,"-"],module:[1210,0,0,"-"],norms:[1212,0,0,"-"],optimizers:[1214,0,0,"-"],sequential:[1220,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1185,1,1,""],GELU:[1186,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1185,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1186,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1188,2,1,""]},"ivy.stateful.initializers":{Constant:[1189,1,1,""],FirstLayerSiren:[1191,1,1,""],GlorotUniform:[1192,1,1,""],KaimingNormal:[1189,1,1,""],Ones:[1194,1,1,""],Siren:[1195,1,1,""],Uniform:[1189,1,1,""],Zeros:[1197,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1189,3,1,""],create_variables:[1189,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1191,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1192,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1189,3,1,""],create_variables:[1189,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1194,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1195,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1189,3,1,""],create_variables:[1189,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1197,3,1,""]},"ivy.stateful.layers":{Conv1D:[1199,1,1,""],Conv1DTranspose:[1200,1,1,""],Conv2D:[1201,1,1,""],Conv2DTranspose:[1202,1,1,""],Conv3D:[1203,1,1,""],Conv3DTranspose:[1204,1,1,""],DepthwiseConv2D:[1205,1,1,""],Dropout:[1206,1,1,""],LSTM:[1207,1,1,""],Linear:[1208,1,1,""],MultiHeadAttention:[1209,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1199,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1200,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1201,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1202,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1203,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1204,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1205,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1206,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1207,3,1,""],get_initial_state:[1207,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1208,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1209,3,1,""]},"ivy.stateful.module":{Module:[1211,1,1,""]},"ivy.stateful.module.Module":{__init__:[1211,3,1,""],build:[1211,3,1,""],build_mode:[1211,3,1,""],built:[1211,3,1,""],check_submod_rets:[1211,3,1,""],compile_graph:[1211,3,1,""],compile_on_next_step:[1211,3,1,""],get_mod_key:[1211,3,1,""],mod_depth:[1211,3,1,""],mod_height:[1211,3,1,""],mod_with_top_mod_key_chain:[1211,3,1,""],save_weights:[1211,3,1,""],show_graph:[1211,3,1,""],show_mod_in_top_mod:[1211,3,1,""],show_structure:[1211,3,1,""],show_v_in_top_v:[1211,3,1,""],sub_mods:[1211,3,1,""],track_submod_call_order:[1211,3,1,""],track_submod_rets:[1211,3,1,""],v_with_top_v_key_chains:[1211,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1213,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1213,3,1,""]},"ivy.stateful.optimizers":{Adam:[1215,1,1,""],LAMB:[1216,1,1,""],LARS:[1217,1,1,""],Optimizer:[1218,1,1,""],SGD:[1219,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1215,3,1,""],set_state:[1215,3,1,""],state:[1215,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1216,3,1,""],set_state:[1216,3,1,""],state:[1216,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1217,3,1,""],set_state:[1217,3,1,""],state:[1217,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1218,3,1,""],compile_graph:[1218,3,1,""],compile_on_next_step:[1218,3,1,""],set_state:[1218,3,1,""],show_graph:[1218,3,1,""],step:[1218,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1219,3,1,""],set_state:[1219,3,1,""],state:[1219,3,1,""]},"ivy.stateful.sequential":{Sequential:[1221,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1221,3,1,""]},"ivy.verbosity":{cprint:[1226,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1225,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1214,1215,1216],"02886":1181,"100":[1069,1181,1223],"2021":1181,"2102":1181,"360":[1047,1055,1061,1063],"754":[778,779],"999":[1012,1014,1015,1019,1214,1215,1216],"abstract":[836,851,1181,1214,1218],"boolean":[40,41,836,871,883,886,900,909,910,912,919,920,955,957,958,962,963,964,965,997,1007,1012,1018,1043,1044,1045,1046,1065,1066,1067,1069],"break":43,"case":[15,18,19,40,41,42,43,836,875,882,885,910,913,982,984,985,1035,1038,1041,1069,1113,1116,1120,1181,1198,1209,1210,1211,1214,1218,1227],"catch":[910,936],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,370,778,780,836,838,839,840,841,842,843,845,846,848,849,850,851,863,864,886,910,914,969,977,1012,1026,1069,1113,1115,1122,1163,1165,1166,1175,1179,1181,1184,1185,1186,1187,1188,1189,1191,1192,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1227],"default":[15,18,19,40,41,42,43,792,793,834,835,836,845,846,853,854,858,859,860,861,862,865,866,867,868,875,878,879,880,885,886,893,894,895,896,910,912,913,915,916,917,926,927,928,929,932,933,934,943,946,947,948,953,955,956,966,968,969,972,974,977,980,981,984,985,988,990,992,994,995,1004,1006,1007,1010,1012,1015,1017,1018,1019,1020,1021,1023,1027,1035,1038,1041,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1147,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221],"final":[40,41,910,946,967,968,1069,1198,1209,1224],"float":[40,41,42,43,778,779,795,820,836,845,846,869,875,878,882,885,886,894,901,910,913,926,927,929,946,947,951,952,968,986,987,988,994,995,1012,1014,1015,1017,1019,1020,1021,1028,1030,1034,1047,1057,1065,1066,1067,1068,1069,1125,1128,1129,1142,1144,1150,1158,1161,1162,1163,1164,1165,1166,1167,1168,1198,1206,1209,1212,1213,1214,1215,1216,1217,1218,1219],"function":[15,40,41,43,369,372,373,376,779,780,783,793,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1181,1184,1185,1186,1214,1217,1218,1219,1223,1224,1227],"import":[43,1181,1224,1227],"int":[40,41,42,43,778,779,780,792,793,795,820,834,835,836,858,859,860,861,862,865,866,867,868,873,874,880,886,895,897,902,910,915,916,917,922,928,929,933,934,937,938,939,942,943,946,947,948,953,956,966,967,968,976,977,981,982,984,985,990,991,992,993,996,998,999,1004,1006,1009,1010,1012,1014,1015,1019,1028,1032,1033,1035,1038,1041,1065,1066,1067,1068,1069,1113,1122,1125,1126,1127,1129,1130,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1151,1152,1153,1154,1155,1156,1157,1161,1163,1165,1166,1167,1168,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1212,1213],"long":[1150,1160],"new":[40,41,43,886,890,910,911,922,937,938,939,942,946,947,948,949,977,982,984,985,986,987,994,995,996,1010,1012,1015,1017,1019,1020,1021,1028,1030,1032,1034,1047,1049,1051,1054,1056,1062,1064,1069,1113,1123,1124,1125,1126,1167,1168,1181,1187,1188,1198,1208,1212,1213,1214,1215,1216,1217,1218,1219,1224,1227],"public":[910,930],"return":[15,16,17,18,19,40,41,42,43,778,779,780,782,783,792,793,795,820,834,835,836,845,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,874,875,879,880,881,882,883,885,886,890,891,892,893,894,895,896,897,898,899,900,901,902,909,910,911,912,913,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,953,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,981,982,983,984,985,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1023,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1181,1187,1188,1198,1207,1208,1214,1218,1223,1224,1227],"short":[1150,1160,1181,1227],"static":[40,41,834,835],"super":1069,"true":[40,41,42,782,783,792,793,834,835,836,910,912,921,923,941,946,955,957,1007,1008,1012,1015,1017,1018,1019,1020,1021,1023,1035,1038,1041,1065,1066,1067,1068,1069,1113,1114,1121,1125,1126,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1150,1158,1163,1164,1165,1166,1169,1170,1171,1175,1198,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],"try":[40,41,910,1005,1069],"var":[40,41,1065,1066,1067,1227],"while":[40,41,42,1069],AND:[792,793,1043,1044],But:1227,For:[43,910,913,925,996,1012,1018,1026,1047,1048,1181,1187,1188,1224,1227],Its:[1047,1052],NOT:[1043,1045],One:[40,41,910,938,982,1125,1127,1227],Ones:[1181,1189],Such:[910,930],That:1224,The:[15,16,17,18,19,40,41,42,43,782,783,792,793,795,820,834,835,836,845,846,852,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,875,878,879,880,881,882,885,886,890,891,892,897,898,899,900,909,910,913,917,918,919,922,923,926,927,928,929,931,932,935,936,940,943,946,948,949,956,959,960,961,963,966,968,970,972,974,977,978,981,982,984,985,986,987,988,991,992,993,994,995,996,999,1007,1010,1011,1012,1014,1015,1017,1019,1020,1021,1023,1026,1028,1030,1032,1034,1035,1038,1040,1047,1048,1050,1052,1055,1057,1058,1059,1060,1061,1063,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1181,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1224,1227],There:[43,1181,1224],These:[43,1181],Used:[1113,1114,1121,1210,1211],Using:[1181,1182,1227],With:[40,41,1035,1038,1041,1132,1134,1135,1136,1137,1138,1139,1140,1181,1223,1227],__array__:[910,918],__call__:[1198,1209,1210,1211],__del__:1069,__dict__:[1069,1224],__enter__:1069,__exit__:1069,__getitem__:1069,__getstate__:1069,__init__:[40,41,42,43,59,60,80,196,370,371,479,594,836,837,844,845,846,847,848,849,850,851,886,887,888,889,1012,1013,1069,1073,1080,1175,1176,1179,1180,1181,1184,1185,1186,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1227],__iter__:1069,__len__:1069,__next__:1069,__pow__:43,__repr__:1069,_assign_vari:1223,_axi:1069,_base:[1113,1114,1121],_compute_node_da_ratio:1069,_compute_node_strs_da:1069,_concat_unify_arrai:1069,_counter:1069,_cur_framework:[43,1069],_da_direct:1069,_da_directions_flip:1069,_da_step_tim:1069,_da_tim:1069,_da_tune_count:1069,_data:1069,_delta_da_dim_s:1069,_delta_sf:1069,_dict:1069,_dim_siz:1069,_first_da_tune_step:1069,_first_ns_tune_step:1069,_fn:1069,_forward:[1181,1223],_get_kalman_param:1227,_get_prior:1227,_get_some_model:1227,_handle_flat_arrays_in_out:43,_index:[1113,1114,1121],_input_queu:1069,_length:1069,_max_depth:1069,_max_node_dim_step_ratio:1069,_max_node_dim_step_s:1069,_max_split_factor_step_s:1069,_mean_unify_arrai:1069,_min_bas:[910,995,1167,1168,1212,1213],_min_denomin:[910,994],_min_node_dim_s:1069,_min_sf_tune_step:1069,_min_unit_node_tune_step:1069,_model:1227,_native_wrapp:43,_node_mapp:1069,_node_percent_mem:1069,_node_str:1069,_node_str_da_ratio:1069,_node_strs_da:1069,_node_strs_kei:1069,_node_strs_n:1069,_node_util:1069,_ns_step_tim:1069,_ns_time:1069,_ns_tune_count:1069,_num_nod:1069,_num_work:1069,_observed_config:1069,_output_queu:1069,_paramet:1223,_percent_mem_inc_per_sf:1069,_percent_mem_inc_per_unit_da_dim:1069,_percent_util_inc_per_unit_da_dim:1069,_ret_fn:1069,_safety_factor:1069,_save_dir:1069,_shift_da_split:1069,_shift_n:1069,_slice:1069,_step:[1214,1218],_sum_unify_arrai:1069,_timeout:1069,_tune:1069,_tune_da:1069,_tune_n:1069,_tune_step:1069,_unit_da_tune_count:1069,_unroll_step:1227,_with_node_mappig:1069,_worker:1069,_worker_class:1069,_worker_fn:1069,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,836,845,851,1069,1210,1211,1214,1218],abil:1181,abl:[40,41],about:[778,779,780],abov:[43,1125,1127],above_height:[40,41],abs:[267,512,628,910,1069],absolut:[40,41,910,911],abstractmethod:1069,accept:[15,43,1181],access:[40,41,1224],accord:[40,41,778,779,910,929,948,984,985,1004,1009],accordingli:[792,793],accur:[59,370,836,848,849,850,851,886,1012,1175,1179,1189,1191,1192,1194,1195,1197],aco:[722,1047],acosh:[722,1047],across:[40,41,836,845,846,855,856,858,859,860,861,862,868,878,879,910,915,916,919,920,1069,1113,1117],activ:[1143,1144,1145,1146,1147,1148,1149,1181,1185,1186],actual:1224,adam:[1012,1014,1015,1019,1181,1214,1216,1223],adam_step:1012,adam_upd:1012,adapt:[1012,1020,1214,1217],add:[40,41,43,1069,1163,1164,1165,1166,1167,1168,1181,1212,1213,1224],add_fn_to_dict:1175,add_param:1175,added:[43,910,994,995,1220,1221],adding:[910,922],addit:[40,41,43,910,937,938,939,1167,1168,1198,1208],adher:43,adjac:[910,913],adopt:[910,930],affect:[910,913],affin:[1212,1213],after:[910,966,1012,1015,1016,1017,1019,1020,1021,1028,1029,1167,1168,1214,1215,1216,1217,1218,1219,1227],after_1:[910,929,1009],after_n:[910,929,1009],again:43,against:[40,41,1035,1038,1041,1132,1134,1135,1136,1137,1138,1139,1140],agnost:[43,1181,1223,1224],aim:1227,algebra:1035,algorithm:[1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205,1227],align:[40,41,43,910,922],aliv:[836,870,872,876,910,950,975,979],all:[15,16,17,18,19,40,41,43,94,210,385,493,608,792,834,835,836,845,870,876,910,911,912,919,920,930,943,950,956,979,993,1065,1066,1067,1068,1069,1113,1114,1115,1121,1122,1125,1126,1129,1132,1134,1135,1136,1137,1138,1139,1140,1150,1160,1181,1224,1227],all_depth:[40,41],all_equ:910,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1113,all_tru:[40,41],alloc:[836,1069],allow:[910,967,968,969,1210,1211],allow_dupl:[910,969],alon:[836,875,885,1069,1181],along:[40,41,43,792,793,836,859,860,861,862,865,866,867,868,880,910,917,928,933,934,943,948,966,967,968,981,992,996,999,1006,1035,1038,1041,1065,1066,1067,1068,1069,1125,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140],alongsid:[1223,1224],alpha:[1142,1144],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,836,1069],also:[40,41,43,910,913,1012,1015,1065,1066,1067,1068,1113,1114,1115,1121,1122,1150,1159,1198,1208,1223],altern:1223,alwai:[40,41,43,1012,1018,1023],among:[40,41],amount:[836,882,1069,1181],angl:[1047,1048,1053],ani:[15,16,17,18,19,40,41,43,834,835,836,838,841,845,846,848,857,858,861,862,867,910,912,913,918,936,937,938,939,940,941,955,963,969,994,995,1012,1016,1069,1113,1114,1117,1121,1122,1123,1124,1125,1129,1181,1187,1188,1210,1211,1223,1224,1227],anoth:[40,41,886,892,1181],another_backend:43,anyth:[43,1227],anywai:43,apart:43,api:[1181,1182],appear:[910,942],append:[40,41,1069],appli:[15,18,19,40,41,910,937,938,939,1012,1019,1020,1035,1040,1043,1044,1045,1046,1065,1066,1067,1113,1117,1120,1122,1142,1143,1144,1145,1146,1147,1148,1149,1150,1159,1161,1162,1167,1168,1181,1184,1185,1186,1212,1213],applic:[1113,1117,1122,1150,1161,1162,1181,1227],approxim:[43,795,820,1142,1143],arang:[113,267,399,512,628,910,967,968],arbitrari:[40,41,836,865,866,868,1069],arc:[1047,1053],arcco:[1047,1048],arctan:[1047,1052],area:1181,arg:[15,16,17,40,41,43,59,63,836,845,858,862,868,880,910,937,938,939,985,1069,1169,1170,1171,1175,1187,1188,1210,1211],arg_nam:910,arg_stateful_idx:[1169,1170,1171,1175,1210,1211],argmax:[113,399,512,628,910],argmin:[113,399,512,628,910],args_clon:1069,args_dist:1069,args_to_ivi:[15,1181],args_to_n:[15,1181],args_uni:1069,argsort:[628,910],argument:[15,16,17,18,19,40,41,42,43,59,63,834,835,836,845,846,858,862,868,910,913,914,923,936,969,985,1047,1048,1069,1113,1117,1187,1188,1210,1211],aris:[1181,1227],arithmet:[43,1132,1135,1138,1140],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,113,267,399,512,628,778,779,780,782,783,792,793,820,836,854,855,856,859,860,861,862,865,866,867,868,870,872,876,880,881,886,890,896,901,902,910,911,912,913,915,916,917,919,920,921,922,924,925,926,927,928,929,931,932,933,934,937,938,939,940,942,943,944,945,946,947,948,949,950,953,955,956,957,958,959,960,961,963,964,965,966,967,968,970,971,972,973,975,976,977,978,979,981,982,983,984,985,990,992,993,996,997,998,999,1001,1002,1003,1004,1006,1007,1008,1009,1010,1011,1012,1014,1015,1018,1019,1023,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1069,1113,1115,1122,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1181,1182,1198,1206,1207,1209,1214,1218,1223,1224],arrang:[910,937],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,368,369,370,372,373,375,376,778,779,780,782,783,792,793],array_builtin:[43,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833],array_equ:[267,628,910],array_lik:[910,918],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,910],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1181],arraywithgener:[22,1181],arraywithgradi:[24,1181],arraywithimag:[26,1181],arraywithlinalg:[28,1181],arraywithlog:[30,1181],arraywithmath:[32,1181],arraywithmeta:[34,1181],arraywithrandom:[36,1181],arraywithreduct:[38,1181],arriv:[40,41,42],articl:1181,arxiv:1181,as_arrai:[40,41,910,953,990],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[836,854,886,893,894,895,896],as_vari:[40,41],as_zero:[40,41],asarrai:910,asin:[722,1047],asinh:[722,1047],aspect:[1028,1033],assert:[40,41,910,921,1069],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:910,associ:[43,1035,1042],assum:[1224,1227],astyp:886,asynchron:[40,41,42],at_dev:[40,42,836,849,850],at_kei:[40,41],at_key_chain:[40,41],at_nod:1069,atan2:[722,1047],atan:[722,1047],atanh:[722,1047],attent:[1150,1161,1162,1198,1209],attribut:[0,6,40,41,778,779,780,910,978,1011],audienc:[1181,1224],author:1181,avail:[40,41,836,871,873,874,883,910,938,1069],averag:[1012,1014,1015,1019,1065,1066,1067,1132,1135],average_across_step:[1065,1066,1067],avoid:[836,1069,1224],axes:[40,41,43,792,793,836,880,910,915,916,929,942,943,998,1004,1009,1035,1038,1041,1069,1132,1134,1135,1136,1137,1138,1139,1140],axes_length:[40,41,910,937,938,939],axi:[40,41,792,793,836,838,841,848,859,860,861,862,865,866,867,868,880,910,915,916,917,928,929,932,933,934,942,943,948,966,967,968,981,992,993,996,998,999,1006,1009,1035,1041,1069,1125,1131,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1163,1165,1166],axis0:[40,41,910,998],axis1:[40,41,910,998],back:[1210,1211,1214,1218],backend:[15,17,19,40,41,368,369,370,372,373,375,376,836,871,874,883,886,892,900,909,910,958,962,1012,1015,1017,1019,1020,1021,1026,1069,1181,1182,1187,1188,1214,1215,1216,1217,1218,1219,1223,1224,1227],background:[1181,1224],backprop:1227,backward:[792,793,1223],band:[910,946],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,370,795,820,836,838,839,840,841,842,843,845,846,848,849,850,851,886,910,951,968,986,995,1012,1069,1132,1133,1175,1179,1181,1184,1185,1186,1189,1191,1192,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1227],batch:[40,41,836,878,879,910,943,946,956,1028,1032,1035,1040,1065,1066,1067,1068,1069,1150,1159,1167,1168,1212,1213],batch_shap:[910,943,956,976,1028,1029,1030,1031,1032,1033,1034,1035,1042,1125,1126,1150,1160,1161,1162,1198,1207],batch_siz:[1069,1125,1126,1150,1151,1152,1153,1154,1155,1156,1157],bayesian:1227,becaus:[43,910,913],becom:[910,925,1047,1053,1227],been:[910,937,938,939,1125,1126],befor:[40,41,43,836,880,1065,1066,1067,1069,1113,1122,1132,1134,1135,1136,1137,1138,1139,1140,1150,1161,1162,1227],before_1:[910,929,1009],before_n:[910,929,1009],begin:[1113,1114,1121,1224],behaviour:[43,1227],behind:[1012,1015,1017,1019,1020,1021,1181],being:[40,41,43,910,913,980,988,1069],belong:[40,41],below:[43,1181,1224,1227],below_depth:[40,41],benefit:1181,bernoul:[1150,1158,1198,1206],best:[910,969,1181],beta1:[1012,1014,1015,1019,1214,1215,1216],beta2:[1012,1014,1015,1019,1214,1215,1216],beta:[1167,1168],between:[40,41,42,778,779,910,913,1113,1117,1125,1127,1163,1165,1166,1214,1216],bia:[1150,1159,1160,1198,1199,1200,1201,1202,1203,1204,1205,1208],bias_initi:[1198,1199,1200,1201,1202,1203,1204,1205,1208],bilinear:[1028,1029],bilinear_resampl:[152,326,441,559,707,1028],bilinearli:[1028,1029],binari:[1163,1164],binary_cross_entropi:1163,bit:[370,778,779,780,886,897,1028,1030,1034,1181],bitwise_oper:[0,7,8],block:[1181,1224],bool:[15,18,19,40,41,42,43,782,783,792,793,834,835,836,854,867,871,875,880,883,885,886,896,910,912,919,920,933,936,940,941,946,953,955,963,969,990,992,1006,1007,1008,1012,1015,1016,1017,1018,1019,1020,1021,1023,1035,1038,1041,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1150,1158,1187,1188,1198,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],both:[43,910,932],bottom:1181,boundari:[40,41,1125,1129],branch:[834,835],brittl:43,broadcast:[40,41,43,792,793,795,820,910,922,940,971,972,973,981,1035,1038,1041,1047,1053,1057,1132,1134,1135,1136,1137,1138,1139,1140],broadcast_to:[267,628,910],build:[1069,1181,1198,1209,1210,1211],build_mod:[1198,1209,1210,1211],builder:1181,built:[836,910,913,1069,1198,1209,1210,1211],builtin:43,builtin_ab:[222,795],builtin_add:[222,795],builtin_and:[222,795],builtin_bool:[222,795],builtin_contain:[222,795],builtin_deepcopi:[222,795],builtin_dir:[222,795],builtin_eq:[222,795],builtin_float:[222,795],builtin_floordiv:[222,795],builtin_g:[222,795],builtin_getattr:[222,795],builtin_getattribut:[222,795],builtin_getitem:[222,795],builtin_gt:[222,795],builtin_int:[222,795],builtin_invert:[222,795],builtin_l:[222,795],builtin_lt:[222,795],builtin_mul:[222,795],builtin_n:[222,795],builtin_neg:[222,795],builtin_or:[222,795],builtin_po:[222,795],builtin_pow:[43,222,795],builtin_radd:[222,795],builtin_rand:[222,795],builtin_rfloordiv:[222,795],builtin_rmul:[222,795],builtin_ror:[222,795],builtin_rpow:[222,795],builtin_rsub:[222,795],builtin_rtruediv:[222,795],builtin_rxor:[222,795],builtin_setitem:[222,795],builtin_some_op:43,builtin_sub:[222,795],builtin_truediv:[222,795],builtin_xor:[222,795],bypass:1224,cach:[836,852,910,923],cache_fn:910,calcul:[40,41,42,43,795,820,1047,1057],call:[43,836,880,910,980,988,1005,1012,1016,1069,1113,1114,1117,1121,1198,1209,1210,1211,1214,1218,1224,1227],callabl:[40,41,834,835,836,845,846,880,910,923,936,938,969,1005,1065,1066,1067,1068,1069,1113,1117,1118,1119,1121,1122,1150,1161],can:[43,836,878,879,880,910,982,1028,1030,1069,1181,1223,1224,1227],cancel_join_thread:1069,captur:1181,cast:[40,41,113,267,399,512,628,886,910,928,1028,1030,1034],catch_except:[910,936],categori:43,ceil:[267,628,910,913],cell:[1150,1160,1198,1207],certain:[40,41,910,913,967,968],chain:[40,41,1065,1066,1067,1220,1221],chang:[836,910,982,1069,1113,1115,1122,1181,1223],channel:[910,946,1028,1030,1031,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208],check:[15,16,17,18,19,40,41,836,875,885,886,891,900,909,910,921,941,955,963,997,1007,1012,1018,1069,1113,1114,1121,1181,1224],check_nest:[1113,1121],check_shap:[40,41],check_submod_ret:[1210,1211],check_typ:[40,41],choic:[1181,1224],choleski:[711,1035],choos:[910,1008,1047,1053,1181],choose_random_framework:59,chosen:[40,41,910,913,1008],chunk:[836,878,879,880,1069],chunk_siz:[836,880,1069],circl:[1047,1048,1050],clark:1181,clear:[836,852,1069],clear_framework_stack:59,clear_mem_on_dev:[620,836],click:1181,clip:[40,41,267,628,910,926,927,971,973,1181],clip_matrix_norm:910,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,910],clipped_delta:1069,clone:[40,41,836,855,856,857,858,1069],clone_arrai:1069,clone_it:1069,clone_nest:1069,clonedit:1069,cloneditem:1069,clonednest:1069,close:[43,1028,1033,1047,1050,1069,1227],closest:[886,891],closest_valid_dtyp:886,code:[40,41,42,43,1181,1182,1223,1224],codebas:[836,878,879,1069,1181,1224,1227],collect:[15,40,41,795,834,836,886,910,1012,1028,1035,1043,1047,1069,1113,1125,1132,1142,1150,1163,1167,1184,1198,1212,1214],color:[40,41,42,1225,1226],column:[910,956],combin:[40,41,42,1028,1033,1181,1227],combined_batch_s:1069,come:1224,command:1181,commit:1227,common:[40,41,1047,1053],common_key_chain:[40,41],commun:[1181,1224],compar:[40,41,910,912,919,920],comparison_oper:[0,9,10],compat:[43,792,793,795,820,910,940,982,1047,1057,1181,1227],compil:[267,399,628,1170,1171,1175,1181,1210,1211,1214,1215,1216,1217,1218,1219],compile_graph:[1169,1181,1210,1211,1214,1218],compile_on_next_step:[1210,1211,1214,1215,1216,1217,1218,1219],complet:[40,41,1069],complex:[1224,1227],compon:[910,932],composit:43,comput:[40,41,836,880,910,926,927,933,934,940,970,1012,1014,1015,1016,1017,1019,1020,1021,1023,1025,1028,1031,1035,1036,1037,1038,1039,1041,1043,1044,1045,1046,1047,1048,1050,1052,1053,1055,1058,1059,1060,1061,1063,1113,1117,1132,1133,1134,1135,1136,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1159,1161,1163,1164,1165,1166],concat:[40,41,836,865,866,867,868,880,910,946,1069],concaten:[40,41,113,267,399,512,628,910,946,1069,1181],concatten:[40,41,836,865,866,867,868,880,1069],condit:[834,835,910,1008,1113,1121],conditon:[1113,1121],config:[40,41,1069],config_list:1069,configur:[40,41],conjunct:1224,connect:[1175,1198,1208,1209],consid:[40,41,1035,1041,1223,1227],consist:[40,41,836,868,1069,1132,1133,1210,1211,1224],constant:[836,845,846,910,929,1069,1113,1117,1163,1164,1165,1166,1167,1168,1189,1190,1194,1197,1210,1211,1212,1213,1224],constant_kwarg:1069,constant_pad:[267,512,628,910],constitu:[40,41],construct:[910,999,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223],constructor:[40,41,42,910,914,1220,1221],consum:[836,1069],cont_feat_dim:[1150,1161],contaienr:[40,41],contain:[15,18,19,42,43,782,783,792,793,795,820,836,855,859,880,886,890,910,911,915,916,917,925,926,927,930,940,955,971,973,983,994,995,1012,1014,1015,1017,1019,1020,1021,1047,1057,1065,1066,1067,1068,1069,1125,1126,1132,1134,1135,1136,1138,1140,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[628,910],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[910,974,1150,1161,1198,1209],context_dim:[1198,1209],contextmanag:[59,60],continu:[43,1069,1224],contract:[40,41,1132,1133],contribut:[1181,1182],contributor:1181,control:1181,conv1d:[182,357,465,766,1150,1181,1198],conv1d_transpos:[182,357,465,766,1150],conv1dtranspos:[1181,1198],conv2d:[182,357,465,584,766,1150,1181,1198],conv2d_transpos:[182,357,465,766,1150],conv2dtranspos:[1181,1198],conv3d:[182,357,465,584,766,1150,1181,1198],conv3d_transpos:[182,357,465,766,1150],conv3dtranspos:[1181,1198],convent:[40,41,1132,1133],conver:[836,852,863,875,882,885,1069],convers:[16,17,18,19,40,41,1069,1181],convert:[15,16,17,18,19,40,41,43,836,863,864,886,892,898,899,910,991,1002,1003,1028,1030,1034,1035,1042,1069,1113,1115,1122,1181,1188],convert_dtyp:886,convolut:[1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205],cool:43,cooler:43,coordin:[910,972,1047,1048,1050,1053],copi:[40,41,910,931,1069,1113,1115],copy_arrai:[628,910],copy_nest:1113,core:[795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1181],correct:[43,1181,1224],correctli:[40,41,1035,1038,1041,1047,1053,1132,1134,1135,1136,1137,1138,1139,1140],correspond:[40,41,43,795,820,910,928,1125,1126],cos:[722,910,946,1047,1048,1063,1224],cosh:[722,1047],cosin:[1047,1048,1049,1055,1056],cost:[1012,1014,1015,1017,1019,1020,1021,1065,1066,1067,1068],cost_fn:[1065,1068],could:1227,count:[40,41,792,793,1069,1132,1137,1139,1179],cprint:1225,cpu:[40,41,43,836,873,875,881,882,885,910,913,918,948,949,956,967,968,976,977,978,984,985,1010,1011,1069,1125,1126,1127,1128,1129,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1220,1221,1223,1224],creat:[40,41,836,845,846,910,913,918,947,948,949,956,967,968,976,977,978,984,985,1001,1010,1011,1012,1025,1069,1125,1126,1127,1128,1129,1181,1187,1188,1189,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1227],create_if_abs:[40,41],create_vari:1189,creation:[40,41,42,43],creation_funct:[368,369],crop:[1028,1032],crop_siz:[1028,1032],cross:[267,628,910,1163,1164,1165,1166],cross_entropi:1163,cuda:[40,41,836,845,864,881,910,913,918,948,949,956,967,968,976,977,978,984,985,1010,1011,1069,1125,1126,1127,1128,1129,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1220,1221],cumprod:[113,267,399,628,910],cumsum:[628,910],cumul:[910,933,934],current:[40,41,42,43,836,845,869,870,872,876,886,892,900,909,910,935,950,958,962,975,979,1069,1113,1114,1121,1181,1227],current_framework:59,current_framework_str:[628,910,1069],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1175,d_in:[1150,1151,1152,1153,1154,1155,1156],d_out:[1150,1151,1152,1153,1154,1155,1156],da_can_termin:1069,da_dim_s:[836,1069],da_direct:1069,da_tune_step:[836,1069],dai:1227,daniel:1181,data:[40,41,42,43,779,780,782,783,792,793,795,820,836,838,839,840,841,842,843,848,849,850,864,886,890,891,892,896,897,898,899,900,901,902,909,910,913,918,940,947,956,963,977,978,982,993,997,1010,1011,1012,1018,1026,1047,1057,1069,1150,1159,1181],data_format:[1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205],data_type_funct:[370,372,373,778,779,780],dataset:[40,41],datatyp:[40,41,886,891,901,902],dcdw:[1012,1014,1015,1017,1019,1020],debug_info:1175,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1012,1019,1020,1214,1216,1217],decay_lambda:[1012,1019,1020,1214,1216,1217],decid:[40,41,1227],decompos:[1035,1036],decomposit:[1035,1036,1040],decor:43,decrement:[910,959],dedic:[1012,1026,1187,1188],deep:[40,41,1181],deep_copi:[40,41],deeper:[836,858,862,868,1069,1113,1122,1181],deepli:[1113,1115],def:[43,60,80,196,371,479,594,837,844,847,887,888,889,1013,1069,1073,1080,1176,1180,1181,1190,1193,1196,1223,1224,1227],default_dev:43,default_devic:836,default_dtyp:[43,886],default_float_dtyp:886,default_int_dtyp:886,default_key_color:[40,41,42],default_nod:1069,default_v:[910,936],defaultdevic:[836,837],defaultdtyp:[886,887],defaultfloatdtyp:[886,888],defaultintdtyp:[886,889],defer:43,defin:[43,910,932,976,978,1011,1125,1127],degre:[1047,1055,1061,1063],del:1069,delta:[1012,1014,1069,1175],delta_dim_s:1069,delta_percent_mem:1069,delta_sf:1069,delta_util:1069,demo:1181,denomin:[910,945,952,987,994,995,1167,1168,1212,1213],dens:[1198,1208],depend:[43,795,820,910,1008,1035,1040,1181],depth:[40,41,836,858,862,868,910,954,976,1069,1113,1122,1175,1179,1210,1211],depth_cutoff:[40,41],depthwis:[1150,1157,1198,1205],depthwise_conv2d:[182,357,465,584,766,1150],depthwiseconv2d:[1181,1198],deriv:[1012,1014,1015,1017,1019,1020,1021,1113,1115,1122,1181,1210,1214,1218,1220],descend:[1035,1040],descent:[1012,1017,1214,1219],describ:[40,41,1132,1133],design:[1181,1182],desir:[40,41,836,881,886,890,910,913,918,956,957,977,978,1010,1011,1028,1033,1069,1132,1134,1135,1136,1138,1140],desired_aspect_ratio:[1028,1033],desired_percent_increas:1069,detail:1227,detect:[40,41,1113,1114,1121],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,782,783,792,793,795,820,836,871,873,874,883,886,890,891,897,900,901,902,909,910,912,913,918,919,920,955,958,962,963,997,1007,1012,1018,1047,1057,1065,1066,1067,1068,1069,1150,1161],dev:[40,41,42,43,106,261,505,620,836,839,840,842,843,845,846,849,850,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,872,875,876,877,878,879,880,881,882,885,910,913,918,948,949,956,967,968,976,977,978,984,985,1010,1011,1012,1027,1125,1126,1127,1128,1129,1187,1188,1189,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1220,1221],dev_clon:[40,41,836],dev_clone_arrai:836,dev_clone_it:836,dev_clone_nest:836,dev_dist:[40,41,836],dev_dist_arrai:836,dev_dist_it:836,dev_dist_nest:836,dev_from_str:[43,106,261,505,620,836],dev_mapp:836,dev_str:[40,41],dev_to_str:[106,261,505,620,836],dev_unifi:836,dev_unify_arrai:836,dev_unify_it:836,dev_unify_nest:836,dev_util:836,devclonedit:836,devcloneditem:836,devclonednest:836,devdistit:836,devdistitem:836,devdistnest:836,develop:[1181,1224,1227],deviat:[40,41,1125,1128,1132,1138,1167,1168,1212,1213],devic:[21,40,41,43,838,839,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,910,913,918,947,948,949,956,967,968,976,977,978,984,985,1010,1011,1012,1027,1125,1126,1127,1128,1129,1181,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1220,1221],devmanag:[836,844],devmapp:[836,846],devmappermultiproc:836,diag:[1035,1040],diagon:[910,956],dict:[15,16,17,18,19,40,41,42,836,838,841,845,846,848,858,859,860,861,862,910,937,938,939,969,1065,1066,1067,1069,1113,1115,1116,1117,1120,1122,1187,1188],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,778,779,836,855,856,859,860,1069,1150,1159,1181,1224,1227],differenti:[1181,1224],dilat:[1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205],dim:[40,41,43,910,976,1028,1029,1033,1035,1040,1069,1198,1209],dim_siz:[40,41,836,1069],dimens:[40,41,42,792,793,836,867,910,922,928,932,937,938,939,942,946,953,966,976,981,982,992,993,996,1004,1006,1028,1032,1035,1038,1040,1041,1065,1066,1067,1068,1069,1125,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1151,1152,1153,1154,1155,1156,1157,1160,1163,1165,1166,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209],dimension:[40,41,792,793,910,992,993,1035,1040],direct:1069,directli:[43,1113,1122,1224,1227],directori:[910,989,1000],discret:[1163,1165],disk:[40,41,1028,1030],distanc:[910,913],distribut:[40,41,836,855,859,860,861,862,1069,1125,1126,1127,1128,1129,1150,1158,1198,1206,1210,1211],distribute_nest:1069,distributedarrai:[40,41],distrubt:[1163,1165],dive:[1181,1224],divid:[40,41,910,992,994,1047],dividend:[1047,1057],divis:[910,945,952,987,994,995,1012,1014,1015,1019,1047,1057,1214,1215,1216],divisor:[1012,1014,1015,1019,1047,1057,1214,1215,1216],doc:1181,docstr:43,doe:[40,41,43,910,913,992,1223],doesn:1181,doing:43,domain:[1047,1048],don:1181,door:1227,dot:[1035,1037,1150,1161,1162,1198,1209],down:1223,downscal:[910,926,927],drag:[1181,1227],draw:[1125,1126,1128,1129],drawn:[1125,1126,1127,1128,1129],drop:[1181,1227],dropout:[1150,1181,1198,1209],dropout_r:[1198,1209],ds_tune_step:836,dtype:[40,41,43,113,267,368,369,370,372,373,399,512,628,778,779,780,890,891,892,893,894,895,897,898,899,900,901,902,903,904,905,906,907,908,909,910,913,918,947,956,976,977,978,1010,1011],dtype_bit:[113,267,399,512,628,886],dtype_from_str:[43,113,267,399,512,628,886],dtype_in:[886,892,897,898,899,900,901,902,909],dtype_to_str:[113,267,399,512,628,886],duplic:[40,41],dure:[40,41,43,834,835,910,1005,1012,1014,1015,1019,1065,1066,1067,1068,1210,1211,1214,1215,1216,1218],dynam:[834,835],each:[40,41,42,43,782,783,795,820,836,845,846,855,856,857,858,859,860,861,867,879,880,910,911,912,917,929,940,981,992,996,999,1009,1012,1015,1017,1019,1020,1021,1028,1031,1035,1040,1047,1050,1057,1059,1060,1069,1113,1117,1125,1126,1132,1133,1150,1151,1152,1153,1154,1155,1156,1157,1158,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1224],eager:1224,easi:1227,easili:1181,econom:1227,ecosystem:1181,edg:[910,925,929,1009],effect:[1012,1021],effective_grad:[1012,1021],effici:1227,einop:[40,41,910,937,938,939],einops_rearrang:[40,41,910],einops_reduc:[40,41,910],einops_repeat:[40,41,910],einstein:[40,41,1132,1133],einsum:[40,41,168,345,453,574,746,1132],either:[40,41,910,936,969,972,974,1065,1066,1067,1068,1069,1198,1209,1210,1211,1224],eleg:1069,element:[40,41,43,782,783,792,793,795,820,836,857,861,867,886,890,910,911,913,915,916,917,919,920,924,925,926,927,933,934,940,943,944,945,956,957,971,973,981,983,992,1003,1008,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1069,1132,1133,1135,1137,1139,1142,1143,1144,1145,1146,1147,1148,1149,1150,1158,1198,1206],elementwis:[40,41],elementwise_affin:[1212,1213],elementwise_funct:[375,376,782,783],elemtn:[1125,1126],elif:1069,els:[910,921,936,941,1069],elsewher:[910,1008],emphas:1181,empti:[40,41,1069],enabl:[40,41,42,1181],encapsul:[778,780],encod:[910,946,1028,1030],end:[910,913,1181,1224],ensur:43,entir:[40,41,792,793,836,880,1069,1181,1198,1207],entri:[40,41,910,943,967,968,992,993],entropi:[1163,1164,1165,1166],enumer:1069,environ:1181,eps:[370,778,779],epsilon:[1012,1014,1015,1019,1163,1164,1165,1166,1167,1168,1212,1213,1214,1215,1216],equal:[40,41,512,628,782,783,910,912,919,920,929,992,1009,1047,1055,1061,1063,1125,1129],equality_matrix:[910,912],equat:[40,41,1132,1133],equival:[910,913,1047,1063],erf:[449,722,1047],error:[40,41,836,910,993,1047,1058,1069,1142,1143,1210,1211,1214,1218],essenti:43,etc:[40,41,43,836,881,910,913,918,948,949,956,967,968,976,977,978,984,985,1010,1011,1069,1125,1126,1127,1128,1129,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1220,1221,1227],evalu:[40,41,792,793,910,972,1113,1114,1121],even:1227,evenli:[40,41,910,913,967,968,992],everi:[910,912,1227],exact:[40,41],exampl:[43,834,835,910,925,996,1181,1223,1224,1227],example_input:[834,835],exc_tb:1069,exc_typ:1069,exc_val:1069,exce:[910,973],except:[40,41,44,47,792,793,910,913,921,928,936,1005,1069],excess_s:1069,excit:[1181,1224],exclud:[59,61,910,913,1125,1129],exclus:[40,41,910,933,963,1012,1018,1125,1127],execut:[43,910,1005,1224],execute_with_gradi:[149,321,436,554,701,1012,1181,1223],exist:[40,41,910,936,1069,1181,1214,1218,1227],exp:[722,1047],expand:[40,41,910,942,946],expand_dim:[40,41,267,628,910,1069],expect:[910,914],explain:1224,explicitli:[1198,1207,1209,1210,1211,1224],expon:[43,795,820,910,995],exponenti:[43,795,820,1047,1058,1059],expos:[910,918,930],express:[910,972],exsit:[40,41],extend:43,extra:[40,41,42,1012,1016],eye:[1035,1037],fabian:1181,fabio:1181,factor:[836,845,878,879,880,1012,1014,1015,1019,1020,1035,1040,1069,1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205,1214,1215,1216,1217],falck:1181,fall:[1210,1211,1214,1218],fallback_to_non_compil:[1210,1211,1214,1218],fals:[15,18,19,40,41,42,59,66,67,68,69,70,782,783,792,793,836,854,867,875,880,885,886,893,894,895,896,910,912,933,936,941,946,953,963,969,990,992,1006,1008,1012,1015,1016,1017,1018,1019,1020,1021,1035,1038,1041,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1132,1134,1135,1136,1137,1138,1139,1140,1169,1170,1171,1175,1179,1187,1188,1210,1211,1214,1215,1216,1217,1218,1219],fan_in:1189,fan_mod:1189,fan_out:1189,far:[1113,1114,1121,1223],faster:[834,835],favourit:[1181,1223],feasibl:1227,feat_dim:[1150,1161,1162],fed:[836,880,1069],feed:[836,880,1069],field:1227,file:[40,41,43,910,989,1000,1210,1211],filepath:[40,41],fill:[40,41,910,947,977,1010,1125,1127],fill_valu:[910,947],filter:[1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205,1227],filter_s:[1198,1199,1200],filter_shap:[1198,1201,1202,1203,1204,1205],find:[40,41,1227],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[79,80,195,196,370,371,478,479,593,594,778],finish:[1181,1227],finit:[782,783],first:[40,41,834,835,836,867,910,919,928,932,940,967,968,996,998,1012,1016,1035,1040,1065,1066,1067,1068,1069,1113,1114,1121,1125,1131,1132,1137,1139,1198,1209,1210,1211,1214,1218,1224,1227],firstlayersiren:[1181,1189],firstli:[1224,1227],fist:[836,880,1069],fit:[40,41,910,981,1028,1033],fkt:1227,flag:[40,41,1012,1018],flat:[40,41,43,910,981,984],flat_list:[40,41],flatten:[40,41,910,946,981,1035,1041,1132,1134,1135,1136,1138,1140],flatten_key_chain:[40,41,1210,1211],flexibl:[1181,1224],flip:[40,41,113,267,399,512,628,910],float32:[43,886,890,898,899,910,913,918,956,977,978,1010,1011],float_dtyp:[886,894,904],float_img_to_uint8_img:1028,floor:[267,628,910,945,1069],floormod:[267,628,910],fluid:1227,fname:[1169,1171,1175,1210,1211],folder:[43,1181],follow:[40,41,43,778,780,836,880,910,959,960,961,994,995,1012,1015,1017,1019,1020,1021,1069,1113,1117,1122,1150,1161,1162,1181,1198,1208,1214,1218],followng:[778,779],fomaml_step:1065,forget:[1012,1014,1015,1019,1214,1215,1216],fork:[910,974],forkserv:[910,974,1069],form:[15,16,17,18,19,40,41,910,918,1012,1015,1017,1019,1020,1021,1113,1115,1122,1150],format:[40,41,43,836,854,886,890,892,896,910,913,918,956,977,978,1010,1011,1069,1132,1133,1181,1223,1224],format_fn:[40,41],format_key_chain:[40,41],forward:[1210,1211,1214,1218,1223],found:[40,41,42],fourier:[910,946],fourier_encod:910,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,80,81,82,85,95,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,153,154,155,157,158,162,163,164,165,166,167,169,170,171,172,173,174,175,178,180,181,183,184,185,186,187,188,189,194,196,197,198,201,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,327,328,329,331,332,333,334,336,337,338,341,342,343,344,346,347,348,349,350,351,352,353,356,358,359,360,361,362,363,364,369,371,372,373,376,386,398,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,437,438,439,440,442,443,444,446,447,450,452,454,455,456,457,458,459,460,463,464,466,467,468,469,470,471,472,477,479,480,481,484,494,506,507,508,509,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,555,556,557,558,560,561,562,564,565,566,570,571,572,573,575,576,577,578,579,580,581,585,586,587,592,594,595,596,599,609,621,622,623,624,625,626,627,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,702,703,704,705,706,708,709,710,712,713,714,715,716,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,740,741,742,743,744,745,747,748,749,750,751,752,753,756,757,758,759,760,761,762,764,765,767,768,769,770,771,772,773,779,780,783,793,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1143,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1168,1170,1171,1173,1174,1176,1180,1181,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1226,1227],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1069,framewrk:[910,974],freeli:43,frequenc:[910,946],from:[40,41,42,43,792,793,836,845,846,880,886,892,910,936,943,948,949,956,982,993,1001,1008,1012,1015,1019,1028,1032,1065,1066,1067,1068,1069,1113,1115,1122,1125,1126,1127,1128,1129,1132,1137,1139,1150,1158,1161,1181,1187,1188,1198,1206,1209,1214,1218,1223,1224],from_cal:[1210,1211],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[113,267,399,512,628,778,779,910,1181],full_matric:[1035,1040],fulli:[43,1181,1198,1208,1209,1223],func:[40,41,834,835,836,880,910,923,1012,1016,1069],further:1227,furthermor:1227,futur:1227,gain:1189,gamma:[1167,1168],gather:[40,41,113,267,399,512,628,910,949],gather_nd:[40,41,113,267,399,512,628,910],gauss:[1047,1058],gaussian:[1142,1143],geglu:[1181,1184],gelu:[355,462,755,1142,1181,1184],gener:[23,40,41,43,834,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1018,1125,1127,1129,1130,1181,1214,1218],geometr:[910,946],get:[40,41,778,779,780,836,845,846,854,869,870,875,879,882,885,886,896,897,910,914,950,951,952,980,1069,1179,1181,1198,1207,1227],get_all_arrays_in_memori:910,get_all_arrays_on_dev:836,get_framework:59,get_initial_st:[1198,1207],get_min_bas:910,get_min_denomin:910,get_mod_kei:[1210,1211],get_num_dim:[628,910],get_param:1175,get_param_recurs:1175,get_referrers_recurs:910,getfullargspec:1069,gist:1181,give:[910,917,982,1224],given:[40,41,43,836,869,875,878,879,880,882,885,886,890,910,913,917,918,925,933,934,943,949,967,968,977,978,981,984,985,992,999,1004,1006,1010,1011,1012,1014,1015,1017,1019,1020,1021,1035,1037,1042,1047,1048,1069,1113,1118,1119,1125,1128,1129,1131,1132,1135,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1187,1188,1227],global:[40,41,42,836,845,846,853,878,879,880,886,893,894,895,910,935,951,952,980,986,987,988,994,995,1012,1027,1069,1167,1168,1173,1174,1181,1212,1213],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1181,1189,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208],got:1181,gpu0:43,gpu2:43,gpu:[836,871,874,1069],gpu_is_avail:[836,1069],grad:[1181,1214,1218,1223],gradient:[25,40,41,836,880,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1031,1065,1066,1067,1068,1181,1214,1215,1216,1217,1218,1219,1223,1227],gradient_descent_upd:[1012,1065,1066,1067,1068],gradient_imag:[152,326,441,559,707,1028],gradienttrack:[1012,1013],graph:[1012,1015,1017,1019,1020,1021,1169,1170,1171,1176,1181,1210,1211],graph_compil:[1169,1170,1171,1172,1173,1174,1175,1179],greater:[40,41,910,913,944,993,1125,1129],green:[40,41,42,1225,1226],grid:[910,972],group:[1028,1033],guid:[1181,1182,1227],gym:1181,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1227,half:[910,913,1069,1125,1129],hand:1181,handl:[40,41,42,43,834,835,836,852,854,863,864,875,882,885,1012,1015,1017,1019,1020,1021,1069,1214,1215,1216,1217,1218,1219],has:[40,41,43,910,996,1047,1052],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,910],hasattr:1069,have:[40,41,43,778,779,782,783,792,793,795,820,910,928,932,937,938,939,940,947,996,1012,1018,1026,1035,1040,1047,1057,1069,1181,1223,1224],hdf5:[40,41,1210,1211],head:[1150,1161,1198,1209],head_dim:[1198,1209],height:[1028,1033],height_cutoff:[40,41],help:[59,370,836,848,849,850,851,886,1012,1175,1179,1181,1189,1191,1192,1194,1195,1197],helper:1181,here:[43,1181],hidden:[1150,1160,1198,1207],hierarch:[910,930],hierarchi:[40,41],high:[40,41,1125,1127,1129],higher:[1012,1015,1017,1019,1020,1021,1035,1040],highest:[1125,1127],highest_util:1069,highest_util_nod:1069,highli:1181,highlight:1227,highlight_subgraph:[1169,1171,1175],hint:43,hkt:1227,hold:[886,890,910,913,918,984,985],host:1181,hot:[910,976],how:[1181,1198,1209,1210,1211,1224,1227],howev:[43,1224],http:1227,hyperbol:[1047,1049,1051,1054,1056,1062,1064,1142,1149],hypothet:1227,icon:1181,idea:1181,ident:[40,41,43,113,267,399,512,628,910],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[778,779],if_exist:[40,41],ignor:[40,41,1214,1218],ignore_key_error:[40,41],ignore_miss:[1214,1218],ignore_non:[40,41],iinfo:[79,195,370,478,593,778],imag:[27,910,966,1029,1030,1031,1032,1033,1034,1150,1151,1152,1153,1154,1156,1157,1181,1227],image_dim:[1028,1032],imkkhk:1227,immedi:[1181,1224,1227],implement:[43,795,820,1181,1224,1227],in_featur:[1150,1159],includ:[40,41,43,792,793,910,913,955,994,995,1007,1113,1114,1125,1129,1198,1208,1209,1212,1213,1223],include_deriv:[1113,1115,1122],include_empti:[40,41],include_gener:[1169,1170,1171,1175,1210,1211],include_inf:[40,41,910,955,1007],include_nest:[1113,1114],include_self:[40,41],inclus:[1125,1127],incom:[1150,1159],increas:[836,858,862,868,910,929,942,1009,1069,1113,1122],increasingli:1227,increment:[910,960,1069],increment_param_count:1175,inde:1181,indent:[40,41,42],independ:[1125,1126],index:[40,41,910,915,916,948,949,972,993,996,1113,1116,1118,1119,1120,1123],index_nest:1113,indic:[40,41,910,915,916,917,948,949,957,976,984,985,1113,1114,1116,1118,1119,1120,1121,1123,1124,1125,1126,1142,1147,1150,1151,1152,1153,1154,1155,1156,1157,1167,1168,1198,1199,1200,1201,1202,1203,1204,1205,1210,1211],indices_wher:[113,267,399,628,910],inevit:1227,inf:[40,41,910,955,964,1007,1047,1052],infer:[834,835,910,943,953,956,982,990,1028,1032,1224,1227],infin:[782,783,910,964],inform:[778,779,780,1012,1023],init_c:[1150,1160],init_h:[1150,1160],init_on_first_step:[1214,1218],initi:[40,41,42,59,370,836,848,849,850,851,886,1012,1069,1150,1160,1175,1179,1181,1191,1192,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1214,1218],initialz:[1210,1211],inner:[1065,1066,1067,1068],inner_batch_fn:[1065,1066,1067],inner_batch_shap:[1150,1159],inner_cost_fn:[1065,1066,1067],inner_grad_step:[1065,1066,1067,1068],inner_learning_r:[1065,1066,1067,1068],inner_optimization_step:[1065,1066,1067,1068],inner_v:[1065,1066,1067],inp:1069,inplac:[40,41,910,921,958,962,997,1012,1015,1017,1019,1020,1021,1187,1188,1214,1215,1216,1217,1218,1219],inplace_arrays_support:910,inplace_decr:[113,267,399,512,628,910],inplace_incr:[113,267,399,512,628,910],inplace_oper:[0,11,12],inplace_upd:[40,41,113,267,399,512,628,910,1187,1188],inplace_variables_support:910,input:[15,18,19,40,41,42,43,782,783,792,793,834,835,836,845,846,853,854,855,858,859,862,868,880,881,886,890,891,893,894,895,896,897,901,902,910,911,912,915,916,917,919,920,921,922,924,925,926,927,928,929,931,933,934,936,937,938,939,940,941,942,943,944,945,946,953,955,956,957,959,960,961,963,964,965,966,970,971,972,973,981,983,990,991,993,996,997,998,999,1001,1002,1003,1004,1006,1007,1009,1012,1016,1018,1023,1027,1028,1029,1030,1031,1032,1034,1035,1038,1040,1041,1043,1044,1045,1046,1047,1049,1051,1052,1054,1055,1056,1057,1061,1062,1063,1064,1065,1066,1067,1068,1069,1125,1126,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1167,1168,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1212,1213,1224],input_ax:[836,880,1069],input_channel:[1198,1199,1200,1201,1202,1203,1204,1207,1208],input_queu:1069,inputs_split:1069,insert:[910,942],insid:43,inspect:1069,inspir:1227,instal:1181,instanc:[15,16,17,18,19,40,41,43,795,820,836,845,1069,1187,1188,1220,1221],instead:[40,41,1132,1134,1135,1136,1137,1138,1139,1140,1227],int32:43,int64:[886,890,910,913,918,956,977,978,1010,1011],int_dtyp:[886,895,905],integ:[40,41,778,780,792,793,886,902,910,913,924,944,983,992,1035,1041,1125,1127,1130],integr:1181,intend:43,inter:1181,interchang:[40,41,910,998],interest:1181,interfac:[910,918,1224],intermedi:[40,41],intern:[40,41,836,1012,1026,1069,1113,1114,1121,1122,1189,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1220,1221],interpol:[910,966],intersect:[1047,1048],interv:[40,41,792,793,910,913,925,967,968,1047,1050,1125,1129],introduc:1227,inv:[711,1035,1227],invalid:[792,793],invalid_dtyp:886,invers:[1035,1037,1039,1047,1048,1049,1050,1051,1052,1054,1227],invert:[1035,1037,1039],invest:1227,invoc:[834,835],irrespect:1181,is_al:1069,is_arrai:[113,267,399,512,628,910,1069],is_float_dtyp:886,is_int_dtyp:886,is_mean:1069,is_sum:1069,is_var:[1175,1179],is_vari:[149,321,436,554,701,1012],isfinit:[84,200,375,483,598,782],isinf:[267,512,628,910],isinst:1069,isnan:[267,512,628,910],isnumer:1069,item:[15,19,40,41,795,807,808,836,845,846,848,855,857,859,861,867,886,893,910,930,954,994,995,1069,1113,1117,1118,1119,1122,1123,1124,1181,1210,1211,1223],iter:[15,16,17,18,19,40,41,42,834,835,836,839,840,842,843,845,846,849,850,857,859,860,861,862,867,880,910,912,922,928,929,943,956,972,977,981,982,985,990,992,996,999,1004,1009,1010,1069,1113,1114,1115,1117,1121,1122],iterbal:[836,857,861,867,1069],its:[836,880,910,917,956,982,998,1004,1069,1181],itself:[43,1113,1122],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,368,369,370,372,373,375,376,778,779,780,782,783,792,793,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1179,1181,1182,1184,1185,1186,1187,1188,1189,1191,1192,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1225,1226],ivy_backend:[40,41],ivy_bay:1227,ivyfcmodel:1223,ivyh:[40,41,42],ivymodul:[179,763],jame:1181,jax:[1012,1018,1181,1227],jax_concat:1181,jnp:1181,join:[40,41,910,928,996,1069],journal:1181,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1181,1198,1207,1227],kaimingnorm:[1189,1193],kalman:1227,kalman_filt:1227,kalman_filter_step:1227,kalman_filter_upd:1227,keep:[40,41,836,881,910,1006,1069,1181,1227],keep_inner_v:[1065,1066,1067],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1065,1066,1067],keepdim:[40,41,792,793,910,1006,1035,1038,1041,1132,1134,1135,1136,1137,1138,1139,1140],kei:[15,16,17,40,41,42,795,800,836,848,910,930,1065,1066,1067,1069,1113,1116,1120,1150,1161,1162,1181,1187,1188,1198,1209,1214,1218],kept:[40,41,42,1065,1066,1067],kera:1227,kernel:[1150,1160],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,836,845,846,858,862,868,910,914,937,938,939,969,1069,1113,1117,1210,1211],keyword_color_dict:[40,41,42],kind:[778,779,780,1227],kwarg:[15,16,17,40,41,42,59,63,836,845,858,862,868,910,969,1069,1169,1170,1171,1175,1187,1188,1210,1211],kwarg_stateful_idx:[1169,1170,1171,1175,1210,1211],kwargs_clon:1069,kwargs_dist:1069,kwargs_uni:1069,label:[1163,1164,1165,1166],lamb:[1012,1019,1181,1214],lamb_upd:1012,lambda:[1069,1214,1217,1219,1223],lar:[1012,1019,1020,1181,1214],larger:[778,779,910,925],largest:[40,41,778,779,780,910,915,944],lars_upd:1012,last:[40,41,792,793,910,913,932,966,992,996,1035,1038,1040,1132,1137,1139,1142,1147,1150,1160,1198,1208],later:[40,41,910,923],latest:[1198,1207],layer:[1012,1015,1017,1019,1021,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1167,1168,1181,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1220,1221,1227],layer_norm:1167,layernorm:[1181,1212],layerwis:[1012,1020,1214,1217],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1113,1114,1121],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1142,1143,1144],leaky_relu:[755,1142],learn:[1012,1015,1017,1019,1020,1021,1065,1066,1067,1068,1125,1131,1181,1214,1215,1216,1217,1218,1219,1224,1227],learnabl:[1167,1168,1212,1213],leav:[15,18,19,40,41,1113,1114,1115,1121,1122],left:[40,41,1035,1038,1041,1132,1134,1135,1136,1137,1138,1139,1140,1181],leftmost:[40,41],len:1069,length:[40,41,42,910,913,982,993,1004],lenton2021ivi:1181,lenton:1181,less:[40,41,43,910,924,1069,1125,1129],less_util_node_str:1069,let:[1224,1227],level:1181,librari:[1181,1223,1227],lightweight:1181,like:[43,1012,1018,1125,1129,1181,1223,1224,1227],limit:[40,41,42,778,779,780,910,925,926,927],linalg:[29,1036,1037,1038,1039,1040,1041,1042,1181],linear0:[1181,1223],linear1:1181,linear2:1223,linear:[910,946,966,1035,1142,1143,1144,1145,1150,1158,1181,1198,1199,1200,1201,1202,1203,1204,1205,1223],linear_resampl:[113,267,399,512,628,910],linearli:[910,946],link:1181,linspac:[113,267,399,512,628,910,913],list:[15,18,19,40,41,43,792,793,836,845,846,855,856,858,859,860,862,865,866,880,910,913,918,920,972,991,992,1001,1006,1065,1066,1067,1069,1113,1114,1115,1117,1121,1122,1150,1151,1152,1153,1154,1155,1156,1157,1181,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205],list_join:[40,41,42],list_stack:[40,41],littl:1224,load:[40,41],loaded_kwarg:1069,loader:1181,local_set:[910,954],locat:[43,910,964,965,1125,1126],log:[722,910,968,1047,1069,1163,1164,1165,1166,1181],log_all_op:1175,log_global_inference_abs_tim:[1172,1181],log_global_inference_rel_tim:[1172,1181],logarithm:[1047,1060],logic:[31,792,793,1044,1045,1046,1181],logical_and:[335,718,1043],logical_not:[335,718,1043],logical_or:[335,718,1043],logit:[1163,1166],logspac:[113,267,399,512,628,910],look:[43,1224,1227],loop:[1065,1066,1067,1068],loss:[1164,1165,1166,1181,1223],loss_fn:[1181,1223],lot:1224,low:[40,41,1125,1127,1129],lower:[40,41,910,971,1125,1129],lower_depth:[1210,1211],lowest:[15,18,19,40,41,1113,1122,1125,1127],lstm:[1150,1160,1181,1198],lstm_updat:[43,1150],machin:[778,779,780,1125,1131,1181,1224,1227],mai:[910,913,936,940,1181,1224,1227],main:[910,956,1181],mainli:1181,make:[43,836,1069,1181,1224],maml:[1065,1066,1067],maml_step:1065,manag:[836,1069],mani:[40,41,43,910,992,1181],manner:[15,18,19,40,41,43,1113,1122],manual:[1113,1114,1121,1227],map:[40,41,42,836,845,910,964,965,1069,1113,1118,1119,1122,1198,1209,1223],map_cont:[40,41],map_nest_at_index:1113,map_nest_at_indic:1113,map_sequ:[40,41],mapper:[836,845,846,1069],mask:[1150,1161,1162],match:[40,41,910,969],match_kwarg:910,math:[33,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1069,1181],mathbb:[1035,1042],mathbf:[1035,1042],matmul:[43,267,512,628,910,1227],matplotlib:1224,matric:[1150,1159],matrix:[40,41,910,912,926,970,1035,1036,1037,1038,1039,1042,1150,1159,1198,1208],matrix_norm:[40,41,156,330,445,563,711,1035],matter:1181,max:[40,41,370,778,779,780,910,926,927,938,971,984,985,1069,1132,1134,1214,1216],max_batch_s:[40,41],max_chunk_s:[836,880,1069],max_depth:[40,41,836,840,843,850,858,862,868,910,954,1069,1113,1122],max_dev_dim_step_ratio:836,max_freq:[910,946],max_length:[40,41],max_node_dim_step_ratio:1069,max_norm:[40,41,910,926,927],max_split_factor_step_s:[836,1069],max_trust_ratio:[1012,1019,1214,1216],maxim:[1181,1224,1227],maximis:1181,maximum:[40,41,42,628,836,858,862,868,880,910,915,925,926,927,946,1012,1019,1069,1113,1122,1132,1134],mayb:[15,18,19],mdi:1069,mean:[40,41,836,865,866,867,868,880,910,938,1065,1066,1067,1068,1069,1113,1117,1125,1128,1132,1135,1138,1140,1189,1223,1227],measur:[1150,1161,1198,1209],mech:1181,mechan:[1181,1227],medic:1227,memori:[836,852,875,880,882,885,1069,1150,1160,1181],meshgrid:[267,628,910],messag:[1225,1226],meta:[35,1066,1067,1068,1181],method:[40,41,42,43,910,918,930,972,984,985,1012,1019,1020,1069,1113,1114,1121,1122,1181,1198,1209,1210,1211,1224],might:[910,936,1227],min:[40,41,370,778,779,780,910,938,973,984,985,994,1069,1132,1136],min_bas:[910,995],min_denomin:[910,994],min_dev_dim_s:836,min_node_dim_s:1069,min_sf_tune_step:[836,1069],min_unit_dev_tune_step:836,min_unit_node_tune_step:1069,mind:1181,mini:[1167,1168,1212,1213],minimum:[40,41,628,836,886,890,910,913,916,918,925,951,952,986,987,994,995,1069,1132,1136],miss:[1214,1218],ml_framework:[910,913],mod:[910,945],mod_depth:[1210,1211],mod_height:[1210,1211],mod_with_top_mod_key_chain:[1210,1211],mode:[40,41,834,835,836,865,866,867,868,880,1035,1040,1069,1224],model:[1181,1223],modul:[40,41,42,59,910,974,1069,1181,1182,1184,1185,1186,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1212,1213,1220,1221,1227],moment:[1012,1014,1015,1019,1214,1215,1216],more:[43,910,996,1069,1181,1224,1227],more_util_node_str:1069,most:[40,41,43,1181,1227],move:[40,41,43,836,881,1069],much:[1181,1227],multi:[910,974,1150,1161,1198,1209],multi_head_attent:1150,multi_index_nest:1113,multi_map:[40,41],multi_nod:1069,multidev:[836,847,848,849,868],multidevcontain:[40,41],multidevic:[836,845],multidevit:[836,839,842,845,846,850],multidevitem:[836,838,841],multidevnest:[836,840,843],multiheadattent:[1181,1198],multinod:[1069,1073],multinodecontain:1069,multinodeit:1069,multinodeitem:1069,multinodenest:1069,multinomi:[161,340,451,569,739,1125],multipl:[40,41,792,793,910,969,992,1035,1037,1132,1134,1135,1136,1137,1138,1140,1167,1168,1198,1208,1224],multipli:[40,41,910,933,1132,1137],multiprocess:[40,41,42,628,836,845,910,1069],must:[40,41,42,43,782,783,792,793,795,820,836,865,866,867,868,880,910,913,928,930,932,940,971,973,985,996,1047,1053,1057,1069,1125,1130,1214,1218],mutabl:[1113,1115,1122],mutlidevic:[836,845],mutlinod:1069,mw_tm1:[1012,1015,1019],mx_concat:1181,mxnet:[43,1181,1227],my_func:43,mymodel:1181,name:[834,835,1169,1170,1171,1175,1223],namespac:[43,1224],nan:[40,41,782,783,910,955,965,1007],nativ:[15,17,18,19,40,41,43,836,852,854,863,864,875,882,885,886,891,898,899,1069,1181,1182,1187,1188],native_modul:[1187,1188],native_module_class:[1187,1188],nativearrai:[15,18,19,43,778,779,780,782,783,792,793,795,820,836,854,880,881,886,890,896,901,902,910,911,912,913,915,916,917,918,919,920,922,924,925,926,927,928,929,931,932,933,934,937,938,939,940,942,943,944,945,946,948,949,953,955,956,957,964,965,966,967,968,970,971,972,973,976,977,978,981,982,983,984,985,990,992,993,996,998,999,1001,1002,1003,1004,1006,1007,1008,1009,1010,1011,1069,1113,1115,1122],natur:[1047,1060,1227],ncdhw:[1150,1155,1156,1198,1203,1204],nchw:[1150,1153,1154,1157,1198,1201,1202,1205],ncw:[1150,1151,1152,1198,1199,1200],ndarrai:[43,368,369,370,372,373,375,376,910,1002],ndhwc:[1150,1155,1156,1198,1203,1204],nearest:[910,983],need:[43,910,926,927,1150,1152,1154,1156,1181,1198,1200,1202,1204,1227],neg:[40,41,782,783,792,793,1132,1137,1139,1142,1144],negative_slop:1189,neither:1069,nest:[15,16,17,18,19,40,41,42,836,858,862,868,910,918,1001,1065,1066,1067,1069,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1210,1211,1214,1215,1216,1217,1218,1219],nested_indices_wher:1113,nested_map:[1069,1113],network:[1150,1159,1181,1182,1184,1198,1210,1211,1227],neural:[1150,1181,1184,1198,1223],new_node_percent_mem:1069,new_node_util:1069,new_node_utils_kei:1069,new_std:[1167,1168,1212,1213],newli:[834,835,910,922,923],newlin:[40,41,42],newshap:[910,922,982],next:[778,779,1069,1210,1211,1214,1215,1216,1217,1218,1219],nhwc:[1150,1153,1154,1157,1198,1201,1202,1205],node:[40,41,1113,1114,1121],node_clon:1069,node_dist:1069,node_dist_arrai:1069,node_dist_it:1069,node_in:1069,node_mapp:1069,node_str:1069,node_to_str:1069,node_util:1069,nodedistit:1069,nodedistitem:1069,nodedistnest:1069,nodemanag:[1069,1080],nodemapp:1069,nodemappermultiproc:1069,noinspect:[43,837,887,888,889,1013,1069,1176],non:[40,41,792,793,834,835,886,900,1210,1211,1214,1218,1224],none:[40,41,42,43,59,61,64,368,369,778,779,780,792,793,834,835,836,845,846,852,853,878,879,880,881,886,893,894,895,910,913,918,935,936,941,943,947,948,949,954,956,958,959,960,961,962,967,968,974,976,977,978,981,984,985,986,987,992,993,994,995,1004,1005,1010,1011,1012,1015,1017,1019,1020,1021,1027,1028,1032,1035,1038,1041,1065,1066,1067,1068,1069,1113,1114,1117,1121,1122,1125,1126,1127,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1150,1152,1154,1156,1159,1160,1161,1162,1167,1168,1169,1170,1171,1175,1179,1187,1188,1189,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221],norm:[40,41,910,926,927,1035,1038,1041,1168,1181,1213,1214,1216],normal:[1125,1128,1167,1168,1212,1213],normalized_idx:[1167,1168],normalized_shap:[1212,1213],notat:[40,41,1132,1133],note:43,noth:[40,41,1224],notimplementederror:1069,now:[40,41,836,881,910,911,1069,1181,1198,1209,1210,1211,1223,1224,1227],np_concat:1181,np_finfo:370,ns_tune_step:1069,num:[910,967,968],num_arrai:[40,41],num_arrays_in_memori:910,num_arrays_on_dev:836,num_band:[910,946],num_channel:[1198,1205],num_chunk:1069,num_chunks_floor:1069,num_class:[1125,1126],num_cpu_cor:836,num_gpu:[106,836,1069],num_head:[1150,1161,1198,1209],num_kei:[1150,1161,1162],num_lay:[1198,1207],num_or_size_split:[40,41,910,992],num_output:1069,num_queri:[1150,1161,1162],num_sampl:[910,966,1028,1029,1125,1126],num_task:[1065,1066,1067,1068],number:[40,41,42,778,779,780,792,793,834,835,836,872,873,874,886,897,901,902,910,913,925,929,942,946,953,956,965,966,967,968,971,975,981,992,999,1003,1007,1009,1035,1040,1065,1066,1067,1068,1069,1125,1126,1130,1132,1134,1135,1136,1138,1140,1150,1161,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1224,1227],numer:[43,782,783,795,820,910,951,952,986,987,994,995,1047,1057,1189],numhead:[1150,1161],numpi:[40,41,368,369,370,372,373,375,376,910,1002,1035,1040,1132,1133,1181,1223,1224,1227],nwc:[1150,1151,1152,1198,1199,1200],obj:[40,41],object:[40,41,42,59,370,778,779,780,836,886,890,910,913,918,1012,1113,1116,1118,1119,1120,1123,1124,1125,1131,1175,1179,1189,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1210,1211],object_in:[910,918],observ:1069,occupi:[778,779,780,910,984,985],off:[910,913],offer:1181,offset:[1167,1168],often:1224,old:[40,41],on_init:[1198,1209,1210,1211],onc:[836,880,1069,1125,1126,1181],one:[40,41,43,836,865,866,867,868,880,886,892,910,956,969,976,984,985,993,996,1035,1038,1041,1069,1132,1133,1134,1135,1136,1137,1138,1139,1140,1181,1224,1227],one_hot:[113,399,512,628,910],onearrai:[910,942],ones:[40,41,113,267,399,512,628,910,956,976,978,1181],ones_lik:[113,267,399,512,628,910],ongo:43,onli:[40,41,43,836,1069,1113,1114,1115,1121,1214,1215,1216,1217,1218,1219,1223,1224],onlin:1181,onto:[836,865,866,881,1069,1113,1117,1122],oom:[836,1069],open:[910,913,1125,1129,1181,1227],opencv:1224,oper:[40,41,910,921,937,938,939,967,968,997,1012,1015,1017,1019,1020,1021,1043,1044,1045,1046,1150,1151,1152,1153,1154,1155,1156,1157,1159,1181,1182],operand:[40,41,1132,1133],oppos:[910,946],optim:[836,1012,1015,1017,1019,1020,1021,1065,1066,1067,1068,1069,1181,1215,1216,1217,1219,1223,1227],optimizer_upd:1012,option:[15,18,19,40,41,42,43,792,793,834,835,836,845,846,854,858,859,860,861,862,865,866,867,868,875,878,879,880,881,885,886,891,896,900,909,910,912,913,915,916,917,918,926,927,928,933,935,936,943,946,947,948,949,953,955,956,963,966,967,968,969,972,974,976,977,978,981,984,985,988,990,992,993,994,995,996,1004,1006,1007,1010,1011,1012,1015,1017,1018,1019,1020,1021,1023,1028,1032,1035,1038,1041,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1132,1134,1135,1136,1137,1138,1139,1140,1142,1143,1147,1150,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1224],ord:[910,943,1035,1040],order:[40,41,42,43,910,917,1012,1015,1017,1019,1020,1021,1035,1038,1041,1065,1066,1067,1220,1221],ordered_node_util_kei:1069,org:1227,organ:43,origin:[40,41,42,910,978,982,1011,1035,1038,1041],other:[40,41,43,795,797,798,803,805,806,810,812,813,814,815,816,818,820,821,822,823,824,825,827,828,829,831,832,833,834,835,910,912,913,956,1012,1016,1125,1129,1181,1223,1224,1227],other_i:[43,795,820],otherwis:[15,16,17,18,19,40,41,782,783,792,793,836,853,886,893,894,895,910,921,1004,1005,1008,1012,1018,1023,1027,1065,1066,1067,1069,1132,1134,1135,1136,1138,1140],our:[1181,1227],out:[910,913,1047,1052,1150,1158,1160,1181,1198,1206],out_feat_dim:[1150,1161],out_featur:[1150,1158,1159],out_i:[782,783],outdat:1227,outer:[1065,1066,1067,1068],outer_batch_fn:[1065,1066,1067],outer_batch_shap:[1150,1159],outer_cost_fn:[1065,1066,1067],outer_v:[1065,1066,1067],outlin:1224,output:[40,41,43,836,845,846,880,910,913,923,947,956,981,999,1012,1016,1047,1053,1069,1125,1127,1128,1129,1150,1152,1154,1156,1158,1160,1161,1162,1181,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209],output_ax:[836,880,1069],output_axi:1069,output_channel:[1198,1199,1200,1201,1202,1203,1204,1207,1208],output_connected_onli:[1169,1171,1175,1210,1211],output_queu:1069,output_shap:[1150,1152,1154,1156,1198,1200,1202,1204],outsid:[910,925],over:[40,41,792,793,910,943,1035,1038,1041,1125,1129,1132,1134,1135,1136,1138,1140,1167,1168,1212,1213],overal:1224,overflow:[910,913],overhead:1224,overrid:[910,976,978,1011],overriden:[1214,1218],overwrit:[40,41,836,880,1069],overwrite_at_key_chain:[40,41],own:[1181,1224,1227],packag:[43,1224],pad:[910,929,946,1009,1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205],pad_width:[910,929,1009],page:1181,pair:[1150,1162],parallel:[836,845,846,1069],parallelis:[836,845,846,1069],param:[40,41,42,43,836,880,910,911,948,949,976,977,1010,1069,1180,1181,1210,1211,1223],paramet:[15,16,17,18,19,40,41,42,778,779,780,782,783,792,793,795,820,834,835,836,845,846,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,875,878,879,880,881,882,885,886,890,891,892,896,897,898,899,900,901,902,909,910,912,913,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,936,937,938,939,940,941,942,943,944,945,946,947,948,949,953,955,956,957,959,960,961,963,964,965,966,967,968,969,970,971,972,973,974,977,978,981,982,983,984,985,986,987,988,990,991,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1023,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223],parameter:[1125,1128,1129],params_all_empti:1175,pardo:1181,pars:[910,930],part:[1012,1015,1017,1019,1020,1021,1047,1052,1181,1210,1211,1224],partial:[40,41,1210,1211],particl:1227,particular:1227,pass:[40,41,42,836,845,880,886,891,910,923,1012,1026,1065,1066,1067,1069,1187,1188,1210,1211,1214,1218,1220,1221],pattern:[40,41,910,937,938,939],per:[836,1069,1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205],percent_used_mem_on_dev:836,percent_used_mem_on_nod:1069,percentag:[836,875,1069],perf_count:1069,perform:[40,41,43,792,793,836,910,915,916,917,933,937,938,939,959,960,961,966,967,968,1012,1015,1017,1019,1020,1021,1028,1029,1065,1066,1067,1068,1069,1113,1118,1119,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1158,1160],permissable_step:1069,permit:43,permut:[910,998,1004],perpendicular:[910,932],person:1181,physci:1227,pickl:[40,41,1069],pickle_filepath:[40,41],pid:1175,pinv:[330,711,1035],pip:1181,pipelin:1223,pkk:1227,pkkm1:1227,pkm1km1:1227,place:[40,41,43,836,881,910,942,947,959,960,961,1069,1214,1215,1216,1217,1218,1219],placehold:[1113,1122],point:[778,779,886,901,910,913,1047,1057],popul:[40,41,1125,1126],popular:1227,population_s:[1125,1126],portabl:[1181,1182],posit:[15,16,17,778,779,782,783,836,858,862,868,910,911,913,942,946,1069,1125,1130,1187,1188],possibi:[40,41],possibl:[910,969,1001,1028,1033,1227],post:[1167,1168],post_shap:[40,41],power:[43,795,820,826,910,951,986,995,1189],practic:1181,pre:[836,1069,1181],pre_shap:[40,41],precis:[778,779],pred:[1163,1164,1165,1166],predict:[1163,1164,1165,1166,1227],preprint:1181,present:[40,41],preserv:[40,41,42,910,943,1012,1023],preserve_typ:[40,41,1012,1023],press:1181,prevent:[43,1012,1014,1015,1019,1069,1214,1215,1216],previou:[1012,1015,1019],previous:[910,923],prime:1181,print:[40,41,42,836,876,910,979,1181,1223],print_all_arrays_in_memori:910,print_all_arrays_on_dev:836,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1214,1218],prob:[1125,1126,1150,1158,1198,1206],probabl:[1125,1126,1150,1158,1198,1206],problem:[43,1227],process:[43,836,845,846,875,885,910,974,1069],process_specif:[836,875,885,1069],prod:[40,41,910,938],produc:[836,845,846,1069],product:[40,41,910,932,933,970,1132,1133,1150,1161,1162,1198,1209],profil:[106,261,397,505,620,836,1069],project:[1181,1223,1224,1227],promot:[43,795,820,1047,1057],prompt:1181,properli:43,properti:[40,41,370,836,848,1069,1175,1179,1210,1211,1214,1215,1216,1217,1219],provid:[40,41,43,792,793,834,835,836,853,886,893,894,895,900,909,910,936,976,978,985,1011,1012,1015,1017,1019,1020,1021,1027,1069,1181,1198,1207,1214,1215,1216,1217,1218,1219,1224],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1035,1039],ptype:[1175,1179],pure:[40,41,1181,1227],purpos:1227,put:1069,pybroadexcept:1069,pyprotectedmemb:[1069,1176],pyshadowingbuiltin:43,pyshadowingnam:[837,887,888,889,1013,1069],python:[40,41,836,875,885,910,913,1069,1181],pytorch:[1012,1015,1017,1019,1020,1021,1181,1214,1215,1216,1217,1218,1219,1223,1224,1227],pyunresolvedrefer:1069,quadrant:[1047,1053],queri:[40,41,795,809,830,836,869,879,1069,1150,1161,1162,1198,1209],query_dim:[1198,1209],query_kei:[40,41],queue:[40,41,42,836,845,846,910,980,988,1069],queue_class:[836,845,846,1069],queue_load_s:[40,41,42],queue_timeout:[40,41,42,910,1069],quick:1181,quickli:1223,radian:[1047,1048,1050,1053,1055,1061,1063],rai:[1047,1048],rais:[40,41,43,792,793,795,820,910,921,951,986,993,995,1005,1069,1210,1211,1214,1218],ram:[836,875,882,885,1069],randint:[161,340,569,739,1125],random:[37,40,41,1126,1127,1128,1129,1130,1131,1181],random_crop:1028,random_norm:[161,340,569,739,1125],random_uniform:[161,340,569,739,1125],randomli:[1028,1032,1150,1158,1198,1206],randomness_factor:[1169,1171,1175,1210,1211],rang:[910,913,967,968,1047,1053,1069,1181,1223,1227],rank:[792,793,910,929,1006,1009],rate:[1012,1015,1017,1019,1020,1021,1065,1066,1067,1068,1198,1209,1214,1215,1216,1217,1218,1219],rather:[40,41,836,880,910,913,963,1012,1018,1069],ratio:[836,1012,1019,1028,1033,1069,1214,1216],raw:[40,41],raw_delta:1069,reach:[836,858,862,868,1069,1113,1122],read:[40,41],readi:[1069,1223],real:[1047,1048,1052],realiti:1224,rearrang:[40,41,910,937,939],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1065,1067],receiv:[836,845,846,910,914,969,1069,1198,1208],receivess:[836,1069],receiving_fn:1175,receivng:[1065,1068],recev:[1065,1066,1067],recognit:1227,recommend:1181,rectifi:[1142,1144,1145],recurr:[1150,1160],recurrent_bia:[1150,1160],recurrent_kernel:[1150,1160],recurs:[40,41,1113,1114,1115,1121,1122],redefin:43,reduc:[40,41,792,793,836,880,910,938,1069,1132,1134,1135,1136,1137,1138,1139,1140],reduce_max:[40,41,168,345,453,574,746,1132],reduce_mean:[40,41,168,345,453,574,746,1132,1181,1223],reduce_min:[40,41,168,345,453,574,746,1132],reduce_prod:[40,41,168,345,453,574,746,1132],reduce_std:[40,41,345,1132],reduce_sum:[40,41,168,345,453,574,746,1069,1132],reduce_var:[40,41,168,345,453,574,746,1132],reduct:[39,40,41,792,793,910,938,984,985,1133,1134,1135,1136,1137,1138,1139,1140,1181],refactor:43,refer:[792,793,1012,1014,1015,1035,1042,1198,1208,1227],reflected_oper:[0,13,14],regard:[836,1069],regardless:[40,41,834,835],register_paramet:1223,reimplement:1227,rel:[1012,1015,1017,1019,1020,1021],rel_slice_obj:1069,relev:[1214,1215,1216,1217,1218,1219],relu:[755,1142,1143,1144,1181,1223],remain:[43,910,982,1113,1117],remaind:[40,41,910,945,992],remov:[40,41,910,993,1065,1066,1067],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,910,943],rep:[910,999],repeat:[40,41,267,628,910,939,999,1069,1224],repeated_config_check:[836,1069],repeatedli:[1113,1120],repetit:[40,41,910,981,999],replac:[40,41,43,910,925,984,985,1125,1126],repo:1181,repres:[43,886,892,897,1150,1159],represent:[40,41,42,43,778,779,780,836,863,864,886,892,898,899,910,991,1001,1069],reptil:[1065,1068],reptile_step:1065,requir:[43,834,835,886,890,910,913,918,1187,1188],resampl:[910,966],reshap:[40,41,43,628,910],reshape_lik:[40,41],respect:[910,940,1012,1014,1015,1016,1017,1019,1020,1021,1047,1057,1065,1066,1067,1068],respons:1069,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,782,783,792,793,795,820,836,845,910,913,940,984,985,996,1035,1038,1041,1043,1044,1045,1046,1047,1057,1069,1132,1134,1135,1136,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1181],ret:1069,ret_dict:1069,ret_fn:[836,845,846,1069],retain:[1012,1016],retain_grad:[1012,1016],retreiv:1069,retrn:[910,991],return_cont:[40,41],return_dict:[40,41],return_graph:[1169,1170,1171],return_inner_v:[1065,1066,1067,1068],return_sequ:[1198,1207],return_st:[1198,1207],rev:[910,936],revers:[40,41,910,936,943,1004],right:[40,41],rk_e:1227,robot:1181,ronald:1181,round:[267,628,910,913,1069],row:[910,956,1125,1126],rule:[43,795,820,910,913,1047,1057],run:[836,845,1012,1014,1015,1019,1065,1066,1067,1068,1069,1181,1182,1198,1209,1210,1211],safe:[836,845,1069],safety_factor:[836,1069],same:[15,16,17,40,41,43,836,845,846,880,881,886,890,910,911,924,928,944,945,948,949,976,978,983,984,985,996,1011,1012,1018,1023,1035,1040,1047,1052,1065,1066,1067,1069,1132,1133,1150,1151,1152,1153,1154,1155,1156,1157,1181,1198,1199,1200,1201,1202,1203,1204,1205,1223,1227],same_arrai:[40,41],sampl:[910,966,1028,1029,1125,1126,1128,1129,1150,1158,1181,1198,1206],satisfi:[910,918,1035,1037,1042],save:[40,41,910,989,1000,1028,1030,1210,1211],save_debug_info:1175,save_dir:[836,851,1069],save_to_disk:[1169,1171,1175,1210,1211],save_weight:[1210,1211],scalar:[910,925,976,1003,1007],scale:[836,878,879,1012,1020,1069,1150,1158,1161,1162,1167,1168,1198,1206,1209,1214,1217],scaled_dot_product_attent:1150,scatter:[910,976,984,985],scatter_flat:[113,267,399,512,628,910],scatter_nd:[113,267,399,512,628,910],scene:[1012,1015,1017,1019,1020,1021],schemat:1181,screen:[40,41],search:[15,18,19,40,41],second:[40,41,836,867,910,919,932,940,980,988,998,1012,1014,1015,1019,1065,1067,1069,1214,1215,1216],secondli:1227,see:[43,59,370,792,793,795,820,836,848,849,850,851,886,910,913,967,968,1012,1047,1057,1175,1179,1181,1189,1191,1192,1194,1195,1197],seed:[40,41,161,739,1125],seed_valu:[40,41,1125,1130],seem:1181,seen_set:[910,954],select:[910,918,993,1224,1227],self:[40,41,43,59,370,795,820,836,848,849,850,851,886,1012,1069,1175,1179,1181,1189,1191,1192,1194,1195,1197,1214,1218,1223,1227],sent:1069,seper:[910,946],seq:[40,41,42,1132,1133,1210,1211],sequenc:[15,16,17,40,41,42,43,834,835,836,845,846,855,856,857,858,859,860,861,862,865,866,880,886,890,910,913,918,920,922,928,929,943,956,969,972,977,981,982,985,992,996,999,1004,1009,1010,1012,1016,1028,1032,1033,1035,1038,1041,1069,1113,1124,1125,1127,1129,1132,1134,1135,1136,1137,1138,1139,1140,1150,1151,1152,1153,1154,1155,1156,1157,1167,1168,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1207,1210,1211,1212,1213,1214,1218,1220,1221],sequenti:1181,set:[15,18,19,40,41,836,865,866,878,879,880,910,912,935,956,986,987,988,989,1012,1015,1017,1018,1019,1020,1021,1035,1038,1041,1069,1113,1114,1121,1123,1124,1125,1126,1130,1132,1134,1135,1136,1137,1138,1139,1140,1179,1181,1198,1207,1214,1215,1216,1217,1218,1219,1224,1227],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1179,set_debug_mod:44,set_default_devic:836,set_default_dtyp:886,set_default_float_dtyp:886,set_default_int_dtyp:886,set_default_nod:1069,set_exception_debug_mod:44,set_framework:[40,41,59,1069,1181,1223,1224,1227],set_ivy_backend:[40,41],set_min_bas:910,set_min_denomin:910,set_nest_at_index:1113,set_nest_at_indic:1113,set_param:1175,set_queue_timeout:910,set_split_factor:[836,1069],set_stat:[1214,1215,1216,1217,1218,1219],set_tmp_dir:910,set_with_grad:1012,setter:1069,sever:1227,sgd:[1181,1214],shape0:1069,shape:[40,41,43,368,369,628,836,848,886,890,910,911,922,924,928,929,942,943,944,945,947,949,953,956,976,977,978,981,982,983,984,985,991,993,996,1009,1010,1011,1028,1032,1035,1037,1047,1052,1053,1069,1125,1127,1128,1129,1132,1133,1150,1152,1154,1156,1175,1179,1198,1200,1201,1202,1203,1204,1205,1212,1213],shape_slic:[40,41],shape_to_tupl:910,share:[40,41,1181,1224],shift:1069,should:[40,41,42,43,782,783,795,820,834,835,836,910,922,923,930,976,982,1012,1015,1017,1019,1020,1021,1047,1057,1069,1132,1133,1181],show:[40,41,1175,1181,1227],show_debug_info:1175,show_graph:[1169,1181,1210,1211,1214,1218],show_mod_in_top_mod:[1210,1211],show_structur:[1210,1211],show_sub_contain:[40,41],show_v:[1210,1211],show_v_in_top_v:[1210,1211],shown:[40,41],shp:1069,shuffl:[40,41,161,739,1125],shuffle_h5_fil:[40,41],sigmoid:[755,1142,1181,1223],signatur:[43,59,370,836,848,849,850,851,886,1012,1175,1179,1189,1191,1192,1194,1195,1197],signific:1227,similar:[43,1150,1161,1198,1209],simpl:[43,910,941,1181,1224,1227],simplest:1224,simpli:[40,41,43,1181,1224,1227],simultan:1181,sin:[722,910,946,1047,1063,1224],sinco:1224,sine:[1047,1050,1051,1061,1062],singl:[40,41,834,835,836,845,846,865,866,867,868,910,993,1003,1007,1028,1033,1069,1125,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1181,1224,1227],singleton:[792,793],singular:[1035,1040],sinh:[722,1047],siren:[1181,1189],size:[40,41,42,836,859,860,861,862,878,879,880,910,913,922,967,968,984,992,1028,1032,1035,1038,1040,1041,1069,1125,1126,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1198,1199,1200],size_ordered_arrai:[40,41],skew:[1035,1042],skinv:1227,skip:[40,41],slice:[40,41,910,917,948,949,1069,1113,1120],slice_kei:[40,41],slice_obj:[40,41,1069],slice_via_kei:[40,41],slide:[1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205],slope:[1142,1144],small:[1163,1164,1165,1166,1167,1168,1181,1212,1213,1224],smaller:[910,925],smallest:[40,41,778,779,780,910,916,924],smallest_norm:[370,778,779],softmax:[177,462,755,1142,1150,1161,1162],softplu:[755,1142],solv:1227,some:[40,41,43,910,913,1012,1014,1015,1017,1019,1020,1021,1026,1150,1158,1181,1198,1206,1224,1227],some_backend:43,some_namespac:43,someth:[43,1227],something_cool:43,somewher:[40,41],sort:[40,41,42,910,917,1035,1040,1069],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,368,369,370,372,373,375,376,778,779,780,782,783,792,793,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,843,845,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1179,1184,1185,1186,1187,1188,1189,1191,1192,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1225,1226,1227],space:[910,913,946,967,968],spars:[1163,1166],sparse_cross_entropi:1163,spawn:[910,974],specif:[40,41,43,836,878,910,930,937,938,939,974,1065,1066,1067,1068,1069,1125,1131,1181,1210,1211,1223,1224],specifc:[1125,1126],specifi:[40,41,43,792,793,836,855,856,857,858,859,860,861,862,865,866,870,872,876,879,880,881,886,890,892,910,913,915,916,918,925,928,929,947,948,949,955,967,968,996,1006,1009,1035,1038,1041,1069,1113,1118,1119,1123,1124,1132,1133,1134,1135,1136,1137,1138,1139,1140],split:[40,41,113,267,399,512,628,836,845,859,860,861,862,878,879,880,910,969,1069],split_arg:1069,split_factor:[836,845,1069],split_func_cal:[836,1069],split_siz:1069,spread:[836,868,1069],squar:[910,956,1035,1037],squeez:[113,267,399,512,628,910],stabil:[910,994,995],stabl:[910,951,952,986,987,994,995],stable_divid:910,stable_pow:910,stack:[40,41,267,628,910,1028,1033,1113,1114,1121,1198,1207],stack_imag:[152,326,441,559,707,1028],stacked_dim_s:1069,stage:43,standard:[40,41,43,778,779,1125,1128,1132,1138,1167,1168,1212,1213],start:[40,41,836,851,910,913,967,968,1069,1181,1224],starting_index:[40,41],starting_split_factor:[836,1069],state:[1069,1150,1160,1169,1170,1171,1175,1181,1184,1185,1186,1187,1188,1189,1191,1192,1194,1195,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223],statement:1224,static_argnam:[834,835],static_argnum:[834,835],std:[1125,1128],step:[40,41,836,910,913,967,968,1012,1014,1015,1017,1019,1020,1021,1065,1066,1067,1068,1069,1181,1214,1215,1216,1217,1218,1219,1223,1227],stephen:1181,stick:1181,still:[40,41],stochast:[1214,1219],stop:[40,41,836,851,880,910,913,967,968,1012,1015,1017,1019,1020,1021,1023,1065,1066,1067,1068,1069,1214,1215,1216,1217,1218,1219],stop_gradi:[40,41,321,436,554,701,836,880,1012,1015,1017,1019,1020,1021,1065,1066,1067,1068,1069,1214,1215,1216,1217,1218,1219],stopiter:1069,store:[40,41,910,946,992,1012,1026,1210,1211],store_var:[1210,1211],str:[15,16,17,40,41,42,43,370,372,373,778,779,780,834,835,836,845,846,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,880,886,891,892,897,898,899,900,901,902,909,910,918,935,937,938,939,972,974,977,984,985,1035,1038,1041,1065,1066,1067,1068,1069,1113,1117,1132,1133,1187,1188,1198,1209,1210,1211],str_to_nod:1069,straight:1224,strength:[1181,1227],stride:[1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205],string:[40,41,43,836,852,854,863,864,869,875,881,882,885,886,890,896,898,899,900,909,910,913,918,935,956,977,978,1010,1011,1069,1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205,1210,1211],structur:[40,41,42,43,910,930],structural_diff:[40,41],sub:[40,41,836,859,860,865,866,867,868,910,992,1065,1066,1067,1068,1069],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1069,sub_mod:[1210,1211],sub_modul:[1220,1221],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1181,1182,1212,1213,1220,1221],subsequ:43,subset:43,substr:[40,41],suggest:1181,suitabl:[1028,1033],sum:[40,41,836,865,866,867,868,880,910,934,938,984,985,1069,1132,1133,1139],summat:[40,41,1132,1133],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,80,81,82,85,95,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,153,154,155,157,158,162,163,164,165,166,167,169,170,171,172,173,174,175,178,180,181,183,184,185,186,187,188,189,194,196,197,198,201,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,327,328,329,331,332,333,334,336,337,338,341,342,343,344,346,347,348,349,350,351,352,353,356,358,359,360,361,362,363,364,369,371,372,373,376,386,398,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,437,438,439,440,442,443,444,446,447,450,452,454,455,456,457,458,459,460,463,464,466,467,468,469,470,471,472,477,479,480,481,484,494,506,507,508,509,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,555,556,557,558,560,561,562,564,565,566,570,571,572,573,575,576,577,578,579,580,581,585,586,587,592,594,595,596,599,609,621,622,623,624,625,626,627,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,702,703,704,705,706,708,709,710,712,713,714,715,716,717,719,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,740,741,742,743,744,745,747,748,749,750,751,752,753,756,757,758,759,760,761,762,764,765,767,768,769,770,771,772,773,779,780,783,793,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1168,1170,1171,1173,1174,1176,1180,1181,1185,1186,1188,1190,1191,1192,1193,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1226,1227],supports_inplac:910,suppos:1227,svd:[330,563,711,1035],swap:[40,41,910,998],swapax:[40,41,512,628,910,1227],symmetr:[1035,1042],tab:1181,take:[910,966],taken:[1132,1134,1135,1136,1138,1140],tan:[722,1047,1052],tangent:[1047,1052,1053,1054,1063,1064,1142,1149],tanh:[722,755,1047,1142],target:[40,41,836,852,855,856,857,858,859,860,861,862,865,866,867,868,881,1069,1181],target_dict:[40,41],task:[1065,1066,1067,1068],team:1227,templat:1181,temporari:[910,989,1000],tensor:[40,41,43,836,854,886,896,910,913,915,916,917,922,967,968,971,973,976,977,978,982,984,985,992,1010,1011,1069,1125,1126,1127,1150,1158,1160,1181,1198,1206,1208,1214,1215,1216,1217,1218,1219,1223,1224],tensorflow:[1150,1152,1154,1156,1181,1198,1200,1202,1204,1224,1227],term:[40,41,1150,1160,1181,1198,1208],termcolor:[40,41,42],termin:[40,41,42,1069],test:[782,783,792,793,886,901,902],tf_concat:1181,than:[40,41,778,779,836,880,910,913,924,925,944,963,971,993,996,1012,1018,1069,1125,1129,1181,1224],thei:[40,41,43,1047,1053,1065,1066,1067,1125,1126,1181,1220,1221,1224],them:[1181,1227],themselv:[1113,1114],therefor:43,thi:[40,41,42,43,836,858,862,868,875,880,885,910,913,946,980,982,988,1012,1015,1017,1018,1019,1020,1021,1026,1035,1038,1041,1069,1113,1117,1122,1132,1134,1135,1136,1137,1138,1139,1140,1150,1159,1181,1210,1211,1214,1215,1216,1217,1218,1219,1223,1224,1227],thing:[43,1181],those:[40,41,910,925,1012,1026,1035,1040,1069],though:43,threshold:[910,971,973],through:[40,41],tile:[267,512,628,910],time:[910,999,1012,1015,1019,1065,1066,1067,1068,1069,1125,1126,1150,1160,1198,1209,1210,1211,1227],time_chronolog:[1169,1170,1175],time_infer:[1169,1170],timeout:[40,41,42,836,845,846,910,980,988,1069],timestep:[1150,1160,1198,1207],timing_fnam:[1169,1170],titl:1181,tmp_dir:910,tmp_dr:[910,989],to_appli:[40,41],to_clon:[836,1069],to_dev:[40,41,106,261,505,620,836],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[836,1069],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1181],to_ivy_modul:[179,763,1181,1187],to_json:[40,41],to_kv_fn:[1150,1161],to_kv_v:[1150,1161],to_list:[40,41,628,910],to_multi_dev:[40,41],to_mut:[1113,1115,1122],to_n:[15,40,41,1181],to_nod:1069,to_numpi:[40,41,628,910,1181,1223],to_out_fn:[1150,1161],to_out_v:[1150,1161],to_q_fn:[1150,1161],to_q_v:[1150,1161],to_raw:[40,41],to_scalar:[628,910],todo:1069,togeth:[40,41,1220,1221],tool:[1181,1224],top_mod:[1210,1211],topic:1227,torch:[43,834,835,1181,1223,1224,1227],torch_concat:1181,torchfcmodel:1223,total:[40,41,42,836,882,1069],total_mem_on_dev:836,total_mem_on_nod:1069,tpu:[836,883,1069],tpu_is_avail:[505,620,836,1069],tpye:[886,897],trace:[40,41,910,963],track:[836,1069,1113,1122,1210,1211],track_submod_call_ord:[1210,1211],track_submod_ret:[1210,1211],trail:[1212,1213],train:[1012,1014,1015,1019,1181,1182],trainabl:[1012,1018,1181,1182,1187,1188,1210,1211,1220],trainer:1181,tran:1227,transform:[1150,1158,1159],transpos:[40,41,113,267,399,628,836,867,910,1069,1150,1152,1154,1156,1198,1200,1202,1204],travers:[15,18,19,40,41,1113,1122],treat:[40,41,834,835],tree_depth:1179,tree_height:1175,tri:[40,41],trigonometr:[1047,1048,1052,1055,1061],trim_kei:[40,41],trust:[1012,1019,1214,1216],truth:[910,940,1043,1044,1045,1046],try_else_non:910,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[836,1069],tune_dev_alloc:836,tune_dev_split:836,tune_node_alloc:1069,tune_node_split:1069,tune_step:[836,1069],tupl:[15,16,17,18,19,40,41,43,792,793,834,835,910,929,946,947,991,1009,1069,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1127,1132,1134,1135,1136,1137,1138,1139,1140],two:[40,41,910,913,919,932,970,998,1035,1038,1040],type:[15,18,40,41,42,43,59,372,373,779,780,782,783,792,793,795,820,836,848,849,850,851,863,864,868,880,886,890,891,892,896,897,898,899,900,901,902,909,910,911,913,918,924,928,930,940,944,945,947,956,963,976,977,978,983,997,1007,1010,1011,1012,1018,1023,1047,1057,1069,1175,1179,1181,1189,1191,1192,1194,1195,1197,1210,1211,1224],types_to_iteratively_nest:[40,41,42],uint8:[1028,1030,1034],uint8_img_to_float_img:1028,unchang:[15,16,17,18,19],unif:1069,unifi:[40,41,836,865,866,867,868,880,1069,1181],uniform:[40,41,1125,1126,1128,1129,1189,1191,1192,1195,1196],uniformli:[1125,1127,1129],unify_arrai:1069,unify_it:1069,unify_nest:1069,union:[15,18,19,40,41,43,370,372,373,778,779,780,782,783,792,793,795,820,834,835,836,854,859,860,861,862,880,881,886,890,891,892,896,897,898,899,900,901,902,909,910,911,912,913,915,916,917,918,919,920,922,924,925,926,927,928,929,931,932,933,934,937,938,939,940,942,943,944,945,946,947,948,949,953,955,956,957,964,965,966,967,968,970,971,972,973,976,977,978,981,982,983,984,985,990,991,992,993,996,998,999,1001,1002,1003,1004,1006,1007,1008,1009,1010,1011,1069,1113,1114,1115,1121,1122],uniqu:[836,845,846,1065,1066,1067,1068,1069,1113,1117],unique_kwarg:1069,unit:[836,1047,1048,1050,1069,1142,1143,1144,1145],unitari:[1035,1040],unless:[910,976,978,1011],unlik:[836,1069],unnorm:[1125,1126],unpack:[910,1006],unrol:[1150,1160],unset:1224,unset_debug_mod:44,unset_default_devic:836,unset_default_dtyp:886,unset_default_float_dtyp:886,unset_default_int_dtyp:886,unset_framework:[59,1224],unset_with_grad:1012,unstack:[40,41,113,267,399,512,628,910],unus:[834,835],updat:[40,41,836,845,910,961,984,985,1012,1014,1015,1017,1019,1020,1021,1065,1066,1067,1069,1113,1118,1119,1123,1124,1150,1160,1187,1188,1214,1215,1216,1217,1218,1219,1224,1227],update_backend:[40,41],update_config:[40,41],update_inference_tim:1175,upper:[40,41,1125,1129],upper_depth:[1210,1211],usabl:[1181,1227],usag:[836,880,1069],use:[40,41,42,43,836,845,846,871,883,910,981,994,995,1069,1150,1161,1167,1168,1181,1212,1213,1224,1227],used:[40,41,43,836,845,875,878,879,885,886,897,910,951,952,969,978,984,985,986,987,1011,1012,1019,1020,1035,1038,1065,1066,1067,1068,1069,1113,1122,1198,1209,1214,1216,1217,1223,1224],used_dev:[836,845],used_mem_on_dev:836,used_mem_on_nod:1069,used_node_str:1069,used_node_strs_dict:1069,useful:[40,41,836,880,1069,1150,1159,1181,1224],user:[1181,1198,1209,1210,1211,1224,1227],uses:1181,using:[40,41,1012,1014,1015,1113,1116,1120,1132,1133,1150,1158,1162,1181,1198,1206,1223,1224,1227],util:[836,869,1069],utility_funct:[792,793],v_with_top_v_key_chain:[1210,1211],val:[40,41,795,830,910,959,960,961,986,987,1179],valid:[792,793,886,891,910,994,995,1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205],valid_dtyp:886,valu:[40,41,836,848,879,880,910,911,913,915,916,917,925,926,927,929,930,936,940,946,947,948,949,964,965,967,968,971,973,980,981,982,983,984,985,986,987,988,1004,1007,1008,1009,1012,1016,1019,1028,1034,1035,1040,1043,1044,1045,1046,1047,1058,1059,1060,1065,1066,1067,1069,1113,1117,1118,1119,1123,1124,1125,1128,1129,1132,1134,1136,1150,1161,1162,1167,1168,1175,1198,1209,1212,1213,1214,1216],value_is_nan:910,vanilla:[1065,1067],var_shap:1189,variabl:[15,16,17,18,19,40,41,321,436,554,701,910,921,959,960,961,962,963,997,1012,1015,1016,1017,1018,1019,1020,1021,1023,1026,1065,1066,1067,1068,1150,1161,1167,1168,1187,1188,1189,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221],variable_data:[701,1012],varianc:[40,41,1132,1140,1227],varieti:1224,variou:[43,1181],vector:[40,41,910,927,932,1035,1040,1041,1042,1150,1159,1198,1208],vector_norm:[40,41,1035],vector_to_skew_symmetric_matrix:[156,330,445,563,711,1035],verbos:1226,veri:[43,1181],version:43,via:[1113,1114,1121,1224],view:[1028,1033],vision:1181,visual:1224,volum:[1150,1155],vw_tm1:[1012,1015,1019],wai:[1224,1227],wait:[40,41,42],want:[1181,1224,1227],warn:[59,66,67,68,69,70],warp:[1028,1029],watch:1223,weight:[1012,1014,1015,1017,1019,1020,1021,1150,1159,1160,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1210,1211,1214,1216,1217],weight_initi:[1198,1199,1200,1201,1202,1203,1204,1205,1207,1208],weights_path:[1210,1211],well:[40,41,910,955],were:[40,41,1069],what:1181,when:[40,41,42,43,836,910,923,995,1008,1035,1040,1069,1181,1210,1211,1224,1227],where:[40,41,43,267,628,792,793,795,820,910,913,922,925,929,942,957,964,965,976,1009,1035,1040,1113,1114,1121,1125,1126],wherea:43,wherebi:[1113,1122],whether:[15,18,19,40,41,42,792,793,834,835,836,854,867,871,875,880,883,885,886,896,900,901,902,909,910,912,919,920,933,936,941,946,953,955,958,962,963,969,990,997,1006,1007,1012,1015,1016,1017,1018,1019,1020,1021,1023,1065,1066,1067,1068,1069,1113,1114,1115,1117,1121,1122,1125,1126,1142,1143,1150,1158,1181,1187,1188,1198,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219],which:[40,41,42,43,778,779,780,792,793,834,835,836,845,846,854,859,860,861,862,865,866,867,868,870,872,876,878,879,880,886,891,896,900,909,910,913,918,928,930,932,933,934,936,943,947,948,949,950,956,957,966,967,968,975,976,977,978,979,981,984,985,992,996,1006,1008,1010,1011,1012,1015,1016,1017,1019,1020,1021,1023,1025,1026,1028,1030,1035,1038,1041,1047,1053,1069,1113,1117,1118,1119,1123,1124,1125,1126,1127,1128,1129,1132,1134,1135,1136,1137,1138,1139,1140,1142,1147,1150,1161,1162,1181,1187,1188,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1220,1221,1223,1224],whitespac:[40,41,42],whose:[43,795,820,910,918,923,1132,1133,1134,1135,1136,1138,1140],why:[1181,1182],width:[1028,1033],wiki:1227,wikipedia:1227,window:[1028,1033,1150,1151,1152,1153,1154,1155,1156,1157,1198,1199,1200,1201,1202,1203,1204,1205],wise:[40,41,43,795,820,910,924,925,940,944,945,971,973,983,1012,1015,1017,1019,1021,1043,1044,1045,1046,1047,1048,1050,1052,1053,1055,1057,1058,1059,1060,1061,1063,1142,1143,1144,1145,1146,1147,1148,1149],wish:1224,with_arg_label:[1169,1171,1175,1210,1211],with_array_cach:[1169,1170,1171,1175],with_bia:[1198,1208],with_cal:[910,936],with_default_key_color:[40,41],with_edge_label:[1169,1171,1175,1210,1211],with_entries_as_list:[40,41],with_grad:[1012,1022,1210,1211],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1069,with_output_label:[1169,1171,1175,1210,1211],with_partial_v:[1210,1211],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,910,992,1069],with_to_kv_fn:[1198,1209],with_to_out_fn:[1198,1209],with_to_q_fn:[1198,1209],within:[15,18,19,910,913,1035,1040,1125,1129],without:[40,41,43,910,980,982,988,1113,1115,1224],wonder:1181,word:[15,16,17,910,913,1125,1129,1187,1188],work:[43,1223],worker:[836,845,846,1069],worker_class:[836,845,846,1069],worker_kwarg:1069,would:[43,910,917,1142,1147,1181,1224,1227],wrap:[15,40,41,42,43,910,923,1012,1026,1181],wrapper:43,write:[40,41,43,1181,1182,1227],written:[43,1181,1227],ws_new:[1012,1015,1017,1019,1020,1021],x1_i:[910,940,1047,1057],x2_i:[910,940,1047,1057],x_feat_dim:[1150,1161],x_i:[782,783],x_in:[1181,1223],x_inv:[1035,1037],x_max:[910,925],x_min:[910,925],x_sub:1069,xkk:1227,xkkm1:1227,xkm1km1:1227,xs0:1069,xs_t:1069,year:[1181,1227],yet:[1113,1122,1227],yield:[910,1008],you:[1181,1223,1224,1227],your:[1181,1223,1224,1227],your_awesome_project:1224,yourself:1181,zero:[40,41,77,113,193,267,368,399,476,512,591,628,792,793,910,929,976,978,984,985,1009,1011,1012,1014,1015,1019,1020,1150,1158,1181,1189,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1214,1215,1216,1217],zero_pad:[267,512,628,910],zeros_lik:[113,267,399,512,628,910],zip:1069,zk_e:1227},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":936,"function":[77,79,84,86,88,89,90,91,92,93,94,193,195,200,202,204,205,206,207,208,209,210,368,370,375,377,379,380,381,382,383,384,385,476,478,483,485,487,488,489,490,491,492,493,591,593,598,600,602,603,604,605,606,607,608,777,778,782,784,786,787,788,789,790,791,792],Ones:1194,Using:1224,abs:[268,513,629,911],aco:[723,1048],acosh:[724,1049],activ:[177,355,462,583,755,1142,1184],adam:1215,adam_step:1014,adam_upd:1015,algebra:[87,88,203,204,378,379,486,487,601,602,785,786],all:[95,211,386,494,609,793],all_equ:912,all_nested_indic:1114,api:[0,43,75,97,191,213,366,388,474,496,589,611,775],arang:[114,269,400,514,630,913],arg_nam:914,argmax:[115,401,515,631,915],argmin:[116,402,516,632,916],args_to_ivi:16,args_to_n:17,argsort:[633,917],arithmet:[1,98,214,389,497,612],arrai:[0,3,43,75,96,97,99,117,191,212,213,215,222,270,366,387,388,390,403,474,495,496,498,517,589,610,611,613,634,775,795,918],array_equ:[271,635,919],arrays_equ:920,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[725,1050],asinh:[726,1051],assert_supports_inplac:921,atan2:[728,1053],atan:[727,1052],atanh:[729,1054],attribut:[5,100,216,391,499,614],backend:[43,73],bilinear_resampl:[153,327,442,560,708,1029],binary_cross_entropi:1164,bitwis:[7,101,217,392,500,615],broadcast_to:[272,636,922],builder:51,builtin:[96,212,222,387,495,610,795],builtin_ab:[223,796],builtin_add:[224,797],builtin_and:[225,798],builtin_bool:[226,799],builtin_contain:[227,800],builtin_deepcopi:[228,801],builtin_dir:[229,802],builtin_eq:[230,803],builtin_float:[231,804],builtin_floordiv:[232,805],builtin_g:[233,806],builtin_getattr:[234,807],builtin_getattribut:[235,808],builtin_getitem:[236,809],builtin_gt:[237,810],builtin_int:[238,811],builtin_invert:[239,812],builtin_l:[240,813],builtin_lt:[241,814],builtin_mul:[242,815],builtin_n:[243,816],builtin_neg:[244,817],builtin_or:[245,818],builtin_po:[246,819],builtin_pow:[247,820],builtin_radd:[248,821],builtin_rand:[249,822],builtin_rfloordiv:[250,823],builtin_rmul:[251,824],builtin_ror:[252,825],builtin_rpow:[253,826],builtin_rsub:[254,827],builtin_rtruediv:[255,828],builtin_rxor:[256,829],builtin_setitem:[257,830],builtin_sub:[258,831],builtin_truediv:[259,832],builtin_xor:[260,833],cache_fn:923,cast:[118,273,404,518,637,890],ceil:[274,638,924],choleski:[712,1036],choose_random_framework:61,citat:1181,clear_framework_stack:62,clear_mem_on_dev:[622,852],clip:[275,639,925],clip_matrix_norm:926,clip_vector_norm:927,clone:1084,clone_arrai:1085,clone_it:1086,clone_nest:1087,clonedit:1071,cloneditem:1070,clonednest:1072,closest_valid_dtyp:891,code:1227,comparison:[9,102,218,393,501,616],compil:[276,405,640,834,835,1169],compile_graph:1170,concaten:[119,277,406,519,641,928],constant:[76,192,367,475,590,776],constant_pad:[278,520,642,929],contain:[40,41],container_typ:[643,930],content:1181,contribut:43,conv1d:[183,358,466,767,1151,1199],conv1d_transpos:[184,359,467,768,1152],conv1dtranspos:1200,conv2d:[185,360,468,585,769,1153,1201],conv2d_transpos:[186,361,469,770,1154],conv2dtranspos:1202,conv3d:[187,362,470,586,771,1155,1203],conv3d_transpos:[188,363,471,772,1156],conv3dtranspos:1204,convers:15,convert:[179,763,1187],convert_dtyp:892,copy_arrai:[644,931],copy_nest:1115,core:[105,221,396,504,619,794],cos:[730,1055],cosh:[731,1056],cprint:1226,creation:[77,193,368,476,591,777],cross:[279,645,932],cross_entropi:1165,cumprod:[120,280,407,646,933],cumsum:[647,934],current_framework:63,current_framework_str:[648,935],data:[79,83,195,199,370,374,478,482,593,597,778,781],debug_mod:45,debugg:44,default_devic:853,default_dtyp:893,default_float_dtyp:894,default_int_dtyp:895,default_nod:1088,depthwise_conv2d:[189,364,472,587,773,1157],depthwiseconv2d:1205,design:43,dev:[108,263,507,623,854],dev_clon:855,dev_clone_arrai:856,dev_clone_it:857,dev_clone_nest:858,dev_dist:859,dev_dist_arrai:860,dev_dist_it:861,dev_dist_nest:862,dev_from_str:[109,264,508,624,863],dev_to_str:[110,265,509,625,864],dev_unifi:865,dev_unify_arrai:866,dev_unify_it:867,dev_unify_nest:868,dev_util:869,devclonedit:839,devcloneditem:838,devclonednest:840,devdistit:842,devdistitem:841,devdistnest:843,devic:[20,106,261,397,505,620,836],devmapp:845,devmappermultiproc:846,distribute_nest:1089,divid:1057,document:1181,dropout:[1158,1206],dtype:[121,281,408,521,649,886,896],dtype_bit:[122,282,409,522,650,897],dtype_from_str:[123,283,410,523,651,898],dtype_to_str:[124,284,411,524,652,899],ecosystem:52,einops_rearrang:937,einops_reduc:938,einops_repeat:939,einsum:[169,346,454,575,747,1133],elementwis:[84,200,375,483,598,782],equal:[525,653,940],erf:[450,732,1058],execute_with_gradi:[150,322,437,555,702,1016],exist:941,exp:[733,1059],expand_dim:[285,654,942],extens:[87,203,378,486,601,785],finfo:[81,197,372,480,595,779],firstlayersiren:1191,flip:[125,286,412,526,655,943],float_img_to_uint8_img:1030,floor:[287,656,944],floormod:[288,657,945],fomaml_step:1066,fourier_encod:946,framework:59,full:[126,289,413,527,658,947],func:72,gather:[127,290,414,528,659,948],gather_nd:[128,291,415,529,660,949],geglu:1185,gelu:[356,463,756,1143,1186],gener:[22,113,267,399,512,628,910],get_all_arrays_in_memori:950,get_all_arrays_on_dev:870,get_framework:64,get_min_bas:951,get_min_denomin:952,get_num_dim:[661,953],get_referrers_recurs:954,global:1172,glorotuniform:1192,gpu_is_avail:[871,1090],gradient:[24,149,321,436,554,701,1012],gradient_descent_upd:1017,gradient_imag:[154,328,443,561,709,1031],graph:1175,gym:53,handler:59,has_nan:955,helper:1177,ident:[129,292,416,530,662,956],iinfo:[82,198,373,481,596,780],imag:[26,152,326,441,559,707,1028],index_nest:1116,indices_wher:[130,293,417,663,957],initi:1189,inplac:[11,103,219,394,502,617],inplace_arrays_support:958,inplace_decr:[131,294,418,531,664,959],inplace_incr:[132,295,419,532,665,960],inplace_upd:[133,296,420,533,666,961],inplace_variables_support:962,inv:[713,1037],invalid_dtyp:900,is_arrai:[134,297,421,534,667,963],is_float_dtyp:901,is_int_dtyp:902,is_vari:[151,323,438,556,703,1018],isfinit:[85,201,376,484,599,783],isinf:[298,535,668,964],isnan:[299,536,669,965],ivi:[43,50,51,52,53,54,55,56,57,58,774,1223,1224,1227],ivymodul:[180,764],jax:74,lamb:1216,lamb_upd:1019,lar:1217,lars_upd:1020,layer:[182,357,465,584,766,1150,1198],layer_norm:1168,layernorm:1213,leaky_relu:[757,1144],linalg:[28,156,330,445,563,711,1035],linear:[87,88,203,204,378,379,486,487,601,602,785,786,1159,1208],linear_resampl:[135,300,422,537,670,966],linspac:[136,301,423,538,671,967],log:[734,1060,1178],log_global_inference_abs_tim:1173,log_global_inference_rel_tim:1174,logic:[30,159,335,448,567,718,1043],logical_and:[336,719,1044],logical_not:[337,720,1045],logical_or:[338,721,1046],logspac:[137,302,424,539,672,968],loss:1163,lstm:1207,lstm_updat:1160,maml_step:1067,manipul:[89,205,380,488,603,787],map:1117,map_nest_at_index:1118,map_nest_at_indic:1119,match_kwarg:969,math:[32,160,339,449,568,722,1047],matmul:[303,540,673,970],matrix_norm:[157,331,446,564,714,1038],maximum:[674,971],mech:54,memori:55,meshgrid:[304,675,972],meta:[34,1065],method:[86,202,377,485,600,784],minimum:[676,973],model:56,modul:[1210,1211,1223],multi:1069,multi_head_attent:1161,multi_index_nest:1120,multidevcontain:42,multidevit:849,multidevitem:848,multidevnest:850,multiheadattent:1209,multinodeit:1075,multinodeitem:1074,multinodenest:1076,multinomi:[162,341,452,570,740,1126],multiprocess:[677,974],mxnet:190,nativ:1223,nest:1113,nested_indices_wher:1121,nested_map:1122,network:1223,next:1181,node:[1069,1091],node_dist:1092,node_dist_arrai:1093,node_dist_it:1094,node_str:1095,node_to_str:1096,node_util:1097,nodedistit:1078,nodedistitem:1077,nodedistnest:1079,nodemapp:1081,nodemappermultiproc:1082,norm:[1167,1212],num_arrays_in_memori:975,num_arrays_on_dev:872,num_cpu_cor:873,num_gpu:[111,874,1098],numpi:365,nutshel:1181,one_hot:[138,425,541,678,976],ones:[139,305,426,542,679,977],ones_lik:[140,306,427,543,680,978],oper:[1,3,7,9,11,13,43,98,99,101,102,103,104,214,215,217,218,219,220,389,390,392,393,394,395,497,498,500,501,502,503,612,613,615,616,617,618],optim:[1214,1218],optimizer_upd:1021,overview:1181,param:1179,percent_used_mem_on_dev:875,percent_used_mem_on_nod:1099,pinv:[332,715,1039],portabl:1227,print_all_arrays_in_memori:979,print_all_arrays_on_dev:876,profil:[107,262,398,506,621,851,1083],queue_timeout:980,randint:[163,342,571,741,1127],random:[36,161,340,451,569,739,1125],random_crop:1032,random_norm:[164,343,572,742,1128],random_uniform:[165,344,573,743,1129],reduce_max:[170,347,455,576,748,1134],reduce_mean:[171,348,456,577,749,1135],reduce_min:[172,349,457,578,750,1136],reduce_prod:[173,350,458,579,751,1137],reduce_std:[351,1138],reduce_sum:[174,352,459,580,752,1139],reduce_var:[175,353,460,581,753,1140],reduct:[38,168,345,453,574,746,1132],reflect:[13,104,220,395,503,618],relu:[758,1145],repeat:[307,681,981],reptile_step:1068,reshap:[682,982],robot:57,round:[308,683,983],run:1224,scaled_dot_product_attent:1162,scatter_flat:[141,309,428,544,684,984],scatter_nd:[142,310,429,545,685,985],search:[90,206,381,489,604,788],seed:[166,744,1130],sequenti:[1220,1221],set:[91,207,382,490,605,789],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:877,set_default_dtyp:903,set_default_float_dtyp:904,set_default_int_dtyp:905,set_default_nod:1100,set_exception_debug_mod:48,set_framework:65,set_min_bas:986,set_min_denomin:987,set_nest_at_index:1123,set_nest_at_indic:1124,set_queue_timeout:988,set_split_factor:[878,1101],set_tmp_dir:989,set_with_grad:1022,sgd:1219,shape:[686,990],shape_to_tupl:991,show_graph:1171,shuffl:[167,745,1131],sigmoid:[759,1146],signatur:[86,202,377,485,600,784],sin:[735,1061],sinh:[736,1062],siren:1195,softmax:[178,464,760,1147],softplu:[761,1148],sort:[92,208,383,491,606,790],sparse_cross_entropi:1166,split:[143,311,430,546,687,992],split_factor:[879,1102],split_func_cal:[880,1103],squeez:[144,312,431,547,688,993],stable_divid:994,stable_pow:995,stack:[313,689,996],stack_imag:[155,329,444,562,710,1033],statist:[93,209,384,492,607,791],stop_gradi:[324,439,557,704,1023],str_to_nod:1104,submodul:43,supports_inplac:997,svd:[333,565,716,1040],swapax:[548,690,998],tan:[737,1063],tanh:[738,762,1064,1149],tensorflow:473,tile:[314,549,691,999],tmp_dir:1000,to_dev:[112,266,510,626,881],to_ivi:18,to_ivy_modul:[181,765,1188],to_list:[692,1001],to_n:19,to_nod:1105,to_numpi:[693,1002],to_scalar:[694,1003],torch:588,total_mem_on_dev:882,total_mem_on_nod:1106,tpu_is_avail:[511,627,883,1107],train:1223,trainabl:1223,transpos:[145,315,432,695,1004],tree:1181,try_else_non:1005,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[79,83,195,199,370,374,478,482,593,597,778,781],uint8_img_to_float_img:1034,unifi:1108,unify_arrai:1109,unify_it:1110,unify_nest:1111,unset_debug_mod:49,unset_default_devic:884,unset_default_dtyp:906,unset_default_float_dtyp:907,unset_default_int_dtyp:908,unset_framework:71,unset_with_grad:1024,unstack:[146,316,433,550,696,1006],used_mem_on_dev:885,used_mem_on_nod:1112,util:[94,210,385,493,608,792],valid_dtyp:909,value_is_nan:1007,variabl:[325,440,558,705,1025],variable_data:[706,1026],vector_norm:1041,vector_to_skew_symmetric_matrix:[158,334,447,566,717,1042],verbos:1225,vision:58,where:[317,697,1008,1181],why:1227,with_grad:1027,wrapper:72,write:1224,zero:[78,147,194,319,369,434,477,552,592,699,1010,1197],zero_pad:[318,551,698,1009],zeros_lik:[148,320,435,553,700,1011]}})